/*! For license information please see shares.bundle.js.LICENSE.txt */
!function(e){var n={};function t(r){if(n[r])return n[r].exports;var a=n[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)t.d(r,a,function(n){return e[n]}.bind(null,a));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s="./src/shares/index.ts")}({"../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js":function(module,exports){eval("function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/arrayLikeToArray.js?")},"../../node_modules/@babel/runtime/helpers/arrayWithHoles.js":function(module,exports){eval("function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/arrayWithHoles.js?")},"../../node_modules/@babel/runtime/helpers/assertThisInitialized.js":function(module,exports){eval("function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/assertThisInitialized.js?")},"../../node_modules/@babel/runtime/helpers/classCallCheck.js":function(module,exports){eval('function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n}\n\nmodule.exports = _classCallCheck;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/classCallCheck.js?')},"../../node_modules/@babel/runtime/helpers/construct.js":function(module,exports,__webpack_require__){eval('var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "../../node_modules/@babel/runtime/helpers/setPrototypeOf.js");\n\nvar isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct */ "../../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/construct.js?')},"../../node_modules/@babel/runtime/helpers/createClass.js":function(module,exports){eval('function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if ("value" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/createClass.js?')},"../../node_modules/@babel/runtime/helpers/defineProperty.js":function(module,exports){eval("function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/defineProperty.js?")},"../../node_modules/@babel/runtime/helpers/get.js":function(module,exports,__webpack_require__){eval('var superPropBase = __webpack_require__(/*! ./superPropBase */ "../../node_modules/@babel/runtime/helpers/superPropBase.js");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== "undefined" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/get.js?')},"../../node_modules/@babel/runtime/helpers/getPrototypeOf.js":function(module,exports){eval("function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/getPrototypeOf.js?")},"../../node_modules/@babel/runtime/helpers/inherits.js":function(module,exports,__webpack_require__){eval('var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "../../node_modules/@babel/runtime/helpers/setPrototypeOf.js");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== "function" && superClass !== null) {\n    throw new TypeError("Super expression must either be null or a function");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/inherits.js?')},"../../node_modules/@babel/runtime/helpers/interopRequireDefault.js":function(module,exports){eval('function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    "default": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/interopRequireDefault.js?')},"../../node_modules/@babel/runtime/helpers/interopRequireWildcard.js":function(module,exports,__webpack_require__){eval('var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../../node_modules/@babel/runtime/helpers/typeof.js");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== "function") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {\n    return {\n      "default": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj["default"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/interopRequireWildcard.js?')},"../../node_modules/@babel/runtime/helpers/isNativeFunction.js":function(module,exports){eval('function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf("[native code]") !== -1;\n}\n\nmodule.exports = _isNativeFunction;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/isNativeFunction.js?')},"../../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":function(module,exports){eval('function _isNativeReflectConstruct() {\n  if (typeof Reflect === "undefined" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === "function") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js?')},"../../node_modules/@babel/runtime/helpers/iterableToArray.js":function(module,exports){eval('function _iterableToArray(iter) {\n  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/iterableToArray.js?')},"../../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":function(module,exports){eval('function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i["return"] != null) _i["return"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js?')},"../../node_modules/@babel/runtime/helpers/nonIterableRest.js":function(module,exports){eval('function _nonIterableRest() {\n  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\n\nmodule.exports = _nonIterableRest;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/nonIterableRest.js?')},"../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":function(module,exports,__webpack_require__){eval('var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../../node_modules/@babel/runtime/helpers/typeof.js");\n\nvar assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized */ "../../node_modules/@babel/runtime/helpers/assertThisInitialized.js");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === "object" || typeof call === "function")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js?')},"../../node_modules/@babel/runtime/helpers/setPrototypeOf.js":function(module,exports){eval("function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/setPrototypeOf.js?")},"../../node_modules/@babel/runtime/helpers/slicedToArray.js":function(module,exports,__webpack_require__){eval('var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ "../../node_modules/@babel/runtime/helpers/arrayWithHoles.js");\n\nvar iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ "../../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js");\n\nvar unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ "../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");\n\nvar nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ "../../node_modules/@babel/runtime/helpers/nonIterableRest.js");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/slicedToArray.js?')},"../../node_modules/@babel/runtime/helpers/superPropBase.js":function(module,exports,__webpack_require__){eval('var getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/superPropBase.js?')},"../../node_modules/@babel/runtime/helpers/toArray.js":function(module,exports,__webpack_require__){eval('var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ "../../node_modules/@babel/runtime/helpers/arrayWithHoles.js");\n\nvar iterableToArray = __webpack_require__(/*! ./iterableToArray */ "../../node_modules/@babel/runtime/helpers/iterableToArray.js");\n\nvar unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ "../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");\n\nvar nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ "../../node_modules/@babel/runtime/helpers/nonIterableRest.js");\n\nfunction _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}\n\nmodule.exports = _toArray;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/toArray.js?')},"../../node_modules/@babel/runtime/helpers/typeof.js":function(module,exports){eval('function _typeof(obj) {\n  "@babel/helpers - typeof";\n\n  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/typeof.js?')},"../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":function(module,exports,__webpack_require__){eval('var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ "../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js?')},"../../node_modules/@babel/runtime/helpers/wrapNativeSuper.js":function(module,exports,__webpack_require__){eval('var getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js");\n\nvar setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "../../node_modules/@babel/runtime/helpers/setPrototypeOf.js");\n\nvar isNativeFunction = __webpack_require__(/*! ./isNativeFunction */ "../../node_modules/@babel/runtime/helpers/isNativeFunction.js");\n\nvar construct = __webpack_require__(/*! ./construct */ "../../node_modules/@babel/runtime/helpers/construct.js");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === "function" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== "function") {\n      throw new TypeError("Super expression must either be null or a function");\n    }\n\n    if (typeof _cache !== "undefined") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@babel/runtime/helpers/wrapNativeSuper.js?')},"../../node_modules/@meeco/cryppo/dist/index.esm.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CipherStrategy", function() { return CipherStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DerivedKeyOptions", function() { return DerivedKeyOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyDerivationStrategy", function() { return KeyDerivationStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "binaryBufferToString", function() { return binaryBufferToString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deSerializeDerivedKeyOptions", function() { return deSerializeDerivedKeyOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decodeDerivationArtifacts", function() { return decodeDerivationArtifacts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decodeSafe64", function() { return decodeSafe64; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decryptBinaryWithKey", function() { return decryptBinaryWithKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decryptBinaryWithKeyUsingArtefacts", function() { return decryptBinaryWithKeyUsingArtefacts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decryptSerializedWithPrivateKey", function() { return decryptSerializedWithPrivateKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decryptStringWithKey", function() { return decryptStringWithKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decryptStringWithKeyUsingArtefacts", function() { return decryptStringWithKeyUsingArtefacts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decryptWithKey", function() { return decryptWithKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decryptWithKeyUsingArtefacts", function() { return decryptWithKeyUsingArtefacts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decryptWithPrivateKey", function() { return decryptWithPrivateKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encodeDerivationArtifacts", function() { return encodeDerivationArtifacts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encodeSafe64", function() { return encodeSafe64; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encryptBinaryWithGeneratedKey", function() { return encryptBinaryWithGeneratedKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encryptBinaryWithKey", function() { return encryptBinaryWithKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encryptBinaryWithKeyDerivedFromString", function() { return encryptBinaryWithKeyDerivedFromString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encryptBinaryWithKeyUsingArtefacts", function() { return encryptBinaryWithKeyUsingArtefacts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encryptPrivateKeyWithPassword", function() { return encryptPrivateKeyWithPassword; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encryptStringWithGeneratedKey", function() { return encryptStringWithGeneratedKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encryptStringWithKey", function() { return encryptStringWithKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encryptStringWithKeyDerivedFromString", function() { return encryptStringWithKeyDerivedFromString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encryptStringWithKeyUsingArtefacts", function() { return encryptStringWithKeyUsingArtefacts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encryptWithGeneratedKey", function() { return encryptWithGeneratedKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encryptWithKey", function() { return encryptWithKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encryptWithKeyDerivedFromString", function() { return encryptWithKeyDerivedFromString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encryptWithKeyUsingArtefacts", function() { return encryptWithKeyUsingArtefacts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encryptWithPublicKey", function() { return encryptWithPublicKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generateDerivedKey", function() { return generateDerivedKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generateEncryptionVerificationArtifacts", function() { return generateEncryptionVerificationArtifacts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generateRSAKeyPair", function() { return generateRSAKeyPair; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generateRandomKey", function() { return generateRandomKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hmacSha256Digest", function() { return hmacSha256Digest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadBinaryRsaSignature", function() { return loadBinaryRsaSignature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadRsaSignature", function() { return loadRsaSignature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadStringRsaSignature", function() { return loadStringRsaSignature; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "signBinaryWithPrivateKey", function() { return signBinaryWithPrivateKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "signStringWithPrivateKey", function() { return signStringWithPrivateKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "signWithPrivateKey", function() { return signWithPrivateKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "strategyToAlgorithm", function() { return strategyToAlgorithm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stringAsBinaryBuffer", function() { return stringAsBinaryBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "verifyBinaryWithPublicKey", function() { return verifyBinaryWithPublicKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "verifyStringWithPublicKey", function() { return verifyStringWithPublicKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "verifyWithPublicKey", function() { return verifyWithPublicKey; });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ "../../node_modules/node-libs-browser/node_modules/buffer/index.js");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\n/* harmony import */ var node_forge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node-forge */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/index.js");\n/* harmony import */ var node_forge__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(node_forge__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var bson__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bson */ "../../node_modules/bson/dist/bson.browser.esm.js");\n/* harmony import */ var yaml__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! yaml */ "../../node_modules/yaml/browser/index.js");\n/* harmony import */ var yaml__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(yaml__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\nvar SerializationFormat;\n\n(function (SerializationFormat) {\n  SerializationFormat["legacy"] = "legacy";\n  SerializationFormat["latest_version"] = "latest_version";\n})(SerializationFormat || (SerializationFormat = {}));\n\nyaml__WEBPACK_IMPORTED_MODULE_4__["defaultOptions"].schema = \'yaml-1.1\'; // 65 is the version byte for encryption artefacts encoded with BSON\n\nvar ENCRYPTION_ARTEFACTS_CURRENT_VERSION = \'A\'; // 75 is the version byte for derivation artefacts encoded with BSON\n\nvar DERIVATION_ARTEFACTS_CURRENT_VERSION = \'K\';\n/**\r\n * Wrapping some node-forge utils in case we ever need to replace it\r\n */\n\nvar encode64 = node_forge__WEBPACK_IMPORTED_MODULE_2__["util"].encode64;\nvar decode64 = node_forge__WEBPACK_IMPORTED_MODULE_2__["util"].decode64;\nvar encodeUtf8 = node_forge__WEBPACK_IMPORTED_MODULE_2__["util"].encodeUtf8;\nvar generateRandomKey = function generateRandomKey(length) {\n  if (length === void 0) {\n    length = 32;\n  }\n\n  return node_forge__WEBPACK_IMPORTED_MODULE_2__["random"].getBytesSync(length);\n};\nfunction serializeDerivedKeyOptions(strategy, artifacts, serializationFormat) {\n  if (serializationFormat === void 0) {\n    serializationFormat = SerializationFormat.latest_version;\n  }\n\n  switch (serializationFormat) {\n    case SerializationFormat.legacy:\n      {\n        var yaml = encodeYaml(artifacts);\n        return strategy + "." + encodeSafe64(yaml);\n      }\n\n    default:\n      {\n        return strategy + "." + encodeSafe64Bson(DERIVATION_ARTEFACTS_CURRENT_VERSION, artifacts);\n      }\n  }\n}\nfunction deSerializeDerivedKeyOptions(serialized) {\n  var items = serialized.split(\'.\'); // We might get passed an entire encrypted string in which case we just want the key and strategy\n\n  if (items.length > 2) {\n    items = items.slice(-2);\n  }\n\n  var derivationStrategy = items[0],\n      artifacts = items[1];\n  var serializationArtifacts = decodeArtifactData(artifacts);\n  return {\n    derivationStrategy: derivationStrategy,\n    serializationArtifacts: serializationArtifacts\n  };\n}\nfunction serialize(strategy, data, artifacts, serializationFormat) {\n  if (serializationFormat === void 0) {\n    serializationFormat = SerializationFormat.latest_version;\n  }\n\n  switch (serializationFormat) {\n    case SerializationFormat.legacy:\n      {\n        var yaml = encodeYaml(artifacts);\n        return strategy + "." + encodeSafe64(data) + "." + encodeSafe64(yaml);\n      }\n\n    default:\n      {\n        return strategy + "." + encodeSafe64(data) + "." + encodeSafe64Bson(ENCRYPTION_ARTEFACTS_CURRENT_VERSION, artifacts);\n      }\n  }\n}\n\nfunction encodeYaml(data) {\n  // Note the pad and binary replacements are only for backwards compatibility\n  // with Ruby Cryppo. They technically should not be required and there should\n  // be a flag to disable them.\n  var pad = "---\\n";\n  return pad + Object(yaml__WEBPACK_IMPORTED_MODULE_4__["stringify"])(data).replace(/!!binary/g, \'!binary\');\n}\n\nfunction deSerialize(serialized) {\n  var items = serialized.split(\'.\');\n\n  if (items.length < 2) {\n    throw new Error(\'String is not a serialized encrypted string\');\n  }\n\n  if (items.length % 2 !== 1) {\n    throw new Error(\'Serialized string should have an encryption strategy and pairs of encoded data and artifacts\');\n  }\n\n  var encryptionStrategy = items[0];\n  var decodedPairs = items.slice(1).map(function (item, i) {\n    if (i % 2 === 0) {\n      // Base64 encoded encrypted data\n      return decodeSafe64(item);\n    } else {\n      return decodeArtifactData(item);\n    }\n  });\n\n  if (!decodedPairs.length) {\n    throw new Error(\'No data found to decrypt in serialized string\');\n  }\n\n  return {\n    encryptionStrategy: encryptionStrategy,\n    decodedPairs: decodedPairs\n  };\n} // tslint:disable-next-line: max-line-length\n\nfunction decodeArtifactData(text) {\n  if (decodeSafe64(text).startsWith(\'---\')) {\n    text = decodeSafe64(text);\n    return Object(yaml__WEBPACK_IMPORTED_MODULE_4__["parse"])(text.replace(/ !binary/g, \' !!binary\'));\n  } else {\n    text = decodeSafe64Bson(text); // remove version byte before deserializing\n\n    return Object(bson__WEBPACK_IMPORTED_MODULE_3__["deserialize"])(buffer__WEBPACK_IMPORTED_MODULE_0__["Buffer"].from(text, \'base64\').slice(1), {\n      promoteBuffers: true\n    });\n  }\n}\n\nfunction stringAsBinaryBuffer(val) {\n  // We use the polyfill for browser coverage and compatibility with bson serialize\n  return buffer__WEBPACK_IMPORTED_MODULE_0__["Buffer"].from(val, \'binary\');\n}\nfunction binaryBufferToString(val) {\n  return node_forge__WEBPACK_IMPORTED_MODULE_2__["util"].createBuffer(val).data;\n}\n/**\r\n * The Ruby version uses url safe base64 encoding.\r\n * RFC 4648 specifies + is encoded as - and / is _\r\n * with the trailing = removed.\r\n */\n\nfunction encodeSafe64(data) {\n  return encode64(data).replace(/\\+/g, \'-\') // Convert \'+\' to \'-\'\n  .replace(/\\//g, \'_\'); // Convert \'/\' to \'_\'\n  // Not we don\'t remove the trailing \'=\' as specified in the spec\n  // because ruby\'s Base64.urlsafe_encode64 does not do this\n  // and we want to maintain compatibility.\n}\nfunction decodeSafe64(base64) {\n  return decode64(base64.replace(/-/g, \'+\') // Convert \'+\' to \'-\'\n  .replace(/_/g, \'/\')); // Don\'t bother concatenating an \'=\' to the result - see above\n} // tslint:disable-next-line: max-line-length\n\nfunction encodeSafe64Bson(versionByte, artifacts) {\n  var bsonSerialized = buffer__WEBPACK_IMPORTED_MODULE_0__["Buffer"].concat([buffer__WEBPACK_IMPORTED_MODULE_0__["Buffer"].from(versionByte), Object(bson__WEBPACK_IMPORTED_MODULE_3__["serialize"])(artifacts)]);\n\n  var base64Data = bsonSerialized.toString(\'base64\');\n  return base64Data.replace(/\\+/g, \'-\') // Convert \'+\' to \'-\'\n  .replace(/\\//g, \'_\'); // Convert \'/\' to \'_\'\n  // Not we don\'t remove the trailing \'=\' as specified in the spec\n  // because ruby\'s Base64.urlsafe_encode64 does not do this\n  // and we want to maintain compatibility.\n}\nfunction decodeSafe64Bson(base64) {\n  return base64.replace(/-/g, \'+\') // Convert \'+\' to \'-\'\n  .replace(/_/g, \'/\'); // Don\'t bother concatenating an \'=\' to the result - see above\n}\nfunction encodeDerivationArtifacts(artifacts) {\n  return encodeSafe64(JSON.stringify(artifacts));\n}\nfunction decodeDerivationArtifacts(encoded) {\n  return JSON.parse(decodeSafe64(encoded));\n}\n/**\r\n * Returns some base64 encoded random bytes that can be used for encryption verification.\r\n */\n\nfunction generateEncryptionVerificationArtifacts() {\n  var token = node_forge__WEBPACK_IMPORTED_MODULE_2__["random"].getBytesSync(16);\n  var salt = node_forge__WEBPACK_IMPORTED_MODULE_2__["random"].getBytesSync(16);\n  return {\n    token: encodeSafe64(token),\n    salt: encodeSafe64(salt)\n  };\n}\nfunction keyLengthFromPublicKeyPem(publicKeyPem) {\n  var pk = node_forge__WEBPACK_IMPORTED_MODULE_2__["pki"].publicKeyFromPem(publicKeyPem); // Undocumented functionality but was the only way I could find to get\n  // key length out of the public key.\n  // https://github.com/digitalbazaar/forge/blob/master/lib/rsa.js#L1244\n\n  var bitLength = pk.n.bitLength();\n  return bitLength;\n}\nfunction keyLengthFromPrivateKeyPem(privateKey) {\n  var pk = node_forge__WEBPACK_IMPORTED_MODULE_2__["pki"].privateKeyFromPem(privateKey); // Undocumented functionality but was the only way I could find to get\n  // key length out of the public key.\n  // https://github.com/digitalbazaar/forge/blob/master/lib/rsa.js#L1244\n\n  var bitLength = pk.n.bitLength();\n  return bitLength;\n}\n\nvar EncodingVersions;\n\n(function (EncodingVersions) {\n  EncodingVersions["legacy"] = "legacy";\n  EncodingVersions["latest_version"] = "latest_version";\n})(EncodingVersions || (EncodingVersions = {}));\n\n/**\r\n * Most of these values are copied directly from the Ruby library\r\n */\n\nvar MIN_ITERATIONS = 20000;\nvar DEFAULT_LENGTH = 32;\nvar DEFAULT_ITERATION_VARIANCE = 10;\nvar DEFAULT_SALT_LENGTH = 20;\nvar KeyDerivationStrategy;\n\n(function (KeyDerivationStrategy) {\n  KeyDerivationStrategy["Pbkdf2Hmac"] = "Pbkdf2Hmac";\n})(KeyDerivationStrategy || (KeyDerivationStrategy = {}));\n/**\r\n * Store configuration used for password based key derivation and\r\n * serialize/de-serialize it.\r\n */\n\n\nvar DerivedKeyOptions =\n/** @class */\nfunction () {\n  function DerivedKeyOptions(options) {\n    this.salt = options.salt;\n    this.iterations = options.iterations;\n    this.length = options.length;\n    this.strategy = options.strategy;\n    this.hash = options.hash || \'SHA256\';\n  }\n\n  DerivedKeyOptions.usesDerivedKey = function (serialized) {\n    var parts = serialized.split(\'.\');\n\n    if (parts[parts.length - 2] === KeyDerivationStrategy.Pbkdf2Hmac) {\n      return true;\n    }\n\n    return false;\n  };\n\n  DerivedKeyOptions.randomFromOptions = function (_a) {\n    var _b = _a.iterationVariance,\n        iterationVariance = _b === void 0 ? DEFAULT_ITERATION_VARIANCE : _b,\n        _c = _a.length,\n        length = _c === void 0 ? DEFAULT_LENGTH : _c,\n        _d = _a.minIterations,\n        minIterations = _d === void 0 ? MIN_ITERATIONS : _d,\n        _e = _a.strategy,\n        strategy = _e === void 0 ? KeyDerivationStrategy.Pbkdf2Hmac : _e,\n        useSalt = _a.useSalt;\n    var variance = Math.floor(minIterations * (iterationVariance / 100));\n    var iterations = minIterations + Math.floor(Math.random() * variance);\n    var salt = useSalt || node_forge__WEBPACK_IMPORTED_MODULE_2__["random"].getBytesSync(DEFAULT_SALT_LENGTH);\n    return new DerivedKeyOptions({\n      strategy: strategy,\n      iterations: iterations,\n      salt: salt,\n      length: length\n    });\n  }; // tslint:disable-next-line: max-line-length\n\n\n  DerivedKeyOptions.fromSerialized = function (serialized) {\n    // tslint:disable-next-line: max-line-length\n    var _a = deSerializeDerivedKeyOptions(serialized),\n        derivationStrategy = _a.derivationStrategy,\n        serializationArtifacts = _a.serializationArtifacts;\n\n    return new DerivedKeyOptions(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({\n      // keys taken from ruby lib\n      strategy: derivationStrategy,\n      salt: binaryBufferToString(serializationArtifacts.iv),\n      iterations: serializationArtifacts.i,\n      length: serializationArtifacts.l,\n      hash: serializationArtifacts.hash\n    }, serializationArtifacts));\n  };\n\n  DerivedKeyOptions.prototype.serialize = function (serializationVersion) {\n    if (serializationVersion === void 0) {\n      serializationVersion = SerializationFormat.latest_version;\n    } // keys taken from ruby lib\n\n\n    return serializeDerivedKeyOptions(this.strategy, {\n      iv: stringAsBinaryBuffer(this.salt),\n      i: this.iterations,\n      l: this.length,\n      hash: this.hash\n    }, serializationVersion);\n  };\n\n  DerivedKeyOptions.prototype.deriveKey = function (key, encodingVersion) {\n    var _this = this;\n\n    if (encodingVersion === void 0) {\n      encodingVersion = EncodingVersions.latest_version;\n    }\n\n    var hash = this.hash.toLocaleLowerCase();\n    var digest = node_forge__WEBPACK_IMPORTED_MODULE_2__["md"][hash].create();\n    key = encodingVersion === EncodingVersions.legacy ? key : encodeUtf8(key);\n    return new Promise(function (resolve, reject) {\n      return node_forge__WEBPACK_IMPORTED_MODULE_2__["pkcs5"].pbkdf2(key, _this.salt, _this.iterations, _this.length, digest, function (err, derivedKey) {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(derivedKey);\n      });\n    });\n  };\n\n  return DerivedKeyOptions;\n}();\n\nvar CipherStrategy;\n\n(function (CipherStrategy) {\n  CipherStrategy["AES_ECB"] = "AES-ECB";\n  CipherStrategy["AES_CBC"] = "AES-CBC";\n  CipherStrategy["AES_CFB"] = "AES-CFB";\n  CipherStrategy["AES_OFB"] = "AES-OFB";\n  CipherStrategy["AES_CTR"] = "AES-CTR";\n  CipherStrategy["AES_GCM"] = "AES-GCM";\n  CipherStrategy["DES_ECB"] = "DES-ECB";\n  CipherStrategy["DES_CBC"] = "DES-CBC"; // Not currently suppoted as they have different key size (256 not supported)\n  // THREE_DES_ECB = \'3DES-ECB\',\n  // THREE_DES_CBC = \'3DES-CBC\',\n})(CipherStrategy || (CipherStrategy = {}));\n/*\r\n * Convert an algorithm from a serialized payload (e.g Aes256Gcm.data.artifacts) in the ruby lib\'s naming\r\n * scheme to one that can be used by forge\r\n */\n\n\nvar strategyToAlgorithm = function strategyToAlgorithm(algorithm) {\n  return algorithm.split(/[0-9]+/).map(function (v) {\n    return v.toUpperCase();\n  }).join(\'-\');\n};\n\nfunction decryptStringWithKey(_a) {\n  var serialized = _a.serialized,\n      key = _a.key;\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_b) {\n      return [2\n      /*return*/\n      , decryptWithKey({\n        serialized: serialized,\n        key: key\n      }, \'utf8\')];\n    });\n  });\n}\nfunction decryptBinaryWithKey(_a) {\n  var serialized = _a.serialized,\n      key = _a.key;\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_b) {\n      return [2\n      /*return*/\n      , decryptWithKey({\n        serialized: serialized,\n        key: key\n      }, \'raw\')];\n    });\n  });\n}\n/**\r\n * @deprecated This method should be replaced by\r\n * decryptStringWithKey or decryptBinaryWithKey method.\r\n * The default encoding is \'raw\' is suitable for binaries and 1 byte UTF-8.\r\n * string with greater than 2 bytes UTF-8 string will produce an incorrect result. e.g. data string \'鍵键\'\r\n * encrypted with \'raw\' encoding will produce incorrect decrypted value.\r\n */\n\nfunction decryptWithKey(_a, encoding) {\n  var serialized = _a.serialized,\n      key = _a.key;\n\n  if (encoding === void 0) {\n    encoding = \'raw\';\n  }\n\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    var deSerialized, encryptionStrategy, decodedPairs, output, derivedKey, legacyKey, i, data, artifacts, strategy, err_1;\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          deSerialized = deSerialize(serialized);\n          encryptionStrategy = deSerialized.encryptionStrategy;\n          decodedPairs = deSerialized.decodedPairs;\n\n          if (decodedPairs[0] === \'\') {\n            return [2\n            /*return*/\n            , null];\n          }\n\n          output = \'\';\n          if (!DerivedKeyOptions.usesDerivedKey(serialized)) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , _deriveKeyWithOptions(key, serialized)];\n\n        case 1:\n          // Key will now be one derived with Pbkdf\n          derivedKey = _b.sent(); // Can chop off the last two parts now as they were key data\n\n          decodedPairs = decodedPairs.slice(0, decodedPairs.length - 2);\n          _b.label = 2;\n\n        case 2:\n          i = 0;\n          _b.label = 3;\n\n        case 3:\n          if (!(i < decodedPairs.length)) return [3\n          /*break*/\n          , 10];\n          data = decodedPairs[i];\n          artifacts = decodedPairs[i + 1];\n          strategy = strategyToAlgorithm(encryptionStrategy);\n          _b.label = 4;\n\n        case 4:\n          _b.trys.push([4, 5,, 9]);\n\n          switch (encoding) {\n            case \'utf8\':\n              output += decryptStringWithKeyUsingArtefacts(legacyKey || derivedKey || key, data, strategy, artifacts);\n              break;\n\n            case \'raw\':\n              output += decryptBinaryWithKeyUsingArtefacts(legacyKey || derivedKey || key, data, strategy, artifacts);\n              break;\n          }\n\n          return [3\n          /*break*/\n          , 9];\n\n        case 5:\n          err_1 = _b.sent();\n          if (!(!legacyKey && encodeUtf8(key) !== key && DerivedKeyOptions.usesDerivedKey(serialized))) return [3\n          /*break*/\n          , 7];\n          return [4\n          /*yield*/\n          , _deriveKeyWithOptions(key, serialized, EncodingVersions.legacy)];\n\n        case 6:\n          // Decryption failed with utf-8 key style - retry with legacy utf-16 key format\n          legacyKey = _b.sent();\n          i -= 2;\n          return [3\n          /*break*/\n          , 9];\n\n        case 7:\n          // Both utf-8 and utf-16 key formats have failed - bail\n          throw err_1;\n\n        case 8:\n          return [3\n          /*break*/\n          , 9];\n\n        case 9:\n          i += 2;\n          return [3\n          /*break*/\n          , 3];\n\n        case 10:\n          return [2\n          /*return*/\n          , output];\n      }\n    });\n  });\n}\n/**\r\n * Determine if we need to use a derived key or not based on whether or not\r\n * we have key derivation options in the serialized payload.\r\n */\n// tslint:disable-next-line: max-line-length\n\nfunction _deriveKeyWithOptions(key, serializedOptions, encodingVersion) {\n  if (encodingVersion === void 0) {\n    encodingVersion = EncodingVersions.latest_version;\n  }\n\n  var derivedKeyOptions = DerivedKeyOptions.fromSerialized(serializedOptions);\n  return derivedKeyOptions.deriveKey(key, encodingVersion);\n}\n\nfunction decryptStringWithKeyUsingArtefacts(key, encryptedData, strategy, _a) {\n  var iv = _a.iv,\n      at = _a.at,\n      ad = _a.ad;\n  return decryptWithKeyUsingArtefacts(key, encryptedData, strategy, {\n    iv: iv,\n    at: at,\n    ad: ad\n  }, \'utf8\');\n}\nfunction decryptBinaryWithKeyUsingArtefacts(key, encryptedData, strategy, _a) {\n  var iv = _a.iv,\n      at = _a.at,\n      ad = _a.ad;\n  return decryptWithKeyUsingArtefacts(key, encryptedData, strategy, {\n    iv: iv,\n    at: at,\n    ad: ad\n  }, \'raw\');\n}\n/**\r\n * @deprecated This method should be replaced by\r\n * decryptStringWithKeyUsingArtefacts or decryptBinaryWithKeyUsingArtefacts method.\r\n * The default encoding is \'raw\' is suitable for binaries and 1 byte UTF-8.\r\n * string with greater than 2 bytes UTF-8 string will produce an incorrect result. e.g. data string \'鍵键\'\r\n * encrypted with \'raw\' encoding will produce incorrect decrypted value.\r\n */\n\nfunction decryptWithKeyUsingArtefacts(key, encryptedData, strategy, _a, encoding) {\n  var iv = _a.iv,\n      at = _a.at,\n      ad = _a.ad;\n\n  if (encoding === void 0) {\n    encoding = \'raw\';\n  }\n\n  if (encryptedData === \'\') {\n    return null;\n  }\n\n  var decipher = node_forge__WEBPACK_IMPORTED_MODULE_2__["cipher"].createDecipher(strategy, key);\n  var tagLength = 128;\n  var tag = node_forge__WEBPACK_IMPORTED_MODULE_2__["util"].createBuffer(at); // authentication tag from encryption\n\n  var encrypted = node_forge__WEBPACK_IMPORTED_MODULE_2__["util"].createBuffer(encryptedData);\n  decipher.start({\n    iv: node_forge__WEBPACK_IMPORTED_MODULE_2__["util"].createBuffer(iv),\n    additionalData: ad,\n    tagLength: tagLength,\n    tag: tag\n  });\n  decipher.update(encrypted);\n  var pass = decipher.finish(); // pass is false if there was a failure (eg: authentication tag didn\'t match)\n\n  if (pass) {\n    try {\n      switch (encoding) {\n        case \'utf8\':\n          return node_forge__WEBPACK_IMPORTED_MODULE_2__["util"].decodeUtf8(decipher.output.data);\n\n        case \'raw\':\n          return decipher.output.data;\n      }\n    } catch (_b) {\n      // in the event that data was encrypted without being encoded as utf-8 first\n      // we just return the raw base64 encoded data for backwards compatibility\n      return decipher.output.data;\n    }\n  }\n\n  throw new Error(\'Decryption failed\');\n}\n\n/**\r\n * Given a password/phrase, derive a fixed-length key from it using Pbkdf2Hmac.\r\n * Various derivation arguments can be provided to ensure deterministic results\r\n * (i.e. to derive the same key again from the same password/phrase).\r\n */\n\nfunction generateDerivedKey(_a) {\n  var key = _a.key,\n      length = _a.length,\n      minIterations = _a.minIterations,\n      iterationVariance = _a.iterationVariance,\n      useSalt = _a.useSalt;\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    var derivedKeyOptions, derivedKey;\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          derivedKeyOptions = DerivedKeyOptions.randomFromOptions({\n            iterationVariance: iterationVariance,\n            length: length,\n            minIterations: minIterations,\n            strategy: KeyDerivationStrategy.Pbkdf2Hmac,\n            useSalt: useSalt\n          });\n          return [4\n          /*yield*/\n          , derivedKeyOptions.deriveKey(key)];\n\n        case 1:\n          derivedKey = _b.sent();\n          return [2\n          /*return*/\n          , {\n            key: derivedKey,\n            options: derivedKeyOptions\n          }];\n      }\n    });\n  });\n}\n\n/**\r\n * Similar to `encryptStringWithKey`\r\n * but generates random bytes to use as the key. This will be returned with the result.\r\n */\n\nfunction encryptStringWithGeneratedKey(options, serializationVersion) {\n  if (serializationVersion === void 0) {\n    serializationVersion = SerializationFormat.latest_version;\n  }\n\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_a) {\n      return [2\n      /*return*/\n      , encryptWithGeneratedKey(options, serializationVersion, \'utf8\')];\n    });\n  });\n}\n/**\r\n * Similar to `encryptBinaryWithKey`\r\n * but generates random bytes to use as the key. This will be returned with the result.\r\n */\n\nfunction encryptBinaryWithGeneratedKey(options, serializationVersion) {\n  if (serializationVersion === void 0) {\n    serializationVersion = SerializationFormat.latest_version;\n  }\n\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_a) {\n      return [2\n      /*return*/\n      , encryptWithGeneratedKey(options, serializationVersion, \'raw\')];\n    });\n  });\n}\n/**\r\n * @deprecated This method should be replaced by\r\n * encryptBinaryWithGeneratedKey or encryptStringWithGeneratedKey method.\r\n * The default encoding is \'raw\' is suitable for binaries and 1 byte UTF-8.\r\n * string with greater than 2 bytes UTF-8 string will produce an incorrect result. e.g. data string \'鍵键\'\r\n * encrypted with \'raw\' encoding will produce incorrect decrypted value.\r\n */\n\nfunction encryptWithGeneratedKey(options, serializationVersion, encoding) {\n  if (serializationVersion === void 0) {\n    serializationVersion = SerializationFormat.latest_version;\n  }\n\n  if (encoding === void 0) {\n    encoding = \'raw\';\n  }\n\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    var key, result, _a;\n\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          key = generateRandomKey(options.keyLength || 32);\n          _a = encoding;\n\n          switch (_a) {\n            case \'utf8\':\n              return [3\n              /*break*/\n              , 1];\n\n            case \'raw\':\n              return [3\n              /*break*/\n              , 3];\n          }\n\n          return [3\n          /*break*/\n          , 5];\n\n        case 1:\n          return [4\n          /*yield*/\n          , encryptStringWithKey(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, options), {\n            key: key\n          }), serializationVersion)];\n\n        case 2:\n          result = _b.sent();\n          return [3\n          /*break*/\n          , 5];\n\n        case 3:\n          return [4\n          /*yield*/\n          , encryptBinaryWithKey(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, options), {\n            key: key\n          }), serializationVersion)];\n\n        case 4:\n          result = _b.sent();\n          return [3\n          /*break*/\n          , 5];\n\n        case 5:\n          return [2\n          /*return*/\n          , Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, result), {\n            generatedKey: key\n          })];\n      }\n    });\n  });\n}\n/**\r\n * Similar to `encryptStringWithKey` but allows passing an arbitrary string/passphrase which will\r\n * be used to derive a key that will be used in encryption. The derived key will be returned with the results.\r\n */\n\nfunction encryptStringWithKeyDerivedFromString(options, serializationVersion) {\n  if (serializationVersion === void 0) {\n    serializationVersion = SerializationFormat.latest_version;\n  }\n\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_a) {\n      return [2\n      /*return*/\n      , encryptWithKeyDerivedFromString(options, serializationVersion, \'utf8\')];\n    });\n  });\n}\n/**\r\n * Similar to `encryptBinaryWithKey` but allows passing an arbitrary string/passphrase which will\r\n * be used to derive a key that will be used in encryption. The derived key will be returned with the results.\r\n */\n\nfunction encryptBinaryWithKeyDerivedFromString(options, serializationVersion) {\n  if (serializationVersion === void 0) {\n    serializationVersion = SerializationFormat.latest_version;\n  }\n\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_a) {\n      return [2\n      /*return*/\n      , encryptWithKeyDerivedFromString(options, serializationVersion, \'raw\')];\n    });\n  });\n}\n/**\r\n * @deprecated This method should be replaced by\r\n * encryptStringWithKeyDerivedFromString or encryptBinaryWithKeyDerivedFromString method.\r\n * The default encoding is \'raw\' is suitable for binaries and 1 byte UTF-8.\r\n * string with greater than 2 bytes UTF-8 string will produce an incorrect result. e.g. data string \'鍵键\'\r\n * encrypted with \'raw\' encoding will produce incorrect decrypted value.\r\n */\n\nfunction encryptWithKeyDerivedFromString(options, serializationVersion, encoding) {\n  if (serializationVersion === void 0) {\n    serializationVersion = SerializationFormat.latest_version;\n  }\n\n  if (encoding === void 0) {\n    encoding = \'raw\';\n  }\n\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    var derived, result, _a, serializedKey;\n\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , generateDerivedKey({\n            key: options.key\n          })];\n\n        case 1:\n          derived = _b.sent();\n          _a = encoding;\n\n          switch (_a) {\n            case \'utf8\':\n              return [3\n              /*break*/\n              , 2];\n\n            case \'raw\':\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          return [4\n          /*yield*/\n          , encryptStringWithKey(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, options), {\n            key: derived.key\n          }), serializationVersion)];\n\n        case 3:\n          result = _b.sent();\n          return [3\n          /*break*/\n          , 6];\n\n        case 4:\n          return [4\n          /*yield*/\n          , encryptBinaryWithKey(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, options), {\n            key: derived.key\n          }), serializationVersion)];\n\n        case 5:\n          result = _b.sent();\n          return [3\n          /*break*/\n          , 6];\n\n        case 6:\n          serializedKey = derived.options.serialize(serializationVersion);\n          result.serialized = result.serialized + "." + serializedKey;\n          return [2\n          /*return*/\n          , Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, result), derived)];\n      }\n    });\n  });\n}\n/**\r\n * Encrypt data with the provided key.\r\n *\r\n * This is technically synchronous at the moment but it returns a promise in the event that we want to make\r\n * it asynchronous using Web Workers or similar in future.\r\n *\r\n * @param options.key The exact key to use - key.length must be valid for specified encryption\r\n * strategy (typically 32 bytes).\r\n * To encrypt with a derived key, use `encryptWithKeyDerivedFromString` or, to, use a random\r\n * key `encryptWithGeneratedKey`.\r\n */\n\nfunction encryptStringWithKey(_a, serializationVersion) {\n  var key = _a.key,\n      data = _a.data,\n      strategy = _a.strategy,\n      iv = _a.iv;\n\n  if (serializationVersion === void 0) {\n    serializationVersion = SerializationFormat.latest_version;\n  }\n\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_b) {\n      return [2\n      /*return*/\n      , encryptWithKey({\n        key: key,\n        data: data,\n        strategy: strategy,\n        iv: iv\n      }, serializationVersion, \'utf8\')];\n    });\n  });\n}\nfunction encryptBinaryWithKey(_a, serializationVersion) {\n  var key = _a.key,\n      data = _a.data,\n      strategy = _a.strategy,\n      iv = _a.iv;\n\n  if (serializationVersion === void 0) {\n    serializationVersion = SerializationFormat.latest_version;\n  }\n\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_b) {\n      return [2\n      /*return*/\n      , encryptWithKey({\n        key: key,\n        data: data,\n        strategy: strategy,\n        iv: iv\n      }, serializationVersion, \'raw\')];\n    });\n  });\n}\n/**\r\n * @deprecated This method should be replaced by\r\n * encryptStringWithKey or encryptBinaryWithKey method.\r\n * The default encoding is \'raw\' is suitable for binaries and 1 byte UTF-8.\r\n * string with greater than 2 bytes UTF-8 string will produce an incorrect result. e.g. data string \'鍵键\'\r\n * encrypted with \'raw\' encoding will produce incorrect decrypted value.\r\n */\n\nfunction encryptWithKey(_a, serializationVersion, encoding) {\n  var key = _a.key,\n      data = _a.data,\n      strategy = _a.strategy,\n      iv = _a.iv;\n\n  if (serializationVersion === void 0) {\n    serializationVersion = SerializationFormat.latest_version;\n  }\n\n  if (encoding === void 0) {\n    encoding = \'raw\';\n  }\n\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    var output, encrypted, artifacts, keyLengthBits, _b, cipher, mode, serialized;\n\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_c) {\n      if (data === \'\') {\n        return [2\n        /*return*/\n        , {\n          encrypted: null,\n          serialized: null\n        }];\n      }\n\n      switch (encoding) {\n        case \'utf8\':\n          output = encryptStringWithKeyUsingArtefacts(key, data, strategy, iv);\n          break;\n\n        case \'raw\':\n          output = encryptBinaryWithKeyUsingArtefacts(key, data, strategy, iv);\n          break;\n      }\n\n      encrypted = output.encrypted, artifacts = output.artifacts;\n      keyLengthBits = key.length * 8;\n      _b = strategy.split(\'-\').map(upperWords), cipher = _b[0], mode = _b[1];\n      serialized = serialize("" + cipher + keyLengthBits + mode, encrypted || \'\', artifacts, serializationVersion);\n      return [2\n      /*return*/\n      , {\n        encrypted: encrypted,\n        serialized: serialized\n      }];\n    });\n  });\n}\n/**\r\n * UpperCamelCase helper\r\n */\n\nvar upperWords = function upperWords(val) {\n  return val.slice(0, 1).toUpperCase() + val.slice(1).toLowerCase();\n};\n\nfunction encryptStringWithKeyUsingArtefacts(key, data, strategy, iv) {\n  return encryptWithKeyUsingArtefacts(key, data, strategy, iv, \'utf8\');\n}\nfunction encryptBinaryWithKeyUsingArtefacts(key, data, strategy, iv) {\n  return encryptWithKeyUsingArtefacts(key, data, strategy, iv, \'raw\');\n}\n/**\r\n * @deprecated This method should be replaced by\r\n * encryptStringWithKeyUsingArtefacts or encryptBinaryWithKeyUsingArtefacts method.\r\n * The default encoding is \'raw\' is suitable for binaries and 1 byte UTF-8.\r\n * string with greater than 2 bytes UTF-8 string will produce an incorrect result. e.g. data string \'鍵键\'\r\n * encrypted with \'raw\' encoding will produce incorrect decrypted value.\r\n */\n\nfunction encryptWithKeyUsingArtefacts(key, data, strategy, iv, encoding) {\n  if (encoding === void 0) {\n    encoding = \'raw\';\n  }\n\n  if (data === \'\') {\n    return {\n      encrypted: null\n    };\n  }\n\n  var cipher$1 = node_forge__WEBPACK_IMPORTED_MODULE_2__["cipher"].createCipher(strategy, node_forge__WEBPACK_IMPORTED_MODULE_2__["util"].createBuffer(key));\n  iv = iv || node_forge__WEBPACK_IMPORTED_MODULE_2__["random"].getBytesSync(12);\n  cipher$1.start({\n    iv: node_forge__WEBPACK_IMPORTED_MODULE_2__["util"].createBuffer(iv),\n    additionalData: \'none\',\n    tagLength: 128\n  });\n  cipher$1.update(node_forge__WEBPACK_IMPORTED_MODULE_2__["util"].createBuffer(data, encoding));\n  cipher$1.finish();\n  var artifacts = {\n    iv: stringAsBinaryBuffer(iv)\n  };\n\n  if (cipher$1.mode.tag) {\n    artifacts.at = stringAsBinaryBuffer(cipher$1.mode.tag.data);\n  }\n\n  artifacts.ad = \'none\';\n  return {\n    encrypted: cipher$1.output.data,\n    artifacts: artifacts\n  };\n}\n\nfunction generateRSAKeyPair(bits) {\n  if (bits === void 0) {\n    bits = 4096;\n  }\n\n  return new Promise(function (resolve, reject) {\n    // -1 workers to estimate number of cores available\n    // https://github.com/digitalbazaar/forge#rsa\n    node_forge__WEBPACK_IMPORTED_MODULE_2__["pki"].rsa.generateKeyPair({\n      bits: bits,\n      workers: 0\n    }, function (err, keyPair) {\n      if (err) {\n        return reject(err);\n      }\n\n      resolve({\n        privateKey: node_forge__WEBPACK_IMPORTED_MODULE_2__["pki"].privateKeyToPem(keyPair.privateKey),\n        publicKey: node_forge__WEBPACK_IMPORTED_MODULE_2__["pki"].publicKeyToPem(keyPair.publicKey),\n        bits: bits\n      });\n    });\n  });\n}\nfunction encryptPrivateKeyWithPassword(_a) {\n  var privateKeyPem = _a.privateKeyPem,\n      password = _a.password;\n  var publicKey = node_forge__WEBPACK_IMPORTED_MODULE_2__["pki"].privateKeyFromPem(privateKeyPem);\n  return node_forge__WEBPACK_IMPORTED_MODULE_2__["pki"].encryptRsaPrivateKey(publicKey, password);\n}\nfunction encryptWithPublicKey(_a, serializationFormat) {\n  var publicKeyPem = _a.publicKeyPem,\n      data = _a.data,\n      _b = _a.scheme,\n      scheme = _b === void 0 ? \'RSA-OAEP\' : _b;\n\n  if (serializationFormat === void 0) {\n    serializationFormat = SerializationFormat.latest_version;\n  }\n\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    var pk, encrypted, bitLength, serialized;\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_c) {\n      pk = node_forge__WEBPACK_IMPORTED_MODULE_2__["pki"].publicKeyFromPem(publicKeyPem);\n      encrypted = pk.encrypt(data, scheme);\n      bitLength = keyLengthFromPublicKeyPem(publicKeyPem);\n      serialized = serialize("Rsa" + bitLength, encrypted, {}, serializationFormat);\n      return [2\n      /*return*/\n      , {\n        encrypted: encrypted,\n        serialized: serialized\n      }];\n    });\n  });\n}\nfunction decryptSerializedWithPrivateKey(_a) {\n  var password = _a.password,\n      privateKeyPem = _a.privateKeyPem,\n      serialized = _a.serialized,\n      _b = _a.scheme,\n      scheme = _b === void 0 ? \'RSA-OAEP\' : _b;\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    var encrypted;\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_c) {\n      encrypted = deSerialize(serialized).decodedPairs[0];\n      return [2\n      /*return*/\n      , decryptWithPrivateKey({\n        password: password,\n        privateKeyPem: privateKeyPem,\n        encrypted: encrypted,\n        scheme: scheme\n      })];\n    });\n  });\n}\n/**\r\n * @deprecated\r\n */\n\nfunction decryptWithPrivateKey(_a) {\n  var password = _a.password,\n      privateKeyPem = _a.privateKeyPem,\n      encrypted = _a.encrypted,\n      _b = _a.scheme,\n      scheme = _b === void 0 ? \'RSA-OAEP\' : _b;\n  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, function () {\n    var pk;\n    return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__generator"])(this, function (_c) {\n      pk = node_forge__WEBPACK_IMPORTED_MODULE_2__["pki"].decryptRsaPrivateKey(privateKeyPem, password);\n      return [2\n      /*return*/\n      , pk.decrypt(encrypted, scheme)];\n    });\n  });\n}\n\nfunction signStringWithPrivateKey(privateKeyPem, data) {\n  return signWithPrivateKey(privateKeyPem, data, \'utf8\');\n}\nfunction signBinaryWithPrivateKey(privateKeyPem, data) {\n  return signWithPrivateKey(privateKeyPem, data, \'raw\');\n}\n/**\r\n * @deprecated This method should be replaced by\r\n * signStringWithPrivateKey or signBinaryWithPrivateKey method.\r\n * The default encoding is \'raw\' is suitable for binaries and 1 byte UTF-8.\r\n * string with greater than 2 bytes UTF-8 string will produce an incorrect result. e.g. data string \'鍵键\'\r\n * encrypted with \'raw\' encoding will produce incorrect decrypted value.\r\n */\n\nfunction signWithPrivateKey(privateKeyPem, data, encoding) {\n  if (encoding === void 0) {\n    encoding = \'raw\';\n  }\n\n  var mdDigest = node_forge__WEBPACK_IMPORTED_MODULE_2__["md"].sha256.create();\n  var key = node_forge__WEBPACK_IMPORTED_MODULE_2__["pki"].privateKeyFromPem(privateKeyPem);\n  mdDigest.update(data, \'utf8\');\n  var signature = key.sign(mdDigest);\n  var keySize = keyLengthFromPrivateKeyPem(privateKeyPem);\n\n  switch (encoding) {\n    case \'utf8\':\n      data = node_forge__WEBPACK_IMPORTED_MODULE_2__["util"].encodeUtf8(data);\n      break;\n  }\n\n  var serialized = "Sign.Rsa" + keySize + "." + encodeSafe64(signature) + "." + encodeSafe64(data);\n  return {\n    signature: signature,\n    data: data,\n    keySize: keySize,\n    serialized: serialized\n  };\n}\nfunction loadStringRsaSignature(serializedPayload) {\n  return loadRsaSignature(serializedPayload, \'utf8\');\n}\nfunction loadBinaryRsaSignature(serializedPayload) {\n  return loadRsaSignature(serializedPayload, \'raw\');\n}\n/**\r\n * @deprecated This method should be replaced by\r\n * loadStringRsaSignature or loadBinaryRsaSignature method.\r\n * The default encoding is \'raw\' is suitable for binaries and 1 byte UTF-8.\r\n * string with greater than 2 bytes UTF-8 string will produce an incorrect result. e.g. data string \'鍵键\'\r\n * encrypted with \'raw\' encoding will produce incorrect decrypted value.\r\n */\n\nfunction loadRsaSignature(serializedPayload, encoding) {\n  if (encoding === void 0) {\n    encoding = \'raw\';\n  }\n\n  var decomposedPayload = serializedPayload.split(\'.\');\n  var signed = decomposedPayload[0],\n      signingStrategy = decomposedPayload[1],\n      encodedSignature = decomposedPayload[2],\n      encodedData = decomposedPayload[3];\n  var regex = /Rsa\\d{1,4}/g;\n\n  if (signed === \'Sign\' && regex.test(signingStrategy)) {\n    var bits = parseInt(signingStrategy.replace(\'Rsa\', \'\'), 10);\n    var data = decodeSafe64(encodedData);\n\n    switch (encoding) {\n      case \'utf8\':\n        data = node_forge__WEBPACK_IMPORTED_MODULE_2__["util"].decodeUtf8(data);\n        break;\n      // in the event that data was encrypted without being encoded as utf-8 first\n      // we just return the raw base64 encoded data for backwards compatibility\n    }\n\n    return {\n      serialized: serializedPayload,\n      signature: decodeSafe64(encodedSignature),\n      data: data,\n      keySize: bits\n    };\n  } else {\n    throw new Error(\'String is not a serialized RSA signature\');\n  }\n}\nfunction verifyStringWithPublicKey(publicKeyPem, signatureObj) {\n  return verifyWithPublicKey(publicKeyPem, signatureObj, \'utf8\');\n}\nfunction verifyBinaryWithPublicKey(publicKeyPem, signatureObj) {\n  return verifyWithPublicKey(publicKeyPem, signatureObj, \'raw\');\n}\n/**\r\n * @deprecated This method should be replaced by\r\n * verifyStringWithPublicKey or verifyBinaryWithPublicKey method.\r\n * The default encoding is \'raw\' is suitable for binaries and 1 byte UTF-8.\r\n * string with greater than 2 bytes UTF-8 string will produce an incorrect result. e.g. data string \'鍵键\'\r\n * encrypted with \'raw\' encoding will produce incorrect decrypted value.\r\n */\n\nfunction verifyWithPublicKey(publicKeyPem, signatureObj, encoding) {\n  if (encoding === void 0) {\n    encoding = \'raw\';\n  }\n\n  var key = node_forge__WEBPACK_IMPORTED_MODULE_2__["pki"].publicKeyFromPem(publicKeyPem);\n  var mdDigest = node_forge__WEBPACK_IMPORTED_MODULE_2__["md"].sha256.create();\n  mdDigest.update(signatureObj.data, encoding);\n  return key.verify(mdDigest.digest().bytes(), signatureObj.signature);\n}\n\nfunction hmacSha256Digest(key, message) {\n  var hm = node_forge__WEBPACK_IMPORTED_MODULE_2__["hmac"].create();\n  hm.start(\'sha256\', key);\n  hm.update(message);\n  return hm.digest().toHex();\n}\n\nif (typeof window !== \'undefined\' && typeof window.global === \'undefined\') {\n  // Ensures browser will run without manual polyfills in Angular\n  window.Buffer = buffer__WEBPACK_IMPORTED_MODULE_0__["Buffer"];\n  window.global = window;\n}\n\n\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/dist/index.esm.js?')},"../../node_modules/@meeco/cryppo/dist/src/digests/hmac-digest.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.hmacSha256Digest = void 0;\nvar node_forge_1 = __webpack_require__(/*! node-forge */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/index.js");\nfunction hmacSha256Digest(key, message) {\n    var hm = node_forge_1.hmac.create();\n    hm.start(\'sha256\', key);\n    hm.update(message);\n    return hm.digest().toHex();\n}\nexports.hmacSha256Digest = hmacSha256Digest;\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/dist/src/digests/hmac-digest.js?')},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/aes.js":function(module,exports,__webpack_require__){eval("/**\n * Advanced Encryption Standard (AES) implementation.\n *\n * This implementation is based on the public domain library 'jscrypto' which\n * was written by:\n *\n * Emily Stark (estark@stanford.edu)\n * Mike Hamburg (mhamburg@stanford.edu)\n * Dan Boneh (dabo@cs.stanford.edu)\n *\n * Parts of this code are based on the OpenSSL implementation of AES:\n * http://www.openssl.org\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./cipher */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/cipher.js\");\n__webpack_require__(/*! ./cipherModes */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/cipherModes.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\n/* AES API */\nmodule.exports = forge.aes = forge.aes || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new AES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the AES algorithm object.\n */\nforge.aes.Algorithm = function(name, mode) {\n  if(!init) {\n    initialize();\n  }\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 16,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this AES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.aes.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = options.key;\n  var tmp;\n\n  /* Note: The key may be a string of bytes, an array of bytes, a byte\n    buffer, or an array of 32-bit integers. If the key is in bytes, then\n    it must be 16, 24, or 32 bytes in length. If it is in 32-bit\n    integers, it must be 4, 6, or 8 integers long. */\n\n  if(typeof key === 'string' &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key string into byte buffer\n    key = forge.util.createBuffer(key);\n  } else if(forge.util.isArray(key) &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key integer array into byte buffer\n    tmp = key;\n    key = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      key.putByte(tmp[i]);\n    }\n  }\n\n  // convert key byte buffer into 32-bit integer array\n  if(!forge.util.isArray(key)) {\n    tmp = key;\n    key = [];\n\n    // key lengths of 16, 24, 32 bytes allowed\n    var len = tmp.length();\n    if(len === 16 || len === 24 || len === 32) {\n      len = len >>> 2;\n      for(var i = 0; i < len; ++i) {\n        key.push(tmp.getInt32());\n      }\n    }\n  }\n\n  // key must be an array of 32-bit integers by now\n  if(!forge.util.isArray(key) ||\n    !(key.length === 4 || key.length === 6 || key.length === 8)) {\n    throw new Error('Invalid key parameter.');\n  }\n\n  // encryption operation is always used for these modes\n  var mode = this.mode.name;\n  var encryptOp = (['CFB', 'OFB', 'CTR', 'GCM'].indexOf(mode) !== -1);\n\n  // do key expansion\n  this._w = _expandKey(key, options.decrypt && !encryptOp);\n  this._init = true;\n};\n\n/**\n * Expands a key. Typically only used for testing.\n *\n * @param key the symmetric key to expand, as an array of 32-bit words.\n * @param decrypt true to expand for decryption, false for encryption.\n *\n * @return the expanded key.\n */\nforge.aes._expandKey = function(key, decrypt) {\n  if(!init) {\n    initialize();\n  }\n  return _expandKey(key, decrypt);\n};\n\n/**\n * Updates a single block. Typically only used for testing.\n *\n * @param w the expanded key to use.\n * @param input an array of block-size 32-bit words.\n * @param output an array of block-size 32-bit words.\n * @param decrypt true to decrypt, false to encrypt.\n */\nforge.aes._updateBlock = _updateBlock;\n\n/** Register AES algorithms **/\n\nregisterAlgorithm('AES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('AES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('AES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('AES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('AES-CTR', forge.cipher.modes.ctr);\nregisterAlgorithm('AES-GCM', forge.cipher.modes.gcm);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.aes.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** AES implementation **/\n\nvar init = false; // not yet initialized\nvar Nb = 4;       // number of words comprising the state (AES = 4)\nvar sbox;         // non-linear substitution table used in key expansion\nvar isbox;        // inversion of sbox\nvar rcon;         // round constant word array\nvar mix;          // mix-columns table\nvar imix;         // inverse mix-columns table\n\n/**\n * Performs initialization, ie: precomputes tables to optimize for speed.\n *\n * One way to understand how AES works is to imagine that 'addition' and\n * 'multiplication' are interfaces that require certain mathematical\n * properties to hold true (ie: they are associative) but they might have\n * different implementations and produce different kinds of results ...\n * provided that their mathematical properties remain true. AES defines\n * its own methods of addition and multiplication but keeps some important\n * properties the same, ie: associativity and distributivity. The\n * explanation below tries to shed some light on how AES defines addition\n * and multiplication of bytes and 32-bit words in order to perform its\n * encryption and decryption algorithms.\n *\n * The basics:\n *\n * The AES algorithm views bytes as binary representations of polynomials\n * that have either 1 or 0 as the coefficients. It defines the addition\n * or subtraction of two bytes as the XOR operation. It also defines the\n * multiplication of two bytes as a finite field referred to as GF(2^8)\n * (Note: 'GF' means \"Galois Field\" which is a field that contains a finite\n * number of elements so GF(2^8) has 256 elements).\n *\n * This means that any two bytes can be represented as binary polynomials;\n * when they multiplied together and modularly reduced by an irreducible\n * polynomial of the 8th degree, the results are the field GF(2^8). The\n * specific irreducible polynomial that AES uses in hexadecimal is 0x11b.\n * This multiplication is associative with 0x01 as the identity:\n *\n * (b * 0x01 = GF(b, 0x01) = b).\n *\n * The operation GF(b, 0x02) can be performed at the byte level by left\n * shifting b once and then XOR'ing it (to perform the modular reduction)\n * with 0x11b if b is >= 128. Repeated application of the multiplication\n * of 0x02 can be used to implement the multiplication of any two bytes.\n *\n * For instance, multiplying 0x57 and 0x13, denoted as GF(0x57, 0x13), can\n * be performed by factoring 0x13 into 0x01, 0x02, and 0x10. Then these\n * factors can each be multiplied by 0x57 and then added together. To do\n * the multiplication, values for 0x57 multiplied by each of these 3 factors\n * can be precomputed and stored in a table. To add them, the values from\n * the table are XOR'd together.\n *\n * AES also defines addition and multiplication of words, that is 4-byte\n * numbers represented as polynomials of 3 degrees where the coefficients\n * are the values of the bytes.\n *\n * The word [a0, a1, a2, a3] is a polynomial a3x^3 + a2x^2 + a1x + a0.\n *\n * Addition is performed by XOR'ing like powers of x. Multiplication\n * is performed in two steps, the first is an algebriac expansion as\n * you would do normally (where addition is XOR). But the result is\n * a polynomial larger than 3 degrees and thus it cannot fit in a word. So\n * next the result is modularly reduced by an AES-specific polynomial of\n * degree 4 which will always produce a polynomial of less than 4 degrees\n * such that it will fit in a word. In AES, this polynomial is x^4 + 1.\n *\n * The modular product of two polynomials 'a' and 'b' is thus:\n *\n * d(x) = d3x^3 + d2x^2 + d1x + d0\n * with\n * d0 = GF(a0, b0) ^ GF(a3, b1) ^ GF(a2, b2) ^ GF(a1, b3)\n * d1 = GF(a1, b0) ^ GF(a0, b1) ^ GF(a3, b2) ^ GF(a2, b3)\n * d2 = GF(a2, b0) ^ GF(a1, b1) ^ GF(a0, b2) ^ GF(a3, b3)\n * d3 = GF(a3, b0) ^ GF(a2, b1) ^ GF(a1, b2) ^ GF(a0, b3)\n *\n * As a matrix:\n *\n * [d0] = [a0 a3 a2 a1][b0]\n * [d1]   [a1 a0 a3 a2][b1]\n * [d2]   [a2 a1 a0 a3][b2]\n * [d3]   [a3 a2 a1 a0][b3]\n *\n * Special polynomials defined by AES (0x02 == {02}):\n * a(x)    = {03}x^3 + {01}x^2 + {01}x + {02}\n * a^-1(x) = {0b}x^3 + {0d}x^2 + {09}x + {0e}.\n *\n * These polynomials are used in the MixColumns() and InverseMixColumns()\n * operations, respectively, to cause each element in the state to affect\n * the output (referred to as diffusing).\n *\n * RotWord() uses: a0 = a1 = a2 = {00} and a3 = {01}, which is the\n * polynomial x3.\n *\n * The ShiftRows() method modifies the last 3 rows in the state (where\n * the state is 4 words with 4 bytes per word) by shifting bytes cyclically.\n * The 1st byte in the second row is moved to the end of the row. The 1st\n * and 2nd bytes in the third row are moved to the end of the row. The 1st,\n * 2nd, and 3rd bytes are moved in the fourth row.\n *\n * More details on how AES arithmetic works:\n *\n * In the polynomial representation of binary numbers, XOR performs addition\n * and subtraction and multiplication in GF(2^8) denoted as GF(a, b)\n * corresponds with the multiplication of polynomials modulo an irreducible\n * polynomial of degree 8. In other words, for AES, GF(a, b) will multiply\n * polynomial 'a' with polynomial 'b' and then do a modular reduction by\n * an AES-specific irreducible polynomial of degree 8.\n *\n * A polynomial is irreducible if its only divisors are one and itself. For\n * the AES algorithm, this irreducible polynomial is:\n *\n * m(x) = x^8 + x^4 + x^3 + x + 1,\n *\n * or {01}{1b} in hexadecimal notation, where each coefficient is a bit:\n * 100011011 = 283 = 0x11b.\n *\n * For example, GF(0x57, 0x83) = 0xc1 because\n *\n * 0x57 = 87  = 01010111 = x^6 + x^4 + x^2 + x + 1\n * 0x85 = 131 = 10000101 = x^7 + x + 1\n *\n * (x^6 + x^4 + x^2 + x + 1) * (x^7 + x + 1)\n * =  x^13 + x^11 + x^9 + x^8 + x^7 +\n *    x^7 + x^5 + x^3 + x^2 + x +\n *    x^6 + x^4 + x^2 + x + 1\n * =  x^13 + x^11 + x^9 + x^8 + x^6 + x^5 + x^4 + x^3 + 1 = y\n *    y modulo (x^8 + x^4 + x^3 + x + 1)\n * =  x^7 + x^6 + 1.\n *\n * The modular reduction by m(x) guarantees the result will be a binary\n * polynomial of less than degree 8, so that it can fit in a byte.\n *\n * The operation to multiply a binary polynomial b with x (the polynomial\n * x in binary representation is 00000010) is:\n *\n * b_7x^8 + b_6x^7 + b_5x^6 + b_4x^5 + b_3x^4 + b_2x^3 + b_1x^2 + b_0x^1\n *\n * To get GF(b, x) we must reduce that by m(x). If b_7 is 0 (that is the\n * most significant bit is 0 in b) then the result is already reduced. If\n * it is 1, then we can reduce it by subtracting m(x) via an XOR.\n *\n * It follows that multiplication by x (00000010 or 0x02) can be implemented\n * by performing a left shift followed by a conditional bitwise XOR with\n * 0x1b. This operation on bytes is denoted by xtime(). Multiplication by\n * higher powers of x can be implemented by repeated application of xtime().\n *\n * By adding intermediate results, multiplication by any constant can be\n * implemented. For instance:\n *\n * GF(0x57, 0x13) = 0xfe because:\n *\n * xtime(b) = (b & 128) ? (b << 1 ^ 0x11b) : (b << 1)\n *\n * Note: We XOR with 0x11b instead of 0x1b because in javascript our\n * datatype for b can be larger than 1 byte, so a left shift will not\n * automatically eliminate bits that overflow a byte ... by XOR'ing the\n * overflow bit with 1 (the extra one from 0x11b) we zero it out.\n *\n * GF(0x57, 0x02) = xtime(0x57) = 0xae\n * GF(0x57, 0x04) = xtime(0xae) = 0x47\n * GF(0x57, 0x08) = xtime(0x47) = 0x8e\n * GF(0x57, 0x10) = xtime(0x8e) = 0x07\n *\n * GF(0x57, 0x13) = GF(0x57, (0x01 ^ 0x02 ^ 0x10))\n *\n * And by the distributive property (since XOR is addition and GF() is\n * multiplication):\n *\n * = GF(0x57, 0x01) ^ GF(0x57, 0x02) ^ GF(0x57, 0x10)\n * = 0x57 ^ 0xae ^ 0x07\n * = 0xfe.\n */\nfunction initialize() {\n  init = true;\n\n  /* Populate the Rcon table. These are the values given by\n    [x^(i-1),{00},{00},{00}] where x^(i-1) are powers of x (and x = 0x02)\n    in the field of GF(2^8), where i starts at 1.\n\n    rcon[0] = [0x00, 0x00, 0x00, 0x00]\n    rcon[1] = [0x01, 0x00, 0x00, 0x00] 2^(1-1) = 2^0 = 1\n    rcon[2] = [0x02, 0x00, 0x00, 0x00] 2^(2-1) = 2^1 = 2\n    ...\n    rcon[9]  = [0x1B, 0x00, 0x00, 0x00] 2^(9-1)  = 2^8 = 0x1B\n    rcon[10] = [0x36, 0x00, 0x00, 0x00] 2^(10-1) = 2^9 = 0x36\n\n    We only store the first byte because it is the only one used.\n  */\n  rcon = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1B, 0x36];\n\n  // compute xtime table which maps i onto GF(i, 0x02)\n  var xtime = new Array(256);\n  for(var i = 0; i < 128; ++i) {\n    xtime[i] = i << 1;\n    xtime[i + 128] = (i + 128) << 1 ^ 0x11B;\n  }\n\n  // compute all other tables\n  sbox = new Array(256);\n  isbox = new Array(256);\n  mix = new Array(4);\n  imix = new Array(4);\n  for(var i = 0; i < 4; ++i) {\n    mix[i] = new Array(256);\n    imix[i] = new Array(256);\n  }\n  var e = 0, ei = 0, e2, e4, e8, sx, sx2, me, ime;\n  for(var i = 0; i < 256; ++i) {\n    /* We need to generate the SubBytes() sbox and isbox tables so that\n      we can perform byte substitutions. This requires us to traverse\n      all of the elements in GF, find their multiplicative inverses,\n      and apply to each the following affine transformation:\n\n      bi' = bi ^ b(i + 4) mod 8 ^ b(i + 5) mod 8 ^ b(i + 6) mod 8 ^\n            b(i + 7) mod 8 ^ ci\n      for 0 <= i < 8, where bi is the ith bit of the byte, and ci is the\n      ith bit of a byte c with the value {63} or {01100011}.\n\n      It is possible to traverse every possible value in a Galois field\n      using what is referred to as a 'generator'. There are many\n      generators (128 out of 256): 3,5,6,9,11,82 to name a few. To fully\n      traverse GF we iterate 255 times, multiplying by our generator\n      each time.\n\n      On each iteration we can determine the multiplicative inverse for\n      the current element.\n\n      Suppose there is an element in GF 'e'. For a given generator 'g',\n      e = g^x. The multiplicative inverse of e is g^(255 - x). It turns\n      out that if use the inverse of a generator as another generator\n      it will produce all of the corresponding multiplicative inverses\n      at the same time. For this reason, we choose 5 as our inverse\n      generator because it only requires 2 multiplies and 1 add and its\n      inverse, 82, requires relatively few operations as well.\n\n      In order to apply the affine transformation, the multiplicative\n      inverse 'ei' of 'e' can be repeatedly XOR'd (4 times) with a\n      bit-cycling of 'ei'. To do this 'ei' is first stored in 's' and\n      'x'. Then 's' is left shifted and the high bit of 's' is made the\n      low bit. The resulting value is stored in 's'. Then 'x' is XOR'd\n      with 's' and stored in 'x'. On each subsequent iteration the same\n      operation is performed. When 4 iterations are complete, 'x' is\n      XOR'd with 'c' (0x63) and the transformed value is stored in 'x'.\n      For example:\n\n      s = 01000001\n      x = 01000001\n\n      iteration 1: s = 10000010, x ^= s\n      iteration 2: s = 00000101, x ^= s\n      iteration 3: s = 00001010, x ^= s\n      iteration 4: s = 00010100, x ^= s\n      x ^= 0x63\n\n      This can be done with a loop where s = (s << 1) | (s >> 7). However,\n      it can also be done by using a single 16-bit (in this case 32-bit)\n      number 'sx'. Since XOR is an associative operation, we can set 'sx'\n      to 'ei' and then XOR it with 'sx' left-shifted 1,2,3, and 4 times.\n      The most significant bits will flow into the high 8 bit positions\n      and be correctly XOR'd with one another. All that remains will be\n      to cycle the high 8 bits by XOR'ing them all with the lower 8 bits\n      afterwards.\n\n      At the same time we're populating sbox and isbox we can precompute\n      the multiplication we'll need to do to do MixColumns() later.\n    */\n\n    // apply affine transformation\n    sx = ei ^ (ei << 1) ^ (ei << 2) ^ (ei << 3) ^ (ei << 4);\n    sx = (sx >> 8) ^ (sx & 255) ^ 0x63;\n\n    // update tables\n    sbox[e] = sx;\n    isbox[sx] = e;\n\n    /* Mixing columns is done using matrix multiplication. The columns\n      that are to be mixed are each a single word in the current state.\n      The state has Nb columns (4 columns). Therefore each column is a\n      4 byte word. So to mix the columns in a single column 'c' where\n      its rows are r0, r1, r2, and r3, we use the following matrix\n      multiplication:\n\n      [2 3 1 1]*[r0,c]=[r'0,c]\n      [1 2 3 1] [r1,c] [r'1,c]\n      [1 1 2 3] [r2,c] [r'2,c]\n      [3 1 1 2] [r3,c] [r'3,c]\n\n      r0, r1, r2, and r3 are each 1 byte of one of the words in the\n      state (a column). To do matrix multiplication for each mixed\n      column c' we multiply the corresponding row from the left matrix\n      with the corresponding column from the right matrix. In total, we\n      get 4 equations:\n\n      r0,c' = 2*r0,c + 3*r1,c + 1*r2,c + 1*r3,c\n      r1,c' = 1*r0,c + 2*r1,c + 3*r2,c + 1*r3,c\n      r2,c' = 1*r0,c + 1*r1,c + 2*r2,c + 3*r3,c\n      r3,c' = 3*r0,c + 1*r1,c + 1*r2,c + 2*r3,c\n\n      As usual, the multiplication is as previously defined and the\n      addition is XOR. In order to optimize mixing columns we can store\n      the multiplication results in tables. If you think of the whole\n      column as a word (it might help to visualize by mentally rotating\n      the equations above by counterclockwise 90 degrees) then you can\n      see that it would be useful to map the multiplications performed on\n      each byte (r0, r1, r2, r3) onto a word as well. For instance, we\n      could map 2*r0,1*r0,1*r0,3*r0 onto a word by storing 2*r0 in the\n      highest 8 bits and 3*r0 in the lowest 8 bits (with the other two\n      respectively in the middle). This means that a table can be\n      constructed that uses r0 as an index to the word. We can do the\n      same with r1, r2, and r3, creating a total of 4 tables.\n\n      To construct a full c', we can just look up each byte of c in\n      their respective tables and XOR the results together.\n\n      Also, to build each table we only have to calculate the word\n      for 2,1,1,3 for every byte ... which we can do on each iteration\n      of this loop since we will iterate over every byte. After we have\n      calculated 2,1,1,3 we can get the results for the other tables\n      by cycling the byte at the end to the beginning. For instance\n      we can take the result of table 2,1,1,3 and produce table 3,2,1,1\n      by moving the right most byte to the left most position just like\n      how you can imagine the 3 moved out of 2,1,1,3 and to the front\n      to produce 3,2,1,1.\n\n      There is another optimization in that the same multiples of\n      the current element we need in order to advance our generator\n      to the next iteration can be reused in performing the 2,1,1,3\n      calculation. We also calculate the inverse mix column tables,\n      with e,9,d,b being the inverse of 2,1,1,3.\n\n      When we're done, and we need to actually mix columns, the first\n      byte of each state word should be put through mix[0] (2,1,1,3),\n      the second through mix[1] (3,2,1,1) and so forth. Then they should\n      be XOR'd together to produce the fully mixed column.\n    */\n\n    // calculate mix and imix table values\n    sx2 = xtime[sx];\n    e2 = xtime[e];\n    e4 = xtime[e2];\n    e8 = xtime[e4];\n    me =\n      (sx2 << 24) ^  // 2\n      (sx << 16) ^   // 1\n      (sx << 8) ^    // 1\n      (sx ^ sx2);    // 3\n    ime =\n      (e2 ^ e4 ^ e8) << 24 ^  // E (14)\n      (e ^ e8) << 16 ^        // 9\n      (e ^ e4 ^ e8) << 8 ^    // D (13)\n      (e ^ e2 ^ e8);          // B (11)\n    // produce each of the mix tables by rotating the 2,1,1,3 value\n    for(var n = 0; n < 4; ++n) {\n      mix[n][e] = me;\n      imix[n][sx] = ime;\n      // cycle the right most byte to the left most position\n      // ie: 2,1,1,3 becomes 3,2,1,1\n      me = me << 24 | me >>> 8;\n      ime = ime << 24 | ime >>> 8;\n    }\n\n    // get next element and inverse\n    if(e === 0) {\n      // 1 is the inverse of 1\n      e = ei = 1;\n    } else {\n      // e = 2e + 2*2*2*(10e)) = multiply e by 82 (chosen generator)\n      // ei = ei + 2*2*ei = multiply ei by 5 (inverse generator)\n      e = e2 ^ xtime[xtime[xtime[e2 ^ e8]]];\n      ei ^= xtime[xtime[ei]];\n    }\n  }\n}\n\n/**\n * Generates a key schedule using the AES key expansion algorithm.\n *\n * The AES algorithm takes the Cipher Key, K, and performs a Key Expansion\n * routine to generate a key schedule. The Key Expansion generates a total\n * of Nb*(Nr + 1) words: the algorithm requires an initial set of Nb words,\n * and each of the Nr rounds requires Nb words of key data. The resulting\n * key schedule consists of a linear array of 4-byte words, denoted [wi ],\n * with i in the range 0 <= i < Nb(Nr + 1).\n *\n * KeyExpansion(byte key[4*Nk], word w[Nb*(Nr+1)], Nk)\n * AES-128 (Nb=4, Nk=4, Nr=10)\n * AES-192 (Nb=4, Nk=6, Nr=12)\n * AES-256 (Nb=4, Nk=8, Nr=14)\n * Note: Nr=Nk+6.\n *\n * Nb is the number of columns (32-bit words) comprising the State (or\n * number of bytes in a block). For AES, Nb=4.\n *\n * @param key the key to schedule (as an array of 32-bit words).\n * @param decrypt true to modify the key schedule to decrypt, false not to.\n *\n * @return the generated key schedule.\n */\nfunction _expandKey(key, decrypt) {\n  // copy the key's words to initialize the key schedule\n  var w = key.slice(0);\n\n  /* RotWord() will rotate a word, moving the first byte to the last\n    byte's position (shifting the other bytes left).\n\n    We will be getting the value of Rcon at i / Nk. 'i' will iterate\n    from Nk to (Nb * Nr+1). Nk = 4 (4 byte key), Nb = 4 (4 words in\n    a block), Nr = Nk + 6 (10). Therefore 'i' will iterate from\n    4 to 44 (exclusive). Each time we iterate 4 times, i / Nk will\n    increase by 1. We use a counter iNk to keep track of this.\n   */\n\n  // go through the rounds expanding the key\n  var temp, iNk = 1;\n  var Nk = w.length;\n  var Nr1 = Nk + 6 + 1;\n  var end = Nb * Nr1;\n  for(var i = Nk; i < end; ++i) {\n    temp = w[i - 1];\n    if(i % Nk === 0) {\n      // temp = SubWord(RotWord(temp)) ^ Rcon[i / Nk]\n      temp =\n        sbox[temp >>> 16 & 255] << 24 ^\n        sbox[temp >>> 8 & 255] << 16 ^\n        sbox[temp & 255] << 8 ^\n        sbox[temp >>> 24] ^ (rcon[iNk] << 24);\n      iNk++;\n    } else if(Nk > 6 && (i % Nk === 4)) {\n      // temp = SubWord(temp)\n      temp =\n        sbox[temp >>> 24] << 24 ^\n        sbox[temp >>> 16 & 255] << 16 ^\n        sbox[temp >>> 8 & 255] << 8 ^\n        sbox[temp & 255];\n    }\n    w[i] = w[i - Nk] ^ temp;\n  }\n\n  /* When we are updating a cipher block we always use the code path for\n     encryption whether we are decrypting or not (to shorten code and\n     simplify the generation of look up tables). However, because there\n     are differences in the decryption algorithm, other than just swapping\n     in different look up tables, we must transform our key schedule to\n     account for these changes:\n\n     1. The decryption algorithm gets its key rounds in reverse order.\n     2. The decryption algorithm adds the round key before mixing columns\n       instead of afterwards.\n\n     We don't need to modify our key schedule to handle the first case,\n     we can just traverse the key schedule in reverse order when decrypting.\n\n     The second case requires a little work.\n\n     The tables we built for performing rounds will take an input and then\n     perform SubBytes() and MixColumns() or, for the decrypt version,\n     InvSubBytes() and InvMixColumns(). But the decrypt algorithm requires\n     us to AddRoundKey() before InvMixColumns(). This means we'll need to\n     apply some transformations to the round key to inverse-mix its columns\n     so they'll be correct for moving AddRoundKey() to after the state has\n     had its columns inverse-mixed.\n\n     To inverse-mix the columns of the state when we're decrypting we use a\n     lookup table that will apply InvSubBytes() and InvMixColumns() at the\n     same time. However, the round key's bytes are not inverse-substituted\n     in the decryption algorithm. To get around this problem, we can first\n     substitute the bytes in the round key so that when we apply the\n     transformation via the InvSubBytes()+InvMixColumns() table, it will\n     undo our substitution leaving us with the original value that we\n     want -- and then inverse-mix that value.\n\n     This change will correctly alter our key schedule so that we can XOR\n     each round key with our already transformed decryption state. This\n     allows us to use the same code path as the encryption algorithm.\n\n     We make one more change to the decryption key. Since the decryption\n     algorithm runs in reverse from the encryption algorithm, we reverse\n     the order of the round keys to avoid having to iterate over the key\n     schedule backwards when running the encryption algorithm later in\n     decryption mode. In addition to reversing the order of the round keys,\n     we also swap each round key's 2nd and 4th rows. See the comments\n     section where rounds are performed for more details about why this is\n     done. These changes are done inline with the other substitution\n     described above.\n  */\n  if(decrypt) {\n    var tmp;\n    var m0 = imix[0];\n    var m1 = imix[1];\n    var m2 = imix[2];\n    var m3 = imix[3];\n    var wnew = w.slice(0);\n    end = w.length;\n    for(var i = 0, wi = end - Nb; i < end; i += Nb, wi -= Nb) {\n      // do not sub the first or last round key (round keys are Nb\n      // words) as no column mixing is performed before they are added,\n      // but do change the key order\n      if(i === 0 || i === (end - Nb)) {\n        wnew[i] = w[wi];\n        wnew[i + 1] = w[wi + 3];\n        wnew[i + 2] = w[wi + 2];\n        wnew[i + 3] = w[wi + 1];\n      } else {\n        // substitute each round key byte because the inverse-mix\n        // table will inverse-substitute it (effectively cancel the\n        // substitution because round key bytes aren't sub'd in\n        // decryption mode) and swap indexes 3 and 1\n        for(var n = 0; n < Nb; ++n) {\n          tmp = w[wi + n];\n          wnew[i + (3&-n)] =\n            m0[sbox[tmp >>> 24]] ^\n            m1[sbox[tmp >>> 16 & 255]] ^\n            m2[sbox[tmp >>> 8 & 255]] ^\n            m3[sbox[tmp & 255]];\n        }\n      }\n    }\n    w = wnew;\n  }\n\n  return w;\n}\n\n/**\n * Updates a single block (16 bytes) using AES. The update will either\n * encrypt or decrypt the block.\n *\n * @param w the key schedule.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(w, input, output, decrypt) {\n  /*\n  Cipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[0, Nb-1])\n    for round = 1 step 1 to Nr-1\n      SubBytes(state)\n      ShiftRows(state)\n      MixColumns(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n    end for\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    out = state\n  end\n\n  InvCipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    for round = Nr-1 step -1 downto 1\n      InvShiftRows(state)\n      InvSubBytes(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n      InvMixColumns(state)\n    end for\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n    out = state\n  end\n  */\n\n  // Encrypt: AddRoundKey(state, w[0, Nb-1])\n  // Decrypt: AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n  var Nr = w.length / 4 - 1;\n  var m0, m1, m2, m3, sub;\n  if(decrypt) {\n    m0 = imix[0];\n    m1 = imix[1];\n    m2 = imix[2];\n    m3 = imix[3];\n    sub = isbox;\n  } else {\n    m0 = mix[0];\n    m1 = mix[1];\n    m2 = mix[2];\n    m3 = mix[3];\n    sub = sbox;\n  }\n  var a, b, c, d, a2, b2, c2;\n  a = input[0] ^ w[0];\n  b = input[decrypt ? 3 : 1] ^ w[1];\n  c = input[2] ^ w[2];\n  d = input[decrypt ? 1 : 3] ^ w[3];\n  var i = 3;\n\n  /* In order to share code we follow the encryption algorithm when both\n    encrypting and decrypting. To account for the changes required in the\n    decryption algorithm, we use different lookup tables when decrypting\n    and use a modified key schedule to account for the difference in the\n    order of transformations applied when performing rounds. We also get\n    key rounds in reverse order (relative to encryption). */\n  for(var round = 1; round < Nr; ++round) {\n    /* As described above, we'll be using table lookups to perform the\n      column mixing. Each column is stored as a word in the state (the\n      array 'input' has one column as a word at each index). In order to\n      mix a column, we perform these transformations on each row in c,\n      which is 1 byte in each word. The new column for c0 is c'0:\n\n               m0      m1      m2      m3\n      r0,c'0 = 2*r0,c0 + 3*r1,c0 + 1*r2,c0 + 1*r3,c0\n      r1,c'0 = 1*r0,c0 + 2*r1,c0 + 3*r2,c0 + 1*r3,c0\n      r2,c'0 = 1*r0,c0 + 1*r1,c0 + 2*r2,c0 + 3*r3,c0\n      r3,c'0 = 3*r0,c0 + 1*r1,c0 + 1*r2,c0 + 2*r3,c0\n\n      So using mix tables where c0 is a word with r0 being its upper\n      8 bits and r3 being its lower 8 bits:\n\n      m0[c0 >> 24] will yield this word: [2*r0,1*r0,1*r0,3*r0]\n      ...\n      m3[c0 & 255] will yield this word: [1*r3,1*r3,3*r3,2*r3]\n\n      Therefore to mix the columns in each word in the state we\n      do the following (& 255 omitted for brevity):\n      c'0,r0 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r1 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r2 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r3 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n\n      However, before mixing, the algorithm requires us to perform\n      ShiftRows(). The ShiftRows() transformation cyclically shifts the\n      last 3 rows of the state over different offsets. The first row\n      (r = 0) is not shifted.\n\n      s'_r,c = s_r,(c + shift(r, Nb) mod Nb\n      for 0 < r < 4 and 0 <= c < Nb and\n      shift(1, 4) = 1\n      shift(2, 4) = 2\n      shift(3, 4) = 3.\n\n      This causes the first byte in r = 1 to be moved to the end of\n      the row, the first 2 bytes in r = 2 to be moved to the end of\n      the row, the first 3 bytes in r = 3 to be moved to the end of\n      the row:\n\n      r1: [c0 c1 c2 c3] => [c1 c2 c3 c0]\n      r2: [c0 c1 c2 c3]    [c2 c3 c0 c1]\n      r3: [c0 c1 c2 c3]    [c3 c0 c1 c2]\n\n      We can make these substitutions inline with our column mixing to\n      generate an updated set of equations to produce each word in the\n      state (note the columns have changed positions):\n\n      c0 c1 c2 c3 => c0 c1 c2 c3\n      c0 c1 c2 c3    c1 c2 c3 c0  (cycled 1 byte)\n      c0 c1 c2 c3    c2 c3 c0 c1  (cycled 2 bytes)\n      c0 c1 c2 c3    c3 c0 c1 c2  (cycled 3 bytes)\n\n      Therefore:\n\n      c'0 = 2*r0,c0 + 3*r1,c1 + 1*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 2*r1,c1 + 3*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 1*r1,c1 + 2*r2,c2 + 3*r3,c3\n      c'0 = 3*r0,c0 + 1*r1,c1 + 1*r2,c2 + 2*r3,c3\n\n      c'1 = 2*r0,c1 + 3*r1,c2 + 1*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 2*r1,c2 + 3*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 1*r1,c2 + 2*r2,c3 + 3*r3,c0\n      c'1 = 3*r0,c1 + 1*r1,c2 + 1*r2,c3 + 2*r3,c0\n\n      ... and so forth for c'2 and c'3. The important distinction is\n      that the columns are cycling, with c0 being used with the m0\n      map when calculating c0, but c1 being used with the m0 map when\n      calculating c1 ... and so forth.\n\n      When performing the inverse we transform the mirror image and\n      skip the bottom row, instead of the top one, and move upwards:\n\n      c3 c2 c1 c0 => c0 c3 c2 c1  (cycled 3 bytes) *same as encryption\n      c3 c2 c1 c0    c1 c0 c3 c2  (cycled 2 bytes)\n      c3 c2 c1 c0    c2 c1 c0 c3  (cycled 1 byte)  *same as encryption\n      c3 c2 c1 c0    c3 c2 c1 c0\n\n      If you compare the resulting matrices for ShiftRows()+MixColumns()\n      and for InvShiftRows()+InvMixColumns() the 2nd and 4th columns are\n      different (in encrypt mode vs. decrypt mode). So in order to use\n      the same code to handle both encryption and decryption, we will\n      need to do some mapping.\n\n      If in encryption mode we let a=c0, b=c1, c=c2, d=c3, and r<N> be\n      a row number in the state, then the resulting matrix in encryption\n      mode for applying the above transformations would be:\n\n      r1: a b c d\n      r2: b c d a\n      r3: c d a b\n      r4: d a b c\n\n      If we did the same in decryption mode we would get:\n\n      r1: a d c b\n      r2: b a d c\n      r3: c b a d\n      r4: d c b a\n\n      If instead we swap d and b (set b=c3 and d=c1), then we get:\n\n      r1: a b c d\n      r2: d a b c\n      r3: c d a b\n      r4: b c d a\n\n      Now the 1st and 3rd rows are the same as the encryption matrix. All\n      we need to do then to make the mapping exactly the same is to swap\n      the 2nd and 4th rows when in decryption mode. To do this without\n      having to do it on each iteration, we swapped the 2nd and 4th rows\n      in the decryption key schedule. We also have to do the swap above\n      when we first pull in the input and when we set the final output. */\n    a2 =\n      m0[a >>> 24] ^\n      m1[b >>> 16 & 255] ^\n      m2[c >>> 8 & 255] ^\n      m3[d & 255] ^ w[++i];\n    b2 =\n      m0[b >>> 24] ^\n      m1[c >>> 16 & 255] ^\n      m2[d >>> 8 & 255] ^\n      m3[a & 255] ^ w[++i];\n    c2 =\n      m0[c >>> 24] ^\n      m1[d >>> 16 & 255] ^\n      m2[a >>> 8 & 255] ^\n      m3[b & 255] ^ w[++i];\n    d =\n      m0[d >>> 24] ^\n      m1[a >>> 16 & 255] ^\n      m2[b >>> 8 & 255] ^\n      m3[c & 255] ^ w[++i];\n    a = a2;\n    b = b2;\n    c = c2;\n  }\n\n  /*\n    Encrypt:\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n\n    Decrypt:\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n   */\n  // Note: rows are shifted inline\n  output[0] =\n    (sub[a >>> 24] << 24) ^\n    (sub[b >>> 16 & 255] << 16) ^\n    (sub[c >>> 8 & 255] << 8) ^\n    (sub[d & 255]) ^ w[++i];\n  output[decrypt ? 3 : 1] =\n    (sub[b >>> 24] << 24) ^\n    (sub[c >>> 16 & 255] << 16) ^\n    (sub[d >>> 8 & 255] << 8) ^\n    (sub[a & 255]) ^ w[++i];\n  output[2] =\n    (sub[c >>> 24] << 24) ^\n    (sub[d >>> 16 & 255] << 16) ^\n    (sub[a >>> 8 & 255] << 8) ^\n    (sub[b & 255]) ^ w[++i];\n  output[decrypt ? 1 : 3] =\n    (sub[d >>> 24] << 24) ^\n    (sub[a >>> 16 & 255] << 16) ^\n    (sub[b >>> 8 & 255] << 8) ^\n    (sub[c & 255]) ^ w[++i];\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('AES-<mode>', key);\n * forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates a deprecated AES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key and iv may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param options the options to use.\n *          key the symmetric key to use.\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'AES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/aes.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/aesCipherSuites.js":function(module,exports,__webpack_require__){eval("/**\n * A Javascript implementation of AES Cipher Suites for TLS.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2015 Digital Bazaar, Inc.\n *\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./aes */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/aes.js\");\n__webpack_require__(/*! ./tls */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/tls.js\");\n\nvar tls = module.exports = forge.tls;\n\n/**\n * Supported cipher suites.\n */\ntls.CipherSuites['TLS_RSA_WITH_AES_128_CBC_SHA'] = {\n  id: [0x00, 0x2f],\n  name: 'TLS_RSA_WITH_AES_128_CBC_SHA',\n  initSecurityParameters: function(sp) {\n    sp.bulk_cipher_algorithm = tls.BulkCipherAlgorithm.aes;\n    sp.cipher_type = tls.CipherType.block;\n    sp.enc_key_length = 16;\n    sp.block_length = 16;\n    sp.fixed_iv_length = 16;\n    sp.record_iv_length = 16;\n    sp.mac_algorithm = tls.MACAlgorithm.hmac_sha1;\n    sp.mac_length = 20;\n    sp.mac_key_length = 20;\n  },\n  initConnectionState: initConnectionState\n};\ntls.CipherSuites['TLS_RSA_WITH_AES_256_CBC_SHA'] = {\n  id: [0x00, 0x35],\n  name: 'TLS_RSA_WITH_AES_256_CBC_SHA',\n  initSecurityParameters: function(sp) {\n    sp.bulk_cipher_algorithm = tls.BulkCipherAlgorithm.aes;\n    sp.cipher_type = tls.CipherType.block;\n    sp.enc_key_length = 32;\n    sp.block_length = 16;\n    sp.fixed_iv_length = 16;\n    sp.record_iv_length = 16;\n    sp.mac_algorithm = tls.MACAlgorithm.hmac_sha1;\n    sp.mac_length = 20;\n    sp.mac_key_length = 20;\n  },\n  initConnectionState: initConnectionState\n};\n\nfunction initConnectionState(state, c, sp) {\n  var client = (c.entity === forge.tls.ConnectionEnd.client);\n\n  // cipher setup\n  state.read.cipherState = {\n    init: false,\n    cipher: forge.cipher.createDecipher('AES-CBC', client ?\n      sp.keys.server_write_key : sp.keys.client_write_key),\n    iv: client ? sp.keys.server_write_IV : sp.keys.client_write_IV\n  };\n  state.write.cipherState = {\n    init: false,\n    cipher: forge.cipher.createCipher('AES-CBC', client ?\n      sp.keys.client_write_key : sp.keys.server_write_key),\n    iv: client ? sp.keys.client_write_IV : sp.keys.server_write_IV\n  };\n  state.read.cipherFunction = decrypt_aes_cbc_sha1;\n  state.write.cipherFunction = encrypt_aes_cbc_sha1;\n\n  // MAC setup\n  state.read.macLength = state.write.macLength = sp.mac_length;\n  state.read.macFunction = state.write.macFunction = tls.hmac_sha1;\n}\n\n/**\n * Encrypts the TLSCompressed record into a TLSCipherText record using AES\n * in CBC mode.\n *\n * @param record the TLSCompressed record to encrypt.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nfunction encrypt_aes_cbc_sha1(record, s) {\n  var rval = false;\n\n  // append MAC to fragment, update sequence number\n  var mac = s.macFunction(s.macKey, s.sequenceNumber, record);\n  record.fragment.putBytes(mac);\n  s.updateSequenceNumber();\n\n  // TLS 1.1+ use an explicit IV every time to protect against CBC attacks\n  var iv;\n  if(record.version.minor === tls.Versions.TLS_1_0.minor) {\n    // use the pre-generated IV when initializing for TLS 1.0, otherwise use\n    // the residue from the previous encryption\n    iv = s.cipherState.init ? null : s.cipherState.iv;\n  } else {\n    iv = forge.random.getBytesSync(16);\n  }\n\n  s.cipherState.init = true;\n\n  // start cipher\n  var cipher = s.cipherState.cipher;\n  cipher.start({iv: iv});\n\n  // TLS 1.1+ write IV into output\n  if(record.version.minor >= tls.Versions.TLS_1_1.minor) {\n    cipher.output.putBytes(iv);\n  }\n\n  // do encryption (default padding is appropriate)\n  cipher.update(record.fragment);\n  if(cipher.finish(encrypt_aes_cbc_sha1_padding)) {\n    // set record fragment to encrypted output\n    record.fragment = cipher.output;\n    record.length = record.fragment.length();\n    rval = true;\n  }\n\n  return rval;\n}\n\n/**\n * Handles padding for aes_cbc_sha1 in encrypt mode.\n *\n * @param blockSize the block size.\n * @param input the input buffer.\n * @param decrypt true in decrypt mode, false in encrypt mode.\n *\n * @return true on success, false on failure.\n */\nfunction encrypt_aes_cbc_sha1_padding(blockSize, input, decrypt) {\n  /* The encrypted data length (TLSCiphertext.length) is one more than the sum\n   of SecurityParameters.block_length, TLSCompressed.length,\n   SecurityParameters.mac_length, and padding_length.\n\n   The padding may be any length up to 255 bytes long, as long as it results in\n   the TLSCiphertext.length being an integral multiple of the block length.\n   Lengths longer than necessary might be desirable to frustrate attacks on a\n   protocol based on analysis of the lengths of exchanged messages. Each uint8\n   in the padding data vector must be filled with the padding length value.\n\n   The padding length should be such that the total size of the\n   GenericBlockCipher structure is a multiple of the cipher's block length.\n   Legal values range from zero to 255, inclusive. This length specifies the\n   length of the padding field exclusive of the padding_length field itself.\n\n   This is slightly different from PKCS#7 because the padding value is 1\n   less than the actual number of padding bytes if you include the\n   padding_length uint8 itself as a padding byte. */\n  if(!decrypt) {\n    // get the number of padding bytes required to reach the blockSize and\n    // subtract 1 for the padding value (to make room for the padding_length\n    // uint8)\n    var padding = blockSize - (input.length() % blockSize);\n    input.fillWithByte(padding - 1, padding);\n  }\n  return true;\n}\n\n/**\n * Handles padding for aes_cbc_sha1 in decrypt mode.\n *\n * @param blockSize the block size.\n * @param output the output buffer.\n * @param decrypt true in decrypt mode, false in encrypt mode.\n *\n * @return true on success, false on failure.\n */\nfunction decrypt_aes_cbc_sha1_padding(blockSize, output, decrypt) {\n  var rval = true;\n  if(decrypt) {\n    /* The last byte in the output specifies the number of padding bytes not\n      including itself. Each of the padding bytes has the same value as that\n      last byte (known as the padding_length). Here we check all padding\n      bytes to ensure they have the value of padding_length even if one of\n      them is bad in order to ward-off timing attacks. */\n    var len = output.length();\n    var paddingLength = output.last();\n    for(var i = len - 1 - paddingLength; i < len - 1; ++i) {\n      rval = rval && (output.at(i) == paddingLength);\n    }\n    if(rval) {\n      // trim off padding bytes and last padding length byte\n      output.truncate(paddingLength + 1);\n    }\n  }\n  return rval;\n}\n\n/**\n * Decrypts a TLSCipherText record into a TLSCompressed record using\n * AES in CBC mode.\n *\n * @param record the TLSCipherText record to decrypt.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nfunction decrypt_aes_cbc_sha1(record, s) {\n  var rval = false;\n\n  var iv;\n  if(record.version.minor === tls.Versions.TLS_1_0.minor) {\n    // use pre-generated IV when initializing for TLS 1.0, otherwise use the\n    // residue from the previous decryption\n    iv = s.cipherState.init ? null : s.cipherState.iv;\n  } else {\n    // TLS 1.1+ use an explicit IV every time to protect against CBC attacks\n    // that is appended to the record fragment\n    iv = record.fragment.getBytes(16);\n  }\n\n  s.cipherState.init = true;\n\n  // start cipher\n  var cipher = s.cipherState.cipher;\n  cipher.start({iv: iv});\n\n  // do decryption\n  cipher.update(record.fragment);\n  rval = cipher.finish(decrypt_aes_cbc_sha1_padding);\n\n  // even if decryption fails, keep going to minimize timing attacks\n\n  // decrypted data:\n  // first (len - 20) bytes = application data\n  // last 20 bytes          = MAC\n  var macLen = s.macLength;\n\n  // create a random MAC to check against should the mac length check fail\n  // Note: do this regardless of the failure to keep timing consistent\n  var mac = forge.random.getBytesSync(macLen);\n\n  // get fragment and mac\n  var len = cipher.output.length();\n  if(len >= macLen) {\n    record.fragment = cipher.output.getBytes(len - macLen);\n    mac = cipher.output.getBytes(macLen);\n  } else {\n    // bad data, but get bytes anyway to try to keep timing consistent\n    record.fragment = cipher.output.getBytes();\n  }\n  record.fragment = forge.util.createBuffer(record.fragment);\n  record.length = record.fragment.length();\n\n  // see if data integrity checks out, update sequence number\n  var mac2 = s.macFunction(s.macKey, s.sequenceNumber, record);\n  s.updateSequenceNumber();\n  rval = compareMacs(s.macKey, mac, mac2) && rval;\n  return rval;\n}\n\n/**\n * Safely compare two MACs. This function will compare two MACs in a way\n * that protects against timing attacks.\n *\n * TODO: Expose elsewhere as a utility API.\n *\n * See: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n *\n * @param key the MAC key to use.\n * @param mac1 as a binary-encoded string of bytes.\n * @param mac2 as a binary-encoded string of bytes.\n *\n * @return true if the MACs are the same, false if not.\n */\nfunction compareMacs(key, mac1, mac2) {\n  var hmac = forge.hmac.create();\n\n  hmac.start('SHA1', key);\n  hmac.update(mac1);\n  mac1 = hmac.digest().getBytes();\n\n  hmac.start(null, null);\n  hmac.update(mac2);\n  mac2 = hmac.digest().getBytes();\n\n  return mac1 === mac2;\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/aesCipherSuites.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/asn1.js":function(module,exports,__webpack_require__){eval("/**\n * Javascript implementation of Abstract Syntax Notation Number One.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n *\n * An API for storing data using the Abstract Syntax Notation Number One\n * format using DER (Distinguished Encoding Rules) encoding. This encoding is\n * commonly used to store data for PKI, i.e. X.509 Certificates, and this\n * implementation exists for that purpose.\n *\n * Abstract Syntax Notation Number One (ASN.1) is used to define the abstract\n * syntax of information without restricting the way the information is encoded\n * for transmission. It provides a standard that allows for open systems\n * communication. ASN.1 defines the syntax of information data and a number of\n * simple data types as well as a notation for describing them and specifying\n * values for them.\n *\n * The RSA algorithm creates public and private keys that are often stored in\n * X.509 or PKCS#X formats -- which use ASN.1 (encoded in DER format). This\n * class provides the most basic functionality required to store and load DSA\n * keys that are encoded according to ASN.1.\n *\n * The most common binary encodings for ASN.1 are BER (Basic Encoding Rules)\n * and DER (Distinguished Encoding Rules). DER is just a subset of BER that\n * has stricter requirements for how data must be encoded.\n *\n * Each ASN.1 structure has a tag (a byte identifying the ASN.1 structure type)\n * and a byte array for the value of this ASN1 structure which may be data or a\n * list of ASN.1 structures.\n *\n * Each ASN.1 structure using BER is (Tag-Length-Value):\n *\n * | byte 0 | bytes X | bytes Y |\n * |--------|---------|----------\n * |  tag   | length  |  value  |\n *\n * ASN.1 allows for tags to be of \"High-tag-number form\" which allows a tag to\n * be two or more octets, but that is not supported by this class. A tag is\n * only 1 byte. Bits 1-5 give the tag number (ie the data type within a\n * particular 'class'), 6 indicates whether or not the ASN.1 value is\n * constructed from other ASN.1 values, and bits 7 and 8 give the 'class'. If\n * bits 7 and 8 are both zero, the class is UNIVERSAL. If only bit 7 is set,\n * then the class is APPLICATION. If only bit 8 is set, then the class is\n * CONTEXT_SPECIFIC. If both bits 7 and 8 are set, then the class is PRIVATE.\n * The tag numbers for the data types for the class UNIVERSAL are listed below:\n *\n * UNIVERSAL 0 Reserved for use by the encoding rules\n * UNIVERSAL 1 Boolean type\n * UNIVERSAL 2 Integer type\n * UNIVERSAL 3 Bitstring type\n * UNIVERSAL 4 Octetstring type\n * UNIVERSAL 5 Null type\n * UNIVERSAL 6 Object identifier type\n * UNIVERSAL 7 Object descriptor type\n * UNIVERSAL 8 External type and Instance-of type\n * UNIVERSAL 9 Real type\n * UNIVERSAL 10 Enumerated type\n * UNIVERSAL 11 Embedded-pdv type\n * UNIVERSAL 12 UTF8String type\n * UNIVERSAL 13 Relative object identifier type\n * UNIVERSAL 14-15 Reserved for future editions\n * UNIVERSAL 16 Sequence and Sequence-of types\n * UNIVERSAL 17 Set and Set-of types\n * UNIVERSAL 18-22, 25-30 Character string types\n * UNIVERSAL 23-24 Time types\n *\n * The length of an ASN.1 structure is specified after the tag identifier.\n * There is a definite form and an indefinite form. The indefinite form may\n * be used if the encoding is constructed and not all immediately available.\n * The indefinite form is encoded using a length byte with only the 8th bit\n * set. The end of the constructed object is marked using end-of-contents\n * octets (two zero bytes).\n *\n * The definite form looks like this:\n *\n * The length may take up 1 or more bytes, it depends on the length of the\n * value of the ASN.1 structure. DER encoding requires that if the ASN.1\n * structure has a value that has a length greater than 127, more than 1 byte\n * will be used to store its length, otherwise just one byte will be used.\n * This is strict.\n *\n * In the case that the length of the ASN.1 value is less than 127, 1 octet\n * (byte) is used to store the \"short form\" length. The 8th bit has a value of\n * 0 indicating the length is \"short form\" and not \"long form\" and bits 7-1\n * give the length of the data. (The 8th bit is the left-most, most significant\n * bit: also known as big endian or network format).\n *\n * In the case that the length of the ASN.1 value is greater than 127, 2 to\n * 127 octets (bytes) are used to store the \"long form\" length. The first\n * byte's 8th bit is set to 1 to indicate the length is \"long form.\" Bits 7-1\n * give the number of additional octets. All following octets are in base 256\n * with the most significant digit first (typical big-endian binary unsigned\n * integer storage). So, for instance, if the length of a value was 257, the\n * first byte would be set to:\n *\n * 10000010 = 130 = 0x82.\n *\n * This indicates there are 2 octets (base 256) for the length. The second and\n * third bytes (the octets just mentioned) would store the length in base 256:\n *\n * octet 2: 00000001 = 1 * 256^1 = 256\n * octet 3: 00000001 = 1 * 256^0 = 1\n * total = 257\n *\n * The algorithm for converting a js integer value of 257 to base-256 is:\n *\n * var value = 257;\n * var bytes = [];\n * bytes[0] = (value >>> 8) & 0xFF; // most significant byte first\n * bytes[1] = value & 0xFF;        // least significant byte last\n *\n * On the ASN.1 UNIVERSAL Object Identifier (OID) type:\n *\n * An OID can be written like: \"value1.value2.value3...valueN\"\n *\n * The DER encoding rules:\n *\n * The first byte has the value 40 * value1 + value2.\n * The following bytes, if any, encode the remaining values. Each value is\n * encoded in base 128, most significant digit first (big endian), with as\n * few digits as possible, and the most significant bit of each byte set\n * to 1 except the last in each value's encoding. For example: Given the\n * OID \"1.2.840.113549\", its DER encoding is (remember each byte except the\n * last one in each encoding is OR'd with 0x80):\n *\n * byte 1: 40 * 1 + 2 = 42 = 0x2A.\n * bytes 2-3: 128 * 6 + 72 = 840 = 6 72 = 6 72 = 0x0648 = 0x8648\n * bytes 4-6: 16384 * 6 + 128 * 119 + 13 = 6 119 13 = 0x06770D = 0x86F70D\n *\n * The final value is: 0x2A864886F70D.\n * The full OID (including ASN.1 tag and length of 6 bytes) is:\n * 0x06062A864886F70D\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n__webpack_require__(/*! ./oids */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/oids.js\");\n\n/* ASN.1 API */\nvar asn1 = module.exports = forge.asn1 = forge.asn1 || {};\n\n/**\n * ASN.1 classes.\n */\nasn1.Class = {\n  UNIVERSAL:        0x00,\n  APPLICATION:      0x40,\n  CONTEXT_SPECIFIC: 0x80,\n  PRIVATE:          0xC0\n};\n\n/**\n * ASN.1 types. Not all types are supported by this implementation, only\n * those necessary to implement a simple PKI are implemented.\n */\nasn1.Type = {\n  NONE:             0,\n  BOOLEAN:          1,\n  INTEGER:          2,\n  BITSTRING:        3,\n  OCTETSTRING:      4,\n  NULL:             5,\n  OID:              6,\n  ODESC:            7,\n  EXTERNAL:         8,\n  REAL:             9,\n  ENUMERATED:      10,\n  EMBEDDED:        11,\n  UTF8:            12,\n  ROID:            13,\n  SEQUENCE:        16,\n  SET:             17,\n  PRINTABLESTRING: 19,\n  IA5STRING:       22,\n  UTCTIME:         23,\n  GENERALIZEDTIME: 24,\n  BMPSTRING:       30\n};\n\n/**\n * Creates a new asn1 object.\n *\n * @param tagClass the tag class for the object.\n * @param type the data type (tag number) for the object.\n * @param constructed true if the asn1 object is in constructed form.\n * @param value the value for the object, if it is not constructed.\n * @param [options] the options to use:\n *          [bitStringContents] the plain BIT STRING content including padding\n *            byte.\n *\n * @return the asn1 object.\n */\nasn1.create = function(tagClass, type, constructed, value, options) {\n  /* An asn1 object has a tagClass, a type, a constructed flag, and a\n    value. The value's type depends on the constructed flag. If\n    constructed, it will contain a list of other asn1 objects. If not,\n    it will contain the ASN.1 value as an array of bytes formatted\n    according to the ASN.1 data type. */\n\n  // remove undefined values\n  if(forge.util.isArray(value)) {\n    var tmp = [];\n    for(var i = 0; i < value.length; ++i) {\n      if(value[i] !== undefined) {\n        tmp.push(value[i]);\n      }\n    }\n    value = tmp;\n  }\n\n  var obj = {\n    tagClass: tagClass,\n    type: type,\n    constructed: constructed,\n    composed: constructed || forge.util.isArray(value),\n    value: value\n  };\n  if(options && 'bitStringContents' in options) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    obj.bitStringContents = options.bitStringContents;\n    // TODO: add readonly flag to avoid this overhead\n    // save copy to detect changes\n    obj.original = asn1.copy(obj);\n  }\n  return obj;\n};\n\n/**\n * Copies an asn1 object.\n *\n * @param obj the asn1 object.\n * @param [options] copy options:\n *          [excludeBitStringContents] true to not copy bitStringContents\n *\n * @return the a copy of the asn1 object.\n */\nasn1.copy = function(obj, options) {\n  var copy;\n\n  if(forge.util.isArray(obj)) {\n    copy = [];\n    for(var i = 0; i < obj.length; ++i) {\n      copy.push(asn1.copy(obj[i], options));\n    }\n    return copy;\n  }\n\n  if(typeof obj === 'string') {\n    // TODO: copy byte buffer if it's a buffer not a string\n    return obj;\n  }\n\n  copy = {\n    tagClass: obj.tagClass,\n    type: obj.type,\n    constructed: obj.constructed,\n    composed: obj.composed,\n    value: asn1.copy(obj.value, options)\n  };\n  if(options && !options.excludeBitStringContents) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    copy.bitStringContents = obj.bitStringContents;\n  }\n  return copy;\n};\n\n/**\n * Compares asn1 objects for equality.\n *\n * Note this function does not run in constant time.\n *\n * @param obj1 the first asn1 object.\n * @param obj2 the second asn1 object.\n * @param [options] compare options:\n *          [includeBitStringContents] true to compare bitStringContents\n *\n * @return true if the asn1 objects are equal.\n */\nasn1.equals = function(obj1, obj2, options) {\n  if(forge.util.isArray(obj1)) {\n    if(!forge.util.isArray(obj2)) {\n      return false;\n    }\n    if(obj1.length !== obj2.length) {\n      return false;\n    }\n    for(var i = 0; i < obj1.length; ++i) {\n      if(!asn1.equals(obj1[i], obj2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if(typeof obj1 !== typeof obj2) {\n    return false;\n  }\n\n  if(typeof obj1 === 'string') {\n    return obj1 === obj2;\n  }\n\n  var equal = obj1.tagClass === obj2.tagClass &&\n    obj1.type === obj2.type &&\n    obj1.constructed === obj2.constructed &&\n    obj1.composed === obj2.composed &&\n    asn1.equals(obj1.value, obj2.value);\n  if(options && options.includeBitStringContents) {\n    equal = equal && (obj1.bitStringContents === obj2.bitStringContents);\n  }\n\n  return equal;\n};\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param b the BER-encoded ASN.1 byte buffer, starting with the first\n *          length byte.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nasn1.getBerValueLength = function(b) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  var b2 = b.getByte();\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    length = b.getInt((b2 & 0x7F) << 3);\n  }\n  return length;\n};\n\n/**\n * Check if the byte buffer has enough bytes. Throws an Error if not.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n * @param n the number of bytes the buffer must have.\n */\nfunction _checkBufferLength(bytes, remaining, n) {\n  if(n > remaining) {\n    var error = new Error('Too few bytes to parse DER.');\n    error.available = bytes.length();\n    error.remaining = remaining;\n    error.requested = n;\n    throw error;\n  }\n}\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nvar _getValueLength = function(bytes, remaining) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  // fromDer already checked that this byte exists\n  var b2 = bytes.getByte();\n  remaining--;\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    var longFormBytes = b2 & 0x7F;\n    _checkBufferLength(bytes, remaining, longFormBytes);\n    length = bytes.getInt(longFormBytes << 3);\n  }\n  // FIXME: this will only happen for 32 bit getInt with high bit set\n  if(length < 0) {\n    throw new Error('Negative length: ' + length);\n  }\n  return length;\n};\n\n/**\n * Parses an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param [strict] true to be strict when checking value lengths, false to\n *          allow truncated values (default: true).\n * @param [options] object with options or boolean strict flag\n *          [strict] true to be strict when checking value lengths, false to\n *            allow truncated values (default: true).\n *          [decodeBitStrings] true to attempt to decode the content of\n *            BIT STRINGs (not OCTET STRINGs) using strict mode. Note that\n *            without schema support to understand the data context this can\n *            erroneously decode values that happen to be valid ASN.1. This\n *            flag will be deprecated or removed as soon as schema support is\n *            available. (default: true)\n *\n * @return the parsed asn1 object.\n */\nasn1.fromDer = function(bytes, options) {\n  if(options === undefined) {\n    options = {\n      strict: true,\n      decodeBitStrings: true\n    };\n  }\n  if(typeof options === 'boolean') {\n    options = {\n      strict: options,\n      decodeBitStrings: true\n    };\n  }\n  if(!('strict' in options)) {\n    options.strict = true;\n  }\n  if(!('decodeBitStrings' in options)) {\n    options.decodeBitStrings = true;\n  }\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  return _fromDer(bytes, bytes.length(), 0, options);\n};\n\n/**\n * Internal function to parse an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the number of bytes remaining for this chunk.\n * @param depth the current parsing depth.\n * @param options object with same options as fromDer().\n *\n * @return the parsed asn1 object.\n */\nfunction _fromDer(bytes, remaining, depth, options) {\n  // temporary storage for consumption calculations\n  var start;\n\n  // minimum length for ASN.1 DER structure is 2\n  _checkBufferLength(bytes, remaining, 2);\n\n  // get the first byte\n  var b1 = bytes.getByte();\n  // consumed one byte\n  remaining--;\n\n  // get the tag class\n  var tagClass = (b1 & 0xC0);\n\n  // get the type (bits 1-5)\n  var type = b1 & 0x1F;\n\n  // get the variable value length and adjust remaining bytes\n  start = bytes.length();\n  var length = _getValueLength(bytes, remaining);\n  remaining -= start - bytes.length();\n\n  // ensure there are enough bytes to get the value\n  if(length !== undefined && length > remaining) {\n    if(options.strict) {\n      var error = new Error('Too few bytes to read ASN.1 value.');\n      error.available = bytes.length();\n      error.remaining = remaining;\n      error.requested = length;\n      throw error;\n    }\n    // Note: be lenient with truncated values and use remaining state bytes\n    length = remaining;\n  }\n\n  // value storage\n  var value;\n  // possible BIT STRING contents storage\n  var bitStringContents;\n\n  // constructed flag is bit 6 (32 = 0x20) of the first byte\n  var constructed = ((b1 & 0x20) === 0x20);\n  if(constructed) {\n    // parse child asn1 objects from the value\n    value = [];\n    if(length === undefined) {\n      // asn1 object of indefinite length, read until end tag\n      for(;;) {\n        _checkBufferLength(bytes, remaining, 2);\n        if(bytes.bytes(2) === String.fromCharCode(0, 0)) {\n          bytes.getBytes(2);\n          remaining -= 2;\n          break;\n        }\n        start = bytes.length();\n        value.push(_fromDer(bytes, remaining, depth + 1, options));\n        remaining -= start - bytes.length();\n      }\n    } else {\n      // parsing asn1 object of definite length\n      while(length > 0) {\n        start = bytes.length();\n        value.push(_fromDer(bytes, length, depth + 1, options));\n        remaining -= start - bytes.length();\n        length -= start - bytes.length();\n      }\n    }\n  }\n\n  // if a BIT STRING, save the contents including padding\n  if(value === undefined && tagClass === asn1.Class.UNIVERSAL &&\n    type === asn1.Type.BITSTRING) {\n    bitStringContents = bytes.bytes(length);\n  }\n\n  // determine if a non-constructed value should be decoded as a composed\n  // value that contains other ASN.1 objects. BIT STRINGs (and OCTET STRINGs)\n  // can be used this way.\n  if(value === undefined && options.decodeBitStrings &&\n    tagClass === asn1.Class.UNIVERSAL &&\n    // FIXME: OCTET STRINGs not yet supported here\n    // .. other parts of forge expect to decode OCTET STRINGs manually\n    (type === asn1.Type.BITSTRING /*|| type === asn1.Type.OCTETSTRING*/) &&\n    length > 1) {\n    // save read position\n    var savedRead = bytes.read;\n    var savedRemaining = remaining;\n    var unused = 0;\n    if(type === asn1.Type.BITSTRING) {\n      /* The first octet gives the number of bits by which the length of the\n        bit string is less than the next multiple of eight (this is called\n        the \"number of unused bits\").\n\n        The second and following octets give the value of the bit string\n        converted to an octet string. */\n      _checkBufferLength(bytes, remaining, 1);\n      unused = bytes.getByte();\n      remaining--;\n    }\n    // if all bits are used, maybe the BIT/OCTET STRING holds ASN.1 objs\n    if(unused === 0) {\n      try {\n        // attempt to parse child asn1 object from the value\n        // (stored in array to signal composed value)\n        start = bytes.length();\n        var subOptions = {\n          // enforce strict mode to avoid parsing ASN.1 from plain data\n          verbose: options.verbose,\n          strict: true,\n          decodeBitStrings: true\n        };\n        var composed = _fromDer(bytes, remaining, depth + 1, subOptions);\n        var used = start - bytes.length();\n        remaining -= used;\n        if(type == asn1.Type.BITSTRING) {\n          used++;\n        }\n\n        // if the data all decoded and the class indicates UNIVERSAL or\n        // CONTEXT_SPECIFIC then assume we've got an encapsulated ASN.1 object\n        var tc = composed.tagClass;\n        if(used === length &&\n          (tc === asn1.Class.UNIVERSAL || tc === asn1.Class.CONTEXT_SPECIFIC)) {\n          value = [composed];\n        }\n      } catch(ex) {\n      }\n    }\n    if(value === undefined) {\n      // restore read position\n      bytes.read = savedRead;\n      remaining = savedRemaining;\n    }\n  }\n\n  if(value === undefined) {\n    // asn1 not constructed or composed, get raw value\n    // TODO: do DER to OID conversion and vice-versa in .toDer?\n\n    if(length === undefined) {\n      if(options.strict) {\n        throw new Error('Non-constructed ASN.1 object of indefinite length.');\n      }\n      // be lenient and use remaining state bytes\n      length = remaining;\n    }\n\n    if(type === asn1.Type.BMPSTRING) {\n      value = '';\n      for(; length > 0; length -= 2) {\n        _checkBufferLength(bytes, remaining, 2);\n        value += String.fromCharCode(bytes.getInt16());\n        remaining -= 2;\n      }\n    } else {\n      value = bytes.getBytes(length);\n    }\n  }\n\n  // add BIT STRING contents if available\n  var asn1Options = bitStringContents === undefined ? null : {\n    bitStringContents: bitStringContents\n  };\n\n  // create and return asn1 object\n  return asn1.create(tagClass, type, constructed, value, asn1Options);\n}\n\n/**\n * Converts the given asn1 object to a buffer of bytes in DER format.\n *\n * @param asn1 the asn1 object to convert to bytes.\n *\n * @return the buffer of bytes.\n */\nasn1.toDer = function(obj) {\n  var bytes = forge.util.createBuffer();\n\n  // build the first byte\n  var b1 = obj.tagClass | obj.type;\n\n  // for storing the ASN.1 value\n  var value = forge.util.createBuffer();\n\n  // use BIT STRING contents if available and data not changed\n  var useBitStringContents = false;\n  if('bitStringContents' in obj) {\n    useBitStringContents = true;\n    if(obj.original) {\n      useBitStringContents = asn1.equals(obj, obj.original);\n    }\n  }\n\n  if(useBitStringContents) {\n    value.putBytes(obj.bitStringContents);\n  } else if(obj.composed) {\n    // if composed, use each child asn1 object's DER bytes as value\n    // turn on 6th bit (0x20 = 32) to indicate asn1 is constructed\n    // from other asn1 objects\n    if(obj.constructed) {\n      b1 |= 0x20;\n    } else {\n      // type is a bit string, add unused bits of 0x00\n      value.putByte(0x00);\n    }\n\n    // add all of the child DER bytes together\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        value.putBuffer(asn1.toDer(obj.value[i]));\n      }\n    }\n  } else {\n    // use asn1.value directly\n    if(obj.type === asn1.Type.BMPSTRING) {\n      for(var i = 0; i < obj.value.length; ++i) {\n        value.putInt16(obj.value.charCodeAt(i));\n      }\n    } else {\n      // ensure integer is minimally-encoded\n      // TODO: should all leading bytes be stripped vs just one?\n      // .. ex '00 00 01' => '01'?\n      if(obj.type === asn1.Type.INTEGER &&\n        obj.value.length > 1 &&\n        // leading 0x00 for positive integer\n        ((obj.value.charCodeAt(0) === 0 &&\n        (obj.value.charCodeAt(1) & 0x80) === 0) ||\n        // leading 0xFF for negative integer\n        (obj.value.charCodeAt(0) === 0xFF &&\n        (obj.value.charCodeAt(1) & 0x80) === 0x80))) {\n        value.putBytes(obj.value.substr(1));\n      } else {\n        value.putBytes(obj.value);\n      }\n    }\n  }\n\n  // add tag byte\n  bytes.putByte(b1);\n\n  // use \"short form\" encoding\n  if(value.length() <= 127) {\n    // one byte describes the length\n    // bit 8 = 0 and bits 7-1 = length\n    bytes.putByte(value.length() & 0x7F);\n  } else {\n    // use \"long form\" encoding\n    // 2 to 127 bytes describe the length\n    // first byte: bit 8 = 1 and bits 7-1 = # of additional bytes\n    // other bytes: length in base 256, big-endian\n    var len = value.length();\n    var lenBytes = '';\n    do {\n      lenBytes += String.fromCharCode(len & 0xFF);\n      len = len >>> 8;\n    } while(len > 0);\n\n    // set first byte to # bytes used to store the length and turn on\n    // bit 8 to indicate long-form length is used\n    bytes.putByte(lenBytes.length | 0x80);\n\n    // concatenate length bytes in reverse since they were generated\n    // little endian and we need big endian\n    for(var i = lenBytes.length - 1; i >= 0; --i) {\n      bytes.putByte(lenBytes.charCodeAt(i));\n    }\n  }\n\n  // concatenate value bytes\n  bytes.putBuffer(value);\n  return bytes;\n};\n\n/**\n * Converts an OID dot-separated string to a byte buffer. The byte buffer\n * contains only the DER-encoded value, not any tag or length bytes.\n *\n * @param oid the OID dot-separated string.\n *\n * @return the byte buffer.\n */\nasn1.oidToDer = function(oid) {\n  // split OID into individual values\n  var values = oid.split('.');\n  var bytes = forge.util.createBuffer();\n\n  // first byte is 40 * value1 + value2\n  bytes.putByte(40 * parseInt(values[0], 10) + parseInt(values[1], 10));\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var last, valueBytes, value, b;\n  for(var i = 2; i < values.length; ++i) {\n    // produce value bytes in reverse because we don't know how many\n    // bytes it will take to store the value\n    last = true;\n    valueBytes = [];\n    value = parseInt(values[i], 10);\n    do {\n      b = value & 0x7F;\n      value = value >>> 7;\n      // if value is not last, then turn on 8th bit\n      if(!last) {\n        b |= 0x80;\n      }\n      valueBytes.push(b);\n      last = false;\n    } while(value > 0);\n\n    // add value bytes in reverse (needs to be in big endian)\n    for(var n = valueBytes.length - 1; n >= 0; --n) {\n      bytes.putByte(valueBytes[n]);\n    }\n  }\n\n  return bytes;\n};\n\n/**\n * Converts a DER-encoded byte buffer to an OID dot-separated string. The\n * byte buffer should contain only the DER-encoded value, not any tag or\n * length bytes.\n *\n * @param bytes the byte buffer.\n *\n * @return the OID dot-separated string.\n */\nasn1.derToOid = function(bytes) {\n  var oid;\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  // first byte is 40 * value1 + value2\n  var b = bytes.getByte();\n  oid = Math.floor(b / 40) + '.' + (b % 40);\n\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var value = 0;\n  while(bytes.length() > 0) {\n    b = bytes.getByte();\n    value = value << 7;\n    // not the last byte for the value\n    if(b & 0x80) {\n      value += b & 0x7F;\n    } else {\n      // last byte\n      oid += '.' + (value + b);\n      value = 0;\n    }\n  }\n\n  return oid;\n};\n\n/**\n * Converts a UTCTime value to a date.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Parsing that structure hasn't been implemented yet.\n *\n * @param utc the UTCTime value to convert.\n *\n * @return the date.\n */\nasn1.utcTimeToDate = function(utc) {\n  /* The following formats can be used:\n\n    YYMMDDhhmmZ\n    YYMMDDhhmm+hh'mm'\n    YYMMDDhhmm-hh'mm'\n    YYMMDDhhmmssZ\n    YYMMDDhhmmss+hh'mm'\n    YYMMDDhhmmss-hh'mm'\n\n    Where:\n\n    YY is the least significant two digits of the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  // if YY >= 50 use 19xx, if YY < 50 use 20xx\n  var year = parseInt(utc.substr(0, 2), 10);\n  year = (year >= 50) ? 1900 + year : 2000 + year;\n  var MM = parseInt(utc.substr(2, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(utc.substr(4, 2), 10);\n  var hh = parseInt(utc.substr(6, 2), 10);\n  var mm = parseInt(utc.substr(8, 2), 10);\n  var ss = 0;\n\n  // not just YYMMDDhhmmZ\n  if(utc.length > 11) {\n    // get character after minutes\n    var c = utc.charAt(10);\n    var end = 10;\n\n    // see if seconds are present\n    if(c !== '+' && c !== '-') {\n      // get seconds\n      ss = parseInt(utc.substr(10, 2), 10);\n      end += 2;\n    }\n  }\n\n  // update date\n  date.setUTCFullYear(year, MM, DD);\n  date.setUTCHours(hh, mm, ss, 0);\n\n  if(end) {\n    // get +/- after end of time\n    c = utc.charAt(end);\n    if(c === '+' || c === '-') {\n      // get hours+minutes offset\n      var hhoffset = parseInt(utc.substr(end + 1, 2), 10);\n      var mmoffset = parseInt(utc.substr(end + 4, 2), 10);\n\n      // calculate offset in milliseconds\n      var offset = hhoffset * 60 + mmoffset;\n      offset *= 60000;\n\n      // apply offset\n      if(c === '+') {\n        date.setTime(+date - offset);\n      } else {\n        date.setTime(+date + offset);\n      }\n    }\n  }\n\n  return date;\n};\n\n/**\n * Converts a GeneralizedTime value to a date.\n *\n * @param gentime the GeneralizedTime value to convert.\n *\n * @return the date.\n */\nasn1.generalizedTimeToDate = function(gentime) {\n  /* The following formats can be used:\n\n    YYYYMMDDHHMMSS\n    YYYYMMDDHHMMSS.fff\n    YYYYMMDDHHMMSSZ\n    YYYYMMDDHHMMSS.fffZ\n    YYYYMMDDHHMMSS+hh'mm'\n    YYYYMMDDHHMMSS.fff+hh'mm'\n    YYYYMMDDHHMMSS-hh'mm'\n    YYYYMMDDHHMMSS.fff-hh'mm'\n\n    Where:\n\n    YYYY is the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    .fff is the second fraction, accurate to three decimal places\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  var YYYY = parseInt(gentime.substr(0, 4), 10);\n  var MM = parseInt(gentime.substr(4, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(gentime.substr(6, 2), 10);\n  var hh = parseInt(gentime.substr(8, 2), 10);\n  var mm = parseInt(gentime.substr(10, 2), 10);\n  var ss = parseInt(gentime.substr(12, 2), 10);\n  var fff = 0;\n  var offset = 0;\n  var isUTC = false;\n\n  if(gentime.charAt(gentime.length - 1) === 'Z') {\n    isUTC = true;\n  }\n\n  var end = gentime.length - 5, c = gentime.charAt(end);\n  if(c === '+' || c === '-') {\n    // get hours+minutes offset\n    var hhoffset = parseInt(gentime.substr(end + 1, 2), 10);\n    var mmoffset = parseInt(gentime.substr(end + 4, 2), 10);\n\n    // calculate offset in milliseconds\n    offset = hhoffset * 60 + mmoffset;\n    offset *= 60000;\n\n    // apply offset\n    if(c === '+') {\n      offset *= -1;\n    }\n\n    isUTC = true;\n  }\n\n  // check for second fraction\n  if(gentime.charAt(14) === '.') {\n    fff = parseFloat(gentime.substr(14), 10) * 1000;\n  }\n\n  if(isUTC) {\n    date.setUTCFullYear(YYYY, MM, DD);\n    date.setUTCHours(hh, mm, ss, fff);\n\n    // apply offset\n    date.setTime(+date + offset);\n  } else {\n    date.setFullYear(YYYY, MM, DD);\n    date.setHours(hh, mm, ss, fff);\n  }\n\n  return date;\n};\n\n/**\n * Converts a date to a UTCTime value.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Converting to a GeneralizedTime hasn't been\n * implemented yet.\n *\n * @param date the date to convert.\n *\n * @return the UTCTime value.\n */\nasn1.dateToUtcTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYMMDDhhmmssZ\n  var format = [];\n  format.push(('' + date.getUTCFullYear()).substr(2));\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a date to a GeneralizedTime value.\n *\n * @param date the date to convert.\n *\n * @return the GeneralizedTime value as a string.\n */\nasn1.dateToGeneralizedTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYYYMMDDHHMMSSZ\n  var format = [];\n  format.push('' + date.getUTCFullYear());\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a javascript integer to a DER-encoded byte buffer to be used\n * as the value for an INTEGER type.\n *\n * @param x the integer.\n *\n * @return the byte buffer.\n */\nasn1.integerToDer = function(x) {\n  var rval = forge.util.createBuffer();\n  if(x >= -0x80 && x < 0x80) {\n    return rval.putSignedInt(x, 8);\n  }\n  if(x >= -0x8000 && x < 0x8000) {\n    return rval.putSignedInt(x, 16);\n  }\n  if(x >= -0x800000 && x < 0x800000) {\n    return rval.putSignedInt(x, 24);\n  }\n  if(x >= -0x80000000 && x < 0x80000000) {\n    return rval.putSignedInt(x, 32);\n  }\n  var error = new Error('Integer too large; max is 32-bits.');\n  error.integer = x;\n  throw error;\n};\n\n/**\n * Converts a DER-encoded byte buffer to a javascript integer. This is\n * typically used to decode the value of an INTEGER type.\n *\n * @param bytes the byte buffer.\n *\n * @return the integer.\n */\nasn1.derToInteger = function(bytes) {\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var n = bytes.length() * 8;\n  if(n > 32) {\n    throw new Error('Integer too large; max is 32-bits.');\n  }\n  return bytes.getSignedInt(n);\n};\n\n/**\n * Validates that the given ASN.1 object is at least a super set of the\n * given ASN.1 structure. Only tag classes and types are checked. An\n * optional map may also be provided to capture ASN.1 values while the\n * structure is checked.\n *\n * To capture an ASN.1 value, set an object in the validator's 'capture'\n * parameter to the key to use in the capture map. To capture the full\n * ASN.1 object, specify 'captureAsn1'. To capture BIT STRING bytes, including\n * the leading unused bits counter byte, specify 'captureBitStringContents'.\n * To capture BIT STRING bytes, without the leading unused bits counter byte,\n * specify 'captureBitStringValue'.\n *\n * Objects in the validator may set a field 'optional' to true to indicate\n * that it isn't necessary to pass validation.\n *\n * @param obj the ASN.1 object to validate.\n * @param v the ASN.1 structure validator.\n * @param capture an optional map to capture values in.\n * @param errors an optional array for storing validation errors.\n *\n * @return true on success, false on failure.\n */\nasn1.validate = function(obj, v, capture, errors) {\n  var rval = false;\n\n  // ensure tag class and type are the same if specified\n  if((obj.tagClass === v.tagClass || typeof(v.tagClass) === 'undefined') &&\n    (obj.type === v.type || typeof(v.type) === 'undefined')) {\n    // ensure constructed flag is the same if specified\n    if(obj.constructed === v.constructed ||\n      typeof(v.constructed) === 'undefined') {\n      rval = true;\n\n      // handle sub values\n      if(v.value && forge.util.isArray(v.value)) {\n        var j = 0;\n        for(var i = 0; rval && i < v.value.length; ++i) {\n          rval = v.value[i].optional || false;\n          if(obj.value[j]) {\n            rval = asn1.validate(obj.value[j], v.value[i], capture, errors);\n            if(rval) {\n              ++j;\n            } else if(v.value[i].optional) {\n              rval = true;\n            }\n          }\n          if(!rval && errors) {\n            errors.push(\n              '[' + v.name + '] ' +\n              'Tag class \"' + v.tagClass + '\", type \"' +\n              v.type + '\" expected value length \"' +\n              v.value.length + '\", got \"' +\n              obj.value.length + '\"');\n          }\n        }\n      }\n\n      if(rval && capture) {\n        if(v.capture) {\n          capture[v.capture] = obj.value;\n        }\n        if(v.captureAsn1) {\n          capture[v.captureAsn1] = obj;\n        }\n        if(v.captureBitStringContents && 'bitStringContents' in obj) {\n          capture[v.captureBitStringContents] = obj.bitStringContents;\n        }\n        if(v.captureBitStringValue && 'bitStringContents' in obj) {\n          var value;\n          if(obj.bitStringContents.length < 2) {\n            capture[v.captureBitStringValue] = '';\n          } else {\n            // FIXME: support unused bits with data shifting\n            var unused = obj.bitStringContents.charCodeAt(0);\n            if(unused !== 0) {\n              throw new Error(\n                'captureBitStringValue only supported for zero unused bits');\n            }\n            capture[v.captureBitStringValue] = obj.bitStringContents.slice(1);\n          }\n        }\n      }\n    } else if(errors) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected constructed \"' + v.constructed + '\", got \"' +\n        obj.constructed + '\"');\n    }\n  } else if(errors) {\n    if(obj.tagClass !== v.tagClass) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected tag class \"' + v.tagClass + '\", got \"' +\n        obj.tagClass + '\"');\n    }\n    if(obj.type !== v.type) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected type \"' + v.type + '\", got \"' + obj.type + '\"');\n    }\n  }\n  return rval;\n};\n\n// regex for testing for non-latin characters\nvar _nonLatinRegex = /[^\\\\u0000-\\\\u00ff]/;\n\n/**\n * Pretty prints an ASN.1 object to a string.\n *\n * @param obj the object to write out.\n * @param level the level in the tree.\n * @param indentation the indentation to use.\n *\n * @return the string.\n */\nasn1.prettyPrint = function(obj, level, indentation) {\n  var rval = '';\n\n  // set default level and indentation\n  level = level || 0;\n  indentation = indentation || 2;\n\n  // start new line for deep levels\n  if(level > 0) {\n    rval += '\\n';\n  }\n\n  // create indent\n  var indent = '';\n  for(var i = 0; i < level * indentation; ++i) {\n    indent += ' ';\n  }\n\n  // print class:type\n  rval += indent + 'Tag: ';\n  switch(obj.tagClass) {\n  case asn1.Class.UNIVERSAL:\n    rval += 'Universal:';\n    break;\n  case asn1.Class.APPLICATION:\n    rval += 'Application:';\n    break;\n  case asn1.Class.CONTEXT_SPECIFIC:\n    rval += 'Context-Specific:';\n    break;\n  case asn1.Class.PRIVATE:\n    rval += 'Private:';\n    break;\n  }\n\n  if(obj.tagClass === asn1.Class.UNIVERSAL) {\n    rval += obj.type;\n\n    // known types\n    switch(obj.type) {\n    case asn1.Type.NONE:\n      rval += ' (None)';\n      break;\n    case asn1.Type.BOOLEAN:\n      rval += ' (Boolean)';\n      break;\n    case asn1.Type.INTEGER:\n      rval += ' (Integer)';\n      break;\n    case asn1.Type.BITSTRING:\n      rval += ' (Bit string)';\n      break;\n    case asn1.Type.OCTETSTRING:\n      rval += ' (Octet string)';\n      break;\n    case asn1.Type.NULL:\n      rval += ' (Null)';\n      break;\n    case asn1.Type.OID:\n      rval += ' (Object Identifier)';\n      break;\n    case asn1.Type.ODESC:\n      rval += ' (Object Descriptor)';\n      break;\n    case asn1.Type.EXTERNAL:\n      rval += ' (External or Instance of)';\n      break;\n    case asn1.Type.REAL:\n      rval += ' (Real)';\n      break;\n    case asn1.Type.ENUMERATED:\n      rval += ' (Enumerated)';\n      break;\n    case asn1.Type.EMBEDDED:\n      rval += ' (Embedded PDV)';\n      break;\n    case asn1.Type.UTF8:\n      rval += ' (UTF8)';\n      break;\n    case asn1.Type.ROID:\n      rval += ' (Relative Object Identifier)';\n      break;\n    case asn1.Type.SEQUENCE:\n      rval += ' (Sequence)';\n      break;\n    case asn1.Type.SET:\n      rval += ' (Set)';\n      break;\n    case asn1.Type.PRINTABLESTRING:\n      rval += ' (Printable String)';\n      break;\n    case asn1.Type.IA5String:\n      rval += ' (IA5String (ASCII))';\n      break;\n    case asn1.Type.UTCTIME:\n      rval += ' (UTC time)';\n      break;\n    case asn1.Type.GENERALIZEDTIME:\n      rval += ' (Generalized time)';\n      break;\n    case asn1.Type.BMPSTRING:\n      rval += ' (BMP String)';\n      break;\n    }\n  } else {\n    rval += obj.type;\n  }\n\n  rval += '\\n';\n  rval += indent + 'Constructed: ' + obj.constructed + '\\n';\n\n  if(obj.composed) {\n    var subvalues = 0;\n    var sub = '';\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        subvalues += 1;\n        sub += asn1.prettyPrint(obj.value[i], level + 1, indentation);\n        if((i + 1) < obj.value.length) {\n          sub += ',';\n        }\n      }\n    }\n    rval += indent + 'Sub values: ' + subvalues + sub;\n  } else {\n    rval += indent + 'Value: ';\n    if(obj.type === asn1.Type.OID) {\n      var oid = asn1.derToOid(obj.value);\n      rval += oid;\n      if(forge.pki && forge.pki.oids) {\n        if(oid in forge.pki.oids) {\n          rval += ' (' + forge.pki.oids[oid] + ') ';\n        }\n      }\n    }\n    if(obj.type === asn1.Type.INTEGER) {\n      try {\n        rval += asn1.derToInteger(obj.value);\n      } catch(ex) {\n        rval += '0x' + forge.util.bytesToHex(obj.value);\n      }\n    } else if(obj.type === asn1.Type.BITSTRING) {\n      // TODO: shift bits as needed to display without padding\n      if(obj.value.length > 1) {\n        // remove unused bits field\n        rval += '0x' + forge.util.bytesToHex(obj.value.slice(1));\n      } else {\n        rval += '(none)';\n      }\n      // show unused bit count\n      if(obj.value.length > 0) {\n        var unused = obj.value.charCodeAt(0);\n        if(unused == 1) {\n          rval += ' (1 unused bit shown)';\n        } else if(unused > 1) {\n          rval += ' (' + unused + ' unused bits shown)';\n        }\n      }\n    } else if(obj.type === asn1.Type.OCTETSTRING) {\n      if(!_nonLatinRegex.test(obj.value)) {\n        rval += '(' + obj.value + ') ';\n      }\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.type === asn1.Type.UTF8) {\n      rval += forge.util.decodeUtf8(obj.value);\n    } else if(obj.type === asn1.Type.PRINTABLESTRING ||\n      obj.type === asn1.Type.IA5String) {\n      rval += obj.value;\n    } else if(_nonLatinRegex.test(obj.value)) {\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.value.length === 0) {\n      rval += '[null]';\n    } else {\n      rval += obj.value;\n    }\n  }\n\n  return rval;\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/asn1.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/baseN.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/**\n * Base-N/Base-X encoding/decoding functions.\n *\n * Original implementation from base-x:\n * https://github.com/cryptocoinjs/base-x\n *\n * Which is MIT licensed:\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nvar api = {};\nmodule.exports = api;\n\n// baseN alphabet indexes\nvar _reverseAlphabets = {};\n\n/**\n * BaseN-encodes a Uint8Array using the given alphabet.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the baseN-encoded output string.\n */\napi.encode = function(input, alphabet, maxline) {\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n  if(maxline !== undefined && typeof maxline !== 'number') {\n    throw new TypeError('\"maxline\" must be a number.');\n  }\n\n  var output = '';\n\n  if(!(input instanceof Uint8Array)) {\n    // assume forge byte buffer\n    output = _encodeWithByteBuffer(input, alphabet);\n  } else {\n    var i = 0;\n    var base = alphabet.length;\n    var first = alphabet.charAt(0);\n    var digits = [0];\n    for(i = 0; i < input.length; ++i) {\n      for(var j = 0, carry = input[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % base;\n        carry = (carry / base) | 0;\n      }\n\n      while(carry > 0) {\n        digits.push(carry % base);\n        carry = (carry / base) | 0;\n      }\n    }\n\n    // deal with leading zeros\n    for(i = 0; input[i] === 0 && i < input.length - 1; ++i) {\n      output += first;\n    }\n    // convert digits to a string\n    for(i = digits.length - 1; i >= 0; --i) {\n      output += alphabet[digits[i]];\n    }\n  }\n\n  if(maxline) {\n    var regex = new RegExp('.{1,' + maxline + '}', 'g');\n    output = output.match(regex).join('\\r\\n');\n  }\n\n  return output;\n};\n\n/**\n * Decodes a baseN-encoded (using the given alphabet) string to a\n * Uint8Array.\n *\n * @param input the baseN-encoded input string.\n *\n * @return the Uint8Array.\n */\napi.decode = function(input, alphabet) {\n  if(typeof input !== 'string') {\n    throw new TypeError('\"input\" must be a string.');\n  }\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n\n  var table = _reverseAlphabets[alphabet];\n  if(!table) {\n    // compute reverse alphabet\n    table = _reverseAlphabets[alphabet] = [];\n    for(var i = 0; i < alphabet.length; ++i) {\n      table[alphabet.charCodeAt(i)] = i;\n    }\n  }\n\n  // remove whitespace characters\n  input = input.replace(/\\s/g, '');\n\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var bytes = [0];\n  for(var i = 0; i < input.length; i++) {\n    var value = table[input.charCodeAt(i)];\n    if(value === undefined) {\n      return;\n    }\n\n    for(var j = 0, carry = value; j < bytes.length; ++j) {\n      carry += bytes[j] * base;\n      bytes[j] = carry & 0xff;\n      carry >>= 8;\n    }\n\n    while(carry > 0) {\n      bytes.push(carry & 0xff);\n      carry >>= 8;\n    }\n  }\n\n  // deal with leading zeros\n  for(var k = 0; input[k] === first && k < input.length - 1; ++k) {\n    bytes.push(0);\n  }\n\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(bytes.reverse());\n  }\n\n  return new Uint8Array(bytes.reverse());\n};\n\nfunction _encodeWithByteBuffer(input, alphabet) {\n  var i = 0;\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var digits = [0];\n  for(i = 0; i < input.length(); ++i) {\n    for(var j = 0, carry = input.at(i); j < digits.length; ++j) {\n      carry += digits[j] << 8;\n      digits[j] = carry % base;\n      carry = (carry / base) | 0;\n    }\n\n    while(carry > 0) {\n      digits.push(carry % base);\n      carry = (carry / base) | 0;\n    }\n  }\n\n  var output = '';\n\n  // deal with leading zeros\n  for(i = 0; input.at(i) === 0 && i < input.length() - 1; ++i) {\n    output += first;\n  }\n  // convert digits to a string\n  for(i = digits.length - 1; i >= 0; --i) {\n    output += alphabet[digits[i]];\n  }\n\n  return output;\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node-libs-browser/node_modules/buffer/index.js */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/baseN.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/cipher.js":function(module,exports,__webpack_require__){eval("/**\n * Cipher base API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\nmodule.exports = forge.cipher = forge.cipher || {};\n\n// registered algorithms\nforge.cipher.algorithms = forge.cipher.algorithms || {};\n\n/**\n * Creates a cipher object that can be used to encrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createCipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: false\n  });\n};\n\n/**\n * Creates a decipher object that can be used to decrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createDecipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: true\n  });\n};\n\n/**\n * Registers an algorithm by name. If the name was already registered, the\n * algorithm API object will be overwritten.\n *\n * @param name the name of the algorithm.\n * @param algorithm the algorithm API object.\n */\nforge.cipher.registerAlgorithm = function(name, algorithm) {\n  name = name.toUpperCase();\n  forge.cipher.algorithms[name] = algorithm;\n};\n\n/**\n * Gets a registered algorithm by name.\n *\n * @param name the name of the algorithm.\n *\n * @return the algorithm, if found, null if not.\n */\nforge.cipher.getAlgorithm = function(name) {\n  name = name.toUpperCase();\n  if(name in forge.cipher.algorithms) {\n    return forge.cipher.algorithms[name];\n  }\n  return null;\n};\n\nvar BlockCipher = forge.cipher.BlockCipher = function(options) {\n  this.algorithm = options.algorithm;\n  this.mode = this.algorithm.mode;\n  this.blockSize = this.mode.blockSize;\n  this._finish = false;\n  this._input = null;\n  this.output = null;\n  this._op = options.decrypt ? this.mode.decrypt : this.mode.encrypt;\n  this._decrypt = options.decrypt;\n  this.algorithm.initialize(options);\n};\n\n/**\n * Starts or restarts the encryption or decryption process, whichever\n * was previously configured.\n *\n * For non-GCM mode, the IV may be a binary-encoded string of bytes, an array\n * of bytes, a byte buffer, or an array of 32-bit integers. If the IV is in\n * bytes, then it must be Nb (16) bytes in length. If the IV is given in as\n * 32-bit integers, then it must be 4 integers long.\n *\n * Note: an IV is not required or used in ECB mode.\n *\n * For GCM-mode, the IV must be given as a binary-encoded string of bytes or\n * a byte buffer. The number of bytes should be 12 (96 bits) as recommended\n * by NIST SP-800-38D but another length may be given.\n *\n * @param options the options to use:\n *          iv the initialization vector to use as a binary-encoded string of\n *            bytes, null to reuse the last ciphered block from a previous\n *            update() (this \"residue\" method is for legacy support only).\n *          additionalData additional authentication data as a binary-encoded\n *            string of bytes, for 'GCM' mode, (default: none).\n *          tagLength desired length of authentication tag, in bits, for\n *            'GCM' mode (0-128, default: 128).\n *          tag the authentication tag to check if decrypting, as a\n *             binary-encoded string of bytes.\n *          output the output the buffer to write to, null to create one.\n */\nBlockCipher.prototype.start = function(options) {\n  options = options || {};\n  var opts = {};\n  for(var key in options) {\n    opts[key] = options[key];\n  }\n  opts.decrypt = this._decrypt;\n  this._finish = false;\n  this._input = forge.util.createBuffer();\n  this.output = options.output || forge.util.createBuffer();\n  this.mode.start(opts);\n};\n\n/**\n * Updates the next block according to the cipher mode.\n *\n * @param input the buffer to read from.\n */\nBlockCipher.prototype.update = function(input) {\n  if(input) {\n    // input given, so empty it into the input buffer\n    this._input.putBuffer(input);\n  }\n\n  // do cipher operation until it needs more input and not finished\n  while(!this._op.call(this.mode, this._input, this.output, this._finish) &&\n    !this._finish) {}\n\n  // free consumed memory from input buffer\n  this._input.compact();\n};\n\n/**\n * Finishes encrypting or decrypting.\n *\n * @param pad a padding function to use in CBC mode, null for default,\n *          signature(blockSize, buffer, decrypt).\n *\n * @return true if successful, false on error.\n */\nBlockCipher.prototype.finish = function(pad) {\n  // backwards-compatibility w/deprecated padding API\n  // Note: will overwrite padding functions even after another start() call\n  if(pad && (this.mode.name === 'ECB' || this.mode.name === 'CBC')) {\n    this.mode.pad = function(input) {\n      return pad(this.blockSize, input, false);\n    };\n    this.mode.unpad = function(output) {\n      return pad(this.blockSize, output, true);\n    };\n  }\n\n  // build options for padding and afterFinish functions\n  var options = {};\n  options.decrypt = this._decrypt;\n\n  // get # of bytes that won't fill a block\n  options.overflow = this._input.length() % this.blockSize;\n\n  if(!this._decrypt && this.mode.pad) {\n    if(!this.mode.pad(this._input, options)) {\n      return false;\n    }\n  }\n\n  // do final update\n  this._finish = true;\n  this.update();\n\n  if(this._decrypt && this.mode.unpad) {\n    if(!this.mode.unpad(this.output, options)) {\n      return false;\n    }\n  }\n\n  if(this.mode.afterFinish) {\n    if(!this.mode.afterFinish(this.output, options)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/cipher.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/cipherModes.js":function(module,exports,__webpack_require__){eval("/**\n * Supported cipher modes.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\nforge.cipher = forge.cipher || {};\n\n// supported cipher modes\nvar modes = module.exports = forge.cipher.modes = forge.cipher.modes || {};\n\n/** Electronic codebook (ECB) (Don't use this; it's not secure) **/\n\nmodes.ecb = function(options) {\n  options = options || {};\n  this.name = 'ECB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.ecb.prototype.start = function(options) {};\n\nmodes.ecb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.ecb.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher-block Chaining (CBC) **/\n\nmodes.cbc = function(options) {\n  options = options || {};\n  this.name = 'CBC';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.cbc.prototype.start = function(options) {\n  // Note: legacy support for using IV residue (has security flaws)\n  // if IV is null, reuse block from previous processing\n  if(options.iv === null) {\n    // must have a previous block\n    if(!this._prev) {\n      throw new Error('Invalid IV parameter.');\n    }\n    this._iv = this._prev.slice(0);\n  } else if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  } else {\n    // save IV as \"previous\" block\n    this._iv = transformIV(options.iv);\n    this._prev = this._iv.slice(0);\n  }\n};\n\nmodes.cbc.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  // CBC XOR's IV (or previous block) with plaintext\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = this._prev[i] ^ input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous block\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n  this._prev = this._outBlock;\n};\n\nmodes.cbc.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous ciphered block\n  // CBC XOR's IV (or previous block) with ciphertext\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._prev[i] ^ this._outBlock[i]);\n  }\n  this._prev = this._inBlock.slice(0);\n};\n\nmodes.cbc.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.cbc.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher feedback (CFB) **/\n\nmodes.cfb = function(options) {\n  options = options || {};\n  this.name = 'CFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32() ^ this._outBlock[i];\n      output.putInt32(this._inBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32() ^ this._outBlock[i];\n    this._partialOutput.putInt32(this._partialBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32();\n      output.putInt32(this._inBlock[i] ^ this._outBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32();\n    this._partialOutput.putInt32(this._partialBlock[i] ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\n/** Output feedback (OFB) **/\n\nmodes.ofb = function(options) {\n  options = options || {};\n  this.name = 'OFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(input.length() === 0) {\n    return true;\n  }\n\n  // encrypt block (OFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output and update next input\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n      this._inBlock[i] = this._outBlock[i];\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._outBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.decrypt = modes.ofb.prototype.encrypt;\n\n/** Counter (CTR) **/\n\nmodes.ctr = function(options) {\n  options = options || {};\n  this.name = 'CTR';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CTR always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes > 0) {\n      // block still incomplete, restore input buffer\n      input.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // block complete, increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.ctr.prototype.decrypt = modes.ctr.prototype.encrypt;\n\n/** Galois/Counter Mode (GCM) **/\n\nmodes.gcm = function(options) {\n  options = options || {};\n  this.name = 'GCM';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n\n  // R is actually this value concatenated with 120 more zero bits, but\n  // we only XOR against R so the other zeros have no effect -- we just\n  // apply this value to the first integer in a block\n  this._R = 0xE1000000;\n};\n\nmodes.gcm.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // ensure IV is a byte buffer\n  var iv = forge.util.createBuffer(options.iv);\n\n  // no ciphered data processed yet\n  this._cipherLength = 0;\n\n  // default additional data is none\n  var additionalData;\n  if('additionalData' in options) {\n    additionalData = forge.util.createBuffer(options.additionalData);\n  } else {\n    additionalData = forge.util.createBuffer();\n  }\n\n  // default tag length is 128 bits\n  if('tagLength' in options) {\n    this._tagLength = options.tagLength;\n  } else {\n    this._tagLength = 128;\n  }\n\n  // if tag is given, ensure tag matches tag length\n  this._tag = null;\n  if(options.decrypt) {\n    // save tag to check later\n    this._tag = forge.util.createBuffer(options.tag).getBytes();\n    if(this._tag.length !== (this._tagLength / 8)) {\n      throw new Error('Authentication tag does not match tag length.');\n    }\n  }\n\n  // create tmp storage for hash calculation\n  this._hashBlock = new Array(this._ints);\n\n  // no tag generated yet\n  this.tag = null;\n\n  // generate hash subkey\n  // (apply block cipher to \"zero\" block)\n  this._hashSubkey = new Array(this._ints);\n  this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey);\n\n  // generate table M\n  // use 4-bit tables (32 component decomposition of a 16 byte value)\n  // 8-bit tables take more space and are known to have security\n  // vulnerabilities (in native implementations)\n  this.componentBits = 4;\n  this._m = this.generateHashTable(this._hashSubkey, this.componentBits);\n\n  // Note: support IV length different from 96 bits? (only supporting\n  // 96 bits is recommended by NIST SP-800-38D)\n  // generate J_0\n  var ivLength = iv.length();\n  if(ivLength === 12) {\n    // 96-bit IV\n    this._j0 = [iv.getInt32(), iv.getInt32(), iv.getInt32(), 1];\n  } else {\n    // IV is NOT 96-bits\n    this._j0 = [0, 0, 0, 0];\n    while(iv.length() > 0) {\n      this._j0 = this.ghash(\n        this._hashSubkey, this._j0,\n        [iv.getInt32(), iv.getInt32(), iv.getInt32(), iv.getInt32()]);\n    }\n    this._j0 = this.ghash(\n      this._hashSubkey, this._j0, [0, 0].concat(from64To32(ivLength * 8)));\n  }\n\n  // generate ICB (initial counter block)\n  this._inBlock = this._j0.slice(0);\n  inc32(this._inBlock);\n  this._partialBytes = 0;\n\n  // consume authentication data\n  additionalData = forge.util.createBuffer(additionalData);\n  // save additional data length as a BE 64-bit number\n  this._aDataLength = from64To32(additionalData.length() * 8);\n  // pad additional data to 128 bit (16 byte) block size\n  var overflow = additionalData.length() % this.blockSize;\n  if(overflow) {\n    additionalData.fillWithByte(0, this.blockSize - overflow);\n  }\n  this._s = [0, 0, 0, 0];\n  while(additionalData.length() > 0) {\n    this._s = this.ghash(this._hashSubkey, this._s, [\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32()\n    ]);\n  }\n};\n\nmodes.gcm.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(this._outBlock[i] ^= input.getInt32());\n    }\n    this._cipherLength += this.blockSize;\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes <= 0 || finish) {\n      // handle overflow prior to hashing\n      if(finish) {\n        // get block overflow\n        var overflow = inputLength % this.blockSize;\n        this._cipherLength += overflow;\n        // truncate for hash function\n        this._partialOutput.truncate(this.blockSize - overflow);\n      } else {\n        this._cipherLength += this.blockSize;\n      }\n\n      // get output block for hashing\n      for(var i = 0; i < this._ints; ++i) {\n        this._outBlock[i] = this._partialOutput.getInt32();\n      }\n      this._partialOutput.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      // block still incomplete, restore input buffer, get partial output,\n      // and return early\n      input.read -= this.blockSize;\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // update hash block S\n  this._s = this.ghash(this._hashSubkey, this._s, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.gcm.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength < this.blockSize && !(finish && inputLength > 0)) {\n    return true;\n  }\n\n  // encrypt block (GCM always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n\n  // update hash block S\n  this._hashBlock[0] = input.getInt32();\n  this._hashBlock[1] = input.getInt32();\n  this._hashBlock[2] = input.getInt32();\n  this._hashBlock[3] = input.getInt32();\n  this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);\n\n  // XOR hash input with output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i] ^ this._hashBlock[i]);\n  }\n\n  // increment cipher data length\n  if(inputLength < this.blockSize) {\n    this._cipherLength += inputLength % this.blockSize;\n  } else {\n    this._cipherLength += this.blockSize;\n  }\n};\n\nmodes.gcm.prototype.afterFinish = function(output, options) {\n  var rval = true;\n\n  // handle overflow\n  if(options.decrypt && options.overflow) {\n    output.truncate(this.blockSize - options.overflow);\n  }\n\n  // handle authentication tag\n  this.tag = forge.util.createBuffer();\n\n  // concatenate additional data length with cipher length\n  var lengths = this._aDataLength.concat(from64To32(this._cipherLength * 8));\n\n  // include lengths in hash\n  this._s = this.ghash(this._hashSubkey, this._s, lengths);\n\n  // do GCTR(J_0, S)\n  var tag = [];\n  this.cipher.encrypt(this._j0, tag);\n  for(var i = 0; i < this._ints; ++i) {\n    this.tag.putInt32(this._s[i] ^ tag[i]);\n  }\n\n  // trim tag to length\n  this.tag.truncate(this.tag.length() % (this._tagLength / 8));\n\n  // check authentication tag\n  if(options.decrypt && this.tag.bytes() !== this._tag) {\n    rval = false;\n  }\n\n  return rval;\n};\n\n/**\n * See NIST SP-800-38D 6.3 (Algorithm 1). This function performs Galois\n * field multiplication. The field, GF(2^128), is defined by the polynomial:\n *\n * x^128 + x^7 + x^2 + x + 1\n *\n * Which is represented in little-endian binary form as: 11100001 (0xe1). When\n * the value of a coefficient is 1, a bit is set. The value R, is the\n * concatenation of this value and 120 zero bits, yielding a 128-bit value\n * which matches the block size.\n *\n * This function will multiply two elements (vectors of bytes), X and Y, in\n * the field GF(2^128). The result is initialized to zero. For each bit of\n * X (out of 128), x_i, if x_i is set, then the result is multiplied (XOR'd)\n * by the current value of Y. For each bit, the value of Y will be raised by\n * a power of x (multiplied by the polynomial x). This can be achieved by\n * shifting Y once to the right. If the current value of Y, prior to being\n * multiplied by x, has 0 as its LSB, then it is a 127th degree polynomial.\n * Otherwise, we must divide by R after shifting to find the remainder.\n *\n * @param x the first block to multiply by the second.\n * @param y the second block to multiply by the first.\n *\n * @return the block result of the multiplication.\n */\nmodes.gcm.prototype.multiply = function(x, y) {\n  var z_i = [0, 0, 0, 0];\n  var v_i = y.slice(0);\n\n  // calculate Z_128 (block has 128 bits)\n  for(var i = 0; i < 128; ++i) {\n    // if x_i is 0, Z_{i+1} = Z_i (unchanged)\n    // else Z_{i+1} = Z_i ^ V_i\n    // get x_i by finding 32-bit int position, then left shift 1 by remainder\n    var x_i = x[(i / 32) | 0] & (1 << (31 - i % 32));\n    if(x_i) {\n      z_i[0] ^= v_i[0];\n      z_i[1] ^= v_i[1];\n      z_i[2] ^= v_i[2];\n      z_i[3] ^= v_i[3];\n    }\n\n    // if LSB(V_i) is 1, V_i = V_i >> 1\n    // else V_i = (V_i >> 1) ^ R\n    this.pow(v_i, v_i);\n  }\n\n  return z_i;\n};\n\nmodes.gcm.prototype.pow = function(x, out) {\n  // if LSB(x) is 1, x = x >>> 1\n  // else x = (x >>> 1) ^ R\n  var lsb = x[3] & 1;\n\n  // always do x >>> 1:\n  // starting with the rightmost integer, shift each integer to the right\n  // one bit, pulling in the bit from the integer to the left as its top\n  // most bit (do this for the last 3 integers)\n  for(var i = 3; i > 0; --i) {\n    out[i] = (x[i] >>> 1) | ((x[i - 1] & 1) << 31);\n  }\n  // shift the first integer normally\n  out[0] = x[0] >>> 1;\n\n  // if lsb was not set, then polynomial had a degree of 127 and doesn't\n  // need to divided; otherwise, XOR with R to find the remainder; we only\n  // need to XOR the first integer since R technically ends w/120 zero bits\n  if(lsb) {\n    out[0] ^= this._R;\n  }\n};\n\nmodes.gcm.prototype.tableMultiply = function(x) {\n  // assumes 4-bit tables are used\n  var z = [0, 0, 0, 0];\n  for(var i = 0; i < 32; ++i) {\n    var idx = (i / 8) | 0;\n    var x_i = (x[idx] >>> ((7 - (i % 8)) * 4)) & 0xF;\n    var ah = this._m[i][x_i];\n    z[0] ^= ah[0];\n    z[1] ^= ah[1];\n    z[2] ^= ah[2];\n    z[3] ^= ah[3];\n  }\n  return z;\n};\n\n/**\n * A continuing version of the GHASH algorithm that operates on a single\n * block. The hash block, last hash value (Ym) and the new block to hash\n * are given.\n *\n * @param h the hash block.\n * @param y the previous value for Ym, use [0, 0, 0, 0] for a new hash.\n * @param x the block to hash.\n *\n * @return the hashed value (Ym).\n */\nmodes.gcm.prototype.ghash = function(h, y, x) {\n  y[0] ^= x[0];\n  y[1] ^= x[1];\n  y[2] ^= x[2];\n  y[3] ^= x[3];\n  return this.tableMultiply(y);\n  //return this.multiply(y, h);\n};\n\n/**\n * Precomputes a table for multiplying against the hash subkey. This\n * mechanism provides a substantial speed increase over multiplication\n * performed without a table. The table-based multiplication this table is\n * for solves X * H by multiplying each component of X by H and then\n * composing the results together using XOR.\n *\n * This function can be used to generate tables with different bit sizes\n * for the components, however, this implementation assumes there are\n * 32 components of X (which is a 16 byte vector), therefore each component\n * takes 4-bits (so the table is constructed with bits=4).\n *\n * @param h the hash subkey.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateHashTable = function(h, bits) {\n  // TODO: There are further optimizations that would use only the\n  // first table M_0 (or some variant) along with a remainder table;\n  // this can be explored in the future\n  var multiplier = 8 / bits;\n  var perInt = 4 * multiplier;\n  var size = 16 * multiplier;\n  var m = new Array(size);\n  for(var i = 0; i < size; ++i) {\n    var tmp = [0, 0, 0, 0];\n    var idx = (i / perInt) | 0;\n    var shft = ((perInt - 1 - (i % perInt)) * bits);\n    tmp[idx] = (1 << (bits - 1)) << shft;\n    m[i] = this.generateSubHashTable(this.multiply(tmp, h), bits);\n  }\n  return m;\n};\n\n/**\n * Generates a table for multiplying against the hash subkey for one\n * particular component (out of all possible component values).\n *\n * @param mid the pre-multiplied value for the middle key of the table.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateSubHashTable = function(mid, bits) {\n  // compute the table quickly by minimizing the number of\n  // POW operations -- they only need to be performed for powers of 2,\n  // all other entries can be composed from those powers using XOR\n  var size = 1 << bits;\n  var half = size >>> 1;\n  var m = new Array(size);\n  m[half] = mid.slice(0);\n  var i = half >>> 1;\n  while(i > 0) {\n    // raise m0[2 * i] and store in m0[i]\n    this.pow(m[2 * i], m[i] = []);\n    i >>= 1;\n  }\n  i = 2;\n  while(i < half) {\n    for(var j = 1; j < i; ++j) {\n      var m_i = m[i];\n      var m_j = m[j];\n      m[i + j] = [\n        m_i[0] ^ m_j[0],\n        m_i[1] ^ m_j[1],\n        m_i[2] ^ m_j[2],\n        m_i[3] ^ m_j[3]\n      ];\n    }\n    i *= 2;\n  }\n  m[0] = [0, 0, 0, 0];\n  /* Note: We could avoid storing these by doing composition during multiply\n  calculate top half using composition by speed is preferred. */\n  for(i = half + 1; i < size; ++i) {\n    var c = m[i ^ half];\n    m[i] = [mid[0] ^ c[0], mid[1] ^ c[1], mid[2] ^ c[2], mid[3] ^ c[3]];\n  }\n  return m;\n};\n\n/** Utility functions */\n\nfunction transformIV(iv) {\n  if(typeof iv === 'string') {\n    // convert iv string into byte buffer\n    iv = forge.util.createBuffer(iv);\n  }\n\n  if(forge.util.isArray(iv) && iv.length > 4) {\n    // convert iv byte array into byte buffer\n    var tmp = iv;\n    iv = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      iv.putByte(tmp[i]);\n    }\n  }\n  if(!forge.util.isArray(iv)) {\n    // convert iv byte buffer into 32-bit integer array\n    iv = [iv.getInt32(), iv.getInt32(), iv.getInt32(), iv.getInt32()];\n  }\n\n  return iv;\n}\n\nfunction inc32(block) {\n  // increment last 32 bits of block only\n  block[block.length - 1] = (block[block.length - 1] + 1) & 0xFFFFFFFF;\n}\n\nfunction from64To32(num) {\n  // convert 64-bit number to two BE Int32s\n  return [(num / 0x100000000) | 0, num & 0xFFFFFFFF];\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/cipherModes.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/debug.js":function(module,exports,__webpack_require__){eval("/**\n * Debugging support for web applications.\n *\n * @author David I. Lehn <dlehn@digitalbazaar.com>\n *\n * Copyright 2008-2013 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n\n/* DEBUG API */\nmodule.exports = forge.debug = forge.debug || {};\n\n// Private storage for debugging.\n// Useful to expose data that is otherwise unviewable behind closures.\n// NOTE: remember that this can hold references to data and cause leaks!\n// format is \"forge._debug.<modulename>.<dataname> = data\"\n// Example:\n// (function() {\n//   var cat = 'forge.test.Test'; // debugging category\n//   var sState = {...}; // local state\n//   forge.debug.set(cat, 'sState', sState);\n// })();\nforge.debug.storage = {};\n\n/**\n * Gets debug data. Omit name for all cat data  Omit name and cat for\n * all data.\n *\n * @param cat name of debugging category.\n * @param name name of data to get (optional).\n * @return object with requested debug data or undefined.\n */\nforge.debug.get = function(cat, name) {\n  var rval;\n  if(typeof(cat) === 'undefined') {\n    rval = forge.debug.storage;\n  } else if(cat in forge.debug.storage) {\n    if(typeof(name) === 'undefined') {\n      rval = forge.debug.storage[cat];\n    } else {\n      rval = forge.debug.storage[cat][name];\n    }\n  }\n  return rval;\n};\n\n/**\n * Sets debug data.\n *\n * @param cat name of debugging category.\n * @param name name of data to set.\n * @param data data to set.\n */\nforge.debug.set = function(cat, name, data) {\n  if(!(cat in forge.debug.storage)) {\n    forge.debug.storage[cat] = {};\n  }\n  forge.debug.storage[cat][name] = data;\n};\n\n/**\n * Clears debug data. Omit name for all cat data. Omit name and cat for\n * all data.\n *\n * @param cat name of debugging category.\n * @param name name of data to clear or omit to clear entire category.\n */\nforge.debug.clear = function(cat, name) {\n  if(typeof(cat) === 'undefined') {\n    forge.debug.storage = {};\n  } else if(cat in forge.debug.storage) {\n    if(typeof(name) === 'undefined') {\n      delete forge.debug.storage[cat];\n    } else {\n      delete forge.debug.storage[cat][name];\n    }\n  }\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/debug.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/des.js":function(module,exports,__webpack_require__){eval("/**\n * DES (Data Encryption Standard) implementation.\n *\n * This implementation supports DES as well as 3DES-EDE in ECB and CBC mode.\n * It is based on the BSD-licensed implementation by Paul Tero:\n *\n * Paul Tero, July 2001\n * http://www.tero.co.uk/des/\n *\n * Optimised for performance with large blocks by\n * Michael Hayworth, November 2001\n * http://www.netdealing.com\n *\n * THIS SOFTWARE IS PROVIDED \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2014 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./cipher */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/cipher.js\");\n__webpack_require__(/*! ./cipherModes */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/cipherModes.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\n/* DES API */\nmodule.exports = forge.des = forge.des || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new DES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the DES algorithm object.\n */\nforge.des.Algorithm = function(name, mode) {\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 8,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this DES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.des.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = forge.util.createBuffer(options.key);\n  if(this.name.indexOf('3DES') === 0) {\n    if(key.length() !== 24) {\n      throw new Error('Invalid Triple-DES key size: ' + key.length() * 8);\n    }\n  }\n\n  // do key expansion to 16 or 48 subkeys (single or triple DES)\n  this._keys = _createKeys(key);\n  this._init = true;\n};\n\n/** Register DES algorithms **/\n\nregisterAlgorithm('DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('DES-CTR', forge.cipher.modes.ctr);\n\nregisterAlgorithm('3DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('3DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('3DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('3DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('3DES-CTR', forge.cipher.modes.ctr);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.des.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** DES implementation **/\n\nvar spfunction1 = [0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004];\nvar spfunction2 = [-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000];\nvar spfunction3 = [0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200];\nvar spfunction4 = [0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080];\nvar spfunction5 = [0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100];\nvar spfunction6 = [0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010];\nvar spfunction7 = [0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002];\nvar spfunction8 = [0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000];\n\n/**\n * Create necessary sub keys.\n *\n * @param key the 64-bit or 192-bit key.\n *\n * @return the expanded keys.\n */\nfunction _createKeys(key) {\n  var pc2bytes0  = [0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204],\n      pc2bytes1  = [0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101],\n      pc2bytes2  = [0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808],\n      pc2bytes3  = [0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000],\n      pc2bytes4  = [0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010],\n      pc2bytes5  = [0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420],\n      pc2bytes6  = [0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002],\n      pc2bytes7  = [0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800],\n      pc2bytes8  = [0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002],\n      pc2bytes9  = [0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408],\n      pc2bytes10 = [0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020],\n      pc2bytes11 = [0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200],\n      pc2bytes12 = [0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010],\n      pc2bytes13 = [0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105];\n\n  // how many iterations (1 for des, 3 for triple des)\n  // changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n  var iterations = key.length() > 8 ? 3 : 1;\n\n  // stores the return keys\n  var keys = [];\n\n  // now define the left shifts which need to be done\n  var shifts = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0];\n\n  var n = 0, tmp;\n  for(var j = 0; j < iterations; j++) {\n    var left = key.getInt32();\n    var right = key.getInt32();\n\n    tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n    right ^= tmp;\n    left ^= (tmp << 4);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 2) ^ right) & 0x33333333;\n    right ^= tmp;\n    left ^= (tmp << 2);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n    left ^= tmp;\n    right ^= (tmp << 8);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    // right needs to be shifted and OR'd with last four bits of left\n    tmp = (left << 8) | ((right >>> 20) & 0x000000f0);\n\n    // left needs to be put upside down\n    left = ((right << 24) | ((right << 8) & 0xff0000) |\n      ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0));\n    right = tmp;\n\n    // now go through and perform these shifts on the left and right keys\n    for(var i = 0; i < shifts.length; ++i) {\n      //shift the keys either one or two bits to the left\n      if(shifts[i]) {\n        left = (left << 2) | (left >>> 26);\n        right = (right << 2) | (right >>> 26);\n      } else {\n        left = (left << 1) | (left >>> 27);\n        right = (right << 1) | (right >>> 27);\n      }\n      left &= -0xf;\n      right &= -0xf;\n\n      // now apply PC-2, in such a way that E is easier when encrypting or\n      // decrypting this conversion will look like PC-2 except only the last 6\n      // bits of each byte are used rather than 48 consecutive bits and the\n      // order of lines will be according to how the S selection functions will\n      // be applied: S2, S4, S6, S8, S1, S3, S5, S7\n      var lefttmp = (\n        pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf] |\n        pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf] |\n        pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf] |\n        pc2bytes6[(left >>> 4) & 0xf]);\n      var righttmp = (\n        pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf] |\n        pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf] |\n        pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf] |\n        pc2bytes13[(right >>> 4) & 0xf]);\n      tmp = ((righttmp >>> 16) ^ lefttmp) & 0x0000ffff;\n      keys[n++] = lefttmp ^ tmp;\n      keys[n++] = righttmp ^ (tmp << 16);\n    }\n  }\n\n  return keys;\n}\n\n/**\n * Updates a single block (1 byte) using DES. The update will either\n * encrypt or decrypt the block.\n *\n * @param keys the expanded keys.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(keys, input, output, decrypt) {\n  // set up loops for single or triple DES\n  var iterations = keys.length === 32 ? 3 : 9;\n  var looping;\n  if(iterations === 3) {\n    looping = decrypt ? [30, -2, -2] : [0, 32, 2];\n  } else {\n    looping = (decrypt ?\n      [94, 62, -2, 32, 64, 2, 30, -2, -2] :\n      [0, 32, 2, 62, 30, -2, 64, 96, 2]);\n  }\n\n  var tmp;\n\n  var left = input[0];\n  var right = input[1];\n\n  // first each 64 bit chunk of the message must be permuted according to IP\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  // rotate left 1 bit\n  left = ((left << 1) | (left >>> 31));\n  right = ((right << 1) | (right >>> 31));\n\n  for(var j = 0; j < iterations; j += 3) {\n    var endloop = looping[j + 1];\n    var loopinc = looping[j + 2];\n\n    // now go through and perform the encryption or decryption\n    for(var i = looping[j]; i != endloop; i += loopinc) {\n      var right1 = right ^ keys[i];\n      var right2 = ((right >>> 4) | (right << 28)) ^ keys[i + 1];\n\n      // passing these bytes through the S selection functions\n      tmp = left;\n      left = right;\n      right = tmp ^ (\n        spfunction2[(right1 >>> 24) & 0x3f] |\n        spfunction4[(right1 >>> 16) & 0x3f] |\n        spfunction6[(right1 >>>  8) & 0x3f] |\n        spfunction8[right1 & 0x3f] |\n        spfunction1[(right2 >>> 24) & 0x3f] |\n        spfunction3[(right2 >>> 16) & 0x3f] |\n        spfunction5[(right2 >>>  8) & 0x3f] |\n        spfunction7[right2 & 0x3f]);\n    }\n    // unreverse left and right\n    tmp = left;\n    left = right;\n    right = tmp;\n  }\n\n  // rotate right 1 bit\n  left = ((left >>> 1) | (left << 31));\n  right = ((right >>> 1) | (right << 31));\n\n  // now perform IP-1, which is IP in the opposite direction\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  output[0] = left;\n  output[1] = right;\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('DES-<mode>', key);\n * forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates a deprecated DES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param options the options to use.\n *          key the symmetric key to use (64 or 192 bits).\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'DES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/des.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/ed25519.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/**\n * JavaScript implementation of Ed25519.\n *\n * Copyright (c) 2017-2018 Digital Bazaar, Inc.\n *\n * This implementation is based on the most excellent TweetNaCl which is\n * in the public domain. Many thanks to its contributors:\n *\n * https://github.com/dchest/tweetnacl-js\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./jsbn */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/jsbn.js\");\n__webpack_require__(/*! ./random */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/random.js\");\n__webpack_require__(/*! ./sha512 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/sha512.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar ByteBuffer = forge.util.ByteBuffer;\nvar NativeBuffer = typeof Buffer === 'undefined' ? Uint8Array : Buffer;\n\n/*\n * Ed25519 algorithms, see RFC 8032:\n * https://tools.ietf.org/html/rfc8032\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.ed25519 = forge.ed25519 = forge.ed25519 || {};\nvar ed25519 = forge.ed25519;\n\ned25519.constants = {};\ned25519.constants.PUBLIC_KEY_BYTE_LENGTH = 32;\ned25519.constants.PRIVATE_KEY_BYTE_LENGTH = 64;\ned25519.constants.SEED_BYTE_LENGTH = 32;\ned25519.constants.SIGN_BYTE_LENGTH = 64;\ned25519.constants.HASH_BYTE_LENGTH = 64;\n\ned25519.generateKeyPair = function(options) {\n  options = options || {};\n  var seed = options.seed;\n  if(seed === undefined) {\n    // generate seed\n    seed = forge.random.getBytesSync(ed25519.constants.SEED_BYTE_LENGTH);\n  } else if(typeof seed === 'string') {\n    if(seed.length !== ed25519.constants.SEED_BYTE_LENGTH) {\n      throw new TypeError(\n        '\"seed\" must be ' + ed25519.constants.SEED_BYTE_LENGTH +\n        ' bytes in length.');\n    }\n  } else if(!(seed instanceof Uint8Array)) {\n    throw new TypeError(\n      '\"seed\" must be a node.js Buffer, Uint8Array, or a binary string.');\n  }\n\n  seed = messageToNativeBuffer({message: seed, encoding: 'binary'});\n\n  var pk = new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  var sk = new NativeBuffer(ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  for(var i = 0; i < 32; ++i) {\n    sk[i] = seed[i];\n  }\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, privateKey: sk};\n};\n\ned25519.publicKeyFromPrivateKey = function(options) {\n  options = options || {};\n  var privateKey = messageToNativeBuffer({\n    message: options.privateKey, encoding: 'binary'\n  });\n  if(privateKey.length !== ed25519.constants.PRIVATE_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.privateKey\" must have a byte length of ' +\n      ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  }\n\n  var pk = new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  for(var i = 0; i < pk.length; ++i) {\n    pk[i] = privateKey[32 + i];\n  }\n  return pk;\n};\n\ned25519.sign = function(options) {\n  options = options || {};\n  var msg = messageToNativeBuffer(options);\n  var privateKey = messageToNativeBuffer({\n    message: options.privateKey,\n    encoding: 'binary'\n  });\n  if(privateKey.length !== ed25519.constants.PRIVATE_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.privateKey\" must have a byte length of ' +\n      ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  }\n\n  var signedMsg = new NativeBuffer(\n    ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  crypto_sign(signedMsg, msg, msg.length, privateKey);\n\n  var sig = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH);\n  for(var i = 0; i < sig.length; ++i) {\n    sig[i] = signedMsg[i];\n  }\n  return sig;\n};\n\ned25519.verify = function(options) {\n  options = options || {};\n  var msg = messageToNativeBuffer(options);\n  if(options.signature === undefined) {\n    throw new TypeError(\n      '\"options.signature\" must be a node.js Buffer, a Uint8Array, a forge ' +\n      'ByteBuffer, or a binary string.');\n  }\n  var sig = messageToNativeBuffer({\n    message: options.signature,\n    encoding: 'binary'\n  });\n  if(sig.length !== ed25519.constants.SIGN_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.signature\" must have a byte length of ' +\n      ed25519.constants.SIGN_BYTE_LENGTH);\n  }\n  var publicKey = messageToNativeBuffer({\n    message: options.publicKey,\n    encoding: 'binary'\n  });\n  if(publicKey.length !== ed25519.constants.PUBLIC_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.publicKey\" must have a byte length of ' +\n      ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  }\n\n  var sm = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  var m = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  var i;\n  for(i = 0; i < ed25519.constants.SIGN_BYTE_LENGTH; ++i) {\n    sm[i] = sig[i];\n  }\n  for(i = 0; i < msg.length; ++i) {\n    sm[i + ed25519.constants.SIGN_BYTE_LENGTH] = msg[i];\n  }\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nfunction messageToNativeBuffer(options) {\n  var message = options.message;\n  if(message instanceof Uint8Array) {\n    return message;\n  }\n\n  var encoding = options.encoding;\n  if(message === undefined) {\n    if(options.md) {\n      // TODO: more rigorous validation that `md` is a MessageDigest\n      message = options.md.digest().getBytes();\n      encoding = 'binary';\n    } else {\n      throw new TypeError('\"options.message\" or \"options.md\" not specified.');\n    }\n  }\n\n  if(typeof message === 'string' && !encoding) {\n    throw new TypeError('\"options.encoding\" must be \"binary\" or \"utf8\".');\n  }\n\n  if(typeof message === 'string') {\n    if(typeof Buffer !== 'undefined') {\n      return Buffer.from(message, encoding);\n    }\n    message = new ByteBuffer(message, encoding);\n  } else if(!(message instanceof ByteBuffer)) {\n    throw new TypeError(\n      '\"options.message\" must be a node.js Buffer, a Uint8Array, a forge ' +\n      'ByteBuffer, or a string with \"options.encoding\" specifying its ' +\n      'encoding.');\n  }\n\n  // convert to native buffer\n  var buffer = new NativeBuffer(message.length());\n  for(var i = 0; i < buffer.length; ++i) {\n    buffer[i] = message.at(i);\n  }\n  return buffer;\n}\n\nvar gf0 = gf();\nvar gf1 = gf([1]);\nvar D = gf([\n  0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070,\n  0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]);\nvar D2 = gf([\n  0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0,\n  0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]);\nvar X = gf([\n  0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c,\n  0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]);\nvar Y = gf([\n  0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,\n  0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]);\nvar L = new Float64Array([\n  0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,\n  0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\nvar I = gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43,\n  0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\n// TODO: update forge buffer implementation to use `Buffer` or `Uint8Array`,\n// whichever is available, to improve performance\nfunction sha512(msg, msgLen) {\n  // Note: `out` and `msg` are NativeBuffer\n  var md = forge.md.sha512.create();\n  var buffer = new ByteBuffer(msg);\n  md.update(buffer.getBytes(msgLen), 'binary');\n  var hash = md.digest().getBytes();\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(hash, 'binary');\n  }\n  var out = new NativeBuffer(ed25519.constants.HASH_BYTE_LENGTH);\n  for(var i = 0; i < 64; ++i) {\n    out[i] = hash.charCodeAt(i);\n  }\n  return out;\n}\n\nfunction crypto_sign_keypair(pk, sk) {\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  var d = sha512(sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for(i = 0; i < 32; ++i) {\n    sk[i + 32] = pk[i];\n  }\n  return 0;\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  var d = sha512(sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for(i = 0; i < n; ++i) {\n    sm[64 + i] = m[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    sm[32 + i] = d[32 + i];\n  }\n\n  var r = sha512(sm.subarray(32), n + 32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for(i = 32; i < 64; ++i) {\n    sm[i] = sk[i];\n  }\n  var h = sha512(sm, n + 64);\n  reduce(h);\n\n  for(i = 32; i < 64; ++i) {\n    x[i] = 0;\n  }\n  for(i = 0; i < 32; ++i) {\n    x[i] = r[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    for(j = 0; j < 32; j++) {\n      x[i + j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new NativeBuffer(32);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  mlen = -1;\n  if(n < 64) {\n    return -1;\n  }\n\n  if(unpackneg(q, pk)) {\n    return -1;\n  }\n\n  for(i = 0; i < n; ++i) {\n    m[i] = sm[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    m[i + 32] = pk[i];\n  }\n  var h = sha512(m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if(crypto_verify_32(sm, 0, t, 0)) {\n    for(i = 0; i < n; ++i) {\n      m[i] = 0;\n    }\n    return -1;\n  }\n\n  for(i = 0; i < n; ++i) {\n    m[i] = sm[i + 64];\n  }\n  mlen = n;\n  return mlen;\n}\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for(i = 63; i >= 32; --i) {\n    carry = 0;\n    for(j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for(j = 0; j < 32; ++j) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for(j = 0; j < 32; ++j) {\n    x[j] -= carry * L[j];\n  }\n  for(i = 0; i < 32; ++i) {\n    x[i + 1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64);\n  for(var i = 0; i < 64; ++i) {\n    x[i] = r[i];\n    r[i] = 0;\n  }\n  modL(r, x);\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  for(var i = 0; i < 4; ++i) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for(i = 0; i < 16; ++i) {\n    t[i] = n[i];\n  }\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for(j = 0; j < 2; ++j) {\n    m[0] = t[0] - 0xffed;\n    for(i = 1; i < 15; ++i) {\n      m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n    b = (m[15] >> 16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1 - b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2 * i] = t[i] & 0xff;\n    o[2 * i + 1] = t[i] >> 8;\n  }\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if(neq25519(chk, num)) {\n    M(r[0], r[0], I);\n  }\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if(neq25519(chk, num)) {\n    return -1;\n  }\n\n  if(par25519(r[0]) === (p[31] >> 7)) {\n    Z(r[0], gf0, r[0]);\n  }\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for(i = 0; i < 16; ++i) {\n    o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n  }\n  o[15] &= 0x7fff;\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for(a = 0; a < 16; ++a) {\n    c[a] = i[a];\n  }\n  for(a = 250; a >= 0; --a) {\n    S(c, c);\n    if(a !== 1) {\n      M(c, c, i);\n    }\n  }\n  for(a = 0; a < 16; ++a) {\n    o[a] = c[a];\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new NativeBuffer(32);\n  var d = new NativeBuffer(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x, xi, y, yi, 32);\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i, d = 0;\n  for(i = 0; i < n; ++i) {\n    d |= x[xi + i] ^ y[yi + i];\n  }\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction par25519(a) {\n  var d = new NativeBuffer(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for(i = 255; i >= 0; --i) {\n    b = (s[(i / 8)|0] >> (i & 7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction set25519(r, a) {\n  var i;\n  for(i = 0; i < 16; i++) {\n    r[i] = a[i] | 0;\n  }\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for(a = 0; a < 16; ++a) {\n    c[a] = i[a];\n  }\n  for(a = 253; a >= 0; --a) {\n    S(c, c);\n    if(a !== 2 && a !== 4) {\n      M(c, c, i);\n    }\n  }\n  for(a = 0; a < 16; ++a) {\n    o[a] = c[a];\n  }\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for(i = 0; i < 16; ++i) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b - 1);\n  for(var i = 0; i < 16; ++i) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction gf(init) {\n  var i, r = new Float64Array(16);\n  if(init) {\n    for(i = 0; i < init.length; ++i) {\n      r[i] = init[i];\n    }\n  }\n  return r;\n}\n\nfunction A(o, a, b) {\n  for(var i = 0; i < 16; ++i) {\n    o[i] = a[i] + b[i];\n  }\n}\n\nfunction Z(o, a, b) {\n  for(var i = 0; i < 16; ++i) {\n    o[i] = a[i] - b[i];\n  }\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node-libs-browser/node_modules/buffer/index.js */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/ed25519.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js":function(module,exports){eval("/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = {\n  // default options\n  options: {\n    usePureJavaScript: false\n  }\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/hmac.js":function(module,exports,__webpack_require__){eval("/**\n * Hash-based Message Authentication Code implementation. Requires a message\n * digest object that can be obtained, for example, from forge.md.sha1 or\n * forge.md.md5.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2012 Digital Bazaar, Inc. All rights reserved.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./md */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\n/* HMAC API */\nvar hmac = module.exports = forge.hmac = forge.hmac || {};\n\n/**\n * Creates an HMAC object that uses the given message digest object.\n *\n * @return an HMAC object.\n */\nhmac.create = function() {\n  // the hmac key to use\n  var _key = null;\n\n  // the message digest to use\n  var _md = null;\n\n  // the inner padding\n  var _ipadding = null;\n\n  // the outer padding\n  var _opadding = null;\n\n  // hmac context\n  var ctx = {};\n\n  /**\n   * Starts or restarts the HMAC with the given key and message digest.\n   *\n   * @param md the message digest to use, null to reuse the previous one,\n   *           a string to use builtin 'sha1', 'md5', 'sha256'.\n   * @param key the key to use as a string, array of bytes, byte buffer,\n   *           or null to reuse the previous key.\n   */\n  ctx.start = function(md, key) {\n    if(md !== null) {\n      if(typeof md === 'string') {\n        // create builtin message digest\n        md = md.toLowerCase();\n        if(md in forge.md.algorithms) {\n          _md = forge.md.algorithms[md].create();\n        } else {\n          throw new Error('Unknown hash algorithm \"' + md + '\"');\n        }\n      } else {\n        // store message digest\n        _md = md;\n      }\n    }\n\n    if(key === null) {\n      // reuse previous key\n      key = _key;\n    } else {\n      if(typeof key === 'string') {\n        // convert string into byte buffer\n        key = forge.util.createBuffer(key);\n      } else if(forge.util.isArray(key)) {\n        // convert byte array into byte buffer\n        var tmp = key;\n        key = forge.util.createBuffer();\n        for(var i = 0; i < tmp.length; ++i) {\n          key.putByte(tmp[i]);\n        }\n      }\n\n      // if key is longer than blocksize, hash it\n      var keylen = key.length();\n      if(keylen > _md.blockLength) {\n        _md.start();\n        _md.update(key.bytes());\n        key = _md.digest();\n      }\n\n      // mix key into inner and outer padding\n      // ipadding = [0x36 * blocksize] ^ key\n      // opadding = [0x5C * blocksize] ^ key\n      _ipadding = forge.util.createBuffer();\n      _opadding = forge.util.createBuffer();\n      keylen = key.length();\n      for(var i = 0; i < keylen; ++i) {\n        var tmp = key.at(i);\n        _ipadding.putByte(0x36 ^ tmp);\n        _opadding.putByte(0x5C ^ tmp);\n      }\n\n      // if key is shorter than blocksize, add additional padding\n      if(keylen < _md.blockLength) {\n        var tmp = _md.blockLength - keylen;\n        for(var i = 0; i < tmp; ++i) {\n          _ipadding.putByte(0x36);\n          _opadding.putByte(0x5C);\n        }\n      }\n      _key = key;\n      _ipadding = _ipadding.bytes();\n      _opadding = _opadding.bytes();\n    }\n\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n\n    // prepare to do inner hash\n    // hash(ipadding | message)\n    _md.start();\n    _md.update(_ipadding);\n  };\n\n  /**\n   * Updates the HMAC with the given message bytes.\n   *\n   * @param bytes the bytes to update with.\n   */\n  ctx.update = function(bytes) {\n    _md.update(bytes);\n  };\n\n  /**\n   * Produces the Message Authentication Code (MAC).\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  ctx.getMac = function() {\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n    // here we do the outer hashing\n    var inner = _md.digest().bytes();\n    _md.start();\n    _md.update(_opadding);\n    _md.update(inner);\n    return _md.digest();\n  };\n  // alias for getMac\n  ctx.digest = ctx.getMac;\n\n  return ctx;\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/hmac.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/index.js":function(module,exports,__webpack_require__){eval('/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = __webpack_require__(/*! ./forge */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js");\n__webpack_require__(/*! ./aes */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/aes.js");\n__webpack_require__(/*! ./aesCipherSuites */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/aesCipherSuites.js");\n__webpack_require__(/*! ./asn1 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/asn1.js");\n__webpack_require__(/*! ./cipher */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/cipher.js");\n__webpack_require__(/*! ./debug */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/debug.js");\n__webpack_require__(/*! ./des */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/des.js");\n__webpack_require__(/*! ./ed25519 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/ed25519.js");\n__webpack_require__(/*! ./hmac */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/hmac.js");\n__webpack_require__(/*! ./kem */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/kem.js");\n__webpack_require__(/*! ./log */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/log.js");\n__webpack_require__(/*! ./md.all */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md.all.js");\n__webpack_require__(/*! ./mgf1 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/mgf1.js");\n__webpack_require__(/*! ./pbkdf2 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pbkdf2.js");\n__webpack_require__(/*! ./pem */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pem.js");\n__webpack_require__(/*! ./pkcs1 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pkcs1.js");\n__webpack_require__(/*! ./pkcs12 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pkcs12.js");\n__webpack_require__(/*! ./pkcs7 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pkcs7.js");\n__webpack_require__(/*! ./pki */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pki.js");\n__webpack_require__(/*! ./prime */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/prime.js");\n__webpack_require__(/*! ./prng */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/prng.js");\n__webpack_require__(/*! ./pss */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pss.js");\n__webpack_require__(/*! ./random */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/random.js");\n__webpack_require__(/*! ./rc2 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/rc2.js");\n__webpack_require__(/*! ./ssh */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/ssh.js");\n__webpack_require__(/*! ./task */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/task.js");\n__webpack_require__(/*! ./tls */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/tls.js");\n__webpack_require__(/*! ./util */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js");\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/index.js?')},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/jsbn.js":function(module,exports,__webpack_require__){eval('// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See "LICENSE" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n/*\nLicensing (LICENSE)\n-------------------\n\nThis software is covered under the following copyright:\n*/\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * "Software"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n/*\nAddress all questions regarding this license to:\n\n  Tom Wu\n  tjw@cs.Stanford.EDU\n*/\nvar forge = __webpack_require__(/*! ./forge */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js");\n\nmodule.exports = forge.jsbn = forge.jsbn || {};\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  this.data = [];\n  if(a != null)\n    if("number" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && "string" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\nforge.jsbn.BigInteger = BigInteger;\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this.data[i++]+w.data[j]+c;\n    c = Math.floor(v/0x4000000);\n    w.data[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this.data[i]&0x7fff;\n    var h = this.data[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w.data[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w.data[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this.data[i]&0x3fff;\n    var h = this.data[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w.data[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w.data[j++] = l&0xfffffff;\n  }\n  return c;\n}\n\n// node.js (no browser)\nif(typeof(navigator) === \'undefined\')\n{\n   BigInteger.prototype.am = am3;\n   dbits = 28;\n} else if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if(j_lm && (navigator.appName != "Netscape")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = "0".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = "a".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = "A".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r.data[i] = this.data[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this.data[0] = x;\n  else if(x < -1) this.data[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == "-") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this.data[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this.data[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this.data[this.t++] = (x>>(this.DB-sh));\n    } else\n      this.data[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this.data[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this.data[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return "-"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = "", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this.data[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this.data[i]&((1<<p)-1))<<(k-p);\n        d |= this.data[--i]>>(p+=this.DB-k);\n      } else {\n        d = (this.data[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:"0";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this.data[i]-a.data[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in "this"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this.data[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r.data[i+n] = this.data[i];\n  for(i = n-1; i >= 0; --i) r.data[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r.data[i-n] = this.data[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r.data[i+ds+1] = (this.data[i]>>cbs)|c;\n    c = (this.data[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r.data[i] = 0;\n  r.data[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r.data[0] = this.data[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r.data[i-ds-1] |= (this.data[i]&bm)<<cbs;\n    r.data[i-ds] = this.data[i]>>bs;\n  }\n  if(bs > 0) r.data[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this.data[i]-a.data[i];\n    r.data[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r.data[i++] = this.DV+c;\n  else if(c > 0) r.data[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// "this" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < y.t; ++i) r.data[i+x.t] = x.am(0,y.data[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x.data[i],r,2*i,0,1);\n    if((r.data[i+x.t]+=x.am(i+1,2*x.data[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r.data[i+x.t] -= x.DV;\n      r.data[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r.data[r.t-1] += x.am(i,x.data[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm.data[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); } else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y.data[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y.data[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r.data[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// "negative" y so we can replace sub with am later\n  while(y.t < ys) y.data[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r.data[--i]==y0)?this.DM:Math.floor(r.data[i]*d1+(r.data[i-1]+e)*d2);\n    if((r.data[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r.data[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using "classic" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return "-1/this % 2^DB"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply "overflows" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this.data[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x.data[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x.data[i]*mp mod DV\n    var j = x.data[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x.data[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x.data[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x.data[j] >= x.DV) { x.data[j] -= x.DV; x.data[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = "x^2/R mod m"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = "xy/R mod m"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this.data[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// "constants"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n// jsbn2 lib\n\n//Copyright (c) 2005-2009  Tom Wu\n//All Rights Reserved.\n//See "LICENSE" for details (See jsbn.js for LICENSE).\n\n//Extended JavaScript BN functions, required for RSA private ops.\n\n//Version 1.1: new BigInteger("0", 10) returns "proper" zero\n\n//(public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n//(public) return value as integer\nfunction bnIntValue() {\nif(this.s < 0) {\n if(this.t == 1) return this.data[0]-this.DV;\n else if(this.t == 0) return -1;\n} else if(this.t == 1) return this.data[0];\nelse if(this.t == 0) return 0;\n// assumes 16 < DB < 32\nreturn ((this.data[1]&((1<<(32-this.DB))-1))<<this.DB)|this.data[0];\n}\n\n//(public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this.data[0]<<24)>>24; }\n\n//(public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this.data[0]<<16)>>16; }\n\n//(protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n//(public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\nif(this.s < 0) return -1;\nelse if(this.t <= 0 || (this.t == 1 && this.data[0] <= 0)) return 0;\nelse return 1;\n}\n\n//(protected) convert to radix string\nfunction bnpToRadix(b) {\nif(b == null) b = 10;\nif(this.signum() == 0 || b < 2 || b > 36) return "0";\nvar cs = this.chunkSize(b);\nvar a = Math.pow(b,cs);\nvar d = nbv(a), y = nbi(), z = nbi(), r = "";\nthis.divRemTo(d,y,z);\nwhile(y.signum() > 0) {\n r = (a+z.intValue()).toString(b).substr(1) + r;\n y.divRemTo(d,y,z);\n}\nreturn z.intValue().toString(b) + r;\n}\n\n//(protected) convert from radix string\nfunction bnpFromRadix(s,b) {\nthis.fromInt(0);\nif(b == null) b = 10;\nvar cs = this.chunkSize(b);\nvar d = Math.pow(b,cs), mi = false, j = 0, w = 0;\nfor(var i = 0; i < s.length; ++i) {\n var x = intAt(s,i);\n if(x < 0) {\n   if(s.charAt(i) == "-" && this.signum() == 0) mi = true;\n   continue;\n }\n w = b*w+x;\n if(++j >= cs) {\n   this.dMultiply(d);\n   this.dAddOffset(w,0);\n   j = 0;\n   w = 0;\n }\n}\nif(j > 0) {\n this.dMultiply(Math.pow(b,j));\n this.dAddOffset(w,0);\n}\nif(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n//(protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\nif("number" == typeof b) {\n // new BigInteger(int,int,RNG)\n if(a < 2) this.fromInt(1);\n else {\n   this.fromNumber(a,c);\n   if(!this.testBit(a-1))  // force MSB set\n     this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n   if(this.isEven()) this.dAddOffset(1,0); // force odd\n   while(!this.isProbablePrime(b)) {\n     this.dAddOffset(2,0);\n     if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n   }\n }\n} else {\n // new BigInteger(int,RNG)\n var x = new Array(), t = a&7;\n x.length = (a>>3)+1;\n b.nextBytes(x);\n if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n this.fromString(x,256);\n}\n}\n\n//(public) convert to bigendian byte array\nfunction bnToByteArray() {\nvar i = this.t, r = new Array();\nr[0] = this.s;\nvar p = this.DB-(i*this.DB)%8, d, k = 0;\nif(i-- > 0) {\n if(p < this.DB && (d = this.data[i]>>p) != (this.s&this.DM)>>p)\n   r[k++] = d|(this.s<<(this.DB-p));\n while(i >= 0) {\n   if(p < 8) {\n     d = (this.data[i]&((1<<p)-1))<<(8-p);\n     d |= this.data[--i]>>(p+=this.DB-8);\n   } else {\n     d = (this.data[i]>>(p-=8))&0xff;\n     if(p <= 0) { p += this.DB; --i; }\n   }\n   if((d&0x80) != 0) d |= -256;\n   if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n   if(k > 0 || d != this.s) r[k++] = d;\n }\n}\nreturn r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n//(protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\nvar i, f, m = Math.min(a.t,this.t);\nfor(i = 0; i < m; ++i) r.data[i] = op(this.data[i],a.data[i]);\nif(a.t < this.t) {\n f = a.s&this.DM;\n for(i = m; i < this.t; ++i) r.data[i] = op(this.data[i],f);\n r.t = this.t;\n} else {\n f = this.s&this.DM;\n for(i = m; i < a.t; ++i) r.data[i] = op(f,a.data[i]);\n r.t = a.t;\n}\nr.s = op(this.s,a.s);\nr.clamp();\n}\n\n//(public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n//(public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n//(public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n//(public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n//(public) ~this\nfunction bnNot() {\nvar r = nbi();\nfor(var i = 0; i < this.t; ++i) r.data[i] = this.DM&~this.data[i];\nr.t = this.t;\nr.s = ~this.s;\nreturn r;\n}\n\n//(public) this << n\nfunction bnShiftLeft(n) {\nvar r = nbi();\nif(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\nreturn r;\n}\n\n//(public) this >> n\nfunction bnShiftRight(n) {\nvar r = nbi();\nif(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\nreturn r;\n}\n\n//return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\nif(x == 0) return -1;\nvar r = 0;\nif((x&0xffff) == 0) { x >>= 16; r += 16; }\nif((x&0xff) == 0) { x >>= 8; r += 8; }\nif((x&0xf) == 0) { x >>= 4; r += 4; }\nif((x&3) == 0) { x >>= 2; r += 2; }\nif((x&1) == 0) ++r;\nreturn r;\n}\n\n//(public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\nfor(var i = 0; i < this.t; ++i)\n if(this.data[i] != 0) return i*this.DB+lbit(this.data[i]);\nif(this.s < 0) return this.t*this.DB;\nreturn -1;\n}\n\n//return number of 1 bits in x\nfunction cbit(x) {\nvar r = 0;\nwhile(x != 0) { x &= x-1; ++r; }\nreturn r;\n}\n\n//(public) return number of set bits\nfunction bnBitCount() {\nvar r = 0, x = this.s&this.DM;\nfor(var i = 0; i < this.t; ++i) r += cbit(this.data[i]^x);\nreturn r;\n}\n\n//(public) true iff nth bit is set\nfunction bnTestBit(n) {\nvar j = Math.floor(n/this.DB);\nif(j >= this.t) return(this.s!=0);\nreturn((this.data[j]&(1<<(n%this.DB)))!=0);\n}\n\n//(protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\nvar r = BigInteger.ONE.shiftLeft(n);\nthis.bitwiseTo(r,op,r);\nreturn r;\n}\n\n//(public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n//(public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n//(public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n//(protected) r = this + a\nfunction bnpAddTo(a,r) {\nvar i = 0, c = 0, m = Math.min(a.t,this.t);\nwhile(i < m) {\n c += this.data[i]+a.data[i];\n r.data[i++] = c&this.DM;\n c >>= this.DB;\n}\nif(a.t < this.t) {\n c += a.s;\n while(i < this.t) {\n   c += this.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += this.s;\n} else {\n c += this.s;\n while(i < a.t) {\n   c += a.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += a.s;\n}\nr.s = (c<0)?-1:0;\nif(c > 0) r.data[i++] = c;\nelse if(c < -1) r.data[i++] = this.DV+c;\nr.t = i;\nr.clamp();\n}\n\n//(public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n//(public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n//(public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n//(public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n//(public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n//(public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\nvar q = nbi(), r = nbi();\nthis.divRemTo(a,q,r);\nreturn new Array(q,r);\n}\n\n//(protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\nthis.data[this.t] = this.am(0,n-1,this,0,0,this.t);\n++this.t;\nthis.clamp();\n}\n\n//(protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\nif(n == 0) return;\nwhile(this.t <= w) this.data[this.t++] = 0;\nthis.data[w] += n;\nwhile(this.data[w] >= this.DV) {\n this.data[w] -= this.DV;\n if(++w >= this.t) this.data[this.t++] = 0;\n ++this.data[w];\n}\n}\n\n//A "null" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n//(public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n//(protected) r = lower n words of "this * a", a.t <= n\n//"this" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\nvar i = Math.min(this.t+a.t,n);\nr.s = 0; // assumes a,this >= 0\nr.t = i;\nwhile(i > 0) r.data[--i] = 0;\nvar j;\nfor(j = r.t-this.t; i < j; ++i) r.data[i+this.t] = this.am(0,a.data[i],r,i,0,this.t);\nfor(j = Math.min(a.t,n); i < j; ++i) this.am(0,a.data[i],r,i,0,n-i);\nr.clamp();\n}\n\n//(protected) r = "this * a" without lower n words, n > 0\n//"this" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n--n;\nvar i = r.t = this.t+a.t-n;\nr.s = 0; // assumes a,this >= 0\nwhile(--i >= 0) r.data[i] = 0;\nfor(i = Math.max(n-this.t,0); i < a.t; ++i)\n r.data[this.t+i-n] = this.am(n-i,a.data[i],r,0,0,this.t+i-n);\nr.clamp();\nr.drShiftTo(1,r);\n}\n\n//Barrett modular reduction\nfunction Barrett(m) {\n// setup Barrett\nthis.r2 = nbi();\nthis.q3 = nbi();\nBigInteger.ONE.dlShiftTo(2*m.t,this.r2);\nthis.mu = this.r2.divide(m);\nthis.m = m;\n}\n\nfunction barrettConvert(x) {\nif(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\nelse if(x.compareTo(this.m) < 0) return x;\nelse { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n//x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\nx.drShiftTo(this.m.t-1,this.r2);\nif(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\nthis.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\nthis.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\nwhile(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\nx.subTo(this.r2,x);\nwhile(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n//r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n//r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n//(public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\nvar i = e.bitLength(), k, r = nbv(1), z;\nif(i <= 0) return r;\nelse if(i < 18) k = 1;\nelse if(i < 48) k = 3;\nelse if(i < 144) k = 4;\nelse if(i < 768) k = 5;\nelse k = 6;\nif(i < 8)\n z = new Classic(m);\nelse if(m.isEven())\n z = new Barrett(m);\nelse\n z = new Montgomery(m);\n\n// precomputation\nvar g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\ng[1] = z.convert(this);\nif(k > 1) {\n var g2 = nbi();\n z.sqrTo(g[1],g2);\n while(n <= km) {\n   g[n] = nbi();\n   z.mulTo(g2,g[n-2],g[n]);\n   n += 2;\n }\n}\n\nvar j = e.t-1, w, is1 = true, r2 = nbi(), t;\ni = nbits(e.data[j])-1;\nwhile(j >= 0) {\n if(i >= k1) w = (e.data[j]>>(i-k1))&km;\n else {\n   w = (e.data[j]&((1<<(i+1))-1))<<(k1-i);\n   if(j > 0) w |= e.data[j-1]>>(this.DB+i-k1);\n }\n\n n = k;\n while((w&1) == 0) { w >>= 1; --n; }\n if((i -= n) < 0) { i += this.DB; --j; }\n if(is1) {  // ret == 1, don\'t bother squaring or multiplying it\n   g[w].copyTo(r);\n   is1 = false;\n } else {\n   while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n   if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n   z.mulTo(r2,g[w],r);\n }\n\n while(j >= 0 && (e.data[j]&(1<<i)) == 0) {\n   z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n   if(--i < 0) { i = this.DB-1; --j; }\n }\n}\nreturn z.revert(r);\n}\n\n//(public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\nvar x = (this.s<0)?this.negate():this.clone();\nvar y = (a.s<0)?a.negate():a.clone();\nif(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\nvar i = x.getLowestSetBit(), g = y.getLowestSetBit();\nif(g < 0) return x;\nif(i < g) g = i;\nif(g > 0) {\n x.rShiftTo(g,x);\n y.rShiftTo(g,y);\n}\nwhile(x.signum() > 0) {\n if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n if(x.compareTo(y) >= 0) {\n   x.subTo(y,x);\n   x.rShiftTo(1,x);\n } else {\n   y.subTo(x,y);\n   y.rShiftTo(1,y);\n }\n}\nif(g > 0) y.lShiftTo(g,y);\nreturn y;\n}\n\n//(protected) this % n, n < 2^26\nfunction bnpModInt(n) {\nif(n <= 0) return 0;\nvar d = this.DV%n, r = (this.s<0)?n-1:0;\nif(this.t > 0)\n if(d == 0) r = this.data[0]%n;\n else for(var i = this.t-1; i >= 0; --i) r = (d*r+this.data[i])%n;\nreturn r;\n}\n\n//(public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\nvar ac = m.isEven();\nif((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\nvar u = m.clone(), v = this.clone();\nvar a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\nwhile(u.signum() != 0) {\n while(u.isEven()) {\n   u.rShiftTo(1,u);\n   if(ac) {\n     if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n     a.rShiftTo(1,a);\n   } else if(!b.isEven()) b.subTo(m,b);\n   b.rShiftTo(1,b);\n }\n while(v.isEven()) {\n   v.rShiftTo(1,v);\n   if(ac) {\n     if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n     c.rShiftTo(1,c);\n   } else if(!d.isEven()) d.subTo(m,d);\n   d.rShiftTo(1,d);\n }\n if(u.compareTo(v) >= 0) {\n   u.subTo(v,u);\n   if(ac) a.subTo(c,a);\n   b.subTo(d,b);\n } else {\n   v.subTo(u,v);\n   if(ac) c.subTo(a,c);\n   d.subTo(b,d);\n }\n}\nif(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\nif(d.compareTo(m) >= 0) return d.subtract(m);\nif(d.signum() < 0) d.addTo(m,d); else return d;\nif(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n//(public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\nvar i, x = this.abs();\nif(x.t == 1 && x.data[0] <= lowprimes[lowprimes.length-1]) {\n for(i = 0; i < lowprimes.length; ++i)\n   if(x.data[0] == lowprimes[i]) return true;\n return false;\n}\nif(x.isEven()) return false;\ni = 1;\nwhile(i < lowprimes.length) {\n var m = lowprimes[i], j = i+1;\n while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n m = x.modInt(m);\n while(i < j) if(m%lowprimes[i++] == 0) return false;\n}\nreturn x.millerRabin(t);\n}\n\n//(protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\nvar n1 = this.subtract(BigInteger.ONE);\nvar k = n1.getLowestSetBit();\nif(k <= 0) return false;\nvar r = n1.shiftRight(k);\nvar prng = bnGetPrng();\nvar a;\nfor(var i = 0; i < t; ++i) {\n // select witness \'a\' at random from between 1 and n1\n do {\n   a = new BigInteger(this.bitLength(), prng);\n }\n while(a.compareTo(BigInteger.ONE) <= 0 || a.compareTo(n1) >= 0);\n var y = a.modPow(r,this);\n if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n   var j = 1;\n   while(j++ < k && y.compareTo(n1) != 0) {\n     y = y.modPowInt(2,this);\n     if(y.compareTo(BigInteger.ONE) == 0) return false;\n   }\n   if(y.compareTo(n1) != 0) return false;\n }\n}\nreturn true;\n}\n\n// get pseudo random number generator\nfunction bnGetPrng() {\n  // create prng with api that matches BigInteger secure random\n  return {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = Math.floor(Math.random() * 0x0100);\n      }\n    }\n  };\n}\n\n//protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n//public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n//BigInteger interfaces not implemented in jsbn:\n\n//BigInteger(int signum, byte[] magnitude)\n//double doubleValue()\n//float floatValue()\n//int hashCode()\n//long longValue()\n//static BigInteger valueOf(long val)\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/jsbn.js?')},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/kem.js":function(module,exports,__webpack_require__){eval("/**\n * Javascript implementation of RSA-KEM.\n *\n * @author Lautaro Cozzani Rodriguez\n * @author Dave Longley\n *\n * Copyright (c) 2014 Lautaro Cozzani <lautaro.cozzani@scytl.com>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n__webpack_require__(/*! ./random */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/random.js\");\n__webpack_require__(/*! ./jsbn */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/jsbn.js\");\n\nmodule.exports = forge.kem = forge.kem || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n/**\n * The API for the RSA Key Encapsulation Mechanism (RSA-KEM) from ISO 18033-2.\n */\nforge.kem.rsa = {};\n\n/**\n * Creates an RSA KEM API object for generating a secret asymmetric key.\n *\n * The symmetric key may be generated via a call to 'encrypt', which will\n * produce a ciphertext to be transmitted to the recipient and a key to be\n * kept secret. The ciphertext is a parameter to be passed to 'decrypt' which\n * will produce the same secret key for the recipient to use to decrypt a\n * message that was encrypted with the secret key.\n *\n * @param kdf the KDF API to use (eg: new forge.kem.kdf1()).\n * @param options the options to use.\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n */\nforge.kem.rsa.create = function(kdf, options) {\n  options = options || {};\n  var prng = options.prng || forge.random;\n\n  var kem = {};\n\n  /**\n   * Generates a secret key and its encapsulation.\n   *\n   * @param publicKey the RSA public key to encrypt with.\n   * @param keyLength the length, in bytes, of the secret key to generate.\n   *\n   * @return an object with:\n   *   encapsulation: the ciphertext for generating the secret key, as a\n   *     binary-encoded string of bytes.\n   *   key: the secret key to use for encrypting a message.\n   */\n  kem.encrypt = function(publicKey, keyLength) {\n    // generate a random r where 1 < r < n\n    var byteLength = Math.ceil(publicKey.n.bitLength() / 8);\n    var r;\n    do {\n      r = new BigInteger(\n        forge.util.bytesToHex(prng.getBytesSync(byteLength)),\n        16).mod(publicKey.n);\n    } while(r.compareTo(BigInteger.ONE) <= 0);\n\n    // prepend r with zeros\n    r = forge.util.hexToBytes(r.toString(16));\n    var zeros = byteLength - r.length;\n    if(zeros > 0) {\n      r = forge.util.fillString(String.fromCharCode(0), zeros) + r;\n    }\n\n    // encrypt the random\n    var encapsulation = publicKey.encrypt(r, 'NONE');\n\n    // generate the secret key\n    var key = kdf.generate(r, keyLength);\n\n    return {encapsulation: encapsulation, key: key};\n  };\n\n  /**\n   * Decrypts an encapsulated secret key.\n   *\n   * @param privateKey the RSA private key to decrypt with.\n   * @param encapsulation the ciphertext for generating the secret key, as\n   *          a binary-encoded string of bytes.\n   * @param keyLength the length, in bytes, of the secret key to generate.\n   *\n   * @return the secret key as a binary-encoded string of bytes.\n   */\n  kem.decrypt = function(privateKey, encapsulation, keyLength) {\n    // decrypt the encapsulation and generate the secret key\n    var r = privateKey.decrypt(encapsulation, 'NONE');\n    return kdf.generate(r, keyLength);\n  };\n\n  return kem;\n};\n\n// TODO: add forge.kem.kdf.create('KDF1', {md: ..., ...}) API?\n\n/**\n * Creates a key derivation API object that implements KDF1 per ISO 18033-2.\n *\n * @param md the hash API to use.\n * @param [digestLength] an optional digest length that must be positive and\n *          less than or equal to md.digestLength.\n *\n * @return a KDF1 API object.\n */\nforge.kem.kdf1 = function(md, digestLength) {\n  _createKDF(this, md, 0, digestLength || md.digestLength);\n};\n\n/**\n * Creates a key derivation API object that implements KDF2 per ISO 18033-2.\n *\n * @param md the hash API to use.\n * @param [digestLength] an optional digest length that must be positive and\n *          less than or equal to md.digestLength.\n *\n * @return a KDF2 API object.\n */\nforge.kem.kdf2 = function(md, digestLength) {\n  _createKDF(this, md, 1, digestLength || md.digestLength);\n};\n\n/**\n * Creates a KDF1 or KDF2 API object.\n *\n * @param md the hash API to use.\n * @param counterStart the starting index for the counter.\n * @param digestLength the digest length to use.\n *\n * @return the KDF API object.\n */\nfunction _createKDF(kdf, md, counterStart, digestLength) {\n  /**\n   * Generate a key of the specified length.\n   *\n   * @param x the binary-encoded byte string to generate a key from.\n   * @param length the number of bytes to generate (the size of the key).\n   *\n   * @return the key as a binary-encoded string.\n   */\n  kdf.generate = function(x, length) {\n    var key = new forge.util.ByteBuffer();\n\n    // run counter from counterStart to ceil(length / Hash.len)\n    var k = Math.ceil(length / digestLength) + counterStart;\n\n    var c = new forge.util.ByteBuffer();\n    for(var i = counterStart; i < k; ++i) {\n      // I2OSP(i, 4): convert counter to an octet string of 4 octets\n      c.putInt32(i);\n\n      // digest 'x' and the counter and add the result to the key\n      md.start();\n      md.update(x + c.getBytes());\n      var hash = md.digest();\n      key.putBytes(hash.getBytes(digestLength));\n    }\n\n    // truncate to the correct key length\n    key.truncate(key.length() - length);\n    return key.getBytes();\n  };\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/kem.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/log.js":function(module,exports,__webpack_require__){eval("/**\n * Cross-browser support for logging in a web application.\n *\n * @author David I. Lehn <dlehn@digitalbazaar.com>\n *\n * Copyright (c) 2008-2013 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\n/* LOG API */\nmodule.exports = forge.log = forge.log || {};\n\n/**\n * Application logging system.\n *\n * Each logger level available as it's own function of the form:\n *   forge.log.level(category, args...)\n * The category is an arbitrary string, and the args are the same as\n * Firebug's console.log API. By default the call will be output as:\n *   'LEVEL [category] <args[0]>, args[1], ...'\n * This enables proper % formatting via the first argument.\n * Each category is enabled by default but can be enabled or disabled with\n * the setCategoryEnabled() function.\n */\n// list of known levels\nforge.log.levels = [\n  'none', 'error', 'warning', 'info', 'debug', 'verbose', 'max'];\n// info on the levels indexed by name:\n//   index: level index\n//   name: uppercased display name\nvar sLevelInfo = {};\n// list of loggers\nvar sLoggers = [];\n/**\n * Standard console logger. If no console support is enabled this will\n * remain null. Check before using.\n */\nvar sConsoleLogger = null;\n\n// logger flags\n/**\n * Lock the level at the current value. Used in cases where user config may\n * set the level such that only critical messages are seen but more verbose\n * messages are needed for debugging or other purposes.\n */\nforge.log.LEVEL_LOCKED = (1 << 1);\n/**\n * Always call log function. By default, the logging system will check the\n * message level against logger.level before calling the log function. This\n * flag allows the function to do its own check.\n */\nforge.log.NO_LEVEL_CHECK = (1 << 2);\n/**\n * Perform message interpolation with the passed arguments. \"%\" style\n * fields in log messages will be replaced by arguments as needed. Some\n * loggers, such as Firebug, may do this automatically. The original log\n * message will be available as 'message' and the interpolated version will\n * be available as 'fullMessage'.\n */\nforge.log.INTERPOLATE = (1 << 3);\n\n// setup each log level\nfor(var i = 0; i < forge.log.levels.length; ++i) {\n  var level = forge.log.levels[i];\n  sLevelInfo[level] = {\n    index: i,\n    name: level.toUpperCase()\n  };\n}\n\n/**\n * Message logger. Will dispatch a message to registered loggers as needed.\n *\n * @param message message object\n */\nforge.log.logMessage = function(message) {\n  var messageLevelIndex = sLevelInfo[message.level].index;\n  for(var i = 0; i < sLoggers.length; ++i) {\n    var logger = sLoggers[i];\n    if(logger.flags & forge.log.NO_LEVEL_CHECK) {\n      logger.f(message);\n    } else {\n      // get logger level\n      var loggerLevelIndex = sLevelInfo[logger.level].index;\n      // check level\n      if(messageLevelIndex <= loggerLevelIndex) {\n        // message critical enough, call logger\n        logger.f(logger, message);\n      }\n    }\n  }\n};\n\n/**\n * Sets the 'standard' key on a message object to:\n * \"LEVEL [category] \" + message\n *\n * @param message a message log object\n */\nforge.log.prepareStandard = function(message) {\n  if(!('standard' in message)) {\n    message.standard =\n      sLevelInfo[message.level].name +\n      //' ' + +message.timestamp +\n      ' [' + message.category + '] ' +\n      message.message;\n  }\n};\n\n/**\n * Sets the 'full' key on a message object to the original message\n * interpolated via % formatting with the message arguments.\n *\n * @param message a message log object.\n */\nforge.log.prepareFull = function(message) {\n  if(!('full' in message)) {\n    // copy args and insert message at the front\n    var args = [message.message];\n    args = args.concat([] || false);\n    // format the message\n    message.full = forge.util.format.apply(this, args);\n  }\n};\n\n/**\n * Applies both preparseStandard() and prepareFull() to a message object and\n * store result in 'standardFull'.\n *\n * @param message a message log object.\n */\nforge.log.prepareStandardFull = function(message) {\n  if(!('standardFull' in message)) {\n    // FIXME implement 'standardFull' logging\n    forge.log.prepareStandard(message);\n    message.standardFull = message.standard;\n  }\n};\n\n// create log level functions\nif(true) {\n  // levels for which we want functions\n  var levels = ['error', 'warning', 'info', 'debug', 'verbose'];\n  for(var i = 0; i < levels.length; ++i) {\n    // wrap in a function to ensure proper level var is passed\n    (function(level) {\n      // create function for this level\n      forge.log[level] = function(category, message/*, args...*/) {\n        // convert arguments to real array, remove category and message\n        var args = Array.prototype.slice.call(arguments).slice(2);\n        // create message object\n        // Note: interpolation and standard formatting is done lazily\n        var msg = {\n          timestamp: new Date(),\n          level: level,\n          category: category,\n          message: message,\n          'arguments': args\n          /*standard*/\n          /*full*/\n          /*fullMessage*/\n        };\n        // process this message\n        forge.log.logMessage(msg);\n      };\n    })(levels[i]);\n  }\n}\n\n/**\n * Creates a new logger with specified custom logging function.\n *\n * The logging function has a signature of:\n *   function(logger, message)\n * logger: current logger\n * message: object:\n *   level: level id\n *   category: category\n *   message: string message\n *   arguments: Array of extra arguments\n *   fullMessage: interpolated message and arguments if INTERPOLATE flag set\n *\n * @param logFunction a logging function which takes a log message object\n *          as a parameter.\n *\n * @return a logger object.\n */\nforge.log.makeLogger = function(logFunction) {\n  var logger = {\n    flags: 0,\n    f: logFunction\n  };\n  forge.log.setLevel(logger, 'none');\n  return logger;\n};\n\n/**\n * Sets the current log level on a logger.\n *\n * @param logger the target logger.\n * @param level the new maximum log level as a string.\n *\n * @return true if set, false if not.\n */\nforge.log.setLevel = function(logger, level) {\n  var rval = false;\n  if(logger && !(logger.flags & forge.log.LEVEL_LOCKED)) {\n    for(var i = 0; i < forge.log.levels.length; ++i) {\n      var aValidLevel = forge.log.levels[i];\n      if(level == aValidLevel) {\n        // set level\n        logger.level = level;\n        rval = true;\n        break;\n      }\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Locks the log level at its current value.\n *\n * @param logger the target logger.\n * @param lock boolean lock value, default to true.\n */\nforge.log.lock = function(logger, lock) {\n  if(typeof lock === 'undefined' || lock) {\n    logger.flags |= forge.log.LEVEL_LOCKED;\n  } else {\n    logger.flags &= ~forge.log.LEVEL_LOCKED;\n  }\n};\n\n/**\n * Adds a logger.\n *\n * @param logger the logger object.\n */\nforge.log.addLogger = function(logger) {\n  sLoggers.push(logger);\n};\n\n// setup the console logger if possible, else create fake console.log\nif(typeof(console) !== 'undefined' && 'log' in console) {\n  var logger;\n  if(console.error && console.warn && console.info && console.debug) {\n    // looks like Firebug-style logging is available\n    // level handlers map\n    var levelHandlers = {\n      error: console.error,\n      warning: console.warn,\n      info: console.info,\n      debug: console.debug,\n      verbose: console.debug\n    };\n    var f = function(logger, message) {\n      forge.log.prepareStandard(message);\n      var handler = levelHandlers[message.level];\n      // prepend standard message and concat args\n      var args = [message.standard];\n      args = args.concat(message['arguments'].slice());\n      // apply to low-level console function\n      handler.apply(console, args);\n    };\n    logger = forge.log.makeLogger(f);\n  } else {\n    // only appear to have basic console.log\n    var f = function(logger, message) {\n      forge.log.prepareStandardFull(message);\n      console.log(message.standardFull);\n    };\n    logger = forge.log.makeLogger(f);\n  }\n  forge.log.setLevel(logger, 'debug');\n  forge.log.addLogger(logger);\n  sConsoleLogger = logger;\n} else {\n  // define fake console.log to avoid potential script errors on\n  // browsers that do not have console logging\n  console = {\n    log: function() {}\n  };\n}\n\n/*\n * Check for logging control query vars.\n *\n * console.level=<level-name>\n * Set's the console log level by name.  Useful to override defaults and\n * allow more verbose logging before a user config is loaded.\n *\n * console.lock=<true|false>\n * Lock the console log level at whatever level it is set at.  This is run\n * after console.level is processed.  Useful to force a level of verbosity\n * that could otherwise be limited by a user config.\n */\nif(sConsoleLogger !== null) {\n  var query = forge.util.getQueryVariables();\n  if('console.level' in query) {\n    // set with last value\n    forge.log.setLevel(\n      sConsoleLogger, query['console.level'].slice(-1)[0]);\n  }\n  if('console.lock' in query) {\n    // set with last value\n    var lock = query['console.lock'].slice(-1)[0];\n    if(lock == 'true') {\n      forge.log.lock(sConsoleLogger);\n    }\n  }\n}\n\n// provide public access to console logger\nforge.log.consoleLogger = sConsoleLogger;\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/log.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md.all.js":function(module,exports,__webpack_require__){eval('/**\n * Node.js module for all known Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nmodule.exports = __webpack_require__(/*! ./md */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md.js");\n\n__webpack_require__(/*! ./md5 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md5.js");\n__webpack_require__(/*! ./sha1 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/sha1.js");\n__webpack_require__(/*! ./sha256 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/sha256.js");\n__webpack_require__(/*! ./sha512 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/sha512.js");\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/md.all.js?')},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md.js":function(module,exports,__webpack_require__){eval('/**\n * Node.js module for Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js");\n\nmodule.exports = forge.md = forge.md || {};\nforge.md.algorithms = forge.md.algorithms || {};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/md.js?')},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md5.js":function(module,exports,__webpack_require__){eval("/**\n * Message Digest Algorithm 5 with 128-bit digest (MD5) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./md */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\nvar md5 = module.exports = forge.md5 = forge.md5 || {};\nforge.md.md5 = forge.md.algorithms.md5 = md5;\n\n/**\n * Creates an MD5 message digest object.\n *\n * @return a message digest object.\n */\nmd5.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // MD5 state contains four 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(16);\n\n  // message digest object\n  var md = {\n    algorithm: 'md5',\n    blockLength: 64,\n    digestLength: 16,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = (len[1] / 0x100000000) >>> 0;\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate MD5 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in little-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry\n    var bits, carry = 0;\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      bits = md.fullMessageLength[i] * 8 + carry;\n      carry = (bits / 0x100000000) >>> 0;\n      finalBlock.putInt32Le(bits >>> 0);\n    }\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32Le(s2.h0);\n    rval.putInt32Le(s2.h1);\n    rval.putInt32Le(s2.h2);\n    rval.putInt32Le(s2.h3);\n    return rval;\n  };\n\n  return md;\n};\n\n// padding, constant tables for calculating md5\nvar _padding = null;\nvar _g = null;\nvar _r = null;\nvar _k = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // g values\n  _g = [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12,\n    5, 8, 11, 14, 1, 4, 7, 10, 13, 0, 3, 6, 9, 12, 15, 2,\n    0, 7, 14, 5, 12, 3, 10, 1, 8, 15, 6, 13, 4, 11, 2, 9];\n\n  // rounds table\n  _r = [\n    7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,\n    5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,\n    4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,\n    6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21];\n\n  // get the result of abs(sin(i + 1)) as a 32-bit integer\n  _k = new Array(64);\n  for(var i = 0; i < 64; ++i) {\n    _k[i] = Math.floor(Math.abs(Math.sin(i + 1)) * 0x100000000);\n  }\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates an MD5 state with the given byte buffer.\n *\n * @param s the MD5 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, f, r, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32Le();\n      f = d ^ (b & (c ^ d));\n      t = (a + f + _k[i] + w[i]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      f = c ^ (d & (b ^ c));\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 3\n    for(; i < 48; ++i) {\n      f = b ^ c ^ d;\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 4\n    for(; i < 64; ++i) {\n      f = c ^ (b | ~d);\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n\n    len -= 64;\n  }\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/md5.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/mgf.js":function(module,exports,__webpack_require__){eval('/**\n * Node.js module for Forge mask generation functions.\n *\n * @author Stefan Siegl\n *\n * Copyright 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = __webpack_require__(/*! ./forge */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js");\n__webpack_require__(/*! ./mgf1 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/mgf1.js");\n\nmodule.exports = forge.mgf = forge.mgf || {};\nforge.mgf.mgf1 = forge.mgf1;\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/mgf.js?')},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/mgf1.js":function(module,exports,__webpack_require__){eval('/**\n * Javascript implementation of mask generation function MGF1.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js");\n__webpack_require__(/*! ./util */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js");\n\nforge.mgf = forge.mgf || {};\nvar mgf1 = module.exports = forge.mgf.mgf1 = forge.mgf1 = forge.mgf1 || {};\n\n/**\n * Creates a MGF1 mask generation function object.\n *\n * @param md the message digest API to use (eg: forge.md.sha1.create()).\n *\n * @return a mask generation function object.\n */\nmgf1.create = function(md) {\n  var mgf = {\n    /**\n     * Generate mask of specified length.\n     *\n     * @param {String} seed The seed for mask generation.\n     * @param maskLen Number of bytes to generate.\n     * @return {String} The generated mask.\n     */\n    generate: function(seed, maskLen) {\n      /* 2. Let T be the empty octet string. */\n      var t = new forge.util.ByteBuffer();\n\n      /* 3. For counter from 0 to ceil(maskLen / hLen), do the following: */\n      var len = Math.ceil(maskLen / md.digestLength);\n      for(var i = 0; i < len; i++) {\n        /* a. Convert counter to an octet string C of length 4 octets */\n        var c = new forge.util.ByteBuffer();\n        c.putInt32(i);\n\n        /* b. Concatenate the hash of the seed mgfSeed and C to the octet\n         * string T: */\n        md.start();\n        md.update(seed + c.getBytes());\n        t.putBuffer(md.digest());\n      }\n\n      /* Output the leading maskLen octets of T as the octet string mask. */\n      t.truncate(t.length() - maskLen);\n      return t.getBytes();\n    }\n  };\n\n  return mgf;\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/mgf1.js?')},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/oids.js":function(module,exports,__webpack_require__){eval("/**\n * Object IDs for ASN.1.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n\nforge.pki = forge.pki || {};\nvar oids = module.exports = forge.pki.oids = forge.oids = forge.oids || {};\n\n// set id to name mapping and name to id mapping\nfunction _IN(id, name) {\n  oids[id] = name;\n  oids[name] = id;\n}\n// set id to name mapping only\nfunction _I_(id, name) {\n  oids[id] = name;\n}\n\n// algorithm OIDs\n_IN('1.2.840.113549.1.1.1', 'rsaEncryption');\n// Note: md2 & md4 not implemented\n//_IN('1.2.840.113549.1.1.2', 'md2WithRSAEncryption');\n//_IN('1.2.840.113549.1.1.3', 'md4WithRSAEncryption');\n_IN('1.2.840.113549.1.1.4', 'md5WithRSAEncryption');\n_IN('1.2.840.113549.1.1.5', 'sha1WithRSAEncryption');\n_IN('1.2.840.113549.1.1.7', 'RSAES-OAEP');\n_IN('1.2.840.113549.1.1.8', 'mgf1');\n_IN('1.2.840.113549.1.1.9', 'pSpecified');\n_IN('1.2.840.113549.1.1.10', 'RSASSA-PSS');\n_IN('1.2.840.113549.1.1.11', 'sha256WithRSAEncryption');\n_IN('1.2.840.113549.1.1.12', 'sha384WithRSAEncryption');\n_IN('1.2.840.113549.1.1.13', 'sha512WithRSAEncryption');\n\n_IN('1.2.840.10040.4.3', 'dsa-with-sha1');\n\n_IN('1.3.14.3.2.7', 'desCBC');\n\n_IN('1.3.14.3.2.26', 'sha1');\n_IN('2.16.840.1.101.3.4.2.1', 'sha256');\n_IN('2.16.840.1.101.3.4.2.2', 'sha384');\n_IN('2.16.840.1.101.3.4.2.3', 'sha512');\n_IN('1.2.840.113549.2.5', 'md5');\n\n// pkcs#7 content types\n_IN('1.2.840.113549.1.7.1', 'data');\n_IN('1.2.840.113549.1.7.2', 'signedData');\n_IN('1.2.840.113549.1.7.3', 'envelopedData');\n_IN('1.2.840.113549.1.7.4', 'signedAndEnvelopedData');\n_IN('1.2.840.113549.1.7.5', 'digestedData');\n_IN('1.2.840.113549.1.7.6', 'encryptedData');\n\n// pkcs#9 oids\n_IN('1.2.840.113549.1.9.1', 'emailAddress');\n_IN('1.2.840.113549.1.9.2', 'unstructuredName');\n_IN('1.2.840.113549.1.9.3', 'contentType');\n_IN('1.2.840.113549.1.9.4', 'messageDigest');\n_IN('1.2.840.113549.1.9.5', 'signingTime');\n_IN('1.2.840.113549.1.9.6', 'counterSignature');\n_IN('1.2.840.113549.1.9.7', 'challengePassword');\n_IN('1.2.840.113549.1.9.8', 'unstructuredAddress');\n_IN('1.2.840.113549.1.9.14', 'extensionRequest');\n\n_IN('1.2.840.113549.1.9.20', 'friendlyName');\n_IN('1.2.840.113549.1.9.21', 'localKeyId');\n_IN('1.2.840.113549.1.9.22.1', 'x509Certificate');\n\n// pkcs#12 safe bags\n_IN('1.2.840.113549.1.12.10.1.1', 'keyBag');\n_IN('1.2.840.113549.1.12.10.1.2', 'pkcs8ShroudedKeyBag');\n_IN('1.2.840.113549.1.12.10.1.3', 'certBag');\n_IN('1.2.840.113549.1.12.10.1.4', 'crlBag');\n_IN('1.2.840.113549.1.12.10.1.5', 'secretBag');\n_IN('1.2.840.113549.1.12.10.1.6', 'safeContentsBag');\n\n// password-based-encryption for pkcs#12\n_IN('1.2.840.113549.1.5.13', 'pkcs5PBES2');\n_IN('1.2.840.113549.1.5.12', 'pkcs5PBKDF2');\n\n_IN('1.2.840.113549.1.12.1.1', 'pbeWithSHAAnd128BitRC4');\n_IN('1.2.840.113549.1.12.1.2', 'pbeWithSHAAnd40BitRC4');\n_IN('1.2.840.113549.1.12.1.3', 'pbeWithSHAAnd3-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.4', 'pbeWithSHAAnd2-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.5', 'pbeWithSHAAnd128BitRC2-CBC');\n_IN('1.2.840.113549.1.12.1.6', 'pbewithSHAAnd40BitRC2-CBC');\n\n// hmac OIDs\n_IN('1.2.840.113549.2.7', 'hmacWithSHA1');\n_IN('1.2.840.113549.2.8', 'hmacWithSHA224');\n_IN('1.2.840.113549.2.9', 'hmacWithSHA256');\n_IN('1.2.840.113549.2.10', 'hmacWithSHA384');\n_IN('1.2.840.113549.2.11', 'hmacWithSHA512');\n\n// symmetric key algorithm oids\n_IN('1.2.840.113549.3.7', 'des-EDE3-CBC');\n_IN('2.16.840.1.101.3.4.1.2', 'aes128-CBC');\n_IN('2.16.840.1.101.3.4.1.22', 'aes192-CBC');\n_IN('2.16.840.1.101.3.4.1.42', 'aes256-CBC');\n\n// certificate issuer/subject OIDs\n_IN('2.5.4.3', 'commonName');\n_IN('2.5.4.5', 'serialName');\n_IN('2.5.4.6', 'countryName');\n_IN('2.5.4.7', 'localityName');\n_IN('2.5.4.8', 'stateOrProvinceName');\n_IN('2.5.4.10', 'organizationName');\n_IN('2.5.4.11', 'organizationalUnitName');\n_IN('2.5.4.13', 'description');\n\n// X.509 extension OIDs\n_IN('2.16.840.1.113730.1.1', 'nsCertType');\n_IN('2.16.840.1.113730.1.13', 'nsComment'); // deprecated in theory; still widely used\n_I_('2.5.29.1', 'authorityKeyIdentifier'); // deprecated, use .35\n_I_('2.5.29.2', 'keyAttributes'); // obsolete use .37 or .15\n_I_('2.5.29.3', 'certificatePolicies'); // deprecated, use .32\n_I_('2.5.29.4', 'keyUsageRestriction'); // obsolete use .37 or .15\n_I_('2.5.29.5', 'policyMapping'); // deprecated use .33\n_I_('2.5.29.6', 'subtreesConstraint'); // obsolete use .30\n_I_('2.5.29.7', 'subjectAltName'); // deprecated use .17\n_I_('2.5.29.8', 'issuerAltName'); // deprecated use .18\n_I_('2.5.29.9', 'subjectDirectoryAttributes');\n_I_('2.5.29.10', 'basicConstraints'); // deprecated use .19\n_I_('2.5.29.11', 'nameConstraints'); // deprecated use .30\n_I_('2.5.29.12', 'policyConstraints'); // deprecated use .36\n_I_('2.5.29.13', 'basicConstraints'); // deprecated use .19\n_IN('2.5.29.14', 'subjectKeyIdentifier');\n_IN('2.5.29.15', 'keyUsage');\n_I_('2.5.29.16', 'privateKeyUsagePeriod');\n_IN('2.5.29.17', 'subjectAltName');\n_IN('2.5.29.18', 'issuerAltName');\n_IN('2.5.29.19', 'basicConstraints');\n_I_('2.5.29.20', 'cRLNumber');\n_I_('2.5.29.21', 'cRLReason');\n_I_('2.5.29.22', 'expirationDate');\n_I_('2.5.29.23', 'instructionCode');\n_I_('2.5.29.24', 'invalidityDate');\n_I_('2.5.29.25', 'cRLDistributionPoints'); // deprecated use .31\n_I_('2.5.29.26', 'issuingDistributionPoint'); // deprecated use .28\n_I_('2.5.29.27', 'deltaCRLIndicator');\n_I_('2.5.29.28', 'issuingDistributionPoint');\n_I_('2.5.29.29', 'certificateIssuer');\n_I_('2.5.29.30', 'nameConstraints');\n_IN('2.5.29.31', 'cRLDistributionPoints');\n_IN('2.5.29.32', 'certificatePolicies');\n_I_('2.5.29.33', 'policyMappings');\n_I_('2.5.29.34', 'policyConstraints'); // deprecated use .36\n_IN('2.5.29.35', 'authorityKeyIdentifier');\n_I_('2.5.29.36', 'policyConstraints');\n_IN('2.5.29.37', 'extKeyUsage');\n_I_('2.5.29.46', 'freshestCRL');\n_I_('2.5.29.54', 'inhibitAnyPolicy');\n\n// extKeyUsage purposes\n_IN('1.3.6.1.4.1.11129.2.4.2', 'timestampList');\n_IN('1.3.6.1.5.5.7.1.1', 'authorityInfoAccess');\n_IN('1.3.6.1.5.5.7.3.1', 'serverAuth');\n_IN('1.3.6.1.5.5.7.3.2', 'clientAuth');\n_IN('1.3.6.1.5.5.7.3.3', 'codeSigning');\n_IN('1.3.6.1.5.5.7.3.4', 'emailProtection');\n_IN('1.3.6.1.5.5.7.3.8', 'timeStamping');\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/oids.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pbe.js":function(module,exports,__webpack_require__){eval("/**\n * Password-based encryption functions.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * An EncryptedPrivateKeyInfo:\n *\n * EncryptedPrivateKeyInfo ::= SEQUENCE {\n *   encryptionAlgorithm  EncryptionAlgorithmIdentifier,\n *   encryptedData        EncryptedData }\n *\n * EncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedData ::= OCTET STRING\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./aes */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/aes.js\");\n__webpack_require__(/*! ./asn1 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/asn1.js\");\n__webpack_require__(/*! ./des */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/des.js\");\n__webpack_require__(/*! ./md */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md.js\");\n__webpack_require__(/*! ./oids */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/oids.js\");\n__webpack_require__(/*! ./pbkdf2 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pbkdf2.js\");\n__webpack_require__(/*! ./pem */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pem.js\");\n__webpack_require__(/*! ./random */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/random.js\");\n__webpack_require__(/*! ./rc2 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/rc2.js\");\n__webpack_require__(/*! ./rsa */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/rsa.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Password-based encryption implementation. */\nvar pki = forge.pki = forge.pki || {};\nmodule.exports = pki.pbe = forge.pbe = forge.pbe || {};\nvar oids = pki.oids;\n\n// validator for an EncryptedPrivateKeyInfo structure\n// Note: Currently only works w/algorithm params\nvar encryptedPrivateKeyValidator = {\n  name: 'EncryptedPrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedPrivateKeyInfo.encryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encryptionOid'\n    }, {\n      name: 'AlgorithmIdentifier.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'encryptionParams'\n    }]\n  }, {\n    // encryptedData\n    name: 'EncryptedPrivateKeyInfo.encryptedData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encryptedData'\n  }]\n};\n\n// validator for a PBES2Algorithms structure\n// Note: Currently only works w/PBKDF2 + AES encryption schemes\nvar PBES2AlgorithmsValidator = {\n  name: 'PBES2Algorithms',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PBES2Algorithms.keyDerivationFunc',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.keyDerivationFunc.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'kdfOid'\n    }, {\n      name: 'PBES2Algorithms.params',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'PBES2Algorithms.params.salt',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'kdfSalt'\n      }, {\n        name: 'PBES2Algorithms.params.iterationCount',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'kdfIterationCount'\n      }, {\n        name: 'PBES2Algorithms.params.keyLength',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        optional: true,\n        capture: 'keyLength'\n      }, {\n        // prf\n        name: 'PBES2Algorithms.params.prf',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        optional: true,\n        value: [{\n          name: 'PBES2Algorithms.params.prf.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'prfOid'\n        }]\n      }]\n    }]\n  }, {\n    name: 'PBES2Algorithms.encryptionScheme',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.encryptionScheme.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encOid'\n    }, {\n      name: 'PBES2Algorithms.encryptionScheme.iv',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'encIv'\n    }]\n  }]\n};\n\nvar pkcs12PbeParamsValidator = {\n  name: 'pkcs-12PbeParams',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'pkcs-12PbeParams.salt',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'salt'\n  }, {\n    name: 'pkcs-12PbeParams.iterations',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'iterations'\n  }]\n};\n\n/**\n * Encrypts a ASN.1 PrivateKeyInfo object, producing an EncryptedPrivateKeyInfo.\n *\n * PBES2Algorithms ALGORITHM-IDENTIFIER ::=\n *   { {PBES2-params IDENTIFIED BY id-PBES2}, ...}\n *\n * id-PBES2 OBJECT IDENTIFIER ::= {pkcs-5 13}\n *\n * PBES2-params ::= SEQUENCE {\n *   keyDerivationFunc AlgorithmIdentifier {{PBES2-KDFs}},\n *   encryptionScheme AlgorithmIdentifier {{PBES2-Encs}}\n * }\n *\n * PBES2-KDFs ALGORITHM-IDENTIFIER ::=\n *   { {PBKDF2-params IDENTIFIED BY id-PBKDF2}, ... }\n *\n * PBES2-Encs ALGORITHM-IDENTIFIER ::= { ... }\n *\n * PBKDF2-params ::= SEQUENCE {\n *   salt CHOICE {\n *     specified OCTET STRING,\n *     otherSource AlgorithmIdentifier {{PBKDF2-SaltSources}}\n *   },\n *   iterationCount INTEGER (1..MAX),\n *   keyLength INTEGER (1..MAX) OPTIONAL,\n *   prf AlgorithmIdentifier {{PBKDF2-PRFs}} DEFAULT algid-hmacWithSHA1\n * }\n *\n * @param obj the ASN.1 PrivateKeyInfo object.\n * @param password the password to encrypt with.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          prfAlgorithm the PRF message digest algorithm to use\n *            ('sha1', 'sha224', 'sha256', 'sha384', 'sha512')\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptPrivateKeyInfo = function(obj, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || 'aes128';\n  options.prfAlgorithm = options.prfAlgorithm || 'sha1';\n\n  // generate PBE params\n  var salt = forge.random.getBytesSync(options.saltSize);\n  var count = options.count;\n  var countBytes = asn1.integerToDer(count);\n  var dkLen;\n  var encryptionAlgorithm;\n  var encryptedData;\n  if(options.algorithm.indexOf('aes') === 0 || options.algorithm === 'des') {\n    // do PBES2\n    var ivLen, encOid, cipherFn;\n    switch(options.algorithm) {\n    case 'aes128':\n      dkLen = 16;\n      ivLen = 16;\n      encOid = oids['aes128-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes192':\n      dkLen = 24;\n      ivLen = 16;\n      encOid = oids['aes192-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes256':\n      dkLen = 32;\n      ivLen = 16;\n      encOid = oids['aes256-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'des':\n      dkLen = 8;\n      ivLen = 8;\n      encOid = oids['desCBC'];\n      cipherFn = forge.des.createEncryptionCipher;\n      break;\n    default:\n      var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n      error.algorithm = options.algorithm;\n      throw error;\n    }\n\n    // get PRF message digest\n    var prfAlgorithm = 'hmacWith' + options.prfAlgorithm.toUpperCase();\n    var md = prfAlgorithmToMessageDigest(prfAlgorithm);\n\n    // encrypt private key using pbe SHA-1 and AES/DES\n    var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n    var iv = forge.random.getBytesSync(ivLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    // get PBKDF2-params\n    var params = createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm);\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pkcs5PBES2']).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // keyDerivationFunc\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oids['pkcs5PBKDF2']).getBytes()),\n          // PBKDF2-params\n          params\n        ]),\n        // encryptionScheme\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(encOid).getBytes()),\n          // iv\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, iv)\n        ])\n      ])\n    ]);\n  } else if(options.algorithm === '3des') {\n    // Do PKCS12 PBE\n    dkLen = 24;\n\n    var saltBytes = new forge.util.ByteBuffer(salt);\n    var dk = pki.pbe.generatePkcs12Key(password, saltBytes, 1, count, dkLen);\n    var iv = pki.pbe.generatePkcs12Key(password, saltBytes, 2, count, dkLen);\n    var cipher = forge.des.createEncryptionCipher(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pbeWithSHAAnd3-KeyTripleDES-CBC']).getBytes()),\n      // pkcs-12PbeParams\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // salt\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n        // iteration count\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n          countBytes.getBytes())\n      ])\n    ]);\n  } else {\n    var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // EncryptedPrivateKeyInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // encryptionAlgorithm\n    encryptionAlgorithm,\n    // encryptedData\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, encryptedData)\n  ]);\n  return rval;\n};\n\n/**\n * Decrypts a ASN.1 PrivateKeyInfo object.\n *\n * @param obj the ASN.1 EncryptedPrivateKeyInfo object.\n * @param password the password to decrypt with.\n *\n * @return the ASN.1 PrivateKeyInfo on success, null on failure.\n */\npki.decryptPrivateKeyInfo = function(obj, password) {\n  var rval = null;\n\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, encryptedPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get cipher\n  var oid = asn1.derToOid(capture.encryptionOid);\n  var cipher = pki.pbe.getCipher(oid, capture.encryptionParams, password);\n\n  // get encrypted data\n  var encrypted = forge.util.createBuffer(capture.encryptedData);\n\n  cipher.update(encrypted);\n  if(cipher.finish()) {\n    rval = asn1.fromDer(cipher.output);\n  }\n\n  return rval;\n};\n\n/**\n * Converts a EncryptedPrivateKeyInfo to PEM format.\n *\n * @param epki the EncryptedPrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted encrypted private key.\n */\npki.encryptedPrivateKeyToPem = function(epki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'ENCRYPTED PRIVATE KEY',\n    body: asn1.toDer(epki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PEM-encoded EncryptedPrivateKeyInfo to ASN.1 format. Decryption\n * is not performed.\n *\n * @param pem the EncryptedPrivateKeyInfo in PEM-format.\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptedPrivateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY') {\n    var error = new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM header type is \"ENCRYPTED PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  return asn1.fromDer(msg.body);\n};\n\n/**\n * Encrypts an RSA private key. By default, the key will be wrapped in\n * a PrivateKeyInfo and encrypted to produce a PKCS#8 EncryptedPrivateKeyInfo.\n * This is the standard, preferred way to encrypt a private key.\n *\n * To produce a non-standard PEM-encrypted private key that uses encapsulated\n * headers to indicate the encryption algorithm (old-style non-PKCS#8 OpenSSL\n * private key encryption), set the 'legacy' option to true. Note: Using this\n * option will cause the iteration count to be forced to 1.\n *\n * Note: The 'des' algorithm is supported, but it is not considered to be\n * secure because it only uses a single 56-bit key. If possible, it is highly\n * recommended that a different algorithm be used.\n *\n * @param rsaKey the RSA key to encrypt.\n * @param password the password to use.\n * @param options:\n *          algorithm: the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des', 'des').\n *          count: the iteration count to use.\n *          saltSize: the salt size to use.\n *          legacy: output an old non-PKCS#8 PEM-encrypted+encapsulated\n *            headers (DEK-Info) private key.\n *\n * @return the PEM-encoded ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptRsaPrivateKey = function(rsaKey, password, options) {\n  // standard PKCS#8\n  options = options || {};\n  if(!options.legacy) {\n    // encrypt PrivateKeyInfo\n    var rval = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(rsaKey));\n    rval = pki.encryptPrivateKeyInfo(rval, password, options);\n    return pki.encryptedPrivateKeyToPem(rval);\n  }\n\n  // legacy non-PKCS#8\n  var algorithm;\n  var iv;\n  var dkLen;\n  var cipherFn;\n  switch(options.algorithm) {\n  case 'aes128':\n    algorithm = 'AES-128-CBC';\n    dkLen = 16;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes192':\n    algorithm = 'AES-192-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes256':\n    algorithm = 'AES-256-CBC';\n    dkLen = 32;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case '3des':\n    algorithm = 'DES-EDE3-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  case 'des':\n    algorithm = 'DES-CBC';\n    dkLen = 8;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  default:\n    var error = new Error('Could not encrypt RSA private key; unsupported ' +\n      'encryption algorithm \"' + options.algorithm + '\".');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // encrypt private key using OpenSSL legacy key derivation\n  var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n  cipher.update(asn1.toDer(pki.privateKeyToAsn1(rsaKey)));\n  cipher.finish();\n\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    procType: {\n      version: '4',\n      type: 'ENCRYPTED'\n    },\n    dekInfo: {\n      algorithm: algorithm,\n      parameters: forge.util.bytesToHex(iv).toUpperCase()\n    },\n    body: cipher.output.getBytes()\n  };\n  return forge.pem.encode(msg);\n};\n\n/**\n * Decrypts an RSA private key.\n *\n * @param pem the PEM-formatted EncryptedPrivateKeyInfo to decrypt.\n * @param password the password to use.\n *\n * @return the RSA key on success, null on failure.\n */\npki.decryptRsaPrivateKey = function(pem, password) {\n  var rval = null;\n\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY' &&\n    msg.type !== 'PRIVATE KEY' &&\n    msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM header type ' +\n      'is not \"ENCRYPTED PRIVATE KEY\", \"PRIVATE KEY\", or \"RSA PRIVATE KEY\".');\n    error.headerType = error;\n    throw error;\n  }\n\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    var dkLen;\n    var cipherFn;\n    switch(msg.dekInfo.algorithm) {\n    case 'DES-CBC':\n      dkLen = 8;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'DES-EDE3-CBC':\n      dkLen = 24;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'AES-128-CBC':\n      dkLen = 16;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-192-CBC':\n      dkLen = 24;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-256-CBC':\n      dkLen = 32;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'RC2-40-CBC':\n      dkLen = 5;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 40);\n      };\n      break;\n    case 'RC2-64-CBC':\n      dkLen = 8;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 64);\n      };\n      break;\n    case 'RC2-128-CBC':\n      dkLen = 16;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 128);\n      };\n      break;\n    default:\n      var error = new Error('Could not decrypt private key; unsupported ' +\n        'encryption algorithm \"' + msg.dekInfo.algorithm + '\".');\n      error.algorithm = msg.dekInfo.algorithm;\n      throw error;\n    }\n\n    // use OpenSSL legacy key derivation\n    var iv = forge.util.hexToBytes(msg.dekInfo.parameters);\n    var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(forge.util.createBuffer(msg.body));\n    if(cipher.finish()) {\n      rval = cipher.output.getBytes();\n    } else {\n      return rval;\n    }\n  } else {\n    rval = msg.body;\n  }\n\n  if(msg.type === 'ENCRYPTED PRIVATE KEY') {\n    rval = pki.decryptPrivateKeyInfo(asn1.fromDer(rval), password);\n  } else {\n    // decryption already performed above\n    rval = asn1.fromDer(rval);\n  }\n\n  if(rval !== null) {\n    rval = pki.privateKeyFromAsn1(rval);\n  }\n\n  return rval;\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\npki.pbe.generatePkcs12Key = function(password, salt, id, iter, n, md) {\n  var j, l;\n\n  if(typeof md === 'undefined' || md === null) {\n    if(!('sha1' in forge.md)) {\n      throw new Error('\"sha1\" hash algorithm unavailable.');\n    }\n    md = forge.md.sha1.create();\n  }\n\n  var u = md.digestLength;\n  var v = md.blockLength;\n  var result = new forge.util.ByteBuffer();\n\n  /* Convert password to Unicode byte buffer + trailing 0-byte. */\n  var passBuf = new forge.util.ByteBuffer();\n  if(password !== null && password !== undefined) {\n    for(l = 0; l < password.length; l++) {\n      passBuf.putInt16(password.charCodeAt(l));\n    }\n    passBuf.putInt16(0);\n  }\n\n  /* Length of salt and password in BYTES. */\n  var p = passBuf.length();\n  var s = salt.length();\n\n  /* 1. Construct a string, D (the \"diversifier\"), by concatenating\n        v copies of ID. */\n  var D = new forge.util.ByteBuffer();\n  D.fillWithByte(id, v);\n\n  /* 2. Concatenate copies of the salt together to create a string S of length\n        v * ceil(s / v) bytes (the final copy of the salt may be trunacted\n        to create S).\n        Note that if the salt is the empty string, then so is S. */\n  var Slen = v * Math.ceil(s / v);\n  var S = new forge.util.ByteBuffer();\n  for(l = 0; l < Slen; l++) {\n    S.putByte(salt.at(l % s));\n  }\n\n  /* 3. Concatenate copies of the password together to create a string P of\n        length v * ceil(p / v) bytes (the final copy of the password may be\n        truncated to create P).\n        Note that if the password is the empty string, then so is P. */\n  var Plen = v * Math.ceil(p / v);\n  var P = new forge.util.ByteBuffer();\n  for(l = 0; l < Plen; l++) {\n    P.putByte(passBuf.at(l % p));\n  }\n\n  /* 4. Set I=S||P to be the concatenation of S and P. */\n  var I = S;\n  I.putBuffer(P);\n\n  /* 5. Set c=ceil(n / u). */\n  var c = Math.ceil(n / u);\n\n  /* 6. For i=1, 2, ..., c, do the following: */\n  for(var i = 1; i <= c; i++) {\n    /* a) Set Ai=H^r(D||I). (l.e. the rth hash of D||I, H(H(H(...H(D||I)))) */\n    var buf = new forge.util.ByteBuffer();\n    buf.putBytes(D.bytes());\n    buf.putBytes(I.bytes());\n    for(var round = 0; round < iter; round++) {\n      md.start();\n      md.update(buf.getBytes());\n      buf = md.digest();\n    }\n\n    /* b) Concatenate copies of Ai to create a string B of length v bytes (the\n          final copy of Ai may be truncated to create B). */\n    var B = new forge.util.ByteBuffer();\n    for(l = 0; l < v; l++) {\n      B.putByte(buf.at(l % u));\n    }\n\n    /* c) Treating I as a concatenation I0, I1, ..., Ik-1 of v-byte blocks,\n          where k=ceil(s / v) + ceil(p / v), modify I by setting\n          Ij=(Ij+B+1) mod 2v for each j.  */\n    var k = Math.ceil(s / v) + Math.ceil(p / v);\n    var Inew = new forge.util.ByteBuffer();\n    for(j = 0; j < k; j++) {\n      var chunk = new forge.util.ByteBuffer(I.getBytes(v));\n      var x = 0x1ff;\n      for(l = B.length() - 1; l >= 0; l--) {\n        x = x >> 8;\n        x += B.at(l) + chunk.at(l);\n        chunk.setAt(l, x & 0xff);\n      }\n      Inew.putBuffer(chunk);\n    }\n    I = Inew;\n\n    /* Add Ai to A. */\n    result.putBuffer(buf);\n  }\n\n  result.truncate(result.length() - n);\n  return result;\n};\n\n/**\n * Get new Forge cipher object instance.\n *\n * @param oid the OID (in string notation).\n * @param params the ASN.1 params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipher = function(oid, params, password) {\n  switch(oid) {\n  case pki.oids['pkcs5PBES2']:\n    return pki.pbe.getCipherForPBES2(oid, params, password);\n\n  case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n  case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n    return pki.pbe.getCipherForPKCS12PBE(oid, params, password);\n\n  default:\n    var error = new Error('Cannot read encrypted PBE data block. Unsupported OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'pkcs5PBES2',\n      'pbeWithSHAAnd3-KeyTripleDES-CBC',\n      'pbewithSHAAnd40BitRC2-CBC'\n    ];\n    throw error;\n  }\n};\n\n/**\n * Get new Forge cipher object instance according to PBES2 params block.\n *\n * The returned cipher instance is already started using the IV\n * from PBES2 parameter block.\n *\n * @param oid the PKCS#5 PBKDF2 OID (in string notation).\n * @param params the ASN.1 PBES2-params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipherForPBES2 = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, PBES2AlgorithmsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // check oids\n  oid = asn1.derToOid(capture.kdfOid);\n  if(oid !== pki.oids['pkcs5PBKDF2']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported key derivation function OID.');\n    error.oid = oid;\n    error.supportedOids = ['pkcs5PBKDF2'];\n    throw error;\n  }\n  oid = asn1.derToOid(capture.encOid);\n  if(oid !== pki.oids['aes128-CBC'] &&\n    oid !== pki.oids['aes192-CBC'] &&\n    oid !== pki.oids['aes256-CBC'] &&\n    oid !== pki.oids['des-EDE3-CBC'] &&\n    oid !== pki.oids['desCBC']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported encryption scheme OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'aes128-CBC', 'aes192-CBC', 'aes256-CBC', 'des-EDE3-CBC', 'desCBC'];\n    throw error;\n  }\n\n  // set PBE params\n  var salt = capture.kdfSalt;\n  var count = forge.util.createBuffer(capture.kdfIterationCount);\n  count = count.getInt(count.length() << 3);\n  var dkLen;\n  var cipherFn;\n  switch(pki.oids[oid]) {\n  case 'aes128-CBC':\n    dkLen = 16;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes192-CBC':\n    dkLen = 24;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes256-CBC':\n    dkLen = 32;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'des-EDE3-CBC':\n    dkLen = 24;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  case 'desCBC':\n    dkLen = 8;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n\n  // decrypt private key using pbe with chosen PRF and AES/DES\n  var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n  var iv = capture.encIv;\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n\n  return cipher;\n};\n\n/**\n * Get new Forge cipher object instance for PKCS#12 PBE.\n *\n * The returned cipher instance is already started using the key & IV\n * derived from the provided password and PKCS#12 PBE salt.\n *\n * @param oid The PKCS#12 PBE OID (in string notation).\n * @param params The ASN.1 PKCS#12 PBE-params object.\n * @param password The password to decrypt with.\n *\n * @return the new cipher object instance.\n */\npki.pbe.getCipherForPKCS12PBE = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, pkcs12PbeParamsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var salt = forge.util.createBuffer(capture.salt);\n  var count = forge.util.createBuffer(capture.iterations);\n  count = count.getInt(count.length() << 3);\n\n  var dkLen, dIvLen, cipherFn;\n  switch(oid) {\n    case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n      dkLen = 24;\n      dIvLen = 8;\n      cipherFn = forge.des.startDecrypting;\n      break;\n\n    case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n      dkLen = 5;\n      dIvLen = 8;\n      cipherFn = function(key, iv) {\n        var cipher = forge.rc2.createDecryptionCipher(key, 40);\n        cipher.start(iv, null);\n        return cipher;\n      };\n      break;\n\n    default:\n      var error = new Error('Cannot read PKCS #12 PBE data block. Unsupported OID.');\n      error.oid = oid;\n      throw error;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n  var key = pki.pbe.generatePkcs12Key(password, salt, 1, count, dkLen, md);\n  md.start();\n  var iv = pki.pbe.generatePkcs12Key(password, salt, 2, count, dIvLen, md);\n\n  return cipherFn(key, iv);\n};\n\n/**\n * OpenSSL's legacy key derivation function.\n *\n * See: http://www.openssl.org/docs/crypto/EVP_BytesToKey.html\n *\n * @param password the password to derive the key from.\n * @param salt the salt to use, null for none.\n * @param dkLen the number of bytes needed for the derived key.\n * @param [options] the options to use:\n *          [md] an optional message digest object to use.\n */\npki.pbe.opensslDeriveBytes = function(password, salt, dkLen, md) {\n  if(typeof md === 'undefined' || md === null) {\n    if(!('md5' in forge.md)) {\n      throw new Error('\"md5\" hash algorithm unavailable.');\n    }\n    md = forge.md.md5.create();\n  }\n  if(salt === null) {\n    salt = '';\n  }\n  var digests = [hash(md, password + salt)];\n  for(var length = 16, i = 1; length < dkLen; ++i, length += 16) {\n    digests.push(hash(md, digests[i - 1] + password + salt));\n  }\n  return digests.join('').substr(0, dkLen);\n};\n\nfunction hash(md, bytes) {\n  return md.start().update(bytes).digest().getBytes();\n}\n\nfunction prfOidToMessageDigest(prfOid) {\n  // get PRF algorithm, default to SHA-1\n  var prfAlgorithm;\n  if(!prfOid) {\n    prfAlgorithm = 'hmacWithSHA1';\n  } else {\n    prfAlgorithm = pki.oids[asn1.derToOid(prfOid)];\n    if(!prfAlgorithm) {\n      var error = new Error('Unsupported PRF OID.');\n      error.oid = prfOid;\n      error.supported = [\n        'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n        'hmacWithSHA512'];\n      throw error;\n    }\n  }\n  return prfAlgorithmToMessageDigest(prfAlgorithm);\n}\n\nfunction prfAlgorithmToMessageDigest(prfAlgorithm) {\n  var factory = forge.md;\n  switch(prfAlgorithm) {\n  case 'hmacWithSHA224':\n    factory = forge.md.sha512;\n  case 'hmacWithSHA1':\n  case 'hmacWithSHA256':\n  case 'hmacWithSHA384':\n  case 'hmacWithSHA512':\n    prfAlgorithm = prfAlgorithm.substr(8).toLowerCase();\n    break;\n  default:\n    var error = new Error('Unsupported PRF algorithm.');\n    error.algorithm = prfAlgorithm;\n    error.supported = [\n      'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n      'hmacWithSHA512'];\n    throw error;\n  }\n  if(!factory || !(prfAlgorithm in factory)) {\n    throw new Error('Unknown hash algorithm: ' + prfAlgorithm);\n  }\n  return factory[prfAlgorithm].create();\n}\n\nfunction createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm) {\n  var params = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // salt\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n    // iteration count\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      countBytes.getBytes())\n  ]);\n  // when PRF algorithm is not SHA-1 default, add key length and PRF algorithm\n  if(prfAlgorithm !== 'hmacWithSHA1') {\n    params.value.push(\n      // key length\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(dkLen.toString(16))),\n      // AlgorithmIdentifier\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // algorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids[prfAlgorithm]).getBytes()),\n        // parameters (null)\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n      ]));\n  }\n  return params;\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/pbe.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pbkdf2.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/**\n * Password-Based Key-Derivation Function #2 implementation.\n *\n * See RFC 2898 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./hmac */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/hmac.js\");\n__webpack_require__(/*! ./md */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\nvar pkcs5 = forge.pkcs5 = forge.pkcs5 || {};\n\nvar crypto;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript) {\n  crypto = __webpack_require__(/*! crypto */ 0);\n}\n\n/**\n * Derives a key from a password.\n *\n * @param p the password as a binary-encoded string of bytes.\n * @param s the salt as a binary-encoded string of bytes.\n * @param c the iteration count, a positive integer.\n * @param dkLen the intended length, in bytes, of the derived key,\n *          (max: 2^32 - 1) * hash length of the PRF.\n * @param [md] the message digest (or algorithm identifier as a string) to use\n *          in the PRF, defaults to SHA-1.\n * @param [callback(err, key)] presence triggers asynchronous version, called\n *          once the operation completes.\n *\n * @return the derived key, as a binary-encoded string of bytes, for the\n *           synchronous version (if no callback is specified).\n */\nmodule.exports = forge.pbkdf2 = pkcs5.pbkdf2 = function(\n  p, s, c, dkLen, md, callback) {\n  if(typeof md === 'function') {\n    callback = md;\n    md = null;\n  }\n\n  // use native implementation if possible and not disabled, note that\n  // some node versions only support SHA-1, others allow digest to be changed\n  if(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n    crypto.pbkdf2 && (md === null || typeof md !== 'object') &&\n    (crypto.pbkdf2Sync.length > 4 || (!md || md === 'sha1'))) {\n    if(typeof md !== 'string') {\n      // default prf to SHA-1\n      md = 'sha1';\n    }\n    p = Buffer.from(p, 'binary');\n    s = Buffer.from(s, 'binary');\n    if(!callback) {\n      if(crypto.pbkdf2Sync.length === 4) {\n        return crypto.pbkdf2Sync(p, s, c, dkLen).toString('binary');\n      }\n      return crypto.pbkdf2Sync(p, s, c, dkLen, md).toString('binary');\n    }\n    if(crypto.pbkdf2Sync.length === 4) {\n      return crypto.pbkdf2(p, s, c, dkLen, function(err, key) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, key.toString('binary'));\n      });\n    }\n    return crypto.pbkdf2(p, s, c, dkLen, md, function(err, key) {\n      if(err) {\n        return callback(err);\n      }\n      callback(null, key.toString('binary'));\n    });\n  }\n\n  if(typeof md === 'undefined' || md === null) {\n    // default prf to SHA-1\n    md = 'sha1';\n  }\n  if(typeof md === 'string') {\n    if(!(md in forge.md.algorithms)) {\n      throw new Error('Unknown hash algorithm: ' + md);\n    }\n    md = forge.md[md].create();\n  }\n\n  var hLen = md.digestLength;\n\n  /* 1. If dkLen > (2^32 - 1) * hLen, output \"derived key too long\" and\n    stop. */\n  if(dkLen > (0xFFFFFFFF * hLen)) {\n    var err = new Error('Derived key is too long.');\n    if(callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  /* 2. Let len be the number of hLen-octet blocks in the derived key,\n    rounding up, and let r be the number of octets in the last\n    block:\n\n    len = CEIL(dkLen / hLen),\n    r = dkLen - (len - 1) * hLen. */\n  var len = Math.ceil(dkLen / hLen);\n  var r = dkLen - (len - 1) * hLen;\n\n  /* 3. For each block of the derived key apply the function F defined\n    below to the password P, the salt S, the iteration count c, and\n    the block index to compute the block:\n\n    T_1 = F(P, S, c, 1),\n    T_2 = F(P, S, c, 2),\n    ...\n    T_len = F(P, S, c, len),\n\n    where the function F is defined as the exclusive-or sum of the\n    first c iterates of the underlying pseudorandom function PRF\n    applied to the password P and the concatenation of the salt S\n    and the block index i:\n\n    F(P, S, c, i) = u_1 XOR u_2 XOR ... XOR u_c\n\n    where\n\n    u_1 = PRF(P, S || INT(i)),\n    u_2 = PRF(P, u_1),\n    ...\n    u_c = PRF(P, u_{c-1}).\n\n    Here, INT(i) is a four-octet encoding of the integer i, most\n    significant octet first. */\n  var prf = forge.hmac.create();\n  prf.start(md, p);\n  var dk = '';\n  var xor, u_c, u_c1;\n\n  // sync version\n  if(!callback) {\n    for(var i = 1; i <= len; ++i) {\n      // PRF(P, S || INT(i)) (first iteration)\n      prf.start(null, null);\n      prf.update(s);\n      prf.update(forge.util.int32ToBytes(i));\n      xor = u_c1 = prf.digest().getBytes();\n\n      // PRF(P, u_{c-1}) (other iterations)\n      for(var j = 2; j <= c; ++j) {\n        prf.start(null, null);\n        prf.update(u_c1);\n        u_c = prf.digest().getBytes();\n        // F(p, s, c, i)\n        xor = forge.util.xorBytes(xor, u_c, hLen);\n        u_c1 = u_c;\n      }\n\n      /* 4. Concatenate the blocks and extract the first dkLen octets to\n        produce a derived key DK:\n\n        DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n      dk += (i < len) ? xor : xor.substr(0, r);\n    }\n    /* 5. Output the derived key DK. */\n    return dk;\n  }\n\n  // async version\n  var i = 1, j;\n  function outer() {\n    if(i > len) {\n      // done\n      return callback(null, dk);\n    }\n\n    // PRF(P, S || INT(i)) (first iteration)\n    prf.start(null, null);\n    prf.update(s);\n    prf.update(forge.util.int32ToBytes(i));\n    xor = u_c1 = prf.digest().getBytes();\n\n    // PRF(P, u_{c-1}) (other iterations)\n    j = 2;\n    inner();\n  }\n\n  function inner() {\n    if(j <= c) {\n      prf.start(null, null);\n      prf.update(u_c1);\n      u_c = prf.digest().getBytes();\n      // F(p, s, c, i)\n      xor = forge.util.xorBytes(xor, u_c, hLen);\n      u_c1 = u_c;\n      ++j;\n      return forge.util.setImmediate(inner);\n    }\n\n    /* 4. Concatenate the blocks and extract the first dkLen octets to\n      produce a derived key DK:\n\n      DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n    dk += (i < len) ? xor : xor.substr(0, r);\n\n    ++i;\n    outer();\n  }\n\n  outer();\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node-libs-browser/node_modules/buffer/index.js */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/pbkdf2.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pem.js":function(module,exports,__webpack_require__){eval("/**\n * Javascript implementation of basic PEM (Privacy Enhanced Mail) algorithms.\n *\n * See: RFC 1421.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n *\n * A Forge PEM object has the following fields:\n *\n * type: identifies the type of message (eg: \"RSA PRIVATE KEY\").\n *\n * procType: identifies the type of processing performed on the message,\n *   it has two subfields: version and type, eg: 4,ENCRYPTED.\n *\n * contentDomain: identifies the type of content in the message, typically\n *   only uses the value: \"RFC822\".\n *\n * dekInfo: identifies the message encryption algorithm and mode and includes\n *   any parameters for the algorithm, it has two subfields: algorithm and\n *   parameters, eg: DES-CBC,F8143EDE5960C597.\n *\n * headers: contains all other PEM encapsulated headers -- where order is\n *   significant (for pairing data like recipient ID + key info).\n *\n * body: the binary-encoded body.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\n// shortcut for pem API\nvar pem = module.exports = forge.pem = forge.pem || {};\n\n/**\n * Encodes (serializes) the given PEM object.\n *\n * @param msg the PEM message object to encode.\n * @param options the options to use:\n *          maxline the maximum characters per line for the body, (default: 64).\n *\n * @return the PEM-formatted string.\n */\npem.encode = function(msg, options) {\n  options = options || {};\n  var rval = '-----BEGIN ' + msg.type + '-----\\r\\n';\n\n  // encode special headers\n  var header;\n  if(msg.procType) {\n    header = {\n      name: 'Proc-Type',\n      values: [String(msg.procType.version), msg.procType.type]\n    };\n    rval += foldHeader(header);\n  }\n  if(msg.contentDomain) {\n    header = {name: 'Content-Domain', values: [msg.contentDomain]};\n    rval += foldHeader(header);\n  }\n  if(msg.dekInfo) {\n    header = {name: 'DEK-Info', values: [msg.dekInfo.algorithm]};\n    if(msg.dekInfo.parameters) {\n      header.values.push(msg.dekInfo.parameters);\n    }\n    rval += foldHeader(header);\n  }\n\n  if(msg.headers) {\n    // encode all other headers\n    for(var i = 0; i < msg.headers.length; ++i) {\n      rval += foldHeader(msg.headers[i]);\n    }\n  }\n\n  // terminate header\n  if(msg.procType) {\n    rval += '\\r\\n';\n  }\n\n  // add body\n  rval += forge.util.encode64(msg.body, options.maxline || 64) + '\\r\\n';\n\n  rval += '-----END ' + msg.type + '-----\\r\\n';\n  return rval;\n};\n\n/**\n * Decodes (deserializes) all PEM messages found in the given string.\n *\n * @param str the PEM-formatted string to decode.\n *\n * @return the PEM message objects in an array.\n */\npem.decode = function(str) {\n  var rval = [];\n\n  // split string into PEM messages (be lenient w/EOF on BEGIN line)\n  var rMessage = /\\s*-----BEGIN ([A-Z0-9- ]+)-----\\r?\\n?([\\x21-\\x7e\\s]+?(?:\\r?\\n\\r?\\n))?([:A-Za-z0-9+\\/=\\s]+?)-----END \\1-----/g;\n  var rHeader = /([\\x21-\\x7e]+):\\s*([\\x21-\\x7e\\s^:]+)/;\n  var rCRLF = /\\r?\\n/;\n  var match;\n  while(true) {\n    match = rMessage.exec(str);\n    if(!match) {\n      break;\n    }\n\n    var msg = {\n      type: match[1],\n      procType: null,\n      contentDomain: null,\n      dekInfo: null,\n      headers: [],\n      body: forge.util.decode64(match[3])\n    };\n    rval.push(msg);\n\n    // no headers\n    if(!match[2]) {\n      continue;\n    }\n\n    // parse headers\n    var lines = match[2].split(rCRLF);\n    var li = 0;\n    while(match && li < lines.length) {\n      // get line, trim any rhs whitespace\n      var line = lines[li].replace(/\\s+$/, '');\n\n      // RFC2822 unfold any following folded lines\n      for(var nl = li + 1; nl < lines.length; ++nl) {\n        var next = lines[nl];\n        if(!/\\s/.test(next[0])) {\n          break;\n        }\n        line += next;\n        li = nl;\n      }\n\n      // parse header\n      match = line.match(rHeader);\n      if(match) {\n        var header = {name: match[1], values: []};\n        var values = match[2].split(',');\n        for(var vi = 0; vi < values.length; ++vi) {\n          header.values.push(ltrim(values[vi]));\n        }\n\n        // Proc-Type must be the first header\n        if(!msg.procType) {\n          if(header.name !== 'Proc-Type') {\n            throw new Error('Invalid PEM formatted message. The first ' +\n              'encapsulated header must be \"Proc-Type\".');\n          } else if(header.values.length !== 2) {\n            throw new Error('Invalid PEM formatted message. The \"Proc-Type\" ' +\n              'header must have two subfields.');\n          }\n          msg.procType = {version: values[0], type: values[1]};\n        } else if(!msg.contentDomain && header.name === 'Content-Domain') {\n          // special-case Content-Domain\n          msg.contentDomain = values[0] || '';\n        } else if(!msg.dekInfo && header.name === 'DEK-Info') {\n          // special-case DEK-Info\n          if(header.values.length === 0) {\n            throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n              'header must have at least one subfield.');\n          }\n          msg.dekInfo = {algorithm: values[0], parameters: values[1] || null};\n        } else {\n          msg.headers.push(header);\n        }\n      }\n\n      ++li;\n    }\n\n    if(msg.procType === 'ENCRYPTED' && !msg.dekInfo) {\n      throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n        'header must be present if \"Proc-Type\" is \"ENCRYPTED\".');\n    }\n  }\n\n  if(rval.length === 0) {\n    throw new Error('Invalid PEM formatted message.');\n  }\n\n  return rval;\n};\n\nfunction foldHeader(header) {\n  var rval = header.name + ': ';\n\n  // ensure values with CRLF are folded\n  var values = [];\n  var insertSpace = function(match, $1) {\n    return ' ' + $1;\n  };\n  for(var i = 0; i < header.values.length; ++i) {\n    values.push(header.values[i].replace(/^(\\S+\\r\\n)/, insertSpace));\n  }\n  rval += values.join(',') + '\\r\\n';\n\n  // do folding\n  var length = 0;\n  var candidate = -1;\n  for(var i = 0; i < rval.length; ++i, ++length) {\n    if(length > 65 && candidate !== -1) {\n      var insert = rval[candidate];\n      if(insert === ',') {\n        ++candidate;\n        rval = rval.substr(0, candidate) + '\\r\\n ' + rval.substr(candidate);\n      } else {\n        rval = rval.substr(0, candidate) +\n          '\\r\\n' + insert + rval.substr(candidate + 1);\n      }\n      length = (i - candidate - 1);\n      candidate = -1;\n      ++i;\n    } else if(rval[i] === ' ' || rval[i] === '\\t' || rval[i] === ',') {\n      candidate = i;\n    }\n  }\n\n  return rval;\n}\n\nfunction ltrim(str) {\n  return str.replace(/^\\s+/, '');\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/pem.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pkcs1.js":function(module,exports,__webpack_require__){eval("/**\n * Partial implementation of PKCS#1 v2.2: RSA-OEAP\n *\n * Modified but based on the following MIT and BSD licensed code:\n *\n * https://github.com/kjur/jsjws/blob/master/rsa.js:\n *\n * The 'jsjws'(JSON Web Signature JavaScript Library) License\n *\n * Copyright (c) 2012 Kenji Urushima\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * http://webrsa.cvs.sourceforge.net/viewvc/webrsa/Client/RSAES-OAEP.js?content-type=text%2Fplain:\n *\n * RSAES-OAEP.js\n * $Id: RSAES-OAEP.js,v 1.1.1.1 2003/03/19 15:37:20 ellispritchard Exp $\n * JavaScript Implementation of PKCS #1 v2.1 RSA CRYPTOGRAPHY STANDARD (RSA Laboratories, June 14, 2002)\n * Copyright (C) Ellis Pritchard, Guardian Unlimited 2003.\n * Contact: ellis@nukinetics.com\n * Distributed under the BSD License.\n *\n * Official documentation: http://www.rsa.com/rsalabs/node.asp?id=2125\n *\n * @author Evan Jones (http://evanjones.ca/)\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n__webpack_require__(/*! ./random */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/random.js\");\n__webpack_require__(/*! ./sha1 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/sha1.js\");\n\n// shortcut for PKCS#1 API\nvar pkcs1 = module.exports = forge.pkcs1 = forge.pkcs1 || {};\n\n/**\n * Encode the given RSAES-OAEP message (M) using key, with optional label (L)\n * and seed.\n *\n * This method does not perform RSA encryption, it only encodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param message the message to encode.\n * @param options the options to use:\n *          label an optional label to use.\n *          seed the seed to use.\n *          md the message digest object to use, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the encoded message bytes.\n */\npkcs1.encode_rsa_oaep = function(key, message, options) {\n  // parse arguments\n  var label;\n  var seed;\n  var md;\n  var mgf1Md;\n  // legacy args (label, seed, md)\n  if(typeof options === 'string') {\n    label = options;\n    seed = arguments[3] || undefined;\n    md = arguments[4] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    seed = options.seed || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(!md) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  // compute length in bytes and check output\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n  var maxLength = keyLength - 2 * md.digestLength - 2;\n  if(message.length > maxLength) {\n    var error = new Error('RSAES-OAEP input message length is too long.');\n    error.length = message.length;\n    error.maxLength = maxLength;\n    throw error;\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest();\n\n  var PS = '';\n  var PS_length = maxLength - message.length;\n  for(var i = 0; i < PS_length; i++) {\n    PS += '\\x00';\n  }\n\n  var DB = lHash.getBytes() + PS + '\\x01' + message;\n\n  if(!seed) {\n    seed = forge.random.getBytes(md.digestLength);\n  } else if(seed.length !== md.digestLength) {\n    var error = new Error('Invalid RSAES-OAEP seed. The seed length must ' +\n      'match the digest length.');\n    error.seedLength = seed.length;\n    error.digestLength = md.digestLength;\n    throw error;\n  }\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var maskedDB = forge.util.xorBytes(DB, dbMask, DB.length);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var maskedSeed = forge.util.xorBytes(seed, seedMask, seed.length);\n\n  // return encoded message\n  return '\\x00' + maskedSeed + maskedDB;\n};\n\n/**\n * Decode the given RSAES-OAEP encoded message (EM) using key, with optional\n * label (L).\n *\n * This method does not perform RSA decryption, it only decodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param em the encoded message to decode.\n * @param options the options to use:\n *          label an optional label to use.\n *          md the message digest object to use for OAEP, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the decoded message bytes.\n */\npkcs1.decode_rsa_oaep = function(key, em, options) {\n  // parse args\n  var label;\n  var md;\n  var mgf1Md;\n  // legacy args\n  if(typeof options === 'string') {\n    label = options;\n    md = arguments[3] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // compute length in bytes\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n\n  if(em.length !== keyLength) {\n    var error = new Error('RSAES-OAEP encoded message length is invalid.');\n    error.length = em.length;\n    error.expectedLength = keyLength;\n    throw error;\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(md === undefined) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  if(keyLength < 2 * md.digestLength + 2) {\n    throw new Error('RSAES-OAEP key is too short for the hash function.');\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest().getBytes();\n\n  // split the message into its parts\n  var y = em.charAt(0);\n  var maskedSeed = em.substring(1, md.digestLength + 1);\n  var maskedDB = em.substring(1 + md.digestLength);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var seed = forge.util.xorBytes(maskedSeed, seedMask, maskedSeed.length);\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var db = forge.util.xorBytes(maskedDB, dbMask, maskedDB.length);\n\n  var lHashPrime = db.substring(0, md.digestLength);\n\n  // constant time check that all values match what is expected\n  var error = (y !== '\\x00');\n\n  // constant time check lHash vs lHashPrime\n  for(var i = 0; i < md.digestLength; ++i) {\n    error |= (lHash.charAt(i) !== lHashPrime.charAt(i));\n  }\n\n  // \"constant time\" find the 0x1 byte separating the padding (zeros) from the\n  // message\n  // TODO: It must be possible to do this in a better/smarter way?\n  var in_ps = 1;\n  var index = md.digestLength;\n  for(var j = md.digestLength; j < db.length; j++) {\n    var code = db.charCodeAt(j);\n\n    var is_0 = (code & 0x1) ^ 0x1;\n\n    // non-zero if not 0 or 1 in the ps section\n    var error_mask = in_ps ? 0xfffe : 0x0000;\n    error |= (code & error_mask);\n\n    // latch in_ps to zero after we find 0x1\n    in_ps = in_ps & is_0;\n    index += in_ps;\n  }\n\n  if(error || db.charCodeAt(index) !== 0x1) {\n    throw new Error('Invalid RSAES-OAEP padding.');\n  }\n\n  return db.substring(index + 1);\n};\n\nfunction rsa_mgf1(seed, maskLength, hash) {\n  // default to SHA-1 message digest\n  if(!hash) {\n    hash = forge.md.sha1.create();\n  }\n  var t = '';\n  var count = Math.ceil(maskLength / hash.digestLength);\n  for(var i = 0; i < count; ++i) {\n    var c = String.fromCharCode(\n      (i >> 24) & 0xFF, (i >> 16) & 0xFF, (i >> 8) & 0xFF, i & 0xFF);\n    hash.start();\n    hash.update(seed + c);\n    t += hash.digest().getBytes();\n  }\n  return t.substring(0, maskLength);\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/pkcs1.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pkcs12.js":function(module,exports,__webpack_require__){eval("/**\n * Javascript implementation of PKCS#12.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#12 is as follows\n * (see ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-12/pkcs-12-tc1.pdf for details)\n *\n * PFX ::= SEQUENCE {\n *   version  INTEGER {v3(3)}(v3,...),\n *   authSafe ContentInfo,\n *   macData  MacData OPTIONAL\n * }\n *\n * MacData ::= SEQUENCE {\n *   mac DigestInfo,\n *   macSalt OCTET STRING,\n *   iterations INTEGER DEFAULT 1\n * }\n * Note: The iterations default is for historical reasons and its use is\n * deprecated. A higher value, like 1024, is recommended.\n *\n * DigestInfo is defined in PKCS#7 as follows:\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of SHA1 there is none.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * Digest ::= OCTET STRING\n *\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType ContentType,\n *   content     [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * AuthenticatedSafe ::= SEQUENCE OF ContentInfo\n * -- Data if unencrypted\n * -- EncryptedData if password-encrypted\n * -- EnvelopedData if public key-encrypted\n *\n *\n * SafeContents ::= SEQUENCE OF SafeBag\n *\n * SafeBag ::= SEQUENCE {\n *   bagId     BAG-TYPE.&id ({PKCS12BagSet})\n *   bagValue  [0] EXPLICIT BAG-TYPE.&Type({PKCS12BagSet}{@bagId}),\n *   bagAttributes SET OF PKCS12Attribute OPTIONAL\n * }\n *\n * PKCS12Attribute ::= SEQUENCE {\n *   attrId ATTRIBUTE.&id ({PKCS12AttrSet}),\n *   attrValues SET OF ATTRIBUTE.&Type ({PKCS12AttrSet}{@attrId})\n * } -- This type is compatible with the X.500 type 'Attribute'\n *\n * PKCS12AttrSet ATTRIBUTE ::= {\n *   friendlyName | -- from PKCS #9\n *   localKeyId, -- from PKCS #9\n *   ... -- Other attributes are allowed\n * }\n *\n * CertBag ::= SEQUENCE {\n *   certId    BAG-TYPE.&id   ({CertTypes}),\n *   certValue [0] EXPLICIT BAG-TYPE.&Type ({CertTypes}{@certId})\n * }\n *\n * x509Certificate BAG-TYPE ::= {OCTET STRING IDENTIFIED BY {certTypes 1}}\n *   -- DER-encoded X.509 certificate stored in OCTET STRING\n *\n * sdsiCertificate BAG-TYPE ::= {IA5String IDENTIFIED BY {certTypes 2}}\n * -- Base64-encoded SDSI certificate stored in IA5String\n *\n * CertTypes BAG-TYPE ::= {\n *   x509Certificate |\n *   sdsiCertificate,\n *   ... -- For future extensions\n * }\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./asn1 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/asn1.js\");\n__webpack_require__(/*! ./hmac */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/hmac.js\");\n__webpack_require__(/*! ./oids */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/oids.js\");\n__webpack_require__(/*! ./pkcs7asn1 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pkcs7asn1.js\");\n__webpack_require__(/*! ./pbe */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pbe.js\");\n__webpack_require__(/*! ./random */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/random.js\");\n__webpack_require__(/*! ./rsa */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/rsa.js\");\n__webpack_require__(/*! ./sha1 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/sha1.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n__webpack_require__(/*! ./x509 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/x509.js\");\n\n// shortcut for asn.1 & PKI API\nvar asn1 = forge.asn1;\nvar pki = forge.pki;\n\n// shortcut for PKCS#12 API\nvar p12 = module.exports = forge.pkcs12 = forge.pkcs12 || {};\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,  // a ContentInfo\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'content'\n  }]\n};\n\nvar pfxValidator = {\n  name: 'PFX',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PFX.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  },\n  contentInfoValidator, {\n    name: 'PFX.macData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'mac',\n    value: [{\n      name: 'PFX.macData.mac',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,  // DigestInfo\n      constructed: true,\n      value: [{\n        name: 'PFX.macData.mac.digestAlgorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,  // DigestAlgorithmIdentifier\n        constructed: true,\n        value: [{\n          name: 'PFX.macData.mac.digestAlgorithm.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'macAlgorithm'\n        }, {\n          name: 'PFX.macData.mac.digestAlgorithm.parameters',\n          tagClass: asn1.Class.UNIVERSAL,\n          captureAsn1: 'macAlgorithmParameters'\n        }]\n      }, {\n        name: 'PFX.macData.mac.digest',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'macDigest'\n      }]\n    }, {\n      name: 'PFX.macData.macSalt',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'macSalt'\n    }, {\n      name: 'PFX.macData.iterations',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      optional: true,\n      capture: 'macIterations'\n    }]\n  }]\n};\n\nvar safeBagValidator = {\n  name: 'SafeBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SafeBag.bagId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'bagId'\n  }, {\n    name: 'SafeBag.bagValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'bagValue'\n  }, {\n    name: 'SafeBag.bagAttributes',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    optional: true,\n    capture: 'bagAttributes'\n  }]\n};\n\nvar attributeValidator = {\n  name: 'Attribute',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Attribute.attrId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'oid'\n  }, {\n    name: 'Attribute.attrValues',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    capture: 'values'\n  }]\n};\n\nvar certBagValidator = {\n  name: 'CertBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'CertBag.certId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'certId'\n  }, {\n    name: 'CertBag.certValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    /* So far we only support X.509 certificates (which are wrapped in\n       an OCTET STRING, hence hard code that here). */\n    value: [{\n      name: 'CertBag.certValue[0]',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.OCTETSTRING,\n      constructed: false,\n      capture: 'cert'\n    }]\n  }]\n};\n\n/**\n * Search SafeContents structure for bags with matching attributes.\n *\n * The search can optionally be narrowed by a certain bag type.\n *\n * @param safeContents the SafeContents structure to search in.\n * @param attrName the name of the attribute to compare against.\n * @param attrValue the attribute value to search for.\n * @param [bagType] bag type to narrow search by.\n *\n * @return an array of matching bags.\n */\nfunction _getBagsByAttribute(safeContents, attrName, attrValue, bagType) {\n  var result = [];\n\n  for(var i = 0; i < safeContents.length; i++) {\n    for(var j = 0; j < safeContents[i].safeBags.length; j++) {\n      var bag = safeContents[i].safeBags[j];\n      if(bagType !== undefined && bag.type !== bagType) {\n        continue;\n      }\n      // only filter by bag type, no attribute specified\n      if(attrName === null) {\n        result.push(bag);\n        continue;\n      }\n      if(bag.attributes[attrName] !== undefined &&\n        bag.attributes[attrName].indexOf(attrValue) >= 0) {\n        result.push(bag);\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * Converts a PKCS#12 PFX in ASN.1 notation into a PFX object.\n *\n * @param obj The PKCS#12 PFX in ASN.1 notation.\n * @param strict true to use strict DER decoding, false not to (default: true).\n * @param {String} password Password to decrypt with (optional).\n *\n * @return PKCS#12 PFX object.\n */\np12.pkcs12FromAsn1 = function(obj, strict, password) {\n  // handle args\n  if(typeof strict === 'string') {\n    password = strict;\n    strict = true;\n  } else if(strict === undefined) {\n    strict = true;\n  }\n\n  // validate PFX and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, pfxValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#12 PFX. ' +\n      'ASN.1 object is not an PKCS#12 PFX.');\n    error.errors = error;\n    throw error;\n  }\n\n  var pfx = {\n    version: capture.version.charCodeAt(0),\n    safeContents: [],\n\n    /**\n     * Gets bags with matching attributes.\n     *\n     * @param filter the attributes to filter by:\n     *          [localKeyId] the localKeyId to search for.\n     *          [localKeyIdHex] the localKeyId in hex to search for.\n     *          [friendlyName] the friendly name to search for.\n     *          [bagType] bag type to narrow each attribute search by.\n     *\n     * @return a map of attribute type to an array of matching bags or, if no\n     *           attribute was given but a bag type, the map key will be the\n     *           bag type.\n     */\n    getBags: function(filter) {\n      var rval = {};\n\n      var localKeyId;\n      if('localKeyId' in filter) {\n        localKeyId = filter.localKeyId;\n      } else if('localKeyIdHex' in filter) {\n        localKeyId = forge.util.hexToBytes(filter.localKeyIdHex);\n      }\n\n      // filter on bagType only\n      if(localKeyId === undefined && !('friendlyName' in filter) &&\n        'bagType' in filter) {\n        rval[filter.bagType] = _getBagsByAttribute(\n          pfx.safeContents, null, null, filter.bagType);\n      }\n\n      if(localKeyId !== undefined) {\n        rval.localKeyId = _getBagsByAttribute(\n          pfx.safeContents, 'localKeyId',\n          localKeyId, filter.bagType);\n      }\n      if('friendlyName' in filter) {\n        rval.friendlyName = _getBagsByAttribute(\n          pfx.safeContents, 'friendlyName',\n          filter.friendlyName, filter.bagType);\n      }\n\n      return rval;\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching friendlyName attribute.\n     *\n     * @param friendlyName the friendly name to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching friendlyName attribute.\n     */\n    getBagsByFriendlyName: function(friendlyName, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'friendlyName', friendlyName, bagType);\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching localKeyId attribute.\n     *\n     * @param localKeyId the localKeyId to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching localKeyId attribute.\n     */\n    getBagsByLocalKeyId: function(localKeyId, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'localKeyId', localKeyId, bagType);\n    }\n  };\n\n  if(capture.version.charCodeAt(0) !== 3) {\n    var error = new Error('PKCS#12 PFX of version other than 3 not supported.');\n    error.version = capture.version.charCodeAt(0);\n    throw error;\n  }\n\n  if(asn1.derToOid(capture.contentType) !== pki.oids.data) {\n    var error = new Error('Only PKCS#12 PFX in password integrity mode supported.');\n    error.oid = asn1.derToOid(capture.contentType);\n    throw error;\n  }\n\n  var data = capture.content.value[0];\n  if(data.tagClass !== asn1.Class.UNIVERSAL ||\n     data.type !== asn1.Type.OCTETSTRING) {\n    throw new Error('PKCS#12 authSafe content data is not an OCTET STRING.');\n  }\n  data = _decodePkcs7Data(data);\n\n  // check for MAC\n  if(capture.mac) {\n    var md = null;\n    var macKeyBytes = 0;\n    var macAlgorithm = asn1.derToOid(capture.macAlgorithm);\n    switch(macAlgorithm) {\n    case pki.oids.sha1:\n      md = forge.md.sha1.create();\n      macKeyBytes = 20;\n      break;\n    case pki.oids.sha256:\n      md = forge.md.sha256.create();\n      macKeyBytes = 32;\n      break;\n    case pki.oids.sha384:\n      md = forge.md.sha384.create();\n      macKeyBytes = 48;\n      break;\n    case pki.oids.sha512:\n      md = forge.md.sha512.create();\n      macKeyBytes = 64;\n      break;\n    case pki.oids.md5:\n      md = forge.md.md5.create();\n      macKeyBytes = 16;\n      break;\n    }\n    if(md === null) {\n      throw new Error('PKCS#12 uses unsupported MAC algorithm: ' + macAlgorithm);\n    }\n\n    // verify MAC (iterations default to 1)\n    var macSalt = new forge.util.ByteBuffer(capture.macSalt);\n    var macIterations = (('macIterations' in capture) ?\n      parseInt(forge.util.bytesToHex(capture.macIterations), 16) : 1);\n    var macKey = p12.generateKey(\n      password, macSalt, 3, macIterations, macKeyBytes, md);\n    var mac = forge.hmac.create();\n    mac.start(md, macKey);\n    mac.update(data.value);\n    var macValue = mac.getMac();\n    if(macValue.getBytes() !== capture.macDigest) {\n      throw new Error('PKCS#12 MAC could not be verified. Invalid password?');\n    }\n  }\n\n  _decodeAuthenticatedSafe(pfx, data.value, strict, password);\n  return pfx;\n};\n\n/**\n * Decodes PKCS#7 Data. PKCS#7 (RFC 2315) defines \"Data\" as an OCTET STRING,\n * but it is sometimes an OCTET STRING that is composed/constructed of chunks,\n * each its own OCTET STRING. This is BER-encoding vs. DER-encoding. This\n * function transforms this corner-case into the usual simple,\n * non-composed/constructed OCTET STRING.\n *\n * This function may be moved to ASN.1 at some point to better deal with\n * more BER-encoding issues, should they arise.\n *\n * @param data the ASN.1 Data object to transform.\n */\nfunction _decodePkcs7Data(data) {\n  // handle special case of \"chunked\" data content: an octet string composed\n  // of other octet strings\n  if(data.composed || data.constructed) {\n    var value = forge.util.createBuffer();\n    for(var i = 0; i < data.value.length; ++i) {\n      value.putBytes(data.value[i].value);\n    }\n    data.composed = data.constructed = false;\n    data.value = value.getBytes();\n  }\n  return data;\n}\n\n/**\n * Decode PKCS#12 AuthenticatedSafe (BER encoded) into PFX object.\n *\n * The AuthenticatedSafe is a BER-encoded SEQUENCE OF ContentInfo.\n *\n * @param pfx The PKCS#12 PFX object to fill.\n * @param {String} authSafe BER-encoded AuthenticatedSafe.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n */\nfunction _decodeAuthenticatedSafe(pfx, authSafe, strict, password) {\n  authSafe = asn1.fromDer(authSafe, strict);  /* actually it's BER encoded */\n\n  if(authSafe.tagClass !== asn1.Class.UNIVERSAL ||\n     authSafe.type !== asn1.Type.SEQUENCE ||\n     authSafe.constructed !== true) {\n    throw new Error('PKCS#12 AuthenticatedSafe expected to be a ' +\n      'SEQUENCE OF ContentInfo');\n  }\n\n  for(var i = 0; i < authSafe.value.length; i++) {\n    var contentInfo = authSafe.value[i];\n\n    // validate contentInfo and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(contentInfo, contentInfoValidator, capture, errors)) {\n      var error = new Error('Cannot read ContentInfo.');\n      error.errors = errors;\n      throw error;\n    }\n\n    var obj = {\n      encrypted: false\n    };\n    var safeContents = null;\n    var data = capture.content.value[0];\n    switch(asn1.derToOid(capture.contentType)) {\n    case pki.oids.data:\n      if(data.tagClass !== asn1.Class.UNIVERSAL ||\n         data.type !== asn1.Type.OCTETSTRING) {\n        throw new Error('PKCS#12 SafeContents Data is not an OCTET STRING.');\n      }\n      safeContents = _decodePkcs7Data(data).value;\n      break;\n    case pki.oids.encryptedData:\n      safeContents = _decryptSafeContents(data, password);\n      obj.encrypted = true;\n      break;\n    default:\n      var error = new Error('Unsupported PKCS#12 contentType.');\n      error.contentType = asn1.derToOid(capture.contentType);\n      throw error;\n    }\n\n    obj.safeBags = _decodeSafeContents(safeContents, strict, password);\n    pfx.safeContents.push(obj);\n  }\n}\n\n/**\n * Decrypt PKCS#7 EncryptedData structure.\n *\n * @param data ASN.1 encoded EncryptedContentInfo object.\n * @param password The user-provided password.\n *\n * @return The decrypted SafeContents (ASN.1 object).\n */\nfunction _decryptSafeContents(data, password) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(\n    data, forge.pkcs7.asn1.encryptedDataValidator, capture, errors)) {\n    var error = new Error('Cannot read EncryptedContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var oid = asn1.derToOid(capture.contentType);\n  if(oid !== pki.oids.data) {\n    var error = new Error(\n      'PKCS#12 EncryptedContentInfo ContentType is not Data.');\n    error.oid = oid;\n    throw error;\n  }\n\n  // get cipher\n  oid = asn1.derToOid(capture.encAlgorithm);\n  var cipher = pki.pbe.getCipher(oid, capture.encParameter, password);\n\n  // get encrypted data\n  var encryptedContentAsn1 = _decodePkcs7Data(capture.encryptedContentAsn1);\n  var encrypted = forge.util.createBuffer(encryptedContentAsn1.value);\n\n  cipher.update(encrypted);\n  if(!cipher.finish()) {\n    throw new Error('Failed to decrypt PKCS#12 SafeContents.');\n  }\n\n  return cipher.output.getBytes();\n}\n\n/**\n * Decode PKCS#12 SafeContents (BER-encoded) into array of Bag objects.\n *\n * The safeContents is a BER-encoded SEQUENCE OF SafeBag.\n *\n * @param {String} safeContents BER-encoded safeContents.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n *\n * @return {Array} Array of Bag objects.\n */\nfunction _decodeSafeContents(safeContents, strict, password) {\n  // if strict and no safe contents, return empty safes\n  if(!strict && safeContents.length === 0) {\n    return [];\n  }\n\n  // actually it's BER-encoded\n  safeContents = asn1.fromDer(safeContents, strict);\n\n  if(safeContents.tagClass !== asn1.Class.UNIVERSAL ||\n    safeContents.type !== asn1.Type.SEQUENCE ||\n    safeContents.constructed !== true) {\n    throw new Error(\n      'PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag.');\n  }\n\n  var res = [];\n  for(var i = 0; i < safeContents.value.length; i++) {\n    var safeBag = safeContents.value[i];\n\n    // validate SafeBag and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(safeBag, safeBagValidator, capture, errors)) {\n      var error = new Error('Cannot read SafeBag.');\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Create bag object and push to result array. */\n    var bag = {\n      type: asn1.derToOid(capture.bagId),\n      attributes: _decodeBagAttributes(capture.bagAttributes)\n    };\n    res.push(bag);\n\n    var validator, decoder;\n    var bagAsn1 = capture.bagValue.value[0];\n    switch(bag.type) {\n      case pki.oids.pkcs8ShroudedKeyBag:\n        /* bagAsn1 has a EncryptedPrivateKeyInfo, which we need to decrypt.\n           Afterwards we can handle it like a keyBag,\n           which is a PrivateKeyInfo. */\n        bagAsn1 = pki.decryptPrivateKeyInfo(bagAsn1, password);\n        if(bagAsn1 === null) {\n          throw new Error(\n            'Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?');\n        }\n\n        /* fall through */\n      case pki.oids.keyBag:\n        /* A PKCS#12 keyBag is a simple PrivateKeyInfo as understood by our\n           PKI module, hence we don't have to do validation/capturing here,\n           just pass what we already got. */\n        try {\n          bag.key = pki.privateKeyFromAsn1(bagAsn1);\n        } catch(e) {\n          // ignore unknown key type, pass asn1 value\n          bag.key = null;\n          bag.asn1 = bagAsn1;\n        }\n        continue;  /* Nothing more to do. */\n\n      case pki.oids.certBag:\n        /* A PKCS#12 certBag can wrap both X.509 and sdsi certificates.\n           Therefore put the SafeBag content through another validator to\n           capture the fields.  Afterwards check & store the results. */\n        validator = certBagValidator;\n        decoder = function() {\n          if(asn1.derToOid(capture.certId) !== pki.oids.x509Certificate) {\n            var error = new Error(\n              'Unsupported certificate type, only X.509 supported.');\n            error.oid = asn1.derToOid(capture.certId);\n            throw error;\n          }\n\n          // true=produce cert hash\n          var certAsn1 = asn1.fromDer(capture.cert, strict);\n          try {\n            bag.cert = pki.certificateFromAsn1(certAsn1, true);\n          } catch(e) {\n            // ignore unknown cert type, pass asn1 value\n            bag.cert = null;\n            bag.asn1 = certAsn1;\n          }\n        };\n        break;\n\n      default:\n        var error = new Error('Unsupported PKCS#12 SafeBag type.');\n        error.oid = bag.type;\n        throw error;\n    }\n\n    /* Validate SafeBag value (i.e. CertBag, etc.) and capture data if needed. */\n    if(validator !== undefined &&\n       !asn1.validate(bagAsn1, validator, capture, errors)) {\n      var error = new Error('Cannot read PKCS#12 ' + validator.name);\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Call decoder function from above to store the results. */\n    decoder();\n  }\n\n  return res;\n}\n\n/**\n * Decode PKCS#12 SET OF PKCS12Attribute into JavaScript object.\n *\n * @param attributes SET OF PKCS12Attribute (ASN.1 object).\n *\n * @return the decoded attributes.\n */\nfunction _decodeBagAttributes(attributes) {\n  var decodedAttrs = {};\n\n  if(attributes !== undefined) {\n    for(var i = 0; i < attributes.length; ++i) {\n      var capture = {};\n      var errors = [];\n      if(!asn1.validate(attributes[i], attributeValidator, capture, errors)) {\n        var error = new Error('Cannot read PKCS#12 BagAttribute.');\n        error.errors = errors;\n        throw error;\n      }\n\n      var oid = asn1.derToOid(capture.oid);\n      if(pki.oids[oid] === undefined) {\n        // unsupported attribute type, ignore.\n        continue;\n      }\n\n      decodedAttrs[pki.oids[oid]] = [];\n      for(var j = 0; j < capture.values.length; ++j) {\n        decodedAttrs[pki.oids[oid]].push(capture.values[j].value);\n      }\n    }\n  }\n\n  return decodedAttrs;\n}\n\n/**\n * Wraps a private key and certificate in a PKCS#12 PFX wrapper. If a\n * password is provided then the private key will be encrypted.\n *\n * An entire certificate chain may also be included. To do this, pass\n * an array for the \"cert\" parameter where the first certificate is\n * the one that is paired with the private key and each subsequent one\n * verifies the previous one. The certificates may be in PEM format or\n * have been already parsed by Forge.\n *\n * @todo implement password-based-encryption for the whole package\n *\n * @param key the private key.\n * @param cert the certificate (may be an array of certificates in order\n *          to specify a certificate chain).\n * @param password the password to use, null for none.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          useMac true to include a MAC, false not to, defaults to true.\n *          localKeyId the local key ID to use, in hex.\n *          friendlyName the friendly name to use.\n *          generateLocalKeyId true to generate a random local key ID,\n *            false not to, defaults to true.\n *\n * @return the PKCS#12 PFX ASN.1 object.\n */\np12.toPkcs12Asn1 = function(key, cert, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || options.encAlgorithm || 'aes128';\n  if(!('useMac' in options)) {\n    options.useMac = true;\n  }\n  if(!('localKeyId' in options)) {\n    options.localKeyId = null;\n  }\n  if(!('generateLocalKeyId' in options)) {\n    options.generateLocalKeyId = true;\n  }\n\n  var localKeyId = options.localKeyId;\n  var bagAttrs;\n  if(localKeyId !== null) {\n    localKeyId = forge.util.hexToBytes(localKeyId);\n  } else if(options.generateLocalKeyId) {\n    // use SHA-1 of paired cert, if available\n    if(cert) {\n      var pairedCert = forge.util.isArray(cert) ? cert[0] : cert;\n      if(typeof pairedCert === 'string') {\n        pairedCert = pki.certificateFromPem(pairedCert);\n      }\n      var sha1 = forge.md.sha1.create();\n      sha1.update(asn1.toDer(pki.certificateToAsn1(pairedCert)).getBytes());\n      localKeyId = sha1.digest().getBytes();\n    } else {\n      // FIXME: consider using SHA-1 of public key (which can be generated\n      // from private key components), see: cert.generateSubjectKeyIdentifier\n      // generate random bytes\n      localKeyId = forge.random.getBytes(20);\n    }\n  }\n\n  var attrs = [];\n  if(localKeyId !== null) {\n    attrs.push(\n      // localKeyID\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.localKeyId).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            localKeyId)\n        ])\n      ]));\n  }\n  if('friendlyName' in options) {\n    attrs.push(\n      // friendlyName\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.friendlyName).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BMPSTRING, false,\n            options.friendlyName)\n        ])\n      ]));\n  }\n\n  if(attrs.length > 0) {\n    bagAttrs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, attrs);\n  }\n\n  // collect contents for AuthenticatedSafe\n  var contents = [];\n\n  // create safe bag(s) for certificate chain\n  var chain = [];\n  if(cert !== null) {\n    if(forge.util.isArray(cert)) {\n      chain = cert;\n    } else {\n      chain = [cert];\n    }\n  }\n\n  var certSafeBags = [];\n  for(var i = 0; i < chain.length; ++i) {\n    // convert cert from PEM as necessary\n    cert = chain[i];\n    if(typeof cert === 'string') {\n      cert = pki.certificateFromPem(cert);\n    }\n\n    // SafeBag\n    var certBagAttrs = (i === 0) ? bagAttrs : undefined;\n    var certAsn1 = pki.certificateToAsn1(cert);\n    var certSafeBag =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.certBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // CertBag\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // certId\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(pki.oids.x509Certificate).getBytes()),\n            // certValue (x509Certificate)\n            asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n              asn1.create(\n                asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                asn1.toDer(certAsn1).getBytes())\n            ])])]),\n        // bagAttributes (OPTIONAL)\n        certBagAttrs\n      ]);\n    certSafeBags.push(certSafeBag);\n  }\n\n  if(certSafeBags.length > 0) {\n    // SafeContents\n    var certSafeContents = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, certSafeBags);\n\n    // ContentInfo\n    var certCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(certSafeContents).getBytes())\n        ])\n      ]);\n    contents.push(certCI);\n  }\n\n  // create safe contents for private key\n  var keyBag = null;\n  if(key !== null) {\n    // SafeBag\n    var pkAsn1 = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(key));\n    if(password === null) {\n      // no encryption\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.keyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // PrivateKeyInfo\n          pkAsn1\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    } else {\n      // encrypted PrivateKeyInfo\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.pkcs8ShroudedKeyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // EncryptedPrivateKeyInfo\n          pki.encryptPrivateKeyInfo(pkAsn1, password, options)\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    }\n\n    // SafeContents\n    var keySafeContents =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [keyBag]);\n\n    // ContentInfo\n    var keyCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(keySafeContents).getBytes())\n        ])\n      ]);\n    contents.push(keyCI);\n  }\n\n  // create AuthenticatedSafe by stringing together the contents\n  var safe = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, contents);\n\n  var macData;\n  if(options.useMac) {\n    // MacData\n    var sha1 = forge.md.sha1.create();\n    var macSalt = new forge.util.ByteBuffer(\n      forge.random.getBytes(options.saltSize));\n    var count = options.count;\n    // 160-bit key\n    var key = p12.generateKey(password, macSalt, 3, count, 20);\n    var mac = forge.hmac.create();\n    mac.start(sha1, key);\n    mac.update(asn1.toDer(safe).getBytes());\n    var macValue = mac.getMac();\n    macData = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // mac DigestInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // digestAlgorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm = SHA-1\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(pki.oids.sha1).getBytes()),\n          // parameters = Null\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]),\n        // digest\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n          false, macValue.getBytes())\n      ]),\n      // macSalt OCTET STRING\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, macSalt.getBytes()),\n      // iterations INTEGER (XXX: Only support count < 65536)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(count).getBytes()\n      )\n    ]);\n  }\n\n  // PFX\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (3)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(3).getBytes()),\n    // PKCS#7 ContentInfo\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // contentType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        // OID for the content type is 'data'\n        asn1.oidToDer(pki.oids.data).getBytes()),\n      // content\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          asn1.toDer(safe).getBytes())\n      ])\n    ]),\n    macData\n  ]);\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\np12.generateKey = forge.pbe.generatePkcs12Key;\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/pkcs12.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pkcs7.js":function(module,exports,__webpack_require__){eval("/**\n * Javascript implementation of PKCS#7 v1.5.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n *\n * Currently this implementation only supports ContentType of EnvelopedData,\n * EncryptedData, or SignedData at the root level. The top level elements may\n * contain only a ContentInfo of ContentType Data, i.e. plain data. Further\n * nesting is not (yet) supported.\n *\n * The Forge validators for PKCS #7's ASN.1 structures are available from\n * a separate file pkcs7asn1.js, since those are referenced from other\n * PKCS standards like PKCS #12.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./aes */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/aes.js\");\n__webpack_require__(/*! ./asn1 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/asn1.js\");\n__webpack_require__(/*! ./des */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/des.js\");\n__webpack_require__(/*! ./oids */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/oids.js\");\n__webpack_require__(/*! ./pem */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pem.js\");\n__webpack_require__(/*! ./pkcs7asn1 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pkcs7asn1.js\");\n__webpack_require__(/*! ./random */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/random.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n__webpack_require__(/*! ./x509 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/x509.js\");\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7 = module.exports = forge.pkcs7 = forge.pkcs7 || {};\n\n/**\n * Converts a PKCS#7 message from PEM format.\n *\n * @param pem the PEM-formatted PKCS#7 message.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PKCS7') {\n    var error = new Error('Could not convert PKCS#7 message from PEM; PEM ' +\n      'header type is not \"PKCS#7\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PKCS#7 message from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return p7.messageFromAsn1(obj);\n};\n\n/**\n * Converts a PKCS#7 message to PEM format.\n *\n * @param msg The PKCS#7 message object\n * @param maxline The maximum characters per line, defaults to 64.\n *\n * @return The PEM-formatted PKCS#7 message.\n */\np7.messageToPem = function(msg, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var pemObj = {\n    type: 'PKCS7',\n    body: asn1.toDer(msg.toAsn1()).getBytes()\n  };\n  return forge.pem.encode(pemObj, {maxline: maxline});\n};\n\n/**\n * Converts a PKCS#7 message from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a ContentInfo.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromAsn1 = function(obj) {\n  // validate root level ContentInfo and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.contentInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not an PKCS#7 ContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var contentType = asn1.derToOid(capture.contentType);\n  var msg;\n\n  switch(contentType) {\n    case forge.pki.oids.envelopedData:\n      msg = p7.createEnvelopedData();\n      break;\n\n    case forge.pki.oids.encryptedData:\n      msg = p7.createEncryptedData();\n      break;\n\n    case forge.pki.oids.signedData:\n      msg = p7.createSignedData();\n      break;\n\n    default:\n      throw new Error('Cannot read PKCS#7 message. ContentType with OID ' +\n        contentType + ' is not (yet) supported.');\n  }\n\n  msg.fromAsn1(capture.content.value[0]);\n  return msg;\n};\n\np7.createSignedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.signedData,\n    version: 1,\n    certificates: [],\n    crls: [],\n    // TODO: add json-formatted signer stuff here?\n    signers: [],\n    // populated during sign()\n    digestAlgorithmIdentifiers: [],\n    contentInfo: null,\n    signerInfos: [],\n\n    fromAsn1: function(obj) {\n      // validate SignedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.signedDataValidator);\n      msg.certificates = [];\n      msg.crls = [];\n      msg.digestAlgorithmIdentifiers = [];\n      msg.contentInfo = null;\n      msg.signerInfos = [];\n\n      if(msg.rawCapture.certificates) {\n        var certs = msg.rawCapture.certificates.value;\n        for(var i = 0; i < certs.length; ++i) {\n          msg.certificates.push(forge.pki.certificateFromAsn1(certs[i]));\n        }\n      }\n\n      // TODO: parse crls\n    },\n\n    toAsn1: function() {\n      // degenerate case with no content\n      if(!msg.contentInfo) {\n        msg.sign();\n      }\n\n      var certs = [];\n      for(var i = 0; i < msg.certificates.length; ++i) {\n        certs.push(forge.pki.certificateToAsn1(msg.certificates[i]));\n      }\n\n      var crls = [];\n      // TODO: implement CRLs\n\n      // [0] SignedData\n      var signedData = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // Version\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(msg.version).getBytes()),\n          // DigestAlgorithmIdentifiers\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n            msg.digestAlgorithmIdentifiers),\n          // ContentInfo\n          msg.contentInfo\n        ])\n      ]);\n      if(certs.length > 0) {\n        // [0] IMPLICIT ExtendedCertificatesAndCertificates OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, certs));\n      }\n      if(crls.length > 0) {\n        // [1] IMPLICIT CertificateRevocationLists OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, crls));\n      }\n      // SignerInfos\n      signedData.value[0].value.push(\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n          msg.signerInfos));\n\n      // ContentInfo\n      return asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // ContentType\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(msg.type).getBytes()),\n          // [0] SignedData\n          signedData\n        ]);\n    },\n\n    /**\n     * Add (another) entity to list of signers.\n     *\n     * Note: If authenticatedAttributes are provided, then, per RFC 2315,\n     * they must include at least two attributes: content type and\n     * message digest. The message digest attribute value will be\n     * auto-calculated during signing and will be ignored if provided.\n     *\n     * Here's an example of providing these two attributes:\n     *\n     * forge.pkcs7.createSignedData();\n     * p7.addSigner({\n     *   issuer: cert.issuer.attributes,\n     *   serialNumber: cert.serialNumber,\n     *   key: privateKey,\n     *   digestAlgorithm: forge.pki.oids.sha1,\n     *   authenticatedAttributes: [{\n     *     type: forge.pki.oids.contentType,\n     *     value: forge.pki.oids.data\n     *   }, {\n     *     type: forge.pki.oids.messageDigest\n     *   }]\n     * });\n     *\n     * TODO: Support [subjectKeyIdentifier] as signer's ID.\n     *\n     * @param signer the signer information:\n     *          key the signer's private key.\n     *          [certificate] a certificate containing the public key\n     *            associated with the signer's private key; use this option as\n     *            an alternative to specifying signer.issuer and\n     *            signer.serialNumber.\n     *          [issuer] the issuer attributes (eg: cert.issuer.attributes).\n     *          [serialNumber] the signer's certificate's serial number in\n     *           hexadecimal (eg: cert.serialNumber).\n     *          [digestAlgorithm] the message digest OID, as a string, to use\n     *            (eg: forge.pki.oids.sha1).\n     *          [authenticatedAttributes] an optional array of attributes\n     *            to also sign along with the content.\n     */\n    addSigner: function(signer) {\n      var issuer = signer.issuer;\n      var serialNumber = signer.serialNumber;\n      if(signer.certificate) {\n        var cert = signer.certificate;\n        if(typeof cert === 'string') {\n          cert = forge.pki.certificateFromPem(cert);\n        }\n        issuer = cert.issuer.attributes;\n        serialNumber = cert.serialNumber;\n      }\n      var key = signer.key;\n      if(!key) {\n        throw new Error(\n          'Could not add PKCS#7 signer; no private key specified.');\n      }\n      if(typeof key === 'string') {\n        key = forge.pki.privateKeyFromPem(key);\n      }\n\n      // ensure OID known for digest algorithm\n      var digestAlgorithm = signer.digestAlgorithm || forge.pki.oids.sha1;\n      switch(digestAlgorithm) {\n      case forge.pki.oids.sha1:\n      case forge.pki.oids.sha256:\n      case forge.pki.oids.sha384:\n      case forge.pki.oids.sha512:\n      case forge.pki.oids.md5:\n        break;\n      default:\n        throw new Error(\n          'Could not add PKCS#7 signer; unknown message digest algorithm: ' +\n          digestAlgorithm);\n      }\n\n      // if authenticatedAttributes is present, then the attributes\n      // must contain at least PKCS #9 content-type and message-digest\n      var authenticatedAttributes = signer.authenticatedAttributes || [];\n      if(authenticatedAttributes.length > 0) {\n        var contentType = false;\n        var messageDigest = false;\n        for(var i = 0; i < authenticatedAttributes.length; ++i) {\n          var attr = authenticatedAttributes[i];\n          if(!contentType && attr.type === forge.pki.oids.contentType) {\n            contentType = true;\n            if(messageDigest) {\n              break;\n            }\n            continue;\n          }\n          if(!messageDigest && attr.type === forge.pki.oids.messageDigest) {\n            messageDigest = true;\n            if(contentType) {\n              break;\n            }\n            continue;\n          }\n        }\n\n        if(!contentType || !messageDigest) {\n          throw new Error('Invalid signer.authenticatedAttributes. If ' +\n            'signer.authenticatedAttributes is specified, then it must ' +\n            'contain at least two attributes, PKCS #9 content-type and ' +\n            'PKCS #9 message-digest.');\n        }\n      }\n\n      msg.signers.push({\n        key: key,\n        version: 1,\n        issuer: issuer,\n        serialNumber: serialNumber,\n        digestAlgorithm: digestAlgorithm,\n        signatureAlgorithm: forge.pki.oids.rsaEncryption,\n        signature: null,\n        authenticatedAttributes: authenticatedAttributes,\n        unauthenticatedAttributes: []\n      });\n    },\n\n    /**\n     * Signs the content.\n     * @param options Options to apply when signing:\n     *    [detached] boolean. If signing should be done in detached mode. Defaults to false.\n     */\n    sign: function(options) {\n      options = options || {};\n      // auto-generate content info\n      if(typeof msg.content !== 'object' || msg.contentInfo === null) {\n        // use Data ContentInfo\n        msg.contentInfo = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // ContentType\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(forge.pki.oids.data).getBytes())\n          ]);\n\n        // add actual content, if present\n        if('content' in msg) {\n          var content;\n          if(msg.content instanceof forge.util.ByteBuffer) {\n            content = msg.content.bytes();\n          } else if(typeof msg.content === 'string') {\n            content = forge.util.encodeUtf8(msg.content);\n          }\n\n          if (options.detached) {\n            msg.detachedContent = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, content);\n          } else {\n            msg.contentInfo.value.push(\n              // [0] EXPLICIT content\n              asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n                asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                  content)\n              ]));\n          }\n        }\n      }\n\n      // no signers, return early (degenerate case for certificate container)\n      if(msg.signers.length === 0) {\n        return;\n      }\n\n      // generate digest algorithm identifiers\n      var mds = addDigestAlgorithmIds();\n\n      // generate signerInfos\n      addSignerInfos(mds);\n    },\n\n    verify: function() {\n      throw new Error('PKCS#7 signature verification not yet implemented.');\n    },\n\n    /**\n     * Add a certificate.\n     *\n     * @param cert the certificate to add.\n     */\n    addCertificate: function(cert) {\n      // convert from PEM\n      if(typeof cert === 'string') {\n        cert = forge.pki.certificateFromPem(cert);\n      }\n      msg.certificates.push(cert);\n    },\n\n    /**\n     * Add a certificate revokation list.\n     *\n     * @param crl the certificate revokation list to add.\n     */\n    addCertificateRevokationList: function(crl) {\n      throw new Error('PKCS#7 CRL support not yet implemented.');\n    }\n  };\n  return msg;\n\n  function addDigestAlgorithmIds() {\n    var mds = {};\n\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n      var oid = signer.digestAlgorithm;\n      if(!(oid in mds)) {\n        // content digest\n        mds[oid] = forge.md[forge.pki.oids[oid]].create();\n      }\n      if(signer.authenticatedAttributes.length === 0) {\n        // no custom attributes to digest; use content message digest\n        signer.md = mds[oid];\n      } else {\n        // custom attributes to be digested; use own message digest\n        // TODO: optimize to just copy message digest state if that\n        // feature is ever supported with message digests\n        signer.md = forge.md[forge.pki.oids[oid]].create();\n      }\n    }\n\n    // add unique digest algorithm identifiers\n    msg.digestAlgorithmIdentifiers = [];\n    for(var oid in mds) {\n      msg.digestAlgorithmIdentifiers.push(\n        // AlgorithmIdentifier\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oid).getBytes()),\n          // parameters (null)\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]));\n    }\n\n    return mds;\n  }\n\n  function addSignerInfos(mds) {\n    var content;\n\n    if (msg.detachedContent) {\n      // Signature has been made in detached mode.\n      content = msg.detachedContent;\n    } else {\n      // Note: ContentInfo is a SEQUENCE with 2 values, second value is\n      // the content field and is optional for a ContentInfo but required here\n      // since signers are present\n      // get ContentInfo content\n      content = msg.contentInfo.value[1];\n      // skip [0] EXPLICIT content wrapper\n      content = content.value[0];\n    }\n\n    if(!content) {\n      throw new Error(\n        'Could not sign PKCS#7 message; there is no content to sign.');\n    }\n\n    // get ContentInfo content type\n    var contentType = asn1.derToOid(msg.contentInfo.value[0].value);\n\n    // serialize content\n    var bytes = asn1.toDer(content);\n\n    // skip identifier and length per RFC 2315 9.3\n    // skip identifier (1 byte)\n    bytes.getByte();\n    // read and discard length bytes\n    asn1.getBerValueLength(bytes);\n    bytes = bytes.getBytes();\n\n    // digest content DER value bytes\n    for(var oid in mds) {\n      mds[oid].start().update(bytes);\n    }\n\n    // sign content\n    var signingTime = new Date();\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n\n      if(signer.authenticatedAttributes.length === 0) {\n        // if ContentInfo content type is not \"Data\", then\n        // authenticatedAttributes must be present per RFC 2315\n        if(contentType !== forge.pki.oids.data) {\n          throw new Error(\n            'Invalid signer; authenticatedAttributes must be present ' +\n            'when the ContentInfo content type is not PKCS#7 Data.');\n        }\n      } else {\n        // process authenticated attributes\n        // [0] IMPLICIT\n        signer.authenticatedAttributesAsn1 = asn1.create(\n          asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n        // per RFC 2315, attributes are to be digested using a SET container\n        // not the above [0] IMPLICIT container\n        var attrsAsn1 = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SET, true, []);\n\n        for(var ai = 0; ai < signer.authenticatedAttributes.length; ++ai) {\n          var attr = signer.authenticatedAttributes[ai];\n          if(attr.type === forge.pki.oids.messageDigest) {\n            // use content message digest as value\n            attr.value = mds[signer.digestAlgorithm].digest();\n          } else if(attr.type === forge.pki.oids.signingTime) {\n            // auto-populate signing time if not already set\n            if(!attr.value) {\n              attr.value = signingTime;\n            }\n          }\n\n          // convert to ASN.1 and push onto Attributes SET (for signing) and\n          // onto authenticatedAttributesAsn1 to complete SignedData ASN.1\n          // TODO: optimize away duplication\n          attrsAsn1.value.push(_attributeToAsn1(attr));\n          signer.authenticatedAttributesAsn1.value.push(_attributeToAsn1(attr));\n        }\n\n        // DER-serialize and digest SET OF attributes only\n        bytes = asn1.toDer(attrsAsn1).getBytes();\n        signer.md.start().update(bytes);\n      }\n\n      // sign digest\n      signer.signature = signer.key.sign(signer.md, 'RSASSA-PKCS1-V1_5');\n    }\n\n    // add signer info\n    msg.signerInfos = _signersToAsn1(msg.signers);\n  }\n};\n\n/**\n * Creates an empty PKCS#7 message of type EncryptedData.\n *\n * @return the message.\n */\np7.createEncryptedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.encryptedData,\n    version: 0,\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EncryptedData content block (in ASN.1 format)\n     *\n     * @param obj The ASN.1 representation of the EncryptedData content block\n     */\n    fromAsn1: function(obj) {\n      // Validate EncryptedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.encryptedDataValidator);\n    },\n\n    /**\n     * Decrypt encrypted content\n     *\n     * @param key The (symmetric) key as a byte buffer\n     */\n    decrypt: function(key) {\n      if(key !== undefined) {\n        msg.encryptedContent.key = key;\n      }\n      _decryptContent(msg);\n    }\n  };\n  return msg;\n};\n\n/**\n * Creates an empty PKCS#7 message of type EnvelopedData.\n *\n * @return the message.\n */\np7.createEnvelopedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.envelopedData,\n    version: 0,\n    recipients: [],\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EnvelopedData content block (in ASN.1 format)\n     *\n     * @param obj the ASN.1 representation of the EnvelopedData content block.\n     */\n    fromAsn1: function(obj) {\n      // validate EnvelopedData content block and capture data\n      var capture = _fromAsn1(msg, obj, p7.asn1.envelopedDataValidator);\n      msg.recipients = _recipientsFromAsn1(capture.recipientInfos.value);\n    },\n\n    toAsn1: function() {\n      // ContentInfo\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // ContentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(msg.type).getBytes()),\n        // [0] EnvelopedData\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // Version\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n              asn1.integerToDer(msg.version).getBytes()),\n            // RecipientInfos\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n              _recipientsToAsn1(msg.recipients)),\n            // EncryptedContentInfo\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true,\n              _encryptedContentToAsn1(msg.encryptedContent))\n          ])\n        ])\n      ]);\n    },\n\n    /**\n     * Find recipient by X.509 certificate's issuer.\n     *\n     * @param cert the certificate with the issuer to look for.\n     *\n     * @return the recipient object.\n     */\n    findRecipient: function(cert) {\n      var sAttr = cert.issuer.attributes;\n\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var r = msg.recipients[i];\n        var rAttr = r.issuer;\n\n        if(r.serialNumber !== cert.serialNumber) {\n          continue;\n        }\n\n        if(rAttr.length !== sAttr.length) {\n          continue;\n        }\n\n        var match = true;\n        for(var j = 0; j < sAttr.length; ++j) {\n          if(rAttr[j].type !== sAttr[j].type ||\n            rAttr[j].value !== sAttr[j].value) {\n            match = false;\n            break;\n          }\n        }\n\n        if(match) {\n          return r;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Decrypt enveloped content\n     *\n     * @param recipient The recipient object related to the private key\n     * @param privKey The (RSA) private key object\n     */\n    decrypt: function(recipient, privKey) {\n      if(msg.encryptedContent.key === undefined && recipient !== undefined &&\n        privKey !== undefined) {\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n          case forge.pki.oids.desCBC:\n            var key = privKey.decrypt(recipient.encryptedContent.content);\n            msg.encryptedContent.key = forge.util.createBuffer(key);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, ' +\n              'OID ' + recipient.encryptedContent.algorithm);\n        }\n      }\n\n      _decryptContent(msg);\n    },\n\n    /**\n     * Add (another) entity to list of recipients.\n     *\n     * @param cert The certificate of the entity to add.\n     */\n    addRecipient: function(cert) {\n      msg.recipients.push({\n        version: 0,\n        issuer: cert.issuer.attributes,\n        serialNumber: cert.serialNumber,\n        encryptedContent: {\n          // We simply assume rsaEncryption here, since forge.pki only\n          // supports RSA so far.  If the PKI module supports other\n          // ciphers one day, we need to modify this one as well.\n          algorithm: forge.pki.oids.rsaEncryption,\n          key: cert.publicKey\n        }\n      });\n    },\n\n    /**\n     * Encrypt enveloped content.\n     *\n     * This function supports two optional arguments, cipher and key, which\n     * can be used to influence symmetric encryption.  Unless cipher is\n     * provided, the cipher specified in encryptedContent.algorithm is used\n     * (defaults to AES-256-CBC).  If no key is provided, encryptedContent.key\n     * is (re-)used.  If that one's not set, a random key will be generated\n     * automatically.\n     *\n     * @param [key] The key to be used for symmetric encryption.\n     * @param [cipher] The OID of the symmetric cipher to use.\n     */\n    encrypt: function(key, cipher) {\n      // Part 1: Symmetric encryption\n      if(msg.encryptedContent.content === undefined) {\n        cipher = cipher || msg.encryptedContent.algorithm;\n        key = key || msg.encryptedContent.key;\n\n        var keyLen, ivLen, ciphFn;\n        switch(cipher) {\n          case forge.pki.oids['aes128-CBC']:\n            keyLen = 16;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes192-CBC']:\n            keyLen = 24;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes256-CBC']:\n            keyLen = 32;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['des-EDE3-CBC']:\n            keyLen = 24;\n            ivLen = 8;\n            ciphFn = forge.des.createEncryptionCipher;\n            break;\n\n          default:\n            throw new Error('Unsupported symmetric cipher, OID ' + cipher);\n        }\n\n        if(key === undefined) {\n          key = forge.util.createBuffer(forge.random.getBytes(keyLen));\n        } else if(key.length() != keyLen) {\n          throw new Error('Symmetric key has wrong length; ' +\n            'got ' + key.length() + ' bytes, expected ' + keyLen + '.');\n        }\n\n        // Keep a copy of the key & IV in the object, so the caller can\n        // use it for whatever reason.\n        msg.encryptedContent.algorithm = cipher;\n        msg.encryptedContent.key = key;\n        msg.encryptedContent.parameter = forge.util.createBuffer(\n          forge.random.getBytes(ivLen));\n\n        var ciph = ciphFn(key);\n        ciph.start(msg.encryptedContent.parameter.copy());\n        ciph.update(msg.content);\n\n        // The finish function does PKCS#7 padding by default, therefore\n        // no action required by us.\n        if(!ciph.finish()) {\n          throw new Error('Symmetric encryption failed.');\n        }\n\n        msg.encryptedContent.content = ciph.output;\n      }\n\n      // Part 2: asymmetric encryption for each recipient\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var recipient = msg.recipients[i];\n\n        // Nothing to do, encryption already done.\n        if(recipient.encryptedContent.content !== undefined) {\n          continue;\n        }\n\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n            recipient.encryptedContent.content =\n              recipient.encryptedContent.key.encrypt(\n                msg.encryptedContent.key.data);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, OID ' +\n              recipient.encryptedContent.algorithm);\n        }\n      }\n    }\n  };\n  return msg;\n};\n\n/**\n * Converts a single recipient from an ASN.1 object.\n *\n * @param obj the ASN.1 RecipientInfo.\n *\n * @return the recipient object.\n */\nfunction _recipientFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.recipientInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 RecipientInfo. ' +\n      'ASN.1 object is not an PKCS#7 RecipientInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  return {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    encryptedContent: {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: capture.encParameter.value,\n      content: capture.encKey\n    }\n  };\n}\n\n/**\n * Converts a single recipient object to an ASN.1 object.\n *\n * @param obj the recipient object.\n *\n * @return the ASN.1 RecipientInfo.\n */\nfunction _recipientToAsn1(obj) {\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // Version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // IssuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // Serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // KeyEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.encryptedContent.algorithm).getBytes()),\n      // Parameter, force NULL, only RSA supported for now.\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // EncryptedKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      obj.encryptedContent.content)\n  ]);\n}\n\n/**\n * Map a set of RecipientInfo ASN.1 objects to recipient objects.\n *\n * @param infos an array of ASN.1 representations RecipientInfo (i.e. SET OF).\n *\n * @return an array of recipient objects.\n */\nfunction _recipientsFromAsn1(infos) {\n  var ret = [];\n  for(var i = 0; i < infos.length; ++i) {\n    ret.push(_recipientFromAsn1(infos[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of recipient objects to ASN.1 RecipientInfo objects.\n *\n * @param recipients an array of recipientInfo objects.\n *\n * @return an array of ASN.1 RecipientInfos.\n */\nfunction _recipientsToAsn1(recipients) {\n  var ret = [];\n  for(var i = 0; i < recipients.length; ++i) {\n    ret.push(_recipientToAsn1(recipients[i]));\n  }\n  return ret;\n}\n\n/**\n * Converts a single signer from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a SignerInfo.\n *\n * @return the signer object.\n */\nfunction _signerFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.signerInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 SignerInfo. ' +\n      'ASN.1 object is not an PKCS#7 SignerInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var rval = {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    digestAlgorithm: asn1.derToOid(capture.digestAlgorithm),\n    signatureAlgorithm: asn1.derToOid(capture.signatureAlgorithm),\n    signature: capture.signature,\n    authenticatedAttributes: [],\n    unauthenticatedAttributes: []\n  };\n\n  // TODO: convert attributes\n  var authenticatedAttributes = capture.authenticatedAttributes || [];\n  var unauthenticatedAttributes = capture.unauthenticatedAttributes || [];\n\n  return rval;\n}\n\n/**\n * Converts a single signerInfo object to an ASN.1 object.\n *\n * @param obj the signerInfo object.\n *\n * @return the ASN.1 representation of a SignerInfo.\n */\nfunction _signerToAsn1(obj) {\n  // SignerInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // issuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // digestAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.digestAlgorithm).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ])\n  ]);\n\n  // authenticatedAttributes (OPTIONAL)\n  if(obj.authenticatedAttributesAsn1) {\n    // add ASN.1 previously generated during signing\n    rval.value.push(obj.authenticatedAttributesAsn1);\n  }\n\n  // digestEncryptionAlgorithm\n  rval.value.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // algorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(obj.signatureAlgorithm).getBytes()),\n    // parameters (null)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n  ]));\n\n  // encryptedDigest\n  rval.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, obj.signature));\n\n  // unauthenticatedAttributes (OPTIONAL)\n  if(obj.unauthenticatedAttributes.length > 0) {\n    // [1] IMPLICIT\n    var attrsAsn1 = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, []);\n    for(var i = 0; i < obj.unauthenticatedAttributes.length; ++i) {\n      var attr = obj.unauthenticatedAttributes[i];\n      attrsAsn1.values.push(_attributeToAsn1(attr));\n    }\n    rval.value.push(attrsAsn1);\n  }\n\n  return rval;\n}\n\n/**\n * Map a set of SignerInfo ASN.1 objects to an array of signer objects.\n *\n * @param signerInfoAsn1s an array of ASN.1 SignerInfos (i.e. SET OF).\n *\n * @return an array of signers objects.\n */\nfunction _signersFromAsn1(signerInfoAsn1s) {\n  var ret = [];\n  for(var i = 0; i < signerInfoAsn1s.length; ++i) {\n    ret.push(_signerFromAsn1(signerInfoAsn1s[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of signer objects to ASN.1 objects.\n *\n * @param signers an array of signer objects.\n *\n * @return an array of ASN.1 SignerInfos.\n */\nfunction _signersToAsn1(signers) {\n  var ret = [];\n  for(var i = 0; i < signers.length; ++i) {\n    ret.push(_signerToAsn1(signers[i]));\n  }\n  return ret;\n}\n\n/**\n * Convert an attribute object to an ASN.1 Attribute.\n *\n * @param attr the attribute object.\n *\n * @return the ASN.1 Attribute.\n */\nfunction _attributeToAsn1(attr) {\n  var value;\n\n  // TODO: generalize to support more attributes\n  if(attr.type === forge.pki.oids.contentType) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.value).getBytes());\n  } else if(attr.type === forge.pki.oids.messageDigest) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      attr.value.bytes());\n  } else if(attr.type === forge.pki.oids.signingTime) {\n    /* Note per RFC 2985: Dates between 1 January 1950 and 31 December 2049\n      (inclusive) MUST be encoded as UTCTime. Any dates with year values\n      before 1950 or after 2049 MUST be encoded as GeneralizedTime. [Further,]\n      UTCTime values MUST be expressed in Greenwich Mean Time (Zulu) and MUST\n      include seconds (i.e., times are YYMMDDHHMMSSZ), even where the\n      number of seconds is zero.  Midnight (GMT) must be represented as\n      \"YYMMDD000000Z\". */\n    // TODO: make these module-level constants\n    var jan_1_1950 = new Date('1950-01-01T00:00:00Z');\n    var jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n    var date = attr.value;\n    if(typeof date === 'string') {\n      // try to parse date\n      var timestamp = Date.parse(date);\n      if(!isNaN(timestamp)) {\n        date = new Date(timestamp);\n      } else if(date.length === 13) {\n        // YYMMDDHHMMSSZ (13 chars for UTCTime)\n        date = asn1.utcTimeToDate(date);\n      } else {\n        // assume generalized time\n        date = asn1.generalizedTimeToDate(date);\n      }\n    }\n\n    if(date >= jan_1_1950 && date < jan_1_2050) {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n        asn1.dateToUtcTime(date));\n    } else {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n        asn1.dateToGeneralizedTime(date));\n    }\n  }\n\n  // TODO: expose as common API call\n  // create a RelativeDistinguishedName set\n  // each value in the set is an AttributeTypeAndValue first\n  // containing the type (an OID) and second the value\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AttributeType\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.type).getBytes()),\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      // AttributeValue\n      value\n    ])\n  ]);\n}\n\n/**\n * Map messages encrypted content to ASN.1 objects.\n *\n * @param ec The encryptedContent object of the message.\n *\n * @return ASN.1 representation of the encryptedContent object (SEQUENCE).\n */\nfunction _encryptedContentToAsn1(ec) {\n  return [\n    // ContentType, always Data for the moment\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(forge.pki.oids.data).getBytes()),\n    // ContentEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(ec.algorithm).getBytes()),\n      // Parameters (IV)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n        ec.parameter.getBytes())\n    ]),\n    // [0] EncryptedContent\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n        ec.content.getBytes())\n    ])\n  ];\n}\n\n/**\n * Reads the \"common part\" of an PKCS#7 content block (in ASN.1 format)\n *\n * This function reads the \"common part\" of the PKCS#7 content blocks\n * EncryptedData and EnvelopedData, i.e. version number and symmetrically\n * encrypted content block.\n *\n * The result of the ASN.1 validate and capture process is returned\n * to allow the caller to extract further data, e.g. the list of recipients\n * in case of a EnvelopedData object.\n *\n * @param msg the PKCS#7 object to read the data to.\n * @param obj the ASN.1 representation of the content block.\n * @param validator the ASN.1 structure validator object to use.\n *\n * @return the value map captured by validator object.\n */\nfunction _fromAsn1(msg, obj, validator) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, validator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not a supported PKCS#7 message.');\n    error.errors = error;\n    throw error;\n  }\n\n  // Check contentType, so far we only support (raw) Data.\n  var contentType = asn1.derToOid(capture.contentType);\n  if(contentType !== forge.pki.oids.data) {\n    throw new Error('Unsupported PKCS#7 message. ' +\n      'Only wrapped ContentType Data supported.');\n  }\n\n  if(capture.encryptedContent) {\n    var content = '';\n    if(forge.util.isArray(capture.encryptedContent)) {\n      for(var i = 0; i < capture.encryptedContent.length; ++i) {\n        if(capture.encryptedContent[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting encrypted ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.encryptedContent[i].value;\n      }\n    } else {\n      content = capture.encryptedContent;\n    }\n    msg.encryptedContent = {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: forge.util.createBuffer(capture.encParameter.value),\n      content: forge.util.createBuffer(content)\n    };\n  }\n\n  if(capture.content) {\n    var content = '';\n    if(forge.util.isArray(capture.content)) {\n      for(var i = 0; i < capture.content.length; ++i) {\n        if(capture.content[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.content[i].value;\n      }\n    } else {\n      content = capture.content;\n    }\n    msg.content = forge.util.createBuffer(content);\n  }\n\n  msg.version = capture.version.charCodeAt(0);\n  msg.rawCapture = capture;\n\n  return capture;\n}\n\n/**\n * Decrypt the symmetrically encrypted content block of the PKCS#7 message.\n *\n * Decryption is skipped in case the PKCS#7 message object already has a\n * (decrypted) content attribute.  The algorithm, key and cipher parameters\n * (probably the iv) are taken from the encryptedContent attribute of the\n * message object.\n *\n * @param The PKCS#7 message object.\n */\nfunction _decryptContent(msg) {\n  if(msg.encryptedContent.key === undefined) {\n    throw new Error('Symmetric key not available.');\n  }\n\n  if(msg.content === undefined) {\n    var ciph;\n\n    switch(msg.encryptedContent.algorithm) {\n      case forge.pki.oids['aes128-CBC']:\n      case forge.pki.oids['aes192-CBC']:\n      case forge.pki.oids['aes256-CBC']:\n        ciph = forge.aes.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      case forge.pki.oids['desCBC']:\n      case forge.pki.oids['des-EDE3-CBC']:\n        ciph = forge.des.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      default:\n        throw new Error('Unsupported symmetric cipher, OID ' +\n          msg.encryptedContent.algorithm);\n    }\n    ciph.start(msg.encryptedContent.parameter);\n    ciph.update(msg.encryptedContent.content);\n\n    if(!ciph.finish()) {\n      throw new Error('Symmetric decryption failed.');\n    }\n\n    msg.content = ciph.output;\n  }\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/pkcs7.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pkcs7asn1.js":function(module,exports,__webpack_require__){eval("/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./asn1 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/asn1.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = module.exports = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\n\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\n\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\n\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\n\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\n\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  },\n  contentInfoValidator,\n  {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\n\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/pkcs7asn1.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pki.js":function(module,exports,__webpack_require__){eval('/**\n * Javascript implementation of a basic Public Key Infrastructure, including\n * support for RSA public and private keys.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js");\n__webpack_require__(/*! ./asn1 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/asn1.js");\n__webpack_require__(/*! ./oids */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/oids.js");\n__webpack_require__(/*! ./pbe */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pbe.js");\n__webpack_require__(/*! ./pem */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pem.js");\n__webpack_require__(/*! ./pbkdf2 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pbkdf2.js");\n__webpack_require__(/*! ./pkcs12 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pkcs12.js");\n__webpack_require__(/*! ./pss */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pss.js");\n__webpack_require__(/*! ./rsa */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/rsa.js");\n__webpack_require__(/*! ./util */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js");\n__webpack_require__(/*! ./x509 */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/x509.js");\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED. Use pem.decode() instead.\n *\n * Converts PEM-formatted data to DER.\n *\n * @param pem the PEM-formatted data.\n *\n * @return the DER-formatted data.\n */\npki.pemToDer = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n  if(msg.procType && msg.procType.type === \'ENCRYPTED\') {\n    throw new Error(\'Could not convert PEM to DER; PEM is encrypted.\');\n  }\n  return forge.util.createBuffer(msg.body);\n};\n\n/**\n * Converts an RSA private key from PEM format.\n *\n * @param pem the PEM-formatted private key.\n *\n * @return the private key.\n */\npki.privateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== \'PRIVATE KEY\' && msg.type !== \'RSA PRIVATE KEY\') {\n    var error = new Error(\'Could not convert private key from PEM; PEM \' +\n      \'header type is not "PRIVATE KEY" or "RSA PRIVATE KEY".\');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === \'ENCRYPTED\') {\n    throw new Error(\'Could not convert private key from PEM; PEM is encrypted.\');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.privateKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA private key to PEM format.\n *\n * @param key the private key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: \'RSA PRIVATE KEY\',\n    body: asn1.toDer(pki.privateKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PrivateKeyInfo to PEM format.\n *\n * @param pki the PrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyInfoToPem = function(pki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: \'PRIVATE KEY\',\n    body: asn1.toDer(pki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/pki.js?')},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/prime.js":function(module,exports,__webpack_require__){eval("/**\n * Prime number generation API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n__webpack_require__(/*! ./jsbn */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/jsbn.js\");\n__webpack_require__(/*! ./random */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/random.js\");\n\n(function() {\n\n// forge.prime already defined\nif(forge.prime) {\n  module.exports = forge.prime;\n  return;\n}\n\n/* PRIME API */\nvar prime = module.exports = forge.prime = forge.prime || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n// primes are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\nvar THIRTY = new BigInteger(null);\nTHIRTY.fromInt(30);\nvar op_or = function(x, y) {return x|y;};\n\n/**\n * Generates a random probable prime with the given number of bits.\n *\n * Alternative algorithms can be specified by name as a string or as an\n * object with custom options like so:\n *\n * {\n *   name: 'PRIMEINC',\n *   options: {\n *     maxBlockTime: <the maximum amount of time to block the main\n *       thread before allowing I/O other JS to run>,\n *     millerRabinTests: <the number of miller-rabin tests to run>,\n *     workerScript: <the worker script URL>,\n *     workers: <the number of web workers (if supported) to use,\n *       -1 to use estimated cores minus one>.\n *     workLoad: the size of the work load, ie: number of possible prime\n *       numbers for each web worker to check per work assignment,\n *       (default: 100).\n *   }\n * }\n *\n * @param bits the number of bits for the prime number.\n * @param options the options to use.\n *          [algorithm] the algorithm to use (default: 'PRIMEINC').\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *\n * @return callback(err, num) called once the operation completes.\n */\nprime.generateProbablePrime = function(bits, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // default to PRIMEINC algorithm\n  var algorithm = options.algorithm || 'PRIMEINC';\n  if(typeof algorithm === 'string') {\n    algorithm = {name: algorithm};\n  }\n  algorithm.options = algorithm.options || {};\n\n  // create prng with api that matches BigInteger secure random\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  if(algorithm.name === 'PRIMEINC') {\n    return primeincFindPrime(bits, rng, algorithm.options, callback);\n  }\n\n  throw new Error('Invalid prime generation algorithm: ' + algorithm.name);\n};\n\nfunction primeincFindPrime(bits, rng, options, callback) {\n  if('workers' in options) {\n    return primeincFindPrimeWithWorkers(bits, rng, options, callback);\n  }\n  return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n}\n\nfunction primeincFindPrimeWithoutWorkers(bits, rng, options, callback) {\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  /* Note: All primes are of the form 30k+i for i < 30 and gcd(30, i)=1. The\n  number we are given is always aligned at 30k + 1. Each time the number is\n  determined not to be prime we add to get to the next 'i', eg: if the number\n  was at 30k + 1 we add 6. */\n  var deltaIdx = 0;\n\n  // get required number of MR tests\n  var mrTests = getMillerRabinTests(num.bitLength());\n  if('millerRabinTests' in options) {\n    mrTests = options.millerRabinTests;\n  }\n\n  // find prime nearest to 'num' for maxBlockTime ms\n  // 10 ms gives 5ms of leeway for other calculations before dropping\n  // below 60fps (1000/60 == 16.67), but in reality, the number will\n  // likely be higher due to an 'atomic' big int modPow\n  var maxBlockTime = 10;\n  if('maxBlockTime' in options) {\n    maxBlockTime = options.maxBlockTime;\n  }\n\n  _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n}\n\nfunction _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback) {\n  var start = +new Date();\n  do {\n    // overflow, regenerate random number\n    if(num.bitLength() > bits) {\n      num = generateRandom(bits, rng);\n    }\n    // do primality test\n    if(num.isProbablePrime(mrTests)) {\n      return callback(null, num);\n    }\n    // get next potential prime\n    num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n  } while(maxBlockTime < 0 || (+new Date() - start < maxBlockTime));\n\n  // keep trying later\n  forge.util.setImmediate(function() {\n    _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n  });\n}\n\n// NOTE: This algorithm is indeterminate in nature because workers\n// run in parallel looking at different segments of numbers. Even if this\n// algorithm is run twice with the same input from a predictable RNG, it\n// may produce different outputs.\nfunction primeincFindPrimeWithWorkers(bits, rng, options, callback) {\n  // web workers unavailable\n  if(typeof Worker === 'undefined') {\n    return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n  }\n\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  // use web workers to generate keys\n  var numWorkers = options.workers;\n  var workLoad = options.workLoad || 100;\n  var range = workLoad * 30 / 8;\n  var workerScript = options.workerScript || 'forge/prime.worker.js';\n  if(numWorkers === -1) {\n    return forge.util.estimateCores(function(err, cores) {\n      if(err) {\n        // default to 2\n        cores = 2;\n      }\n      numWorkers = cores - 1;\n      generate();\n    });\n  }\n  generate();\n\n  function generate() {\n    // require at least 1 worker\n    numWorkers = Math.max(1, numWorkers);\n\n    // TODO: consider optimizing by starting workers outside getPrime() ...\n    // note that in order to clean up they will have to be made internally\n    // asynchronous which may actually be slower\n\n    // start workers immediately\n    var workers = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      // FIXME: fix path or use blob URLs\n      workers[i] = new Worker(workerScript);\n    }\n    var running = numWorkers;\n\n    // listen for requests from workers and assign ranges to find prime\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].addEventListener('message', workerMessage);\n    }\n\n    /* Note: The distribution of random numbers is unknown. Therefore, each\n    web worker is continuously allocated a range of numbers to check for a\n    random number until one is found.\n\n    Every 30 numbers will be checked just 8 times, because prime numbers\n    have the form:\n\n    30k+i, for i < 30 and gcd(30, i)=1 (there are 8 values of i for this)\n\n    Therefore, if we want a web worker to run N checks before asking for\n    a new range of numbers, each range must contain N*30/8 numbers.\n\n    For 100 checks (workLoad), this is a range of 375. */\n\n    var found = false;\n    function workerMessage(e) {\n      // ignore message, prime already found\n      if(found) {\n        return;\n      }\n\n      --running;\n      var data = e.data;\n      if(data.found) {\n        // terminate all workers\n        for(var i = 0; i < workers.length; ++i) {\n          workers[i].terminate();\n        }\n        found = true;\n        return callback(null, new BigInteger(data.prime, 16));\n      }\n\n      // overflow, regenerate random number\n      if(num.bitLength() > bits) {\n        num = generateRandom(bits, rng);\n      }\n\n      // assign new range to check\n      var hex = num.toString(16);\n\n      // start prime search\n      e.target.postMessage({\n        hex: hex,\n        workLoad: workLoad\n      });\n\n      num.dAddOffset(range, 0);\n    }\n  }\n}\n\n/**\n * Generates a random number using the given number of bits and RNG.\n *\n * @param bits the number of bits for the number.\n * @param rng the random number generator to use.\n *\n * @return the random number.\n */\nfunction generateRandom(bits, rng) {\n  var num = new BigInteger(bits, rng);\n  // force MSB set\n  var bits1 = bits - 1;\n  if(!num.testBit(bits1)) {\n    num.bitwiseTo(BigInteger.ONE.shiftLeft(bits1), op_or, num);\n  }\n  // align number on 30k+1 boundary\n  num.dAddOffset(31 - num.mod(THIRTY).byteValue(), 0);\n  return num;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n})();\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/prime.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/prng.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * A javascript implementation of a cryptographically-secure\n * Pseudo Random Number Generator (PRNG). The Fortuna algorithm is followed\n * here though the use of SHA-256 is not enforced; when generating an\n * a PRNG context, the hashing algorithm and block cipher used for\n * the generator are specified via a plugin.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\nvar _crypto = null;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n  !process.versions['node-webkit']) {\n  _crypto = __webpack_require__(/*! crypto */ 0);\n}\n\n/* PRNG API */\nvar prng = module.exports = forge.prng = forge.prng || {};\n\n/**\n * Creates a new PRNG context.\n *\n * A PRNG plugin must be passed in that will provide:\n *\n * 1. A function that initializes the key and seed of a PRNG context. It\n *   will be given a 16 byte key and a 16 byte seed. Any key expansion\n *   or transformation of the seed from a byte string into an array of\n *   integers (or similar) should be performed.\n * 2. The cryptographic function used by the generator. It takes a key and\n *   a seed.\n * 3. A seed increment function. It takes the seed and returns seed + 1.\n * 4. An api to create a message digest.\n *\n * For an example, see random.js.\n *\n * @param plugin the PRNG plugin to use.\n */\nprng.create = function(plugin) {\n  var ctx = {\n    plugin: plugin,\n    key: null,\n    seed: null,\n    time: null,\n    // number of reseeds so far\n    reseeds: 0,\n    // amount of data generated so far\n    generated: 0,\n    // no initial key bytes\n    keyBytes: ''\n  };\n\n  // create 32 entropy pools (each is a message digest)\n  var md = plugin.md;\n  var pools = new Array(32);\n  for(var i = 0; i < 32; ++i) {\n    pools[i] = md.create();\n  }\n  ctx.pools = pools;\n\n  // entropy pools are written to cyclically, starting at index 0\n  ctx.pool = 0;\n\n  /**\n   * Generates random bytes. The bytes may be generated synchronously or\n   * asynchronously. Web workers must use the asynchronous interface or\n   * else the behavior is undefined.\n   *\n   * @param count the number of random bytes to generate.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generate = function(count, callback) {\n    // do synchronously\n    if(!callback) {\n      return ctx.generateSync(count);\n    }\n\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n    var b = forge.util.createBuffer();\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generate` call\n    ctx.key = null;\n\n    generate();\n\n    function generate(err) {\n      if(err) {\n        return callback(err);\n      }\n\n      // sufficient bytes generated\n      if(b.length() >= count) {\n        return callback(null, b.getBytes(count));\n      }\n\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        // prevent stack overflow\n        return forge.util.nextTick(function() {\n          _reseed(generate);\n        });\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n\n      forge.util.setImmediate(generate);\n    }\n  };\n\n  /**\n   * Generates random bytes synchronously.\n   *\n   * @param count the number of random bytes to generate.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generateSync = function(count) {\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generateSync` call\n    ctx.key = null;\n\n    var b = forge.util.createBuffer();\n    while(b.length() < count) {\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        _reseedSync();\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n    }\n\n    return b.getBytes(count);\n  };\n\n  /**\n   * Private function that asynchronously reseeds a generator.\n   *\n   * @param callback(err) called once the operation completes.\n   */\n  function _reseed(callback) {\n    if(ctx.pools[0].messageLength >= 32) {\n      _seed();\n      return callback();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.seedFile(needed, function(err, bytes) {\n      if(err) {\n        return callback(err);\n      }\n      ctx.collect(bytes);\n      _seed();\n      callback();\n    });\n  }\n\n  /**\n   * Private function that synchronously reseeds a generator.\n   */\n  function _reseedSync() {\n    if(ctx.pools[0].messageLength >= 32) {\n      return _seed();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.collect(ctx.seedFileSync(needed));\n    _seed();\n  }\n\n  /**\n   * Private function that seeds a generator once enough bytes are available.\n   */\n  function _seed() {\n    // update reseed count\n    ctx.reseeds = (ctx.reseeds === 0xffffffff) ? 0 : ctx.reseeds + 1;\n\n    // goal is to update `key` via:\n    // key = hash(key + s)\n    //   where 's' is all collected entropy from selected pools, then...\n\n    // create a plugin-based message digest\n    var md = ctx.plugin.md.create();\n\n    // consume current key bytes\n    md.update(ctx.keyBytes);\n\n    // digest the entropy of pools whose index k meet the\n    // condition 'n mod 2^k == 0' where n is the number of reseeds\n    var _2powK = 1;\n    for(var k = 0; k < 32; ++k) {\n      if(ctx.reseeds % _2powK === 0) {\n        md.update(ctx.pools[k].digest().getBytes());\n        ctx.pools[k].start();\n      }\n      _2powK = _2powK << 1;\n    }\n\n    // get digest for key bytes\n    ctx.keyBytes = md.digest().getBytes();\n\n    // paranoid deviation from Fortuna:\n    // update `seed` via `seed = hash(key)`\n    // instead of initializing to zero once and only\n    // ever incrementing it\n    md.start();\n    md.update(ctx.keyBytes);\n    var seedBytes = md.digest().getBytes();\n\n    // update state\n    ctx.key = ctx.plugin.formatKey(ctx.keyBytes);\n    ctx.seed = ctx.plugin.formatSeed(seedBytes);\n    ctx.generated = 0;\n  }\n\n  /**\n   * The built-in default seedFile. This seedFile is used when entropy\n   * is needed immediately.\n   *\n   * @param needed the number of bytes that are needed.\n   *\n   * @return the random bytes.\n   */\n  function defaultSeedFile(needed) {\n    // use window.crypto.getRandomValues strong source of entropy if available\n    var getRandomValues = null;\n    var globalScope = forge.util.globalScope;\n    var _crypto = globalScope.crypto || globalScope.msCrypto;\n    if(_crypto && _crypto.getRandomValues) {\n      getRandomValues = function(arr) {\n        return _crypto.getRandomValues(arr);\n      };\n    }\n\n    var b = forge.util.createBuffer();\n    if(getRandomValues) {\n      while(b.length() < needed) {\n        // max byte length is 65536 before QuotaExceededError is thrown\n        // http://www.w3.org/TR/WebCryptoAPI/#RandomSource-method-getRandomValues\n        var count = Math.max(1, Math.min(needed - b.length(), 65536) / 4);\n        var entropy = new Uint32Array(Math.floor(count));\n        try {\n          getRandomValues(entropy);\n          for(var i = 0; i < entropy.length; ++i) {\n            b.putInt32(entropy[i]);\n          }\n        } catch(e) {\n          /* only ignore QuotaExceededError */\n          if(!(typeof QuotaExceededError !== 'undefined' &&\n            e instanceof QuotaExceededError)) {\n            throw e;\n          }\n        }\n      }\n    }\n\n    // be sad and add some weak random data\n    if(b.length() < needed) {\n      /* Draws from Park-Miller \"minimal standard\" 31 bit PRNG,\n      implemented with David G. Carta's optimization: with 32 bit math\n      and without division (Public Domain). */\n      var hi, lo, next;\n      var seed = Math.floor(Math.random() * 0x010000);\n      while(b.length() < needed) {\n        lo = 16807 * (seed & 0xFFFF);\n        hi = 16807 * (seed >> 16);\n        lo += (hi & 0x7FFF) << 16;\n        lo += hi >> 15;\n        lo = (lo & 0x7FFFFFFF) + (lo >> 31);\n        seed = lo & 0xFFFFFFFF;\n\n        // consume lower 3 bytes of seed\n        for(var i = 0; i < 3; ++i) {\n          // throw in more pseudo random\n          next = seed >>> (i << 3);\n          next ^= Math.floor(Math.random() * 0x0100);\n          b.putByte(String.fromCharCode(next & 0xFF));\n        }\n      }\n    }\n\n    return b.getBytes(needed);\n  }\n  // initialize seed file APIs\n  if(_crypto) {\n    // use nodejs async API\n    ctx.seedFile = function(needed, callback) {\n      _crypto.randomBytes(needed, function(err, bytes) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, bytes.toString());\n      });\n    };\n    // use nodejs sync API\n    ctx.seedFileSync = function(needed) {\n      return _crypto.randomBytes(needed).toString();\n    };\n  } else {\n    ctx.seedFile = function(needed, callback) {\n      try {\n        callback(null, defaultSeedFile(needed));\n      } catch(e) {\n        callback(e);\n      }\n    };\n    ctx.seedFileSync = defaultSeedFile;\n  }\n\n  /**\n   * Adds entropy to a prng ctx's accumulator.\n   *\n   * @param bytes the bytes of entropy as a string.\n   */\n  ctx.collect = function(bytes) {\n    // iterate over pools distributing entropy cyclically\n    var count = bytes.length;\n    for(var i = 0; i < count; ++i) {\n      ctx.pools[ctx.pool].update(bytes.substr(i, 1));\n      ctx.pool = (ctx.pool === 31) ? 0 : ctx.pool + 1;\n    }\n  };\n\n  /**\n   * Collects an integer of n bits.\n   *\n   * @param i the integer entropy.\n   * @param n the number of bits in the integer.\n   */\n  ctx.collectInt = function(i, n) {\n    var bytes = '';\n    for(var x = 0; x < n; x += 8) {\n      bytes += String.fromCharCode((i >> x) & 0xFF);\n    }\n    ctx.collect(bytes);\n  };\n\n  /**\n   * Registers a Web Worker to receive immediate entropy from the main thread.\n   * This method is required until Web Workers can access the native crypto\n   * API. This method should be called twice for each created worker, once in\n   * the main thread, and once in the worker itself.\n   *\n   * @param worker the worker to register.\n   */\n  ctx.registerWorker = function(worker) {\n    // worker receives random bytes\n    if(worker === self) {\n      ctx.seedFile = function(needed, callback) {\n        function listener(e) {\n          var data = e.data;\n          if(data.forge && data.forge.prng) {\n            self.removeEventListener('message', listener);\n            callback(data.forge.prng.err, data.forge.prng.bytes);\n          }\n        }\n        self.addEventListener('message', listener);\n        self.postMessage({forge: {prng: {needed: needed}}});\n      };\n    } else {\n      // main thread sends random bytes upon request\n      var listener = function(e) {\n        var data = e.data;\n        if(data.forge && data.forge.prng) {\n          ctx.seedFile(data.forge.prng.needed, function(err, bytes) {\n            worker.postMessage({forge: {prng: {err: err, bytes: bytes}}});\n          });\n        }\n      };\n      // TODO: do we need to remove the event listener when the worker dies?\n      worker.addEventListener('message', listener);\n    }\n  };\n\n  return ctx;\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../process/browser.js */ \"../../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/prng.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pss.js":function(module,exports,__webpack_require__){eval("/**\n * Javascript implementation of PKCS#1 PSS signature padding.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./random */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/random.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\n// shortcut for PSS API\nvar pss = module.exports = forge.pss = forge.pss || {};\n\n/**\n * Creates a PSS signature scheme object.\n *\n * There are several ways to provide a salt for encoding:\n *\n * 1. Specify the saltLength only and the built-in PRNG will generate it.\n * 2. Specify the saltLength and a custom PRNG with 'getBytesSync' defined that\n *   will be used.\n * 3. Specify the salt itself as a forge.util.ByteBuffer.\n *\n * @param options the options to use:\n *          md the message digest object to use, a forge md instance.\n *          mgf the mask generation function to use, a forge mgf instance.\n *          [saltLength] the length of the salt in octets.\n *          [prng] the pseudo-random number generator to use to produce a salt.\n *          [salt] the salt to use when encoding.\n *\n * @return a signature scheme object.\n */\npss.create = function(options) {\n  // backwards compatibility w/legacy args: hash, mgf, sLen\n  if(arguments.length === 3) {\n    options = {\n      md: arguments[0],\n      mgf: arguments[1],\n      saltLength: arguments[2]\n    };\n  }\n\n  var hash = options.md;\n  var mgf = options.mgf;\n  var hLen = hash.digestLength;\n\n  var salt_ = options.salt || null;\n  if(typeof salt_ === 'string') {\n    // assume binary-encoded string\n    salt_ = forge.util.createBuffer(salt_);\n  }\n\n  var sLen;\n  if('saltLength' in options) {\n    sLen = options.saltLength;\n  } else if(salt_ !== null) {\n    sLen = salt_.length();\n  } else {\n    throw new Error('Salt length not specified or specific salt not given.');\n  }\n\n  if(salt_ !== null && salt_.length() !== sLen) {\n    throw new Error('Given salt length does not match length of given salt.');\n  }\n\n  var prng = options.prng || forge.random;\n\n  var pssobj = {};\n\n  /**\n   * Encodes a PSS signature.\n   *\n   * This function implements EMSA-PSS-ENCODE as per RFC 3447, section 9.1.1.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return the encoded message as a binary-encoded string of length\n   *           ceil((modBits - 1) / 8).\n   */\n  pssobj.encode = function(md, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* 2. Let mHash = Hash(M), an octet string of length hLen. */\n    var mHash = md.digest().getBytes();\n\n    /* 3. If emLen < hLen + sLen + 2, output \"encoding error\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Message is too long to encrypt.');\n    }\n\n    /* 4. Generate a random octet string salt of length sLen; if sLen = 0,\n     *    then salt is the empty string. */\n    var salt;\n    if(salt_ === null) {\n      salt = prng.getBytesSync(sLen);\n    } else {\n      salt = salt_.bytes();\n    }\n\n    /* 5. Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt; */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 6. Let H = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h = hash.digest().getBytes();\n\n    /* 7. Generate an octet string PS consisting of emLen - sLen - hLen - 2\n     *    zero octets.  The length of PS may be 0. */\n    var ps = new forge.util.ByteBuffer();\n    ps.fillWithByte(0, emLen - sLen - hLen - 2);\n\n    /* 8. Let DB = PS || 0x01 || salt; DB is an octet string of length\n     *    emLen - hLen - 1. */\n    ps.putByte(0x01);\n    ps.putBytes(salt);\n    var db = ps.getBytes();\n\n    /* 9. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var maskLen = emLen - hLen - 1;\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 10. Let maskedDB = DB \\xor dbMask. */\n    var maskedDB = '';\n    for(i = 0; i < maskLen; i++) {\n      maskedDB += String.fromCharCode(db.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 11. Set the leftmost 8emLen - emBits bits of the leftmost octet in\n     *     maskedDB to zero. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    maskedDB = String.fromCharCode(maskedDB.charCodeAt(0) & ~mask) +\n      maskedDB.substr(1);\n\n    /* 12. Let EM = maskedDB || H || 0xbc.\n     * 13. Output EM. */\n    return maskedDB + h + String.fromCharCode(0xbc);\n  };\n\n  /**\n   * Verifies a PSS signature.\n   *\n   * This function implements EMSA-PSS-VERIFY as per RFC 3447, section 9.1.2.\n   *\n   * @param mHash the message digest hash, as a binary-encoded string, to\n   *         compare against the signature.\n   * @param em the encoded message, as a binary-encoded string\n   *          (RSA decryption result).\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  pssobj.verify = function(mHash, em, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* c. Convert the message representative m to an encoded message EM\n     *    of length emLen = ceil((modBits - 1) / 8) octets, where modBits\n     *    is the length in bits of the RSA modulus n */\n    em = em.substr(-emLen);\n\n    /* 3. If emLen < hLen + sLen + 2, output \"inconsistent\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Inconsistent parameters to PSS signature verification.');\n    }\n\n    /* 4. If the rightmost octet of EM does not have hexadecimal value\n     *    0xbc, output \"inconsistent\" and stop. */\n    if(em.charCodeAt(emLen - 1) !== 0xbc) {\n      throw new Error('Encoded message does not end in 0xBC.');\n    }\n\n    /* 5. Let maskedDB be the leftmost emLen - hLen - 1 octets of EM, and\n     *    let H be the next hLen octets. */\n    var maskLen = emLen - hLen - 1;\n    var maskedDB = em.substr(0, maskLen);\n    var h = em.substr(maskLen, hLen);\n\n    /* 6. If the leftmost 8emLen - emBits bits of the leftmost octet in\n     *    maskedDB are not all equal to zero, output \"inconsistent\" and stop. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    if((maskedDB.charCodeAt(0) & mask) !== 0) {\n      throw new Error('Bits beyond keysize not zero as expected.');\n    }\n\n    /* 7. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 8. Let DB = maskedDB \\xor dbMask. */\n    var db = '';\n    for(i = 0; i < maskLen; i++) {\n      db += String.fromCharCode(maskedDB.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 9. Set the leftmost 8emLen - emBits bits of the leftmost octet\n     * in DB to zero. */\n    db = String.fromCharCode(db.charCodeAt(0) & ~mask) + db.substr(1);\n\n    /* 10. If the emLen - hLen - sLen - 2 leftmost octets of DB are not zero\n     * or if the octet at position emLen - hLen - sLen - 1 (the leftmost\n     * position is \"position 1\") does not have hexadecimal value 0x01,\n     * output \"inconsistent\" and stop. */\n    var checkLen = emLen - hLen - sLen - 2;\n    for(i = 0; i < checkLen; i++) {\n      if(db.charCodeAt(i) !== 0x00) {\n        throw new Error('Leftmost octets not zero as expected');\n      }\n    }\n\n    if(db.charCodeAt(checkLen) !== 0x01) {\n      throw new Error('Inconsistent PSS signature, 0x01 marker not found');\n    }\n\n    /* 11. Let salt be the last sLen octets of DB. */\n    var salt = db.substr(-sLen);\n\n    /* 12.  Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 13. Let H' = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h_ = hash.digest().getBytes();\n\n    /* 14. If H = H', output \"consistent.\" Otherwise, output \"inconsistent.\" */\n    return h === h_;\n  };\n\n  return pssobj;\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/pss.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/random.js":function(module,exports,__webpack_require__){eval("/**\n * An API for getting cryptographically-secure random bytes. The bytes are\n * generated using the Fortuna algorithm devised by Bruce Schneier and\n * Niels Ferguson.\n *\n * Getting strong random bytes is not yet easy to do in javascript. The only\n * truish random entropy that can be collected is from the mouse, keyboard, or\n * from timing with respect to page loads, etc. This generator makes a poor\n * attempt at providing random bytes when those sources haven't yet provided\n * enough entropy to initially seed or to reseed the PRNG.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./aes */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/aes.js\");\n__webpack_require__(/*! ./sha256 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/sha256.js\");\n__webpack_require__(/*! ./prng */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/prng.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\n(function() {\n\n// forge.random already defined\nif(forge.random && forge.random.getBytes) {\n  module.exports = forge.random;\n  return;\n}\n\n(function(jQuery) {\n\n// the default prng plugin, uses AES-128\nvar prng_aes = {};\nvar _prng_aes_output = new Array(4);\nvar _prng_aes_buffer = forge.util.createBuffer();\nprng_aes.formatKey = function(key) {\n  // convert the key into 32-bit integers\n  var tmp = forge.util.createBuffer(key);\n  key = new Array(4);\n  key[0] = tmp.getInt32();\n  key[1] = tmp.getInt32();\n  key[2] = tmp.getInt32();\n  key[3] = tmp.getInt32();\n\n  // return the expanded key\n  return forge.aes._expandKey(key, false);\n};\nprng_aes.formatSeed = function(seed) {\n  // convert seed into 32-bit integers\n  var tmp = forge.util.createBuffer(seed);\n  seed = new Array(4);\n  seed[0] = tmp.getInt32();\n  seed[1] = tmp.getInt32();\n  seed[2] = tmp.getInt32();\n  seed[3] = tmp.getInt32();\n  return seed;\n};\nprng_aes.cipher = function(key, seed) {\n  forge.aes._updateBlock(key, seed, _prng_aes_output, false);\n  _prng_aes_buffer.putInt32(_prng_aes_output[0]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[1]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[2]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[3]);\n  return _prng_aes_buffer.getBytes();\n};\nprng_aes.increment = function(seed) {\n  // FIXME: do we care about carry or signed issues?\n  ++seed[3];\n  return seed;\n};\nprng_aes.md = forge.md.sha256;\n\n/**\n * Creates a new PRNG.\n */\nfunction spawnPrng() {\n  var ctx = forge.prng.create(prng_aes);\n\n  /**\n   * Gets random bytes. If a native secure crypto API is unavailable, this\n   * method tries to make the bytes more unpredictable by drawing from data that\n   * can be collected from the user of the browser, eg: mouse movement.\n   *\n   * If a callback is given, this method will be called asynchronously.\n   *\n   * @param count the number of random bytes to get.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytes = function(count, callback) {\n    return ctx.generate(count, callback);\n  };\n\n  /**\n   * Gets random bytes asynchronously. If a native secure crypto API is\n   * unavailable, this method tries to make the bytes more unpredictable by\n   * drawing from data that can be collected from the user of the browser,\n   * eg: mouse movement.\n   *\n   * @param count the number of random bytes to get.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytesSync = function(count) {\n    return ctx.generate(count);\n  };\n\n  return ctx;\n}\n\n// create default prng context\nvar _ctx = spawnPrng();\n\n// add other sources of entropy only if window.crypto.getRandomValues is not\n// available -- otherwise this source will be automatically used by the prng\nvar getRandomValues = null;\nvar globalScope = forge.util.globalScope;\nvar _crypto = globalScope.crypto || globalScope.msCrypto;\nif(_crypto && _crypto.getRandomValues) {\n  getRandomValues = function(arr) {\n    return _crypto.getRandomValues(arr);\n  };\n}\n\nif(forge.options.usePureJavaScript ||\n  (!forge.util.isNodejs && !getRandomValues)) {\n  // if this is a web worker, do not use weak entropy, instead register to\n  // receive strong entropy asynchronously from the main thread\n  if(typeof window === 'undefined' || window.document === undefined) {\n    // FIXME:\n  }\n\n  // get load time entropy\n  _ctx.collectInt(+new Date(), 32);\n\n  // add some entropy from navigator object\n  if(typeof(navigator) !== 'undefined') {\n    var _navBytes = '';\n    for(var key in navigator) {\n      try {\n        if(typeof(navigator[key]) == 'string') {\n          _navBytes += navigator[key];\n        }\n      } catch(e) {\n        /* Some navigator keys might not be accessible, e.g. the geolocation\n          attribute throws an exception if touched in Mozilla chrome://\n          context.\n\n          Silently ignore this and just don't use this as a source of\n          entropy. */\n      }\n    }\n    _ctx.collect(_navBytes);\n    _navBytes = null;\n  }\n\n  // add mouse and keyboard collectors if jquery is available\n  if(jQuery) {\n    // set up mouse entropy capture\n    jQuery().mousemove(function(e) {\n      // add mouse coords\n      _ctx.collectInt(e.clientX, 16);\n      _ctx.collectInt(e.clientY, 16);\n    });\n\n    // set up keyboard entropy capture\n    jQuery().keypress(function(e) {\n      _ctx.collectInt(e.charCode, 8);\n    });\n  }\n}\n\n/* Random API */\nif(!forge.random) {\n  forge.random = _ctx;\n} else {\n  // extend forge.random with _ctx\n  for(var key in _ctx) {\n    forge.random[key] = _ctx[key];\n  }\n}\n\n// expose spawn PRNG\nforge.random.createInstance = spawnPrng;\n\nmodule.exports = forge.random;\n\n})(typeof(jQuery) !== 'undefined' ? jQuery : null);\n\n})();\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/random.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/rc2.js":function(module,exports,__webpack_require__){eval('/**\n * RC2 implementation.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * Information on the RC2 cipher is available from RFC #2268,\n * http://www.ietf.org/rfc/rfc2268.txt\n */\nvar forge = __webpack_require__(/*! ./forge */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js");\n__webpack_require__(/*! ./util */ "../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js");\n\nvar piTable = [\n  0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed, 0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\n  0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e, 0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\n  0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13, 0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\n  0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b, 0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\n  0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c, 0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\n  0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1, 0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\n  0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57, 0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\n  0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7, 0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\n  0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7, 0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\n  0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74, 0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\n  0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc, 0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\n  0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a, 0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\n  0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae, 0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\n  0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c, 0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\n  0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0, 0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\n  0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77, 0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\n];\n\nvar s = [1, 2, 3, 5];\n\n/**\n * Rotate a word left by given number of bits.\n *\n * Bits that are shifted out on the left are put back in on the right\n * hand side.\n *\n * @param word The word to shift left.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar rol = function(word, bits) {\n  return ((word << bits) & 0xffff) | ((word & 0xffff) >> (16 - bits));\n};\n\n/**\n * Rotate a word right by given number of bits.\n *\n * Bits that are shifted out on the right are put back in on the left\n * hand side.\n *\n * @param word The word to shift right.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar ror = function(word, bits) {\n  return ((word & 0xffff) >> bits) | ((word << (16 - bits)) & 0xffff);\n};\n\n/* RC2 API */\nmodule.exports = forge.rc2 = forge.rc2 || {};\n\n/**\n * Perform RC2 key expansion as per RFC #2268, section 2.\n *\n * @param key variable-length user key (between 1 and 128 bytes)\n * @param effKeyBits number of effective key bits (default: 128)\n * @return the expanded RC2 key (ByteBuffer of 128 bytes)\n */\nforge.rc2.expandKey = function(key, effKeyBits) {\n  if(typeof key === \'string\') {\n    key = forge.util.createBuffer(key);\n  }\n  effKeyBits = effKeyBits || 128;\n\n  /* introduce variables that match the names used in RFC #2268 */\n  var L = key;\n  var T = key.length();\n  var T1 = effKeyBits;\n  var T8 = Math.ceil(T1 / 8);\n  var TM = 0xff >> (T1 & 0x07);\n  var i;\n\n  for(i = T; i < 128; i++) {\n    L.putByte(piTable[(L.at(i - 1) + L.at(i - T)) & 0xff]);\n  }\n\n  L.setAt(128 - T8, piTable[L.at(128 - T8) & TM]);\n\n  for(i = 127 - T8; i >= 0; i--) {\n    L.setAt(i, piTable[L.at(i + 1) ^ L.at(i + T8)]);\n  }\n\n  return L;\n};\n\n/**\n * Creates a RC2 cipher object.\n *\n * @param key the symmetric key to use (as base for key generation).\n * @param bits the number of effective key bits.\n * @param encrypt false for decryption, true for encryption.\n *\n * @return the cipher.\n */\nvar createCipher = function(key, bits, encrypt) {\n  var _finish = false, _input = null, _output = null, _iv = null;\n  var mixRound, mashRound;\n  var i, j, K = [];\n\n  /* Expand key and fill into K[] Array */\n  key = forge.rc2.expandKey(key, bits);\n  for(i = 0; i < 64; i++) {\n    K.push(key.getInt16Le());\n  }\n\n  if(encrypt) {\n    /**\n     * Perform one mixing round "in place".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        R[i] = rol(R[i], s[i]);\n        j++;\n      }\n    };\n\n    /**\n     * Perform one mashing round "in place".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[R[(i + 3) % 4] & 63];\n      }\n    };\n  } else {\n    /**\n     * Perform one r-mixing round "in place".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] = ror(R[i], s[i]);\n        R[i] -= K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        j--;\n      }\n    };\n\n    /**\n     * Perform one r-mashing round "in place".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] -= K[R[(i + 3) % 4] & 63];\n      }\n    };\n  }\n\n  /**\n   * Run the specified cipher execution plan.\n   *\n   * This function takes four words from the input buffer, applies the IV on\n   * it (if requested) and runs the provided execution plan.\n   *\n   * The plan must be put together in form of a array of arrays.  Where the\n   * outer one is simply a list of steps to perform and the inner one needs\n   * to have two elements: the first one telling how many rounds to perform,\n   * the second one telling what to do (i.e. the function to call).\n   *\n   * @param {Array} plan The plan to execute.\n   */\n  var runPlan = function(plan) {\n    var R = [];\n\n    /* Get data from input buffer and fill the four words into R */\n    for(i = 0; i < 4; i++) {\n      var val = _input.getInt16Le();\n\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We\'re encrypting, apply the IV first. */\n          val ^= _iv.getInt16Le();\n        } else {\n          /* We\'re decryption, keep cipher text for next block. */\n          _iv.putInt16Le(val);\n        }\n      }\n\n      R.push(val & 0xffff);\n    }\n\n    /* Reset global "j" variable as per spec. */\n    j = encrypt ? 0 : 63;\n\n    /* Run execution plan. */\n    for(var ptr = 0; ptr < plan.length; ptr++) {\n      for(var ctr = 0; ctr < plan[ptr][0]; ctr++) {\n        plan[ptr][1](R);\n      }\n    }\n\n    /* Write back result to output buffer. */\n    for(i = 0; i < 4; i++) {\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We\'re encrypting in CBC-mode, feed back encrypted bytes into\n             IV buffer to carry it forward to next block. */\n          _iv.putInt16Le(R[i]);\n        } else {\n          R[i] ^= _iv.getInt16Le();\n        }\n      }\n\n      _output.putInt16Le(R[i]);\n    }\n  };\n\n  /* Create cipher object */\n  var cipher = null;\n  cipher = {\n    /**\n     * Starts or restarts the encryption or decryption process, whichever\n     * was previously configured.\n     *\n     * To use the cipher in CBC mode, iv may be given either as a string\n     * of bytes, or as a byte buffer.  For ECB mode, give null as iv.\n     *\n     * @param iv the initialization vector to use, null for ECB mode.\n     * @param output the output the buffer to write to, null to create one.\n     */\n    start: function(iv, output) {\n      if(iv) {\n        /* CBC mode */\n        if(typeof iv === \'string\') {\n          iv = forge.util.createBuffer(iv);\n        }\n      }\n\n      _finish = false;\n      _input = forge.util.createBuffer();\n      _output = output || new forge.util.createBuffer();\n      _iv = iv;\n\n      cipher.output = _output;\n    },\n\n    /**\n     * Updates the next block.\n     *\n     * @param input the buffer to read from.\n     */\n    update: function(input) {\n      if(!_finish) {\n        // not finishing, so fill the input buffer with more input\n        _input.putBuffer(input);\n      }\n\n      while(_input.length() >= 8) {\n        runPlan([\n            [ 5, mixRound ],\n            [ 1, mashRound ],\n            [ 6, mixRound ],\n            [ 1, mashRound ],\n            [ 5, mixRound ]\n          ]);\n      }\n    },\n\n    /**\n     * Finishes encrypting or decrypting.\n     *\n     * @param pad a padding function to use, null for PKCS#7 padding,\n     *           signature(blockSize, buffer, decrypt).\n     *\n     * @return true if successful, false on error.\n     */\n    finish: function(pad) {\n      var rval = true;\n\n      if(encrypt) {\n        if(pad) {\n          rval = pad(8, _input, !encrypt);\n        } else {\n          // add PKCS#7 padding to block (each pad byte is the\n          // value of the number of pad bytes)\n          var padding = (_input.length() === 8) ? 8 : (8 - _input.length());\n          _input.fillWithByte(padding, padding);\n        }\n      }\n\n      if(rval) {\n        // do final update\n        _finish = true;\n        cipher.update();\n      }\n\n      if(!encrypt) {\n        // check for error: input data not a multiple of block size\n        rval = (_input.length() === 0);\n        if(rval) {\n          if(pad) {\n            rval = pad(8, _output, !encrypt);\n          } else {\n            // ensure padding byte count is valid\n            var len = _output.length();\n            var count = _output.at(len - 1);\n\n            if(count > len) {\n              rval = false;\n            } else {\n              // trim off padding bytes\n              _output.truncate(count);\n            }\n          }\n        }\n      }\n\n      return rval;\n    }\n  };\n\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the \'output\' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startEncrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createEncryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start encrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createEncryptionCipher = function(key, bits) {\n  return createCipher(key, bits, true);\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the \'output\' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startDecrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createDecryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start decrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createDecryptionCipher = function(key, bits) {\n  return createCipher(key, bits, false);\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/rc2.js?')},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/rsa.js":function(module,exports,__webpack_require__){eval("/**\n * Javascript implementation of basic RSA algorithms.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The only algorithm currently supported for PKI is RSA.\n *\n * An RSA key is often stored in ASN.1 DER format. The SubjectPublicKeyInfo\n * ASN.1 structure is composed of an algorithm of type AlgorithmIdentifier\n * and a subjectPublicKey of type bit string.\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of RSA, there aren't any.\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm AlgorithmIdentifier,\n *   subjectPublicKey BIT STRING\n * }\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * For an RSA public key, the subjectPublicKey is:\n *\n * RSAPublicKey ::= SEQUENCE {\n *   modulus            INTEGER,    -- n\n *   publicExponent     INTEGER     -- e\n * }\n *\n * PrivateKeyInfo ::= SEQUENCE {\n *   version                   Version,\n *   privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,\n *   privateKey                PrivateKey,\n *   attributes           [0]  IMPLICIT Attributes OPTIONAL\n * }\n *\n * Version ::= INTEGER\n * PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier\n * PrivateKey ::= OCTET STRING\n * Attributes ::= SET OF Attribute\n *\n * An RSA private key as the following structure:\n *\n * RSAPrivateKey ::= SEQUENCE {\n *   version Version,\n *   modulus INTEGER, -- n\n *   publicExponent INTEGER, -- e\n *   privateExponent INTEGER, -- d\n *   prime1 INTEGER, -- p\n *   prime2 INTEGER, -- q\n *   exponent1 INTEGER, -- d mod (p-1)\n *   exponent2 INTEGER, -- d mod (q-1)\n *   coefficient INTEGER -- (inverse of q) mod p\n * }\n *\n * Version ::= INTEGER\n *\n * The OID for the RSA key algorithm is: 1.2.840.113549.1.1.1\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./asn1 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/asn1.js\");\n__webpack_require__(/*! ./jsbn */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/jsbn.js\");\n__webpack_require__(/*! ./oids */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/oids.js\");\n__webpack_require__(/*! ./pkcs1 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pkcs1.js\");\n__webpack_require__(/*! ./prime */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/prime.js\");\n__webpack_require__(/*! ./random */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/random.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar _crypto = forge.util.isNodejs ? __webpack_require__(/*! crypto */ 0) : null;\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for util API\nvar util = forge.util;\n\n/*\n * RSA encryption and decryption, see RFC 2313.\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.rsa = forge.rsa = forge.rsa || {};\nvar pki = forge.pki;\n\n// for finding primes, which are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\n\n// validator for a PrivateKeyInfo structure\nvar privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\n// validator for an RSA private key\nvar rsaPrivateKeyValidator = {\n  // RSAPrivateKey\n  name: 'RSAPrivateKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'RSAPrivateKey.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // modulus (n)\n    name: 'RSAPrivateKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPrivateKey.publicExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPublicExponent'\n  }, {\n    // privateExponent (d)\n    name: 'RSAPrivateKey.privateExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrivateExponent'\n  }, {\n    // prime1 (p)\n    name: 'RSAPrivateKey.prime1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime1'\n  }, {\n    // prime2 (q)\n    name: 'RSAPrivateKey.prime2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime2'\n  }, {\n    // exponent1 (d mod (p-1))\n    name: 'RSAPrivateKey.exponent1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent1'\n  }, {\n    // exponent2 (d mod (q-1))\n    name: 'RSAPrivateKey.exponent2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent2'\n  }, {\n    // coefficient ((inverse of q) mod p)\n    name: 'RSAPrivateKey.coefficient',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyCoefficient'\n  }]\n};\n\n// validator for an RSA public key\nvar rsaPublicKeyValidator = {\n  // RSAPublicKey\n  name: 'RSAPublicKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // modulus (n)\n    name: 'RSAPublicKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPublicKey.exponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyExponent'\n  }]\n};\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  }, {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  }]\n};\n\n/**\n * Wrap digest in DigestInfo object.\n *\n * This function implements EMSA-PKCS1-v1_5-ENCODE as per RFC 3447.\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n * Digest ::= OCTET STRING\n *\n * @param md the message digest object with the hash to sign.\n *\n * @return the encoded message (ready for RSA encrytion)\n */\nvar emsaPkcs1v15encode = function(md) {\n  // get the oid for the algorithm\n  var oid;\n  if(md.algorithm in pki.oids) {\n    oid = pki.oids[md.algorithm];\n  } else {\n    var error = new Error('Unknown message digest algorithm.');\n    error.algorithm = md.algorithm;\n    throw error;\n  }\n  var oidBytes = asn1.oidToDer(oid).getBytes();\n\n  // create the digest info\n  var digestInfo = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  var digestAlgorithm = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false, oidBytes));\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.NULL, false, ''));\n  var digest = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n    false, md.digest().getBytes());\n  digestInfo.value.push(digestAlgorithm);\n  digestInfo.value.push(digest);\n\n  // encode digest info\n  return asn1.toDer(digestInfo).getBytes();\n};\n\n/**\n * Performs x^c mod n (RSA encryption or decryption operation).\n *\n * @param x the number to raise and mod.\n * @param key the key to use.\n * @param pub true if the key is public, false if private.\n *\n * @return the result of x^c mod n.\n */\nvar _modPow = function(x, key, pub) {\n  if(pub) {\n    return x.modPow(key.e, key.n);\n  }\n\n  if(!key.p || !key.q) {\n    // allow calculation without CRT params (slow)\n    return x.modPow(key.d, key.n);\n  }\n\n  // pre-compute dP, dQ, and qInv if necessary\n  if(!key.dP) {\n    key.dP = key.d.mod(key.p.subtract(BigInteger.ONE));\n  }\n  if(!key.dQ) {\n    key.dQ = key.d.mod(key.q.subtract(BigInteger.ONE));\n  }\n  if(!key.qInv) {\n    key.qInv = key.q.modInverse(key.p);\n  }\n\n  /* Chinese remainder theorem (CRT) states:\n\n    Suppose n1, n2, ..., nk are positive integers which are pairwise\n    coprime (n1 and n2 have no common factors other than 1). For any\n    integers x1, x2, ..., xk there exists an integer x solving the\n    system of simultaneous congruences (where ~= means modularly\n    congruent so a ~= b mod n means a mod n = b mod n):\n\n    x ~= x1 mod n1\n    x ~= x2 mod n2\n    ...\n    x ~= xk mod nk\n\n    This system of congruences has a single simultaneous solution x\n    between 0 and n - 1. Furthermore, each xk solution and x itself\n    is congruent modulo the product n = n1*n2*...*nk.\n    So x1 mod n = x2 mod n = xk mod n = x mod n.\n\n    The single simultaneous solution x can be solved with the following\n    equation:\n\n    x = sum(xi*ri*si) mod n where ri = n/ni and si = ri^-1 mod ni.\n\n    Where x is less than n, xi = x mod ni.\n\n    For RSA we are only concerned with k = 2. The modulus n = pq, where\n    p and q are coprime. The RSA decryption algorithm is:\n\n    y = x^d mod n\n\n    Given the above:\n\n    x1 = x^d mod p\n    r1 = n/p = q\n    s1 = q^-1 mod p\n    x2 = x^d mod q\n    r2 = n/q = p\n    s2 = p^-1 mod q\n\n    So y = (x1r1s1 + x2r2s2) mod n\n         = ((x^d mod p)q(q^-1 mod p) + (x^d mod q)p(p^-1 mod q)) mod n\n\n    According to Fermat's Little Theorem, if the modulus P is prime,\n    for any integer A not evenly divisible by P, A^(P-1) ~= 1 mod P.\n    Since A is not divisible by P it follows that if:\n    N ~= M mod (P - 1), then A^N mod P = A^M mod P. Therefore:\n\n    A^N mod P = A^(M mod (P - 1)) mod P. (The latter takes less effort\n    to calculate). In order to calculate x^d mod p more quickly the\n    exponent d mod (p - 1) is stored in the RSA private key (the same\n    is done for x^d mod q). These values are referred to as dP and dQ\n    respectively. Therefore we now have:\n\n    y = ((x^dP mod p)q(q^-1 mod p) + (x^dQ mod q)p(p^-1 mod q)) mod n\n\n    Since we'll be reducing x^dP by modulo p (same for q) we can also\n    reduce x by p (and q respectively) before hand. Therefore, let\n\n    xp = ((x mod p)^dP mod p), and\n    xq = ((x mod q)^dQ mod q), yielding:\n\n    y = (xp*q*(q^-1 mod p) + xq*p*(p^-1 mod q)) mod n\n\n    This can be further reduced to a simple algorithm that only\n    requires 1 inverse (the q inverse is used) to be used and stored.\n    The algorithm is called Garner's algorithm. If qInv is the\n    inverse of q, we simply calculate:\n\n    y = (qInv*(xp - xq) mod p) * q + xq\n\n    However, there are two further complications. First, we need to\n    ensure that xp > xq to prevent signed BigIntegers from being used\n    so we add p until this is true (since we will be mod'ing with\n    p anyway). Then, there is a known timing attack on algorithms\n    using the CRT. To mitigate this risk, \"cryptographic blinding\"\n    should be used. This requires simply generating a random number r\n    between 0 and n-1 and its inverse and multiplying x by r^e before\n    calculating y and then multiplying y by r^-1 afterwards. Note that\n    r must be coprime with n (gcd(r, n) === 1) in order to have an\n    inverse.\n  */\n\n  // cryptographic blinding\n  var r;\n  do {\n    r = new BigInteger(\n      forge.util.bytesToHex(forge.random.getBytes(key.n.bitLength() / 8)),\n      16);\n  } while(r.compareTo(key.n) >= 0 || !r.gcd(key.n).equals(BigInteger.ONE));\n  x = x.multiply(r.modPow(key.e, key.n)).mod(key.n);\n\n  // calculate xp and xq\n  var xp = x.mod(key.p).modPow(key.dP, key.p);\n  var xq = x.mod(key.q).modPow(key.dQ, key.q);\n\n  // xp must be larger than xq to avoid signed bit usage\n  while(xp.compareTo(xq) < 0) {\n    xp = xp.add(key.p);\n  }\n\n  // do last step\n  var y = xp.subtract(xq)\n    .multiply(key.qInv).mod(key.p)\n    .multiply(key.q).add(xq);\n\n  // remove effect of random for cryptographic blinding\n  y = y.multiply(r.modInverse(key.n)).mod(key.n);\n\n  return y;\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'sign' on a private key object or\n * 'encrypt' on a public key object instead.\n *\n * Performs RSA encryption.\n *\n * The parameter bt controls whether to put padding bytes before the\n * message passed in. Set bt to either true or false to disable padding\n * completely (in order to handle e.g. EMSA-PSS encoding seperately before),\n * signaling whether the encryption operation is a public key operation\n * (i.e. encrypting data) or not, i.e. private key operation (data signing).\n *\n * For PKCS#1 v1.5 padding pass in the block type to use, i.e. either 0x01\n * (for signing) or 0x02 (for encryption). The key operation mode (private\n * or public) is derived from this flag in that case).\n *\n * @param m the message to encrypt as a byte string.\n * @param key the RSA key to use.\n * @param bt for PKCS#1 v1.5 padding, the block type to use\n *   (0x01 for private key, 0x02 for public),\n *   to disable padding: true = public key, false = private key.\n *\n * @return the encrypted bytes as a string.\n */\npki.rsa.encrypt = function(m, key, bt) {\n  var pub = bt;\n  var eb;\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  if(bt !== false && bt !== true) {\n    // legacy, default to PKCS#1 v1.5 padding\n    pub = (bt === 0x02);\n    eb = _encodePkcs1_v1_5(m, key, bt);\n  } else {\n    eb = forge.util.createBuffer();\n    eb.putBytes(m);\n  }\n\n  // load encryption block as big integer 'x'\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var x = new BigInteger(eb.toHex(), 16);\n\n  // do RSA encryption\n  var y = _modPow(x, key, pub);\n\n  // convert y into the encrypted data byte string, if y is shorter in\n  // bytes than k, then prepend zero bytes to fill up ed\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var yhex = y.toString(16);\n  var ed = forge.util.createBuffer();\n  var zeros = k - Math.ceil(yhex.length / 2);\n  while(zeros > 0) {\n    ed.putByte(0x00);\n    --zeros;\n  }\n  ed.putBytes(forge.util.hexToBytes(yhex));\n  return ed.getBytes();\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'decrypt' on a private key object or\n * 'verify' on a public key object instead.\n *\n * Performs RSA decryption.\n *\n * The parameter ml controls whether to apply PKCS#1 v1.5 padding\n * or not.  Set ml = false to disable padding removal completely\n * (in order to handle e.g. EMSA-PSS later on) and simply pass back\n * the RSA encryption block.\n *\n * @param ed the encrypted data to decrypt in as a byte string.\n * @param key the RSA key to use.\n * @param pub true for a public key operation, false for private.\n * @param ml the message length, if known, false to disable padding.\n *\n * @return the decrypted message as a byte string.\n */\npki.rsa.decrypt = function(ed, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  // error if the length of the encrypted data ED is not k\n  if(ed.length !== k) {\n    var error = new Error('Encrypted message length is invalid.');\n    error.length = ed.length;\n    error.expected = k;\n    throw error;\n  }\n\n  // convert encrypted data into a big integer\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var y = new BigInteger(forge.util.createBuffer(ed).toHex(), 16);\n\n  // y must be less than the modulus or it wasn't the result of\n  // a previous mod operation (encryption) using that modulus\n  if(y.compareTo(key.n) >= 0) {\n    throw new Error('Encrypted message is invalid.');\n  }\n\n  // do RSA decryption\n  var x = _modPow(y, key, pub);\n\n  // create the encryption block, if x is shorter in bytes than k, then\n  // prepend zero bytes to fill up eb\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var xhex = x.toString(16);\n  var eb = forge.util.createBuffer();\n  var zeros = k - Math.ceil(xhex.length / 2);\n  while(zeros > 0) {\n    eb.putByte(0x00);\n    --zeros;\n  }\n  eb.putBytes(forge.util.hexToBytes(xhex));\n\n  if(ml !== false) {\n    // legacy, default to PKCS#1 v1.5 padding\n    return _decodePkcs1_v1_5(eb.getBytes(), key, pub);\n  }\n\n  // return message\n  return eb.getBytes();\n};\n\n/**\n * Creates an RSA key-pair generation state object. It is used to allow\n * key-generation to be performed in steps. It also allows for a UI to\n * display progress updates.\n *\n * @param bits the size for the private key in bits, defaults to 2048.\n * @param e the public exponent to use, defaults to 65537 (0x10001).\n * @param [options] the options to use.\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n *\n * @return the state object to use to generate the key-pair.\n */\npki.rsa.createKeyPairGenerationState = function(bits, e, options) {\n  // TODO: migrate step-based prime generation code to forge.prime\n\n  // set default bits\n  if(typeof(bits) === 'string') {\n    bits = parseInt(bits, 10);\n  }\n  bits = bits || 2048;\n\n  // create prng with api that matches BigInteger secure random\n  options = options || {};\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  var algorithm = options.algorithm || 'PRIMEINC';\n\n  // create PRIMEINC algorithm state\n  var rval;\n  if(algorithm === 'PRIMEINC') {\n    rval = {\n      algorithm: algorithm,\n      state: 0,\n      bits: bits,\n      rng: rng,\n      eInt: e || 65537,\n      e: new BigInteger(null),\n      p: null,\n      q: null,\n      qBits: bits >> 1,\n      pBits: bits - (bits >> 1),\n      pqState: 0,\n      num: null,\n      keys: null\n    };\n    rval.e.fromInt(rval.eInt);\n  } else {\n    throw new Error('Invalid key generation algorithm: ' + algorithm);\n  }\n\n  return rval;\n};\n\n/**\n * Attempts to runs the key-generation algorithm for at most n seconds\n * (approximately) using the given state. When key-generation has completed,\n * the keys will be stored in state.keys.\n *\n * To use this function to update a UI while generating a key or to prevent\n * causing browser lockups/warnings, set \"n\" to a value other than 0. A\n * simple pattern for generating a key and showing a progress indicator is:\n *\n * var state = pki.rsa.createKeyPairGenerationState(2048);\n * var step = function() {\n *   // step key-generation, run algorithm for 100 ms, repeat\n *   if(!forge.pki.rsa.stepKeyPairGenerationState(state, 100)) {\n *     setTimeout(step, 1);\n *   } else {\n *     // key-generation complete\n *     // TODO: turn off progress indicator here\n *     // TODO: use the generated key-pair in \"state.keys\"\n *   }\n * };\n * // TODO: turn on progress indicator here\n * setTimeout(step, 0);\n *\n * @param state the state to use.\n * @param n the maximum number of milliseconds to run the algorithm for, 0\n *          to run the algorithm to completion.\n *\n * @return true if the key-generation completed, false if not.\n */\npki.rsa.stepKeyPairGenerationState = function(state, n) {\n  // set default algorithm if not set\n  if(!('algorithm' in state)) {\n    state.algorithm = 'PRIMEINC';\n  }\n\n  // TODO: migrate step-based prime generation code to forge.prime\n  // TODO: abstract as PRIMEINC algorithm\n\n  // do key generation (based on Tom Wu's rsa.js, see jsbn.js license)\n  // with some minor optimizations and designed to run in steps\n\n  // local state vars\n  var THIRTY = new BigInteger(null);\n  THIRTY.fromInt(30);\n  var deltaIdx = 0;\n  var op_or = function(x, y) {return x | y;};\n\n  // keep stepping until time limit is reached or done\n  var t1 = +new Date();\n  var t2;\n  var total = 0;\n  while(state.keys === null && (n <= 0 || total < n)) {\n    // generate p or q\n    if(state.state === 0) {\n      /* Note: All primes are of the form:\n\n        30k+i, for i < 30 and gcd(30, i)=1, where there are 8 values for i\n\n        When we generate a random number, we always align it at 30k + 1. Each\n        time the number is determined not to be prime we add to get to the\n        next 'i', eg: if the number was at 30k + 1 we add 6. */\n      var bits = (state.p === null) ? state.pBits : state.qBits;\n      var bits1 = bits - 1;\n\n      // get a random number\n      if(state.pqState === 0) {\n        state.num = new BigInteger(bits, state.rng);\n        // force MSB set\n        if(!state.num.testBit(bits1)) {\n          state.num.bitwiseTo(\n            BigInteger.ONE.shiftLeft(bits1), op_or, state.num);\n        }\n        // align number on 30k+1 boundary\n        state.num.dAddOffset(31 - state.num.mod(THIRTY).byteValue(), 0);\n        deltaIdx = 0;\n\n        ++state.pqState;\n      } else if(state.pqState === 1) {\n        // try to make the number a prime\n        if(state.num.bitLength() > bits) {\n          // overflow, try again\n          state.pqState = 0;\n          // do primality test\n        } else if(state.num.isProbablePrime(\n          _getMillerRabinTests(state.num.bitLength()))) {\n          ++state.pqState;\n        } else {\n          // get next potential prime\n          state.num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n        }\n      } else if(state.pqState === 2) {\n        // ensure number is coprime with e\n        state.pqState =\n          (state.num.subtract(BigInteger.ONE).gcd(state.e)\n            .compareTo(BigInteger.ONE) === 0) ? 3 : 0;\n      } else if(state.pqState === 3) {\n        // store p or q\n        state.pqState = 0;\n        if(state.p === null) {\n          state.p = state.num;\n        } else {\n          state.q = state.num;\n        }\n\n        // advance state if both p and q are ready\n        if(state.p !== null && state.q !== null) {\n          ++state.state;\n        }\n        state.num = null;\n      }\n    } else if(state.state === 1) {\n      // ensure p is larger than q (swap them if not)\n      if(state.p.compareTo(state.q) < 0) {\n        state.num = state.p;\n        state.p = state.q;\n        state.q = state.num;\n      }\n      ++state.state;\n    } else if(state.state === 2) {\n      // compute phi: (p - 1)(q - 1) (Euler's totient function)\n      state.p1 = state.p.subtract(BigInteger.ONE);\n      state.q1 = state.q.subtract(BigInteger.ONE);\n      state.phi = state.p1.multiply(state.q1);\n      ++state.state;\n    } else if(state.state === 3) {\n      // ensure e and phi are coprime\n      if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) === 0) {\n        // phi and e are coprime, advance\n        ++state.state;\n      } else {\n        // phi and e aren't coprime, so generate a new p and q\n        state.p = null;\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 4) {\n      // create n, ensure n is has the right number of bits\n      state.n = state.p.multiply(state.q);\n\n      // ensure n is right number of bits\n      if(state.n.bitLength() === state.bits) {\n        // success, advance\n        ++state.state;\n      } else {\n        // failed, get new q\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 5) {\n      // set keys\n      var d = state.e.modInverse(state.phi);\n      state.keys = {\n        privateKey: pki.rsa.setPrivateKey(\n          state.n, state.e, d, state.p, state.q,\n          d.mod(state.p1), d.mod(state.q1),\n          state.q.modInverse(state.p)),\n        publicKey: pki.rsa.setPublicKey(state.n, state.e)\n      };\n    }\n\n    // update timing\n    t2 = +new Date();\n    total += t2 - t1;\n    t1 = t2;\n  }\n\n  return state.keys !== null;\n};\n\n/**\n * Generates an RSA public-private key pair in a single call.\n *\n * To generate a key-pair in steps (to allow for progress updates and to\n * prevent blocking or warnings in slow browsers) then use the key-pair\n * generation state functions.\n *\n * To generate a key-pair asynchronously (either through web-workers, if\n * available, or by breaking up the work on the main thread), pass a\n * callback function.\n *\n * @param [bits] the size for the private key in bits, defaults to 2048.\n * @param [e] the public exponent to use, defaults to 65537.\n * @param [options] options for key-pair generation, if given then 'bits'\n *            and 'e' must *not* be given:\n *          bits the size for the private key in bits, (default: 2048).\n *          e the public exponent to use, (default: 65537 (0x10001)).\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\". Disables use of native APIs.\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n * @param [callback(err, keypair)] called once the operation completes.\n *\n * @return an object with privateKey and publicKey properties.\n */\npki.rsa.generateKeyPair = function(bits, e, options, callback) {\n  // (bits), (options), (callback)\n  if(arguments.length === 1) {\n    if(typeof bits === 'object') {\n      options = bits;\n      bits = undefined;\n    } else if(typeof bits === 'function') {\n      callback = bits;\n      bits = undefined;\n    }\n  } else if(arguments.length === 2) {\n    // (bits, e), (bits, options), (bits, callback), (options, callback)\n    if(typeof bits === 'number') {\n      if(typeof e === 'function') {\n        callback = e;\n        e = undefined;\n      } else if(typeof e !== 'number') {\n        options = e;\n        e = undefined;\n      }\n    } else {\n      options = bits;\n      callback = e;\n      bits = undefined;\n      e = undefined;\n    }\n  } else if(arguments.length === 3) {\n    // (bits, e, options), (bits, e, callback), (bits, options, callback)\n    if(typeof e === 'number') {\n      if(typeof options === 'function') {\n        callback = options;\n        options = undefined;\n      }\n    } else {\n      callback = options;\n      options = e;\n      e = undefined;\n    }\n  }\n  options = options || {};\n  if(bits === undefined) {\n    bits = options.bits || 2048;\n  }\n  if(e === undefined) {\n    e = options.e || 0x10001;\n  }\n\n  // use native code if permitted, available, and parameters are acceptable\n  if(!forge.options.usePureJavaScript && !options.prng &&\n    bits >= 256 && bits <= 16384 && (e === 0x10001 || e === 3)) {\n    if(callback) {\n      // try native async\n      if(_detectNodeCrypto('generateKeyPair')) {\n        return _crypto.generateKeyPair('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        }, function(err, pub, priv) {\n          if(err) {\n            return callback(err);\n          }\n          callback(null, {\n            privateKey: pki.privateKeyFromPem(priv),\n            publicKey: pki.publicKeyFromPem(pub)\n          });\n        });\n      }\n      if(_detectSubtleCrypto('generateKey') &&\n        _detectSubtleCrypto('exportKey')) {\n        // use standard native generateKey\n        return util.globalScope.crypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify'])\n        .then(function(pair) {\n          return util.globalScope.crypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n        // avoiding catch(function(err) {...}) to support IE <= 8\n        }).then(undefined, function(err) {\n          callback(err);\n        }).then(function(pkcs8) {\n          if(pkcs8) {\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          }\n        });\n      }\n      if(_detectSubtleMsCrypto('generateKey') &&\n        _detectSubtleMsCrypto('exportKey')) {\n        var genOp = util.globalScope.msCrypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify']);\n        genOp.oncomplete = function(e) {\n          var pair = e.target.result;\n          var exportOp = util.globalScope.msCrypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n          exportOp.oncomplete = function(e) {\n            var pkcs8 = e.target.result;\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          };\n          exportOp.onerror = function(err) {\n            callback(err);\n          };\n        };\n        genOp.onerror = function(err) {\n          callback(err);\n        };\n        return;\n      }\n    } else {\n      // try native sync\n      if(_detectNodeCrypto('generateKeyPairSync')) {\n        var keypair = _crypto.generateKeyPairSync('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        });\n        return {\n          privateKey: pki.privateKeyFromPem(keypair.privateKey),\n          publicKey: pki.publicKeyFromPem(keypair.publicKey)\n        };\n      }\n    }\n  }\n\n  // use JavaScript implementation\n  var state = pki.rsa.createKeyPairGenerationState(bits, e, options);\n  if(!callback) {\n    pki.rsa.stepKeyPairGenerationState(state, 0);\n    return state.keys;\n  }\n  _generateKeyPair(state, options, callback);\n};\n\n/**\n * Sets an RSA public key from BigIntegers modulus and exponent.\n *\n * @param n the modulus.\n * @param e the exponent.\n *\n * @return the public key.\n */\npki.setRsaPublicKey = pki.rsa.setPublicKey = function(n, e) {\n  var key = {\n    n: n,\n    e: e\n  };\n\n  /**\n   * Encrypts the given data with this public key. Newer applications\n   * should use the 'RSA-OAEP' decryption scheme, 'RSAES-PKCS1-V1_5' is for\n   * legacy applications.\n   *\n   * @param data the byte string to encrypt.\n   * @param scheme the encryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA encryption,\n   *          an object with an 'encode' property set to a function\n   *          with the signature 'function(data, key)' that returns\n   *          a binary-encoded string representing the encoded data.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the encrypted byte string.\n   */\n  key.encrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {\n        encode: function(m, key, pub) {\n          return _encodePkcs1_v1_5(m, key, 0x02).getBytes();\n        }\n      };\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        encode: function(m, key) {\n          return forge.pkcs1.encode_rsa_oaep(key, m, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {encode: function(e) {return e;}};\n    } else if(typeof scheme === 'string') {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // do scheme-based encoding then rsa encryption\n    var e = scheme.encode(data, key, true);\n    return pki.rsa.encrypt(e, key, true);\n  };\n\n  /**\n   * Verifies the given signature against the given digest.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5, in which case once RSA-decrypted, the\n   * signature is an OCTET STRING that holds a DigestInfo.\n   *\n   * DigestInfo ::= SEQUENCE {\n   *   digestAlgorithm DigestAlgorithmIdentifier,\n   *   digest Digest\n   * }\n   * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n   * Digest ::= OCTET STRING\n   *\n   * To perform PSS signature verification, provide an instance\n   * of Forge PSS object as the scheme parameter.\n   *\n   * @param digest the message digest hash to compare against the signature,\n   *          as a binary-encoded string.\n   * @param signature the signature to verify, as a binary-encoded string.\n   * @param scheme signature verification scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be expected, but\n   *            PKCS#1 v1.5 padding will still be used.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  key.verify = function(digest, signature, scheme) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSASSA-PKCS1-V1_5';\n    }\n\n    if(scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          // d is ASN.1 BER-encoded DigestInfo\n          var obj = asn1.fromDer(d);\n          // compare the given digest to the decrypted one\n          return digest === obj.value[1].value;\n        }\n      };\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          return digest === d;\n        }\n      };\n    }\n\n    // do rsa decryption w/o any decoding, then verify -- which does decoding\n    var d = pki.rsa.decrypt(signature, key, true, false);\n    return scheme.verify(digest, d, key.n.bitLength());\n  };\n\n  return key;\n};\n\n/**\n * Sets an RSA private key from BigIntegers modulus, exponent, primes,\n * prime exponents, and modular multiplicative inverse.\n *\n * @param n the modulus.\n * @param e the public exponent.\n * @param d the private exponent ((inverse of e) mod n).\n * @param p the first prime.\n * @param q the second prime.\n * @param dP exponent1 (d mod (p-1)).\n * @param dQ exponent2 (d mod (q-1)).\n * @param qInv ((inverse of q) mod p)\n *\n * @return the private key.\n */\npki.setRsaPrivateKey = pki.rsa.setPrivateKey = function(\n  n, e, d, p, q, dP, dQ, qInv) {\n  var key = {\n    n: n,\n    e: e,\n    d: d,\n    p: p,\n    q: q,\n    dP: dP,\n    dQ: dQ,\n    qInv: qInv\n  };\n\n  /**\n   * Decrypts the given data with this private key. The decryption scheme\n   * must match the one used to encrypt the data.\n   *\n   * @param data the byte string to decrypt.\n   * @param scheme the decryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA decryption.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the decrypted byte string.\n   */\n  key.decrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    // do rsa decryption w/o any decoding\n    var d = pki.rsa.decrypt(data, key, false, false);\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {decode: _decodePkcs1_v1_5};\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        decode: function(d, key) {\n          return forge.pkcs1.decode_rsa_oaep(key, d, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {decode: function(d) {return d;}};\n    } else {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // decode according to scheme\n    return scheme.decode(d, key, false);\n  };\n\n  /**\n   * Signs the given digest, producing a signature.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5. In order to generate a PSS signature, provide\n   * an instance of Forge PSS object as the scheme parameter.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param scheme the signature scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be used but\n   *            PKCS#1 v1.5 padding will still be used.\n   *\n   * @return the signature as a byte string.\n   */\n  key.sign = function(md, scheme) {\n    /* Note: The internal implementation of RSA operations is being\n      transitioned away from a PKCS#1 v1.5 hard-coded scheme. Some legacy\n      code like the use of an encoding block identifier 'bt' will eventually\n      be removed. */\n\n    // private key operation\n    var bt = false;\n\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    }\n\n    if(scheme === undefined || scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {encode: emsaPkcs1v15encode};\n      bt = 0x01;\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {encode: function() {return md;}};\n      bt = 0x01;\n    }\n\n    // encode and then encrypt\n    var d = scheme.encode(md, key.n.bitLength());\n    return pki.rsa.encrypt(d, key, bt);\n  };\n\n  return key;\n};\n\n/**\n * Wraps an RSAPrivateKey ASN.1 object in an ASN.1 PrivateKeyInfo object.\n *\n * @param rsaKey the ASN.1 RSAPrivateKey.\n *\n * @return the ASN.1 PrivateKeyInfo.\n */\npki.wrapRsaPrivateKey = function(rsaKey) {\n  // PrivateKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // privateKeyAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // PrivateKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      asn1.toDer(rsaKey).getBytes())\n  ]);\n};\n\n/**\n * Converts a private key from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a PrivateKeyInfo containing an\n *          RSAPrivateKey or an RSAPrivateKey.\n *\n * @return the private key.\n */\npki.privateKeyFromAsn1 = function(obj) {\n  // get PrivateKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, privateKeyValidator, capture, errors)) {\n    obj = asn1.fromDer(forge.util.createBuffer(capture.privateKey));\n  }\n\n  // get RSAPrivateKey\n  capture = {};\n  errors = [];\n  if(!asn1.validate(obj, rsaPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read private key. ' +\n      'ASN.1 object does not contain an RSAPrivateKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // Note: Version is currently ignored.\n  // capture.privateKeyVersion\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n, e, d, p, q, dP, dQ, qInv;\n  n = forge.util.createBuffer(capture.privateKeyModulus).toHex();\n  e = forge.util.createBuffer(capture.privateKeyPublicExponent).toHex();\n  d = forge.util.createBuffer(capture.privateKeyPrivateExponent).toHex();\n  p = forge.util.createBuffer(capture.privateKeyPrime1).toHex();\n  q = forge.util.createBuffer(capture.privateKeyPrime2).toHex();\n  dP = forge.util.createBuffer(capture.privateKeyExponent1).toHex();\n  dQ = forge.util.createBuffer(capture.privateKeyExponent2).toHex();\n  qInv = forge.util.createBuffer(capture.privateKeyCoefficient).toHex();\n\n  // set private key\n  return pki.setRsaPrivateKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16),\n    new BigInteger(d, 16),\n    new BigInteger(p, 16),\n    new BigInteger(q, 16),\n    new BigInteger(dP, 16),\n    new BigInteger(dQ, 16),\n    new BigInteger(qInv, 16));\n};\n\n/**\n * Converts a private key to an ASN.1 RSAPrivateKey.\n *\n * @param key the private key.\n *\n * @return the ASN.1 representation of an RSAPrivateKey.\n */\npki.privateKeyToAsn1 = pki.privateKeyToRSAPrivateKey = function(key) {\n  // RSAPrivateKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0 = only 2 primes, 1 multiple primes)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e)),\n    // privateExponent (d)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.d)),\n    // privateKeyPrime1 (p)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.p)),\n    // privateKeyPrime2 (q)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.q)),\n    // privateKeyExponent1 (dP)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dP)),\n    // privateKeyExponent2 (dQ)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dQ)),\n    // coefficient (qInv)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.qInv))\n  ]);\n};\n\n/**\n * Converts a public key from an ASN.1 SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @param obj the asn1 representation of a SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @return the public key.\n */\npki.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, publicKeyValidator, capture, errors)) {\n    // get oid\n    var oid = asn1.derToOid(capture.publicKeyOid);\n    if(oid !== pki.oids.rsaEncryption) {\n      var error = new Error('Cannot read public key. Unknown OID.');\n      error.oid = oid;\n      throw error;\n    }\n    obj = capture.rsaPublicKey;\n  }\n\n  // get RSA params\n  errors = [];\n  if(!asn1.validate(obj, rsaPublicKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read public key. ' +\n      'ASN.1 object does not contain an RSAPublicKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n = forge.util.createBuffer(capture.publicKeyModulus).toHex();\n  var e = forge.util.createBuffer(capture.publicKeyExponent).toHex();\n\n  // set public key\n  return pki.setRsaPublicKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16));\n};\n\n/**\n * Converts a public key to an ASN.1 SubjectPublicKeyInfo.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a SubjectPublicKeyInfo.\n */\npki.publicKeyToAsn1 = pki.publicKeyToSubjectPublicKeyInfo = function(key) {\n  // SubjectPublicKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // subjectPublicKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, [\n      pki.publicKeyToRSAPublicKey(key)\n    ])\n  ]);\n};\n\n/**\n * Converts a public key to an ASN.1 RSAPublicKey.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a RSAPublicKey.\n */\npki.publicKeyToRSAPublicKey = function(key) {\n  // RSAPublicKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e))\n  ]);\n};\n\n/**\n * Encodes a message using PKCS#1 v1.5 padding.\n *\n * @param m the message to encode.\n * @param key the RSA key to use.\n * @param bt the block type to use, i.e. either 0x01 (for signing) or 0x02\n *          (for encryption).\n *\n * @return the padded byte buffer.\n */\nfunction _encodePkcs1_v1_5(m, key, bt) {\n  var eb = forge.util.createBuffer();\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* use PKCS#1 v1.5 padding */\n  if(m.length > (k - 11)) {\n    var error = new Error('Message is too long for PKCS#1 v1.5 padding.');\n    error.length = m.length;\n    error.max = k - 11;\n    throw error;\n  }\n\n  /* A block type BT, a padding string PS, and the data D shall be\n    formatted into an octet string EB, the encryption block:\n\n    EB = 00 || BT || PS || 00 || D\n\n    The block type BT shall be a single octet indicating the structure of\n    the encryption block. For this version of the document it shall have\n    value 00, 01, or 02. For a private-key operation, the block type\n    shall be 00 or 01. For a public-key operation, it shall be 02.\n\n    The padding string PS shall consist of k-3-||D|| octets. For block\n    type 00, the octets shall have value 00; for block type 01, they\n    shall have value FF; and for block type 02, they shall be\n    pseudorandomly generated and nonzero. This makes the length of the\n    encryption block EB equal to k. */\n\n  // build the encryption block\n  eb.putByte(0x00);\n  eb.putByte(bt);\n\n  // create the padding\n  var padNum = k - 3 - m.length;\n  var padByte;\n  // private key op\n  if(bt === 0x00 || bt === 0x01) {\n    padByte = (bt === 0x00) ? 0x00 : 0xFF;\n    for(var i = 0; i < padNum; ++i) {\n      eb.putByte(padByte);\n    }\n  } else {\n    // public key op\n    // pad with random non-zero values\n    while(padNum > 0) {\n      var numZeros = 0;\n      var padBytes = forge.random.getBytes(padNum);\n      for(var i = 0; i < padNum; ++i) {\n        padByte = padBytes.charCodeAt(i);\n        if(padByte === 0) {\n          ++numZeros;\n        } else {\n          eb.putByte(padByte);\n        }\n      }\n      padNum = numZeros;\n    }\n  }\n\n  // zero followed by message\n  eb.putByte(0x00);\n  eb.putBytes(m);\n\n  return eb;\n}\n\n/**\n * Decodes a message using PKCS#1 v1.5 padding.\n *\n * @param em the message to decode.\n * @param key the RSA key to use.\n * @param pub true if the key is a public key, false if it is private.\n * @param ml the message length, if specified.\n *\n * @return the decoded bytes.\n */\nfunction _decodePkcs1_v1_5(em, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* It is an error if any of the following conditions occurs:\n\n    1. The encryption block EB cannot be parsed unambiguously.\n    2. The padding string PS consists of fewer than eight octets\n      or is inconsisent with the block type BT.\n    3. The decryption process is a public-key operation and the block\n      type BT is not 00 or 01, or the decryption process is a\n      private-key operation and the block type is not 02.\n   */\n\n  // parse the encryption block\n  var eb = forge.util.createBuffer(em);\n  var first = eb.getByte();\n  var bt = eb.getByte();\n  if(first !== 0x00 ||\n    (pub && bt !== 0x00 && bt !== 0x01) ||\n    (!pub && bt != 0x02) ||\n    (pub && bt === 0x00 && typeof(ml) === 'undefined')) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  var padNum = 0;\n  if(bt === 0x00) {\n    // check all padding bytes for 0x00\n    padNum = k - 3 - ml;\n    for(var i = 0; i < padNum; ++i) {\n      if(eb.getByte() !== 0x00) {\n        throw new Error('Encryption block is invalid.');\n      }\n    }\n  } else if(bt === 0x01) {\n    // find the first byte that isn't 0xFF, should be after all padding\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() !== 0xFF) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  } else if(bt === 0x02) {\n    // look for 0x00 byte\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() === 0x00) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  }\n\n  // zero must be 0x00 and padNum must be (k - 3 - message length)\n  var zero = eb.getByte();\n  if(zero !== 0x00 || padNum !== (k - 3 - eb.length())) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  return eb.getBytes();\n}\n\n/**\n * Runs the key-generation algorithm asynchronously, either in the background\n * via Web Workers, or using the main thread and setImmediate.\n *\n * @param state the key-pair generation state.\n * @param [options] options for key-pair generation:\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2, -1 to use estimated cores minus one).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n * @param callback(err, keypair) called once the operation completes.\n */\nfunction _generateKeyPair(state, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  var opts = {\n    algorithm: {\n      name: options.algorithm || 'PRIMEINC',\n      options: {\n        workers: options.workers || 2,\n        workLoad: options.workLoad || 100,\n        workerScript: options.workerScript\n      }\n    }\n  };\n  if('prng' in options) {\n    opts.prng = options.prng;\n  }\n\n  generate();\n\n  function generate() {\n    // find p and then q (done in series to simplify)\n    getPrime(state.pBits, function(err, num) {\n      if(err) {\n        return callback(err);\n      }\n      state.p = num;\n      if(state.q !== null) {\n        return finish(err, state.q);\n      }\n      getPrime(state.qBits, finish);\n    });\n  }\n\n  function getPrime(bits, callback) {\n    forge.prime.generateProbablePrime(bits, opts, callback);\n  }\n\n  function finish(err, num) {\n    if(err) {\n      return callback(err);\n    }\n\n    // set q\n    state.q = num;\n\n    // ensure p is larger than q (swap them if not)\n    if(state.p.compareTo(state.q) < 0) {\n      var tmp = state.p;\n      state.p = state.q;\n      state.q = tmp;\n    }\n\n    // ensure p is coprime with e\n    if(state.p.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.p = null;\n      generate();\n      return;\n    }\n\n    // ensure q is coprime with e\n    if(state.q.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // compute phi: (p - 1)(q - 1) (Euler's totient function)\n    state.p1 = state.p.subtract(BigInteger.ONE);\n    state.q1 = state.q.subtract(BigInteger.ONE);\n    state.phi = state.p1.multiply(state.q1);\n\n    // ensure e and phi are coprime\n    if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) !== 0) {\n      // phi and e aren't coprime, so generate a new p and q\n      state.p = state.q = null;\n      generate();\n      return;\n    }\n\n    // create n, ensure n is has the right number of bits\n    state.n = state.p.multiply(state.q);\n    if(state.n.bitLength() !== state.bits) {\n      // failed, get new q\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // set keys\n    var d = state.e.modInverse(state.phi);\n    state.keys = {\n      privateKey: pki.rsa.setPrivateKey(\n        state.n, state.e, d, state.p, state.q,\n        d.mod(state.p1), d.mod(state.q1),\n        state.q.modInverse(state.p)),\n      publicKey: pki.rsa.setPublicKey(state.n, state.e)\n    };\n\n    callback(null, state.keys);\n  }\n}\n\n/**\n * Converts a positive BigInteger into 2's-complement big-endian bytes.\n *\n * @param b the big integer to convert.\n *\n * @return the bytes.\n */\nfunction _bnToBytes(b) {\n  // prepend 0x00 if first byte >= 0x80\n  var hex = b.toString(16);\n  if(hex[0] >= '8') {\n    hex = '00' + hex;\n  }\n  var bytes = forge.util.hexToBytes(hex);\n\n  // ensure integer is minimally-encoded\n  if(bytes.length > 1 &&\n    // leading 0x00 for positive integer\n    ((bytes.charCodeAt(0) === 0 &&\n    (bytes.charCodeAt(1) & 0x80) === 0) ||\n    // leading 0xFF for negative integer\n    (bytes.charCodeAt(0) === 0xFF &&\n    (bytes.charCodeAt(1) & 0x80) === 0x80))) {\n    return bytes.substr(1);\n  }\n  return bytes;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction _getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n/**\n * Performs feature detection on the Node crypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectNodeCrypto(fn) {\n  return forge.util.isNodejs && typeof _crypto[fn] === 'function';\n}\n\n/**\n * Performs feature detection on the SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.crypto === 'object' &&\n    typeof util.globalScope.crypto.subtle === 'object' &&\n    typeof util.globalScope.crypto.subtle[fn] === 'function');\n}\n\n/**\n * Performs feature detection on the deprecated Microsoft Internet Explorer\n * outdated SubtleCrypto interface. This function should only be used after\n * checking for the modern, standard SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleMsCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.msCrypto === 'object' &&\n    typeof util.globalScope.msCrypto.subtle === 'object' &&\n    typeof util.globalScope.msCrypto.subtle[fn] === 'function');\n}\n\nfunction _intToUint8Array(x) {\n  var bytes = forge.util.hexToBytes(x.toString(16));\n  var buffer = new Uint8Array(bytes.length);\n  for(var i = 0; i < bytes.length; ++i) {\n    buffer[i] = bytes.charCodeAt(i);\n  }\n  return buffer;\n}\n\nfunction _privateKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error(\n      'Unsupported key algorithm \"' + jwk.kty + '\"; algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPrivateKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e),\n    _base64ToBigInt(jwk.d),\n    _base64ToBigInt(jwk.p),\n    _base64ToBigInt(jwk.q),\n    _base64ToBigInt(jwk.dp),\n    _base64ToBigInt(jwk.dq),\n    _base64ToBigInt(jwk.qi));\n}\n\nfunction _publicKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error('Key algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPublicKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e));\n}\n\nfunction _base64ToBigInt(b64) {\n  return new BigInteger(forge.util.bytesToHex(forge.util.decode64(b64)), 16);\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/rsa.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/sha1.js":function(module,exports,__webpack_require__){eval("/**\n * Secure Hash Algorithm with 160-bit digest (SHA-1) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./md */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\nvar sha1 = module.exports = forge.sha1 = forge.sha1 || {};\nforge.md.sha1 = forge.md.algorithms.sha1 = sha1;\n\n/**\n * Creates a SHA-1 message digest object.\n *\n * @return a message digest object.\n */\nsha1.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-1 state contains five 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(80);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha1',\n    blockLength: 64,\n    digestLength: 20,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476,\n      h4: 0xC3D2E1F0\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-1 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-1 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-1 state with the given byte buffer.\n *\n * @param s the SHA-1 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = bytes.getInt32();\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n\n    len -= 64;\n  }\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/sha1.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/sha256.js":function(module,exports,__webpack_require__){eval("/**\n * Secure Hash Algorithm with 256-bit digest (SHA-256) implementation.\n *\n * See FIPS 180-2 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./md */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\nvar sha256 = module.exports = forge.sha256 = forge.sha256 || {};\nforge.md.sha256 = forge.md.algorithms.sha256 = sha256;\n\n/**\n * Creates a SHA-256 message digest object.\n *\n * @return a message digest object.\n */\nsha256.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-256 state contains eight 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(64);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha256',\n    blockLength: 64,\n    digestLength: 32,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x6A09E667,\n      h1: 0xBB67AE85,\n      h2: 0x3C6EF372,\n      h3: 0xA54FF53A,\n      h4: 0x510E527F,\n      h5: 0x9B05688C,\n      h6: 0x1F83D9AB,\n      h7: 0x5BE0CD19\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-256 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4,\n      h5: _state.h5,\n      h6: _state.h6,\n      h7: _state.h7\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    rval.putInt32(s2.h5);\n    rval.putInt32(s2.h6);\n    rval.putInt32(s2.h7);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-256 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // create K table for SHA-256\n  _k = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-256 state with the given byte buffer.\n *\n * @param s the SHA-256 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 64 32-bit words according to SHA-256\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32();\n    }\n    for(; i < 64; ++i) {\n      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n      t1 = w[i - 2];\n      t1 =\n        ((t1 >>> 17) | (t1 << 15)) ^\n        ((t1 >>> 19) | (t1 << 13)) ^\n        (t1 >>> 10);\n      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n      t2 = w[i - 15];\n      t2 =\n        ((t2 >>> 7) | (t2 << 25)) ^\n        ((t2 >>> 18) | (t2 << 14)) ^\n        (t2 >>> 3);\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n      w[i] = (t1 + w[i - 7] + t2 + w[i - 16]) | 0;\n    }\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n    f = s.h5;\n    g = s.h6;\n    h = s.h7;\n\n    // round function\n    for(i = 0; i < 64; ++i) {\n      // Sum1(e)\n      s1 =\n        ((e >>> 6) | (e << 26)) ^\n        ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch = g ^ (e & (f ^ g));\n      // Sum0(a)\n      s0 =\n        ((a >>> 2) | (a << 30)) ^\n        ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj = (a & b) | (c & (a ^ b));\n\n      // main algorithm\n      t1 = h + s1 + ch + _k[i] + w[i];\n      t2 = s0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      e = (d + t1) >>> 0;\n      d = c;\n      c = b;\n      b = a;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      a = (t1 + t2) >>> 0;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n    s.h5 = (s.h5 + f) | 0;\n    s.h6 = (s.h6 + g) | 0;\n    s.h7 = (s.h7 + h) | 0;\n    len -= 64;\n  }\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/sha256.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/sha512.js":function(module,exports,__webpack_require__){eval("/**\n * Secure Hash Algorithm with a 1024-bit block size implementation.\n *\n * This includes: SHA-512, SHA-384, SHA-512/224, and SHA-512/256. For\n * SHA-256 (block size 512 bits), see sha256.js.\n *\n * See FIPS 180-4 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014-2015 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./md */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\nvar sha512 = module.exports = forge.sha512 = forge.sha512 || {};\n\n// SHA-512\nforge.md.sha512 = forge.md.algorithms.sha512 = sha512;\n\n// SHA-384\nvar sha384 = forge.sha384 = forge.sha512.sha384 = forge.sha512.sha384 || {};\nsha384.create = function() {\n  return sha512.create('SHA-384');\n};\nforge.md.sha384 = forge.md.algorithms.sha384 = sha384;\n\n// SHA-512/256\nforge.sha512.sha256 = forge.sha512.sha256 || {\n  create: function() {\n    return sha512.create('SHA-512/256');\n  }\n};\nforge.md['sha512/256'] = forge.md.algorithms['sha512/256'] =\n  forge.sha512.sha256;\n\n// SHA-512/224\nforge.sha512.sha224 = forge.sha512.sha224 || {\n  create: function() {\n    return sha512.create('SHA-512/224');\n  }\n};\nforge.md['sha512/224'] = forge.md.algorithms['sha512/224'] =\n  forge.sha512.sha224;\n\n/**\n * Creates a SHA-2 message digest object.\n *\n * @param algorithm the algorithm to use (SHA-512, SHA-384, SHA-512/224,\n *          SHA-512/256).\n *\n * @return a message digest object.\n */\nsha512.create = function(algorithm) {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  if(typeof algorithm === 'undefined') {\n    algorithm = 'SHA-512';\n  }\n\n  if(!(algorithm in _states)) {\n    throw new Error('Invalid SHA-512 algorithm: ' + algorithm);\n  }\n\n  // SHA-512 state contains eight 64-bit integers (each as two 32-bit ints)\n  var _state = _states[algorithm];\n  var _h = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for 64-bit word storage\n  var _w = new Array(80);\n  for(var wi = 0; wi < 80; ++wi) {\n    _w[wi] = new Array(2);\n  }\n\n  // determine digest length by algorithm name (default)\n  var digestLength = 64;\n  switch(algorithm) {\n    case 'SHA-384':\n      digestLength = 48;\n      break;\n    case 'SHA-512/256':\n      digestLength = 32;\n      break;\n    case 'SHA-512/224':\n      digestLength = 28;\n      break;\n  }\n\n  // message digest object\n  var md = {\n    // SHA-512 => sha512\n    algorithm: algorithm.replace('-', '').toLowerCase(),\n    blockLength: 128,\n    digestLength: digestLength,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 16\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength128 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength128 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _h = new Array(_state.length);\n    for(var i = 0; i < _state.length; ++i) {\n      _h[i] = _state[i].slice(0);\n    }\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_h, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-512 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 896 mod 1024. In other words,\n    the data to be digested must be a multiple of 1024 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 16 bytes (128\n    bits), that means that the last segment of the data must have 112 bytes\n    (896 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 896 mod 1024 because\n    1024 - 128 = 896.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 896 mod 1024, then 1024 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var h = new Array(_h.length);\n    for(var i = 0; i < _h.length; ++i) {\n      h[i] = _h[i].slice(0);\n    }\n    _update(h, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    var hlen;\n    if(algorithm === 'SHA-512') {\n      hlen = h.length;\n    } else if(algorithm === 'SHA-384') {\n      hlen = h.length - 2;\n    } else {\n      hlen = h.length - 4;\n    }\n    for(var i = 0; i < hlen; ++i) {\n      rval.putInt32(h[i][0]);\n      if(i !== hlen - 1 || algorithm !== 'SHA-512/224') {\n        rval.putInt32(h[i][1]);\n      }\n    }\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-512 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n// initial hash states\nvar _states = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 128);\n\n  // create K table for SHA-512\n  _k = [\n    [0x428a2f98, 0xd728ae22], [0x71374491, 0x23ef65cd],\n    [0xb5c0fbcf, 0xec4d3b2f], [0xe9b5dba5, 0x8189dbbc],\n    [0x3956c25b, 0xf348b538], [0x59f111f1, 0xb605d019],\n    [0x923f82a4, 0xaf194f9b], [0xab1c5ed5, 0xda6d8118],\n    [0xd807aa98, 0xa3030242], [0x12835b01, 0x45706fbe],\n    [0x243185be, 0x4ee4b28c], [0x550c7dc3, 0xd5ffb4e2],\n    [0x72be5d74, 0xf27b896f], [0x80deb1fe, 0x3b1696b1],\n    [0x9bdc06a7, 0x25c71235], [0xc19bf174, 0xcf692694],\n    [0xe49b69c1, 0x9ef14ad2], [0xefbe4786, 0x384f25e3],\n    [0x0fc19dc6, 0x8b8cd5b5], [0x240ca1cc, 0x77ac9c65],\n    [0x2de92c6f, 0x592b0275], [0x4a7484aa, 0x6ea6e483],\n    [0x5cb0a9dc, 0xbd41fbd4], [0x76f988da, 0x831153b5],\n    [0x983e5152, 0xee66dfab], [0xa831c66d, 0x2db43210],\n    [0xb00327c8, 0x98fb213f], [0xbf597fc7, 0xbeef0ee4],\n    [0xc6e00bf3, 0x3da88fc2], [0xd5a79147, 0x930aa725],\n    [0x06ca6351, 0xe003826f], [0x14292967, 0x0a0e6e70],\n    [0x27b70a85, 0x46d22ffc], [0x2e1b2138, 0x5c26c926],\n    [0x4d2c6dfc, 0x5ac42aed], [0x53380d13, 0x9d95b3df],\n    [0x650a7354, 0x8baf63de], [0x766a0abb, 0x3c77b2a8],\n    [0x81c2c92e, 0x47edaee6], [0x92722c85, 0x1482353b],\n    [0xa2bfe8a1, 0x4cf10364], [0xa81a664b, 0xbc423001],\n    [0xc24b8b70, 0xd0f89791], [0xc76c51a3, 0x0654be30],\n    [0xd192e819, 0xd6ef5218], [0xd6990624, 0x5565a910],\n    [0xf40e3585, 0x5771202a], [0x106aa070, 0x32bbd1b8],\n    [0x19a4c116, 0xb8d2d0c8], [0x1e376c08, 0x5141ab53],\n    [0x2748774c, 0xdf8eeb99], [0x34b0bcb5, 0xe19b48a8],\n    [0x391c0cb3, 0xc5c95a63], [0x4ed8aa4a, 0xe3418acb],\n    [0x5b9cca4f, 0x7763e373], [0x682e6ff3, 0xd6b2b8a3],\n    [0x748f82ee, 0x5defb2fc], [0x78a5636f, 0x43172f60],\n    [0x84c87814, 0xa1f0ab72], [0x8cc70208, 0x1a6439ec],\n    [0x90befffa, 0x23631e28], [0xa4506ceb, 0xde82bde9],\n    [0xbef9a3f7, 0xb2c67915], [0xc67178f2, 0xe372532b],\n    [0xca273ece, 0xea26619c], [0xd186b8c7, 0x21c0c207],\n    [0xeada7dd6, 0xcde0eb1e], [0xf57d4f7f, 0xee6ed178],\n    [0x06f067aa, 0x72176fba], [0x0a637dc5, 0xa2c898a6],\n    [0x113f9804, 0xbef90dae], [0x1b710b35, 0x131c471b],\n    [0x28db77f5, 0x23047d84], [0x32caab7b, 0x40c72493],\n    [0x3c9ebe0a, 0x15c9bebc], [0x431d67c4, 0x9c100d4c],\n    [0x4cc5d4be, 0xcb3e42b6], [0x597f299c, 0xfc657e2a],\n    [0x5fcb6fab, 0x3ad6faec], [0x6c44198c, 0x4a475817]\n  ];\n\n  // initial hash states\n  _states = {};\n  _states['SHA-512'] = [\n    [0x6a09e667, 0xf3bcc908],\n    [0xbb67ae85, 0x84caa73b],\n    [0x3c6ef372, 0xfe94f82b],\n    [0xa54ff53a, 0x5f1d36f1],\n    [0x510e527f, 0xade682d1],\n    [0x9b05688c, 0x2b3e6c1f],\n    [0x1f83d9ab, 0xfb41bd6b],\n    [0x5be0cd19, 0x137e2179]\n  ];\n  _states['SHA-384'] = [\n    [0xcbbb9d5d, 0xc1059ed8],\n    [0x629a292a, 0x367cd507],\n    [0x9159015a, 0x3070dd17],\n    [0x152fecd8, 0xf70e5939],\n    [0x67332667, 0xffc00b31],\n    [0x8eb44a87, 0x68581511],\n    [0xdb0c2e0d, 0x64f98fa7],\n    [0x47b5481d, 0xbefa4fa4]\n  ];\n  _states['SHA-512/256'] = [\n    [0x22312194, 0xFC2BF72C],\n    [0x9F555FA3, 0xC84C64C2],\n    [0x2393B86B, 0x6F53B151],\n    [0x96387719, 0x5940EABD],\n    [0x96283EE2, 0xA88EFFE3],\n    [0xBE5E1E25, 0x53863992],\n    [0x2B0199FC, 0x2C85B8AA],\n    [0x0EB72DDC, 0x81C52CA2]\n  ];\n  _states['SHA-512/224'] = [\n    [0x8C3D37C8, 0x19544DA2],\n    [0x73E19966, 0x89DCD4D6],\n    [0x1DFAB7AE, 0x32FF9C82],\n    [0x679DD514, 0x582F9FCF],\n    [0x0F6D2B69, 0x7BD44DA8],\n    [0x77E36F73, 0x04C48942],\n    [0x3F9D85A8, 0x6A1D36C8],\n    [0x1112E6AD, 0x91D692A1]\n  ];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-512 state with the given byte buffer.\n *\n * @param s the SHA-512 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (128 byte) chunks\n  var t1_hi, t1_lo;\n  var t2_hi, t2_lo;\n  var s0_hi, s0_lo;\n  var s1_hi, s1_lo;\n  var ch_hi, ch_lo;\n  var maj_hi, maj_lo;\n  var a_hi, a_lo;\n  var b_hi, b_lo;\n  var c_hi, c_lo;\n  var d_hi, d_lo;\n  var e_hi, e_lo;\n  var f_hi, f_lo;\n  var g_hi, g_lo;\n  var h_hi, h_lo;\n  var i, hi, lo, w2, w7, w15, w16;\n  var len = bytes.length();\n  while(len >= 128) {\n    // the w array will be populated with sixteen 64-bit big-endian words\n    // and then extended into 64 64-bit words according to SHA-512\n    for(i = 0; i < 16; ++i) {\n      w[i][0] = bytes.getInt32() >>> 0;\n      w[i][1] = bytes.getInt32() >>> 0;\n    }\n    for(; i < 80; ++i) {\n      // for word 2 words ago: ROTR 19(x) ^ ROTR 61(x) ^ SHR 6(x)\n      w2 = w[i - 2];\n      hi = w2[0];\n      lo = w2[1];\n\n      // high bits\n      t1_hi = (\n        ((hi >>> 19) | (lo << 13)) ^ // ROTR 19\n        ((lo >>> 29) | (hi << 3)) ^ // ROTR 61/(swap + ROTR 29)\n        (hi >>> 6)) >>> 0; // SHR 6\n      // low bits\n      t1_lo = (\n        ((hi << 13) | (lo >>> 19)) ^ // ROTR 19\n        ((lo << 3) | (hi >>> 29)) ^ // ROTR 61/(swap + ROTR 29)\n        ((hi << 26) | (lo >>> 6))) >>> 0; // SHR 6\n\n      // for word 15 words ago: ROTR 1(x) ^ ROTR 8(x) ^ SHR 7(x)\n      w15 = w[i - 15];\n      hi = w15[0];\n      lo = w15[1];\n\n      // high bits\n      t2_hi = (\n        ((hi >>> 1) | (lo << 31)) ^ // ROTR 1\n        ((hi >>> 8) | (lo << 24)) ^ // ROTR 8\n        (hi >>> 7)) >>> 0; // SHR 7\n      // low bits\n      t2_lo = (\n        ((hi << 31) | (lo >>> 1)) ^ // ROTR 1\n        ((hi << 24) | (lo >>> 8)) ^ // ROTR 8\n        ((hi << 25) | (lo >>> 7))) >>> 0; // SHR 7\n\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^64 (carry lo overflow)\n      w7 = w[i - 7];\n      w16 = w[i - 16];\n      lo = (t1_lo + w7[1] + t2_lo + w16[1]);\n      w[i][0] = (t1_hi + w7[0] + t2_hi + w16[0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      w[i][1] = lo >>> 0;\n    }\n\n    // initialize hash value for this chunk\n    a_hi = s[0][0];\n    a_lo = s[0][1];\n    b_hi = s[1][0];\n    b_lo = s[1][1];\n    c_hi = s[2][0];\n    c_lo = s[2][1];\n    d_hi = s[3][0];\n    d_lo = s[3][1];\n    e_hi = s[4][0];\n    e_lo = s[4][1];\n    f_hi = s[5][0];\n    f_lo = s[5][1];\n    g_hi = s[6][0];\n    g_lo = s[6][1];\n    h_hi = s[7][0];\n    h_lo = s[7][1];\n\n    // round function\n    for(i = 0; i < 80; ++i) {\n      // Sum1(e) = ROTR 14(e) ^ ROTR 18(e) ^ ROTR 41(e)\n      s1_hi = (\n        ((e_hi >>> 14) | (e_lo << 18)) ^ // ROTR 14\n        ((e_hi >>> 18) | (e_lo << 14)) ^ // ROTR 18\n        ((e_lo >>> 9) | (e_hi << 23))) >>> 0; // ROTR 41/(swap + ROTR 9)\n      s1_lo = (\n        ((e_hi << 18) | (e_lo >>> 14)) ^ // ROTR 14\n        ((e_hi << 14) | (e_lo >>> 18)) ^ // ROTR 18\n        ((e_lo << 23) | (e_hi >>> 9))) >>> 0; // ROTR 41/(swap + ROTR 9)\n\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch_hi = (g_hi ^ (e_hi & (f_hi ^ g_hi))) >>> 0;\n      ch_lo = (g_lo ^ (e_lo & (f_lo ^ g_lo))) >>> 0;\n\n      // Sum0(a) = ROTR 28(a) ^ ROTR 34(a) ^ ROTR 39(a)\n      s0_hi = (\n        ((a_hi >>> 28) | (a_lo << 4)) ^ // ROTR 28\n        ((a_lo >>> 2) | (a_hi << 30)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo >>> 7) | (a_hi << 25))) >>> 0; // ROTR 39/(swap + ROTR 7)\n      s0_lo = (\n        ((a_hi << 4) | (a_lo >>> 28)) ^ // ROTR 28\n        ((a_lo << 30) | (a_hi >>> 2)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo << 25) | (a_hi >>> 7))) >>> 0; // ROTR 39/(swap + ROTR 7)\n\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj_hi = ((a_hi & b_hi) | (c_hi & (a_hi ^ b_hi))) >>> 0;\n      maj_lo = ((a_lo & b_lo) | (c_lo & (a_lo ^ b_lo))) >>> 0;\n\n      // main algorithm\n      // t1 = (h + s1 + ch + _k[i] + _w[i]) modulo 2^64 (carry lo overflow)\n      lo = (h_lo + s1_lo + ch_lo + _k[i][1] + w[i][1]);\n      t1_hi = (h_hi + s1_hi + ch_hi + _k[i][0] + w[i][0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      t1_lo = lo >>> 0;\n\n      // t2 = s0 + maj modulo 2^64 (carry lo overflow)\n      lo = s0_lo + maj_lo;\n      t2_hi = (s0_hi + maj_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      t2_lo = lo >>> 0;\n\n      h_hi = g_hi;\n      h_lo = g_lo;\n\n      g_hi = f_hi;\n      g_lo = f_lo;\n\n      f_hi = e_hi;\n      f_lo = e_lo;\n\n      // e = (d + t1) modulo 2^64 (carry lo overflow)\n      lo = d_lo + t1_lo;\n      e_hi = (d_hi + t1_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      e_lo = lo >>> 0;\n\n      d_hi = c_hi;\n      d_lo = c_lo;\n\n      c_hi = b_hi;\n      c_lo = b_lo;\n\n      b_hi = a_hi;\n      b_lo = a_lo;\n\n      // a = (t1 + t2) modulo 2^64 (carry lo overflow)\n      lo = t1_lo + t2_lo;\n      a_hi = (t1_hi + t2_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      a_lo = lo >>> 0;\n    }\n\n    // update hash state (additional modulo 2^64)\n    lo = s[0][1] + a_lo;\n    s[0][0] = (s[0][0] + a_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[0][1] = lo >>> 0;\n\n    lo = s[1][1] + b_lo;\n    s[1][0] = (s[1][0] + b_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[1][1] = lo >>> 0;\n\n    lo = s[2][1] + c_lo;\n    s[2][0] = (s[2][0] + c_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[2][1] = lo >>> 0;\n\n    lo = s[3][1] + d_lo;\n    s[3][0] = (s[3][0] + d_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[3][1] = lo >>> 0;\n\n    lo = s[4][1] + e_lo;\n    s[4][0] = (s[4][0] + e_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[4][1] = lo >>> 0;\n\n    lo = s[5][1] + f_lo;\n    s[5][0] = (s[5][0] + f_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[5][1] = lo >>> 0;\n\n    lo = s[6][1] + g_lo;\n    s[6][0] = (s[6][0] + g_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[6][1] = lo >>> 0;\n\n    lo = s[7][1] + h_lo;\n    s[7][0] = (s[7][0] + h_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[7][1] = lo >>> 0;\n\n    len -= 128;\n  }\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/sha512.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/ssh.js":function(module,exports,__webpack_require__){eval("/**\n * Functions to output keys in SSH-friendly formats.\n *\n * This is part of the Forge project which may be used under the terms of\n * either the BSD License or the GNU General Public License (GPL) Version 2.\n *\n * See: https://github.com/digitalbazaar/forge/blob/cbebca3780658703d925b61b2caffb1d263a6c1d/LICENSE\n *\n * @author https://github.com/shellac\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./aes */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/aes.js\");\n__webpack_require__(/*! ./hmac */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/hmac.js\");\n__webpack_require__(/*! ./md5 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md5.js\");\n__webpack_require__(/*! ./sha1 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/sha1.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\nvar ssh = module.exports = forge.ssh = forge.ssh || {};\n\n/**\n * Encodes (and optionally encrypts) a private RSA key as a Putty PPK file.\n *\n * @param privateKey the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n * @param comment a comment to include in the key file.\n *\n * @return the PPK file as a string.\n */\nssh.privateKeyToPutty = function(privateKey, passphrase, comment) {\n  comment = comment || '';\n  passphrase = passphrase || '';\n  var algorithm = 'ssh-rsa';\n  var encryptionAlgorithm = (passphrase === '') ? 'none' : 'aes256-cbc';\n\n  var ppk = 'PuTTY-User-Key-File-2: ' + algorithm + '\\r\\n';\n  ppk += 'Encryption: ' + encryptionAlgorithm + '\\r\\n';\n  ppk += 'Comment: ' + comment + '\\r\\n';\n\n  // public key into buffer for ppk\n  var pubbuffer = forge.util.createBuffer();\n  _addStringToBuffer(pubbuffer, algorithm);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.e);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.n);\n\n  // write public key\n  var pub = forge.util.encode64(pubbuffer.bytes(), 64);\n  var length = Math.floor(pub.length / 66) + 1; // 66 = 64 + \\r\\n\n  ppk += 'Public-Lines: ' + length + '\\r\\n';\n  ppk += pub;\n\n  // private key into a buffer\n  var privbuffer = forge.util.createBuffer();\n  _addBigIntegerToBuffer(privbuffer, privateKey.d);\n  _addBigIntegerToBuffer(privbuffer, privateKey.p);\n  _addBigIntegerToBuffer(privbuffer, privateKey.q);\n  _addBigIntegerToBuffer(privbuffer, privateKey.qInv);\n\n  // optionally encrypt the private key\n  var priv;\n  if(!passphrase) {\n    // use the unencrypted buffer\n    priv = forge.util.encode64(privbuffer.bytes(), 64);\n  } else {\n    // encrypt RSA key using passphrase\n    var encLen = privbuffer.length() + 16 - 1;\n    encLen -= encLen % 16;\n\n    // pad private key with sha1-d data -- needs to be a multiple of 16\n    var padding = _sha1(privbuffer.bytes());\n\n    padding.truncate(padding.length() - encLen + privbuffer.length());\n    privbuffer.putBuffer(padding);\n\n    var aeskey = forge.util.createBuffer();\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x00', passphrase));\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x01', passphrase));\n\n    // encrypt some bytes using CBC mode\n    // key is 40 bytes, so truncate *by* 8 bytes\n    var cipher = forge.aes.createEncryptionCipher(aeskey.truncate(8), 'CBC');\n    cipher.start(forge.util.createBuffer().fillWithByte(0, 16));\n    cipher.update(privbuffer.copy());\n    cipher.finish();\n    var encrypted = cipher.output;\n\n    // Note: this appears to differ from Putty -- is forge wrong, or putty?\n    // due to padding we finish as an exact multiple of 16\n    encrypted.truncate(16); // all padding\n\n    priv = forge.util.encode64(encrypted.bytes(), 64);\n  }\n\n  // output private key\n  length = Math.floor(priv.length / 66) + 1; // 64 + \\r\\n\n  ppk += '\\r\\nPrivate-Lines: ' + length + '\\r\\n';\n  ppk += priv;\n\n  // MAC\n  var mackey = _sha1('putty-private-key-file-mac-key', passphrase);\n\n  var macbuffer = forge.util.createBuffer();\n  _addStringToBuffer(macbuffer, algorithm);\n  _addStringToBuffer(macbuffer, encryptionAlgorithm);\n  _addStringToBuffer(macbuffer, comment);\n  macbuffer.putInt32(pubbuffer.length());\n  macbuffer.putBuffer(pubbuffer);\n  macbuffer.putInt32(privbuffer.length());\n  macbuffer.putBuffer(privbuffer);\n\n  var hmac = forge.hmac.create();\n  hmac.start('sha1', mackey);\n  hmac.update(macbuffer.bytes());\n\n  ppk += '\\r\\nPrivate-MAC: ' + hmac.digest().toHex() + '\\r\\n';\n\n  return ppk;\n};\n\n/**\n * Encodes a public RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param comment a comment.\n *\n * @return the public key in OpenSSH format.\n */\nssh.publicKeyToOpenSSH = function(key, comment) {\n  var type = 'ssh-rsa';\n  comment = comment || '';\n\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  return type + ' ' + forge.util.encode64(buffer.bytes()) + ' ' + comment;\n};\n\n/**\n * Encodes a private RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n *\n * @return the public key in OpenSSH format.\n */\nssh.privateKeyToOpenSSH = function(privateKey, passphrase) {\n  if(!passphrase) {\n    return forge.pki.privateKeyToPem(privateKey);\n  }\n  // OpenSSH private key is just a legacy format, it seems\n  return forge.pki.encryptRsaPrivateKey(privateKey, passphrase,\n    {legacy: true, algorithm: 'aes128'});\n};\n\n/**\n * Gets the SSH fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.md5).\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\nssh.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.md5.create();\n\n  var type = 'ssh-rsa';\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  // hash public key bytes\n  md.start();\n  md.update(buffer.getBytes());\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a big integer.\n */\nfunction _addBigIntegerToBuffer(buffer, val) {\n  var hexVal = val.toString(16);\n  // ensure 2s complement +ve\n  if(hexVal[0] >= '8') {\n    hexVal = '00' + hexVal;\n  }\n  var bytes = forge.util.hexToBytes(hexVal);\n  buffer.putInt32(bytes.length);\n  buffer.putBytes(bytes);\n}\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a string.\n */\nfunction _addStringToBuffer(buffer, val) {\n  buffer.putInt32(val.length);\n  buffer.putString(val);\n}\n\n/**\n * Hashes the arguments into one value using SHA-1.\n *\n * @return the sha1 hash of the provided arguments.\n */\nfunction _sha1() {\n  var sha = forge.md.sha1.create();\n  var num = arguments.length;\n  for (var i = 0; i < num; ++i) {\n    sha.update(arguments[i]);\n  }\n  return sha.digest();\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/ssh.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/task.js":function(module,exports,__webpack_require__){eval("/**\n * Support for concurrent task management and synchronization in web\n * applications.\n *\n * @author Dave Longley\n * @author David I. Lehn <dlehn@digitalbazaar.com>\n *\n * Copyright (c) 2009-2013 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./debug */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/debug.js\");\n__webpack_require__(/*! ./log */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/log.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\n// logging category\nvar cat = 'forge.task';\n\n// verbose level\n// 0: off, 1: a little, 2: a whole lot\n// Verbose debug logging is surrounded by a level check to avoid the\n// performance issues with even calling the logging code regardless if it\n// is actually logged.  For performance reasons this should not be set to 2\n// for production use.\n// ex: if(sVL >= 2) forge.log.verbose(....)\nvar sVL = 0;\n\n// track tasks for debugging\nvar sTasks = {};\nvar sNextTaskId = 0;\n// debug access\nforge.debug.set(cat, 'tasks', sTasks);\n\n// a map of task type to task queue\nvar sTaskQueues = {};\n// debug access\nforge.debug.set(cat, 'queues', sTaskQueues);\n\n// name for unnamed tasks\nvar sNoTaskName = '?';\n\n// maximum number of doNext() recursions before a context swap occurs\n// FIXME: might need to tweak this based on the browser\nvar sMaxRecursions = 30;\n\n// time slice for doing tasks before a context swap occurs\n// FIXME: might need to tweak this based on the browser\nvar sTimeSlice = 20;\n\n/**\n * Task states.\n *\n * READY: ready to start processing\n * RUNNING: task or a subtask is running\n * BLOCKED: task is waiting to acquire N permits to continue\n * SLEEPING: task is sleeping for a period of time\n * DONE: task is done\n * ERROR: task has an error\n */\nvar READY = 'ready';\nvar RUNNING = 'running';\nvar BLOCKED = 'blocked';\nvar SLEEPING = 'sleeping';\nvar DONE = 'done';\nvar ERROR = 'error';\n\n/**\n * Task actions.  Used to control state transitions.\n *\n * STOP: stop processing\n * START: start processing tasks\n * BLOCK: block task from continuing until 1 or more permits are released\n * UNBLOCK: release one or more permits\n * SLEEP: sleep for a period of time\n * WAKEUP: wakeup early from SLEEPING state\n * CANCEL: cancel further tasks\n * FAIL: a failure occured\n */\nvar STOP = 'stop';\nvar START = 'start';\nvar BLOCK = 'block';\nvar UNBLOCK = 'unblock';\nvar SLEEP = 'sleep';\nvar WAKEUP = 'wakeup';\nvar CANCEL = 'cancel';\nvar FAIL = 'fail';\n\n/**\n * State transition table.\n *\n * nextState = sStateTable[currentState][action]\n */\nvar sStateTable = {};\n\nsStateTable[READY] = {};\nsStateTable[READY][STOP] = READY;\nsStateTable[READY][START] = RUNNING;\nsStateTable[READY][CANCEL] = DONE;\nsStateTable[READY][FAIL] = ERROR;\n\nsStateTable[RUNNING] = {};\nsStateTable[RUNNING][STOP] = READY;\nsStateTable[RUNNING][START] = RUNNING;\nsStateTable[RUNNING][BLOCK] = BLOCKED;\nsStateTable[RUNNING][UNBLOCK] = RUNNING;\nsStateTable[RUNNING][SLEEP] = SLEEPING;\nsStateTable[RUNNING][WAKEUP] = RUNNING;\nsStateTable[RUNNING][CANCEL] = DONE;\nsStateTable[RUNNING][FAIL] = ERROR;\n\nsStateTable[BLOCKED] = {};\nsStateTable[BLOCKED][STOP] = BLOCKED;\nsStateTable[BLOCKED][START] = BLOCKED;\nsStateTable[BLOCKED][BLOCK] = BLOCKED;\nsStateTable[BLOCKED][UNBLOCK] = BLOCKED;\nsStateTable[BLOCKED][SLEEP] = BLOCKED;\nsStateTable[BLOCKED][WAKEUP] = BLOCKED;\nsStateTable[BLOCKED][CANCEL] = DONE;\nsStateTable[BLOCKED][FAIL] = ERROR;\n\nsStateTable[SLEEPING] = {};\nsStateTable[SLEEPING][STOP] = SLEEPING;\nsStateTable[SLEEPING][START] = SLEEPING;\nsStateTable[SLEEPING][BLOCK] = SLEEPING;\nsStateTable[SLEEPING][UNBLOCK] = SLEEPING;\nsStateTable[SLEEPING][SLEEP] = SLEEPING;\nsStateTable[SLEEPING][WAKEUP] = SLEEPING;\nsStateTable[SLEEPING][CANCEL] = DONE;\nsStateTable[SLEEPING][FAIL] = ERROR;\n\nsStateTable[DONE] = {};\nsStateTable[DONE][STOP] = DONE;\nsStateTable[DONE][START] = DONE;\nsStateTable[DONE][BLOCK] = DONE;\nsStateTable[DONE][UNBLOCK] = DONE;\nsStateTable[DONE][SLEEP] = DONE;\nsStateTable[DONE][WAKEUP] = DONE;\nsStateTable[DONE][CANCEL] = DONE;\nsStateTable[DONE][FAIL] = ERROR;\n\nsStateTable[ERROR] = {};\nsStateTable[ERROR][STOP] = ERROR;\nsStateTable[ERROR][START] = ERROR;\nsStateTable[ERROR][BLOCK] = ERROR;\nsStateTable[ERROR][UNBLOCK] = ERROR;\nsStateTable[ERROR][SLEEP] = ERROR;\nsStateTable[ERROR][WAKEUP] = ERROR;\nsStateTable[ERROR][CANCEL] = ERROR;\nsStateTable[ERROR][FAIL] = ERROR;\n\n/**\n * Creates a new task.\n *\n * @param options options for this task\n *   run: the run function for the task (required)\n *   name: the run function for the task (optional)\n *   parent: parent of this task (optional)\n *\n * @return the empty task.\n */\nvar Task = function(options) {\n  // task id\n  this.id = -1;\n\n  // task name\n  this.name = options.name || sNoTaskName;\n\n  // task has no parent\n  this.parent = options.parent || null;\n\n  // save run function\n  this.run = options.run;\n\n  // create a queue of subtasks to run\n  this.subtasks = [];\n\n  // error flag\n  this.error = false;\n\n  // state of the task\n  this.state = READY;\n\n  // number of times the task has been blocked (also the number\n  // of permits needed to be released to continue running)\n  this.blocks = 0;\n\n  // timeout id when sleeping\n  this.timeoutId = null;\n\n  // no swap time yet\n  this.swapTime = null;\n\n  // no user data\n  this.userData = null;\n\n  // initialize task\n  // FIXME: deal with overflow\n  this.id = sNextTaskId++;\n  sTasks[this.id] = this;\n  if(sVL >= 1) {\n    forge.log.verbose(cat, '[%s][%s] init', this.id, this.name, this);\n  }\n};\n\n/**\n * Logs debug information on this task and the system state.\n */\nTask.prototype.debug = function(msg) {\n  msg = msg || '';\n  forge.log.debug(cat, msg,\n    '[%s][%s] task:', this.id, this.name, this,\n    'subtasks:', this.subtasks.length,\n    'queue:', sTaskQueues);\n};\n\n/**\n * Adds a subtask to run after task.doNext() or task.fail() is called.\n *\n * @param name human readable name for this task (optional).\n * @param subrun a function to run that takes the current task as\n *          its first parameter.\n *\n * @return the current task (useful for chaining next() calls).\n */\nTask.prototype.next = function(name, subrun) {\n  // juggle parameters if it looks like no name is given\n  if(typeof(name) === 'function') {\n    subrun = name;\n\n    // inherit parent's name\n    name = this.name;\n  }\n  // create subtask, set parent to this task, propagate callbacks\n  var subtask = new Task({\n    run: subrun,\n    name: name,\n    parent: this\n  });\n  // start subtasks running\n  subtask.state = RUNNING;\n  subtask.type = this.type;\n  subtask.successCallback = this.successCallback || null;\n  subtask.failureCallback = this.failureCallback || null;\n\n  // queue a new subtask\n  this.subtasks.push(subtask);\n\n  return this;\n};\n\n/**\n * Adds subtasks to run in parallel after task.doNext() or task.fail()\n * is called.\n *\n * @param name human readable name for this task (optional).\n * @param subrun functions to run that take the current task as\n *          their first parameter.\n *\n * @return the current task (useful for chaining next() calls).\n */\nTask.prototype.parallel = function(name, subrun) {\n  // juggle parameters if it looks like no name is given\n  if(forge.util.isArray(name)) {\n    subrun = name;\n\n    // inherit parent's name\n    name = this.name;\n  }\n  // Wrap parallel tasks in a regular task so they are started at the\n  // proper time.\n  return this.next(name, function(task) {\n    // block waiting for subtasks\n    var ptask = task;\n    ptask.block(subrun.length);\n\n    // we pass the iterator from the loop below as a parameter\n    // to a function because it is otherwise included in the\n    // closure and changes as the loop changes -- causing i\n    // to always be set to its highest value\n    var startParallelTask = function(pname, pi) {\n      forge.task.start({\n        type: pname,\n        run: function(task) {\n           subrun[pi](task);\n        },\n        success: function(task) {\n           ptask.unblock();\n        },\n        failure: function(task) {\n           ptask.unblock();\n        }\n      });\n    };\n\n    for(var i = 0; i < subrun.length; i++) {\n      // Type must be unique so task starts in parallel:\n      //    name + private string + task id + sub-task index\n      // start tasks in parallel and unblock when the finish\n      var pname = name + '__parallel-' + task.id + '-' + i;\n      var pi = i;\n      startParallelTask(pname, pi);\n    }\n  });\n};\n\n/**\n * Stops a running task.\n */\nTask.prototype.stop = function() {\n  this.state = sStateTable[this.state][STOP];\n};\n\n/**\n * Starts running a task.\n */\nTask.prototype.start = function() {\n  this.error = false;\n  this.state = sStateTable[this.state][START];\n\n  // try to restart\n  if(this.state === RUNNING) {\n    this.start = new Date();\n    this.run(this);\n    runNext(this, 0);\n  }\n};\n\n/**\n * Blocks a task until it one or more permits have been released. The\n * task will not resume until the requested number of permits have\n * been released with call(s) to unblock().\n *\n * @param n number of permits to wait for(default: 1).\n */\nTask.prototype.block = function(n) {\n  n = typeof(n) === 'undefined' ? 1 : n;\n  this.blocks += n;\n  if(this.blocks > 0) {\n    this.state = sStateTable[this.state][BLOCK];\n  }\n};\n\n/**\n * Releases a permit to unblock a task. If a task was blocked by\n * requesting N permits via block(), then it will only continue\n * running once enough permits have been released via unblock() calls.\n *\n * If multiple processes need to synchronize with a single task then\n * use a condition variable (see forge.task.createCondition). It is\n * an error to unblock a task more times than it has been blocked.\n *\n * @param n number of permits to release (default: 1).\n *\n * @return the current block count (task is unblocked when count is 0)\n */\nTask.prototype.unblock = function(n) {\n  n = typeof(n) === 'undefined' ? 1 : n;\n  this.blocks -= n;\n  if(this.blocks === 0 && this.state !== DONE) {\n    this.state = RUNNING;\n    runNext(this, 0);\n  }\n  return this.blocks;\n};\n\n/**\n * Sleep for a period of time before resuming tasks.\n *\n * @param n number of milliseconds to sleep (default: 0).\n */\nTask.prototype.sleep = function(n) {\n  n = typeof(n) === 'undefined' ? 0 : n;\n  this.state = sStateTable[this.state][SLEEP];\n  var self = this;\n  this.timeoutId = setTimeout(function() {\n    self.timeoutId = null;\n    self.state = RUNNING;\n    runNext(self, 0);\n  }, n);\n};\n\n/**\n * Waits on a condition variable until notified. The next task will\n * not be scheduled until notification. A condition variable can be\n * created with forge.task.createCondition().\n *\n * Once cond.notify() is called, the task will continue.\n *\n * @param cond the condition variable to wait on.\n */\nTask.prototype.wait = function(cond) {\n  cond.wait(this);\n};\n\n/**\n * If sleeping, wakeup and continue running tasks.\n */\nTask.prototype.wakeup = function() {\n  if(this.state === SLEEPING) {\n    cancelTimeout(this.timeoutId);\n    this.timeoutId = null;\n    this.state = RUNNING;\n    runNext(this, 0);\n  }\n};\n\n/**\n * Cancel all remaining subtasks of this task.\n */\nTask.prototype.cancel = function() {\n  this.state = sStateTable[this.state][CANCEL];\n  // remove permits needed\n  this.permitsNeeded = 0;\n  // cancel timeouts\n  if(this.timeoutId !== null) {\n    cancelTimeout(this.timeoutId);\n    this.timeoutId = null;\n  }\n  // remove subtasks\n  this.subtasks = [];\n};\n\n/**\n * Finishes this task with failure and sets error flag. The entire\n * task will be aborted unless the next task that should execute\n * is passed as a parameter. This allows levels of subtasks to be\n * skipped. For instance, to abort only this tasks's subtasks, then\n * call fail(task.parent). To abort this task's subtasks and its\n * parent's subtasks, call fail(task.parent.parent). To abort\n * all tasks and simply call the task callback, call fail() or\n * fail(null).\n *\n * The task callback (success or failure) will always, eventually, be\n * called.\n *\n * @param next the task to continue at, or null to abort entirely.\n */\nTask.prototype.fail = function(next) {\n  // set error flag\n  this.error = true;\n\n  // finish task\n  finish(this, true);\n\n  if(next) {\n    // propagate task info\n    next.error = this.error;\n    next.swapTime = this.swapTime;\n    next.userData = this.userData;\n\n    // do next task as specified\n    runNext(next, 0);\n  } else {\n    if(this.parent !== null) {\n      // finish root task (ensures it is removed from task queue)\n      var parent = this.parent;\n      while(parent.parent !== null) {\n        // propagate task info\n        parent.error = this.error;\n        parent.swapTime = this.swapTime;\n        parent.userData = this.userData;\n        parent = parent.parent;\n      }\n      finish(parent, true);\n    }\n\n    // call failure callback if one exists\n    if(this.failureCallback) {\n      this.failureCallback(this);\n    }\n  }\n};\n\n/**\n * Asynchronously start a task.\n *\n * @param task the task to start.\n */\nvar start = function(task) {\n  task.error = false;\n  task.state = sStateTable[task.state][START];\n  setTimeout(function() {\n    if(task.state === RUNNING) {\n      task.swapTime = +new Date();\n      task.run(task);\n      runNext(task, 0);\n    }\n  }, 0);\n};\n\n/**\n * Run the next subtask or finish this task.\n *\n * @param task the task to process.\n * @param recurse the recursion count.\n */\nvar runNext = function(task, recurse) {\n  // get time since last context swap (ms), if enough time has passed set\n  // swap to true to indicate that doNext was performed asynchronously\n  // also, if recurse is too high do asynchronously\n  var swap =\n    (recurse > sMaxRecursions) ||\n    (+new Date() - task.swapTime) > sTimeSlice;\n\n  var doNext = function(recurse) {\n    recurse++;\n    if(task.state === RUNNING) {\n      if(swap) {\n        // update swap time\n        task.swapTime = +new Date();\n      }\n\n      if(task.subtasks.length > 0) {\n        // run next subtask\n        var subtask = task.subtasks.shift();\n        subtask.error = task.error;\n        subtask.swapTime = task.swapTime;\n        subtask.userData = task.userData;\n        subtask.run(subtask);\n        if(!subtask.error) {\n           runNext(subtask, recurse);\n        }\n      } else {\n        finish(task);\n\n        if(!task.error) {\n          // chain back up and run parent\n          if(task.parent !== null) {\n            // propagate task info\n            task.parent.error = task.error;\n            task.parent.swapTime = task.swapTime;\n            task.parent.userData = task.userData;\n\n            // no subtasks left, call run next subtask on parent\n            runNext(task.parent, recurse);\n          }\n        }\n      }\n    }\n  };\n\n  if(swap) {\n    // we're swapping, so run asynchronously\n    setTimeout(doNext, 0);\n  } else {\n    // not swapping, so run synchronously\n    doNext(recurse);\n  }\n};\n\n/**\n * Finishes a task and looks for the next task in the queue to start.\n *\n * @param task the task to finish.\n * @param suppressCallbacks true to suppress callbacks.\n */\nvar finish = function(task, suppressCallbacks) {\n  // subtask is now done\n  task.state = DONE;\n\n  delete sTasks[task.id];\n  if(sVL >= 1) {\n    forge.log.verbose(cat, '[%s][%s] finish',\n      task.id, task.name, task);\n  }\n\n  // only do queue processing for root tasks\n  if(task.parent === null) {\n    // report error if queue is missing\n    if(!(task.type in sTaskQueues)) {\n      forge.log.error(cat,\n        '[%s][%s] task queue missing [%s]',\n        task.id, task.name, task.type);\n    } else if(sTaskQueues[task.type].length === 0) {\n      // report error if queue is empty\n      forge.log.error(cat,\n        '[%s][%s] task queue empty [%s]',\n        task.id, task.name, task.type);\n    } else if(sTaskQueues[task.type][0] !== task) {\n      // report error if this task isn't the first in the queue\n      forge.log.error(cat,\n        '[%s][%s] task not first in queue [%s]',\n        task.id, task.name, task.type);\n    } else {\n      // remove ourselves from the queue\n      sTaskQueues[task.type].shift();\n      // clean up queue if it is empty\n      if(sTaskQueues[task.type].length === 0) {\n        if(sVL >= 1) {\n          forge.log.verbose(cat, '[%s][%s] delete queue [%s]',\n            task.id, task.name, task.type);\n        }\n        /* Note: Only a task can delete a queue of its own type. This\n         is used as a way to synchronize tasks. If a queue for a certain\n         task type exists, then a task of that type is running.\n         */\n        delete sTaskQueues[task.type];\n      } else {\n        // dequeue the next task and start it\n        if(sVL >= 1) {\n          forge.log.verbose(cat,\n            '[%s][%s] queue start next [%s] remain:%s',\n            task.id, task.name, task.type,\n            sTaskQueues[task.type].length);\n        }\n        sTaskQueues[task.type][0].start();\n      }\n    }\n\n    if(!suppressCallbacks) {\n      // call final callback if one exists\n      if(task.error && task.failureCallback) {\n        task.failureCallback(task);\n      } else if(!task.error && task.successCallback) {\n        task.successCallback(task);\n      }\n    }\n  }\n};\n\n/* Tasks API */\nmodule.exports = forge.task = forge.task || {};\n\n/**\n * Starts a new task that will run the passed function asynchronously.\n *\n * In order to finish the task, either task.doNext() or task.fail()\n * *must* be called.\n *\n * The task must have a type (a string identifier) that can be used to\n * synchronize it with other tasks of the same type. That type can also\n * be used to cancel tasks that haven't started yet.\n *\n * To start a task, the following object must be provided as a parameter\n * (each function takes a task object as its first parameter):\n *\n * {\n *   type: the type of task.\n *   run: the function to run to execute the task.\n *   success: a callback to call when the task succeeds (optional).\n *   failure: a callback to call when the task fails (optional).\n * }\n *\n * @param options the object as described above.\n */\nforge.task.start = function(options) {\n  // create a new task\n  var task = new Task({\n    run: options.run,\n    name: options.name || sNoTaskName\n  });\n  task.type = options.type;\n  task.successCallback = options.success || null;\n  task.failureCallback = options.failure || null;\n\n  // append the task onto the appropriate queue\n  if(!(task.type in sTaskQueues)) {\n    if(sVL >= 1) {\n      forge.log.verbose(cat, '[%s][%s] create queue [%s]',\n        task.id, task.name, task.type);\n    }\n    // create the queue with the new task\n    sTaskQueues[task.type] = [task];\n    start(task);\n  } else {\n    // push the task onto the queue, it will be run after a task\n    // with the same type completes\n    sTaskQueues[options.type].push(task);\n  }\n};\n\n/**\n * Cancels all tasks of the given type that haven't started yet.\n *\n * @param type the type of task to cancel.\n */\nforge.task.cancel = function(type) {\n  // find the task queue\n  if(type in sTaskQueues) {\n    // empty all but the current task from the queue\n    sTaskQueues[type] = [sTaskQueues[type][0]];\n  }\n};\n\n/**\n * Creates a condition variable to synchronize tasks. To make a task wait\n * on the condition variable, call task.wait(condition). To notify all\n * tasks that are waiting, call condition.notify().\n *\n * @return the condition variable.\n */\nforge.task.createCondition = function() {\n  var cond = {\n    // all tasks that are blocked\n    tasks: {}\n  };\n\n  /**\n   * Causes the given task to block until notify is called. If the task\n   * is already waiting on this condition then this is a no-op.\n   *\n   * @param task the task to cause to wait.\n   */\n  cond.wait = function(task) {\n    // only block once\n    if(!(task.id in cond.tasks)) {\n       task.block();\n       cond.tasks[task.id] = task;\n    }\n  };\n\n  /**\n   * Notifies all waiting tasks to wake up.\n   */\n  cond.notify = function() {\n    // since unblock() will run the next task from here, make sure to\n    // clear the condition's blocked task list before unblocking\n    var tmp = cond.tasks;\n    cond.tasks = {};\n    for(var id in tmp) {\n      tmp[id].unblock();\n    }\n  };\n\n  return cond;\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/task.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/tls.js":function(module,exports,__webpack_require__){eval("/**\n * A Javascript implementation of Transport Layer Security (TLS).\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n *\n * The TLS Handshake Protocol involves the following steps:\n *\n * - Exchange hello messages to agree on algorithms, exchange random values,\n * and check for session resumption.\n *\n * - Exchange the necessary cryptographic parameters to allow the client and\n * server to agree on a premaster secret.\n *\n * - Exchange certificates and cryptographic information to allow the client\n * and server to authenticate themselves.\n *\n * - Generate a master secret from the premaster secret and exchanged random\n * values.\n *\n * - Provide security parameters to the record layer.\n *\n * - Allow the client and server to verify that their peer has calculated the\n * same security parameters and that the handshake occurred without tampering\n * by an attacker.\n *\n * Up to 4 different messages may be sent during a key exchange. The server\n * certificate, the server key exchange, the client certificate, and the\n * client key exchange.\n *\n * A typical handshake (from the client's perspective).\n *\n * 1. Client sends ClientHello.\n * 2. Client receives ServerHello.\n * 3. Client receives optional Certificate.\n * 4. Client receives optional ServerKeyExchange.\n * 5. Client receives ServerHelloDone.\n * 6. Client sends optional Certificate.\n * 7. Client sends ClientKeyExchange.\n * 8. Client sends optional CertificateVerify.\n * 9. Client sends ChangeCipherSpec.\n * 10. Client sends Finished.\n * 11. Client receives ChangeCipherSpec.\n * 12. Client receives Finished.\n * 13. Client sends/receives application data.\n *\n * To reuse an existing session:\n *\n * 1. Client sends ClientHello with session ID for reuse.\n * 2. Client receives ServerHello with same session ID if reusing.\n * 3. Client receives ChangeCipherSpec message if reusing.\n * 4. Client receives Finished.\n * 5. Client sends ChangeCipherSpec.\n * 6. Client sends Finished.\n *\n * Note: Client ignores HelloRequest if in the middle of a handshake.\n *\n * Record Layer:\n *\n * The record layer fragments information blocks into TLSPlaintext records\n * carrying data in chunks of 2^14 bytes or less. Client message boundaries are\n * not preserved in the record layer (i.e., multiple client messages of the\n * same ContentType MAY be coalesced into a single TLSPlaintext record, or a\n * single message MAY be fragmented across several records).\n *\n * struct {\n *   uint8 major;\n *   uint8 minor;\n * } ProtocolVersion;\n *\n * struct {\n *   ContentType type;\n *   ProtocolVersion version;\n *   uint16 length;\n *   opaque fragment[TLSPlaintext.length];\n * } TLSPlaintext;\n *\n * type:\n *   The higher-level protocol used to process the enclosed fragment.\n *\n * version:\n *   The version of the protocol being employed. TLS Version 1.2 uses version\n *   {3, 3}. TLS Version 1.0 uses version {3, 1}. Note that a client that\n *   supports multiple versions of TLS may not know what version will be\n *   employed before it receives the ServerHello.\n *\n * length:\n *   The length (in bytes) of the following TLSPlaintext.fragment. The length\n *   MUST NOT exceed 2^14 = 16384 bytes.\n *\n * fragment:\n *   The application data. This data is transparent and treated as an\n *   independent block to be dealt with by the higher-level protocol specified\n *   by the type field.\n *\n * Implementations MUST NOT send zero-length fragments of Handshake, Alert, or\n * ChangeCipherSpec content types. Zero-length fragments of Application data\n * MAY be sent as they are potentially useful as a traffic analysis\n * countermeasure.\n *\n * Note: Data of different TLS record layer content types MAY be interleaved.\n * Application data is generally of lower precedence for transmission than\n * other content types. However, records MUST be delivered to the network in\n * the same order as they are protected by the record layer. Recipients MUST\n * receive and process interleaved application layer traffic during handshakes\n * subsequent to the first one on a connection.\n *\n * struct {\n *   ContentType type;       // same as TLSPlaintext.type\n *   ProtocolVersion version;// same as TLSPlaintext.version\n *   uint16 length;\n *   opaque fragment[TLSCompressed.length];\n * } TLSCompressed;\n *\n * length:\n *   The length (in bytes) of the following TLSCompressed.fragment.\n *   The length MUST NOT exceed 2^14 + 1024.\n *\n * fragment:\n *   The compressed form of TLSPlaintext.fragment.\n *\n * Note: A CompressionMethod.null operation is an identity operation; no fields\n * are altered. In this implementation, since no compression is supported,\n * uncompressed records are always the same as compressed records.\n *\n * Encryption Information:\n *\n * The encryption and MAC functions translate a TLSCompressed structure into a\n * TLSCiphertext. The decryption functions reverse the process. The MAC of the\n * record also includes a sequence number so that missing, extra, or repeated\n * messages are detectable.\n *\n * struct {\n *   ContentType type;\n *   ProtocolVersion version;\n *   uint16 length;\n *   select (SecurityParameters.cipher_type) {\n *     case stream: GenericStreamCipher;\n *     case block:  GenericBlockCipher;\n *     case aead:   GenericAEADCipher;\n *   } fragment;\n * } TLSCiphertext;\n *\n * type:\n *   The type field is identical to TLSCompressed.type.\n *\n * version:\n *   The version field is identical to TLSCompressed.version.\n *\n * length:\n *   The length (in bytes) of the following TLSCiphertext.fragment.\n *   The length MUST NOT exceed 2^14 + 2048.\n *\n * fragment:\n *   The encrypted form of TLSCompressed.fragment, with the MAC.\n *\n * Note: Only CBC Block Ciphers are supported by this implementation.\n *\n * The TLSCompressed.fragment structures are converted to/from block\n * TLSCiphertext.fragment structures.\n *\n * struct {\n *   opaque IV[SecurityParameters.record_iv_length];\n *   block-ciphered struct {\n *     opaque content[TLSCompressed.length];\n *     opaque MAC[SecurityParameters.mac_length];\n *     uint8 padding[GenericBlockCipher.padding_length];\n *     uint8 padding_length;\n *   };\n * } GenericBlockCipher;\n *\n * The MAC is generated as described in Section 6.2.3.1.\n *\n * IV:\n *   The Initialization Vector (IV) SHOULD be chosen at random, and MUST be\n *   unpredictable. Note that in versions of TLS prior to 1.1, there was no\n *   IV field, and the last ciphertext block of the previous record (the \"CBC\n *   residue\") was used as the IV. This was changed to prevent the attacks\n *   described in [CBCATT]. For block ciphers, the IV length is of length\n *   SecurityParameters.record_iv_length, which is equal to the\n *   SecurityParameters.block_size.\n *\n * padding:\n *   Padding that is added to force the length of the plaintext to be an\n *   integral multiple of the block cipher's block length. The padding MAY be\n *   any length up to 255 bytes, as long as it results in the\n *   TLSCiphertext.length being an integral multiple of the block length.\n *   Lengths longer than necessary might be desirable to frustrate attacks on\n *   a protocol that are based on analysis of the lengths of exchanged\n *   messages. Each uint8 in the padding data vector MUST be filled with the\n *   padding length value. The receiver MUST check this padding and MUST use\n *   the bad_record_mac alert to indicate padding errors.\n *\n * padding_length:\n *   The padding length MUST be such that the total size of the\n *   GenericBlockCipher structure is a multiple of the cipher's block length.\n *   Legal values range from zero to 255, inclusive. This length specifies the\n *   length of the padding field exclusive of the padding_length field itself.\n *\n * The encrypted data length (TLSCiphertext.length) is one more than the sum of\n * SecurityParameters.block_length, TLSCompressed.length,\n * SecurityParameters.mac_length, and padding_length.\n *\n * Example: If the block length is 8 bytes, the content length\n * (TLSCompressed.length) is 61 bytes, and the MAC length is 20 bytes, then the\n * length before padding is 82 bytes (this does not include the IV. Thus, the\n * padding length modulo 8 must be equal to 6 in order to make the total length\n * an even multiple of 8 bytes (the block length). The padding length can be\n * 6, 14, 22, and so on, through 254. If the padding length were the minimum\n * necessary, 6, the padding would be 6 bytes, each containing the value 6.\n * Thus, the last 8 octets of the GenericBlockCipher before block encryption\n * would be xx 06 06 06 06 06 06 06, where xx is the last octet of the MAC.\n *\n * Note: With block ciphers in CBC mode (Cipher Block Chaining), it is critical\n * that the entire plaintext of the record be known before any ciphertext is\n * transmitted. Otherwise, it is possible for the attacker to mount the attack\n * described in [CBCATT].\n *\n * Implementation note: Canvel et al. [CBCTIME] have demonstrated a timing\n * attack on CBC padding based on the time required to compute the MAC. In\n * order to defend against this attack, implementations MUST ensure that\n * record processing time is essentially the same whether or not the padding\n * is correct. In general, the best way to do this is to compute the MAC even\n * if the padding is incorrect, and only then reject the packet. For instance,\n * if the pad appears to be incorrect, the implementation might assume a\n * zero-length pad and then compute the MAC. This leaves a small timing\n * channel, since MAC performance depends, to some extent, on the size of the\n * data fragment, but it is not believed to be large enough to be exploitable,\n * due to the large block size of existing MACs and the small size of the\n * timing signal.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./asn1 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/asn1.js\");\n__webpack_require__(/*! ./hmac */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/hmac.js\");\n__webpack_require__(/*! ./md5 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md5.js\");\n__webpack_require__(/*! ./pem */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pem.js\");\n__webpack_require__(/*! ./pki */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pki.js\");\n__webpack_require__(/*! ./random */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/random.js\");\n__webpack_require__(/*! ./sha1 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/sha1.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\n/**\n * Generates pseudo random bytes by mixing the result of two hash functions,\n * MD5 and SHA-1.\n *\n * prf_TLS1(secret, label, seed) =\n *   P_MD5(S1, label + seed) XOR P_SHA-1(S2, label + seed);\n *\n * Each P_hash function functions as follows:\n *\n * P_hash(secret, seed) = HMAC_hash(secret, A(1) + seed) +\n *                        HMAC_hash(secret, A(2) + seed) +\n *                        HMAC_hash(secret, A(3) + seed) + ...\n * A() is defined as:\n *   A(0) = seed\n *   A(i) = HMAC_hash(secret, A(i-1))\n *\n * The '+' operator denotes concatenation.\n *\n * As many iterations A(N) as are needed are performed to generate enough\n * pseudo random byte output. If an iteration creates more data than is\n * necessary, then it is truncated.\n *\n * Therefore:\n * A(1) = HMAC_hash(secret, A(0))\n *      = HMAC_hash(secret, seed)\n * A(2) = HMAC_hash(secret, A(1))\n *      = HMAC_hash(secret, HMAC_hash(secret, seed))\n *\n * Therefore:\n * P_hash(secret, seed) =\n *   HMAC_hash(secret, HMAC_hash(secret, A(0)) + seed) +\n *   HMAC_hash(secret, HMAC_hash(secret, A(1)) + seed) +\n *   ...\n *\n * Therefore:\n * P_hash(secret, seed) =\n *   HMAC_hash(secret, HMAC_hash(secret, seed) + seed) +\n *   HMAC_hash(secret, HMAC_hash(secret, HMAC_hash(secret, seed)) + seed) +\n *   ...\n *\n * @param secret the secret to use.\n * @param label the label to use.\n * @param seed the seed value to use.\n * @param length the number of bytes to generate.\n *\n * @return the pseudo random bytes in a byte buffer.\n */\nvar prf_TLS1 = function(secret, label, seed, length) {\n  var rval = forge.util.createBuffer();\n\n  /* For TLS 1.0, the secret is split in half, into two secrets of equal\n    length. If the secret has an odd length then the last byte of the first\n    half will be the same as the first byte of the second. The length of the\n    two secrets is half of the secret rounded up. */\n  var idx = (secret.length >> 1);\n  var slen = idx + (secret.length & 1);\n  var s1 = secret.substr(0, slen);\n  var s2 = secret.substr(idx, slen);\n  var ai = forge.util.createBuffer();\n  var hmac = forge.hmac.create();\n  seed = label + seed;\n\n  // determine the number of iterations that must be performed to generate\n  // enough output bytes, md5 creates 16 byte hashes, sha1 creates 20\n  var md5itr = Math.ceil(length / 16);\n  var sha1itr = Math.ceil(length / 20);\n\n  // do md5 iterations\n  hmac.start('MD5', s1);\n  var md5bytes = forge.util.createBuffer();\n  ai.putBytes(seed);\n  for(var i = 0; i < md5itr; ++i) {\n    // HMAC_hash(secret, A(i-1))\n    hmac.start(null, null);\n    hmac.update(ai.getBytes());\n    ai.putBuffer(hmac.digest());\n\n    // HMAC_hash(secret, A(i) + seed)\n    hmac.start(null, null);\n    hmac.update(ai.bytes() + seed);\n    md5bytes.putBuffer(hmac.digest());\n  }\n\n  // do sha1 iterations\n  hmac.start('SHA1', s2);\n  var sha1bytes = forge.util.createBuffer();\n  ai.clear();\n  ai.putBytes(seed);\n  for(var i = 0; i < sha1itr; ++i) {\n    // HMAC_hash(secret, A(i-1))\n    hmac.start(null, null);\n    hmac.update(ai.getBytes());\n    ai.putBuffer(hmac.digest());\n\n    // HMAC_hash(secret, A(i) + seed)\n    hmac.start(null, null);\n    hmac.update(ai.bytes() + seed);\n    sha1bytes.putBuffer(hmac.digest());\n  }\n\n  // XOR the md5 bytes with the sha1 bytes\n  rval.putBytes(forge.util.xorBytes(\n    md5bytes.getBytes(), sha1bytes.getBytes(), length));\n\n  return rval;\n};\n\n/**\n * Generates pseudo random bytes using a SHA256 algorithm. For TLS 1.2.\n *\n * @param secret the secret to use.\n * @param label the label to use.\n * @param seed the seed value to use.\n * @param length the number of bytes to generate.\n *\n * @return the pseudo random bytes in a byte buffer.\n */\nvar prf_sha256 = function(secret, label, seed, length) {\n   // FIXME: implement me for TLS 1.2\n};\n\n/**\n * Gets a MAC for a record using the SHA-1 hash algorithm.\n *\n * @param key the mac key.\n * @param state the sequence number (array of two 32-bit integers).\n * @param record the record.\n *\n * @return the sha-1 hash (20 bytes) for the given record.\n */\nvar hmac_sha1 = function(key, seqNum, record) {\n  /* MAC is computed like so:\n  HMAC_hash(\n    key, seqNum +\n      TLSCompressed.type +\n      TLSCompressed.version +\n      TLSCompressed.length +\n      TLSCompressed.fragment)\n  */\n  var hmac = forge.hmac.create();\n  hmac.start('SHA1', key);\n  var b = forge.util.createBuffer();\n  b.putInt32(seqNum[0]);\n  b.putInt32(seqNum[1]);\n  b.putByte(record.type);\n  b.putByte(record.version.major);\n  b.putByte(record.version.minor);\n  b.putInt16(record.length);\n  b.putBytes(record.fragment.bytes());\n  hmac.update(b.getBytes());\n  return hmac.digest().getBytes();\n};\n\n/**\n * Compresses the TLSPlaintext record into a TLSCompressed record using the\n * deflate algorithm.\n *\n * @param c the TLS connection.\n * @param record the TLSPlaintext record to compress.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nvar deflate = function(c, record, s) {\n  var rval = false;\n\n  try {\n    var bytes = c.deflate(record.fragment.getBytes());\n    record.fragment = forge.util.createBuffer(bytes);\n    record.length = bytes.length;\n    rval = true;\n  } catch(ex) {\n    // deflate error, fail out\n  }\n\n  return rval;\n};\n\n/**\n * Decompresses the TLSCompressed record into a TLSPlaintext record using the\n * deflate algorithm.\n *\n * @param c the TLS connection.\n * @param record the TLSCompressed record to decompress.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nvar inflate = function(c, record, s) {\n  var rval = false;\n\n  try {\n    var bytes = c.inflate(record.fragment.getBytes());\n    record.fragment = forge.util.createBuffer(bytes);\n    record.length = bytes.length;\n    rval = true;\n  } catch(ex) {\n    // inflate error, fail out\n  }\n\n  return rval;\n};\n\n/**\n * Reads a TLS variable-length vector from a byte buffer.\n *\n * Variable-length vectors are defined by specifying a subrange of legal\n * lengths, inclusively, using the notation <floor..ceiling>. When these are\n * encoded, the actual length precedes the vector's contents in the byte\n * stream. The length will be in the form of a number consuming as many bytes\n * as required to hold the vector's specified maximum (ceiling) length. A\n * variable-length vector with an actual length field of zero is referred to\n * as an empty vector.\n *\n * @param b the byte buffer.\n * @param lenBytes the number of bytes required to store the length.\n *\n * @return the resulting byte buffer.\n */\nvar readVector = function(b, lenBytes) {\n  var len = 0;\n  switch(lenBytes) {\n  case 1:\n    len = b.getByte();\n    break;\n  case 2:\n    len = b.getInt16();\n    break;\n  case 3:\n    len = b.getInt24();\n    break;\n  case 4:\n    len = b.getInt32();\n    break;\n  }\n\n  // read vector bytes into a new buffer\n  return forge.util.createBuffer(b.getBytes(len));\n};\n\n/**\n * Writes a TLS variable-length vector to a byte buffer.\n *\n * @param b the byte buffer.\n * @param lenBytes the number of bytes required to store the length.\n * @param v the byte buffer vector.\n */\nvar writeVector = function(b, lenBytes, v) {\n  // encode length at the start of the vector, where the number of bytes for\n  // the length is the maximum number of bytes it would take to encode the\n  // vector's ceiling\n  b.putInt(v.length(), lenBytes << 3);\n  b.putBuffer(v);\n};\n\n/**\n * The tls implementation.\n */\nvar tls = {};\n\n/**\n * Version: TLS 1.2 = 3.3, TLS 1.1 = 3.2, TLS 1.0 = 3.1. Both TLS 1.1 and\n * TLS 1.2 were still too new (ie: openSSL didn't implement them) at the time\n * of this implementation so TLS 1.0 was implemented instead.\n */\ntls.Versions = {\n  TLS_1_0: {major: 3, minor: 1},\n  TLS_1_1: {major: 3, minor: 2},\n  TLS_1_2: {major: 3, minor: 3}\n};\ntls.SupportedVersions = [\n  tls.Versions.TLS_1_1,\n  tls.Versions.TLS_1_0\n];\ntls.Version = tls.SupportedVersions[0];\n\n/**\n * Maximum fragment size. True maximum is 16384, but we fragment before that\n * to allow for unusual small increases during compression.\n */\ntls.MaxFragment = 16384 - 1024;\n\n/**\n * Whether this entity is considered the \"client\" or \"server\".\n * enum { server, client } ConnectionEnd;\n */\ntls.ConnectionEnd = {\n  server: 0,\n  client: 1\n};\n\n/**\n * Pseudo-random function algorithm used to generate keys from the master\n * secret.\n * enum { tls_prf_sha256 } PRFAlgorithm;\n */\ntls.PRFAlgorithm = {\n  tls_prf_sha256: 0\n};\n\n/**\n * Bulk encryption algorithms.\n * enum { null, rc4, des3, aes } BulkCipherAlgorithm;\n */\ntls.BulkCipherAlgorithm = {\n  none: null,\n  rc4: 0,\n  des3: 1,\n  aes: 2\n};\n\n/**\n * Cipher types.\n * enum { stream, block, aead } CipherType;\n */\ntls.CipherType = {\n  stream: 0,\n  block: 1,\n  aead: 2\n};\n\n/**\n * MAC (Message Authentication Code) algorithms.\n * enum { null, hmac_md5, hmac_sha1, hmac_sha256,\n *   hmac_sha384, hmac_sha512} MACAlgorithm;\n */\ntls.MACAlgorithm = {\n  none: null,\n  hmac_md5: 0,\n  hmac_sha1: 1,\n  hmac_sha256: 2,\n  hmac_sha384: 3,\n  hmac_sha512: 4\n};\n\n/**\n * Compression algorithms.\n * enum { null(0), deflate(1), (255) } CompressionMethod;\n */\ntls.CompressionMethod = {\n  none: 0,\n  deflate: 1\n};\n\n/**\n * TLS record content types.\n * enum {\n *   change_cipher_spec(20), alert(21), handshake(22),\n *   application_data(23), (255)\n * } ContentType;\n */\ntls.ContentType = {\n  change_cipher_spec: 20,\n  alert: 21,\n  handshake: 22,\n  application_data: 23,\n  heartbeat: 24\n};\n\n/**\n * TLS handshake types.\n * enum {\n *   hello_request(0), client_hello(1), server_hello(2),\n *   certificate(11), server_key_exchange (12),\n *   certificate_request(13), server_hello_done(14),\n *   certificate_verify(15), client_key_exchange(16),\n *   finished(20), (255)\n * } HandshakeType;\n */\ntls.HandshakeType = {\n  hello_request: 0,\n  client_hello: 1,\n  server_hello: 2,\n  certificate: 11,\n  server_key_exchange: 12,\n  certificate_request: 13,\n  server_hello_done: 14,\n  certificate_verify: 15,\n  client_key_exchange: 16,\n  finished: 20\n};\n\n/**\n * TLS Alert Protocol.\n *\n * enum { warning(1), fatal(2), (255) } AlertLevel;\n *\n * enum {\n *   close_notify(0),\n *   unexpected_message(10),\n *   bad_record_mac(20),\n *   decryption_failed(21),\n *   record_overflow(22),\n *   decompression_failure(30),\n *   handshake_failure(40),\n *   bad_certificate(42),\n *   unsupported_certificate(43),\n *   certificate_revoked(44),\n *   certificate_expired(45),\n *   certificate_unknown(46),\n *   illegal_parameter(47),\n *   unknown_ca(48),\n *   access_denied(49),\n *   decode_error(50),\n *   decrypt_error(51),\n *   export_restriction(60),\n *   protocol_version(70),\n *   insufficient_security(71),\n *   internal_error(80),\n *   user_canceled(90),\n *   no_renegotiation(100),\n *   (255)\n * } AlertDescription;\n *\n * struct {\n *   AlertLevel level;\n *   AlertDescription description;\n * } Alert;\n */\ntls.Alert = {};\ntls.Alert.Level = {\n  warning: 1,\n  fatal: 2\n};\ntls.Alert.Description = {\n  close_notify: 0,\n  unexpected_message: 10,\n  bad_record_mac: 20,\n  decryption_failed: 21,\n  record_overflow: 22,\n  decompression_failure: 30,\n  handshake_failure: 40,\n  bad_certificate: 42,\n  unsupported_certificate: 43,\n  certificate_revoked: 44,\n  certificate_expired: 45,\n  certificate_unknown: 46,\n  illegal_parameter: 47,\n  unknown_ca: 48,\n  access_denied: 49,\n  decode_error: 50,\n  decrypt_error: 51,\n  export_restriction: 60,\n  protocol_version: 70,\n  insufficient_security: 71,\n  internal_error: 80,\n  user_canceled: 90,\n  no_renegotiation: 100\n};\n\n/**\n * TLS Heartbeat Message types.\n * enum {\n *   heartbeat_request(1),\n *   heartbeat_response(2),\n *   (255)\n * } HeartbeatMessageType;\n */\ntls.HeartbeatMessageType = {\n  heartbeat_request: 1,\n  heartbeat_response: 2\n};\n\n/**\n * Supported cipher suites.\n */\ntls.CipherSuites = {};\n\n/**\n * Gets a supported cipher suite from its 2 byte ID.\n *\n * @param twoBytes two bytes in a string.\n *\n * @return the matching supported cipher suite or null.\n */\ntls.getCipherSuite = function(twoBytes) {\n  var rval = null;\n  for(var key in tls.CipherSuites) {\n    var cs = tls.CipherSuites[key];\n    if(cs.id[0] === twoBytes.charCodeAt(0) &&\n      cs.id[1] === twoBytes.charCodeAt(1)) {\n      rval = cs;\n      break;\n    }\n  }\n  return rval;\n};\n\n/**\n * Called when an unexpected record is encountered.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleUnexpected = function(c, record) {\n  // if connection is client and closed, ignore unexpected messages\n  var ignore = (!c.open && c.entity === tls.ConnectionEnd.client);\n  if(!ignore) {\n    c.error(c, {\n      message: 'Unexpected message. Received TLS record out of order.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unexpected_message\n      }\n    });\n  }\n};\n\n/**\n * Called when a client receives a HelloRequest record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleHelloRequest = function(c, record, length) {\n  // ignore renegotiation requests from the server during a handshake, but\n  // if handshaking, send a warning alert that renegotation is denied\n  if(!c.handshaking && c.handshakes > 0) {\n    // send alert warning\n    tls.queue(c, tls.createAlert(c, {\n       level: tls.Alert.Level.warning,\n       description: tls.Alert.Description.no_renegotiation\n    }));\n    tls.flush(c);\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Parses a hello message from a ClientHello or ServerHello record.\n *\n * @param record the record to parse.\n *\n * @return the parsed message.\n */\ntls.parseHelloMessage = function(c, record, length) {\n  var msg = null;\n\n  var client = (c.entity === tls.ConnectionEnd.client);\n\n  // minimum of 38 bytes in message\n  if(length < 38) {\n    c.error(c, {\n      message: client ?\n        'Invalid ServerHello message. Message too short.' :\n        'Invalid ClientHello message. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  } else {\n    // use 'remaining' to calculate # of remaining bytes in the message\n    var b = record.fragment;\n    var remaining = b.length();\n    msg = {\n      version: {\n        major: b.getByte(),\n        minor: b.getByte()\n      },\n      random: forge.util.createBuffer(b.getBytes(32)),\n      session_id: readVector(b, 1),\n      extensions: []\n    };\n    if(client) {\n      msg.cipher_suite = b.getBytes(2);\n      msg.compression_method = b.getByte();\n    } else {\n      msg.cipher_suites = readVector(b, 2);\n      msg.compression_methods = readVector(b, 1);\n    }\n\n    // read extensions if there are any bytes left in the message\n    remaining = length - (remaining - b.length());\n    if(remaining > 0) {\n      // parse extensions\n      var exts = readVector(b, 2);\n      while(exts.length() > 0) {\n        msg.extensions.push({\n          type: [exts.getByte(), exts.getByte()],\n          data: readVector(exts, 2)\n        });\n      }\n\n      // TODO: make extension support modular\n      if(!client) {\n        for(var i = 0; i < msg.extensions.length; ++i) {\n          var ext = msg.extensions[i];\n\n          // support SNI extension\n          if(ext.type[0] === 0x00 && ext.type[1] === 0x00) {\n            // get server name list\n            var snl = readVector(ext.data, 2);\n            while(snl.length() > 0) {\n              // read server name type\n              var snType = snl.getByte();\n\n              // only HostName type (0x00) is known, break out if\n              // another type is detected\n              if(snType !== 0x00) {\n                break;\n              }\n\n              // add host name to server name list\n              c.session.extensions.server_name.serverNameList.push(\n                readVector(snl, 2).getBytes());\n            }\n          }\n        }\n      }\n    }\n\n    // version already set, do not allow version change\n    if(c.session.version) {\n      if(msg.version.major !== c.session.version.major ||\n        msg.version.minor !== c.session.version.minor) {\n        return c.error(c, {\n          message: 'TLS version change is disallowed during renegotiation.',\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        });\n      }\n    }\n\n    // get the chosen (ServerHello) cipher suite\n    if(client) {\n      // FIXME: should be checking configured acceptable cipher suites\n      c.session.cipherSuite = tls.getCipherSuite(msg.cipher_suite);\n    } else {\n      // get a supported preferred (ClientHello) cipher suite\n      // choose the first supported cipher suite\n      var tmp = forge.util.createBuffer(msg.cipher_suites.bytes());\n      while(tmp.length() > 0) {\n        // FIXME: should be checking configured acceptable suites\n        // cipher suites take up 2 bytes\n        c.session.cipherSuite = tls.getCipherSuite(tmp.getBytes(2));\n        if(c.session.cipherSuite !== null) {\n          break;\n        }\n      }\n    }\n\n    // cipher suite not supported\n    if(c.session.cipherSuite === null) {\n      return c.error(c, {\n        message: 'No cipher suites in common.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.handshake_failure\n        },\n        cipherSuite: forge.util.bytesToHex(msg.cipher_suite)\n      });\n    }\n\n    // TODO: handle compression methods\n    if(client) {\n      c.session.compressionMethod = msg.compression_method;\n    } else {\n      // no compression\n      c.session.compressionMethod = tls.CompressionMethod.none;\n    }\n  }\n\n  return msg;\n};\n\n/**\n * Creates security parameters for the given connection based on the given\n * hello message.\n *\n * @param c the TLS connection.\n * @param msg the hello message.\n */\ntls.createSecurityParameters = function(c, msg) {\n  /* Note: security params are from TLS 1.2, some values like prf_algorithm\n  are ignored for TLS 1.0/1.1 and the builtin as specified in the spec is\n  used. */\n\n  // TODO: handle other options from server when more supported\n\n  // get client and server randoms\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var msgRandom = msg.random.bytes();\n  var cRandom = client ? c.session.sp.client_random : msgRandom;\n  var sRandom = client ? msgRandom : tls.createRandom().getBytes();\n\n  // create new security parameters\n  c.session.sp = {\n    entity: c.entity,\n    prf_algorithm: tls.PRFAlgorithm.tls_prf_sha256,\n    bulk_cipher_algorithm: null,\n    cipher_type: null,\n    enc_key_length: null,\n    block_length: null,\n    fixed_iv_length: null,\n    record_iv_length: null,\n    mac_algorithm: null,\n    mac_length: null,\n    mac_key_length: null,\n    compression_algorithm: c.session.compressionMethod,\n    pre_master_secret: null,\n    master_secret: null,\n    client_random: cRandom,\n    server_random: sRandom\n  };\n};\n\n/**\n * Called when a client receives a ServerHello record.\n *\n * When a ServerHello message will be sent:\n *   The server will send this message in response to a client hello message\n *   when it was able to find an acceptable set of algorithms. If it cannot\n *   find such a match, it will respond with a handshake failure alert.\n *\n * uint24 length;\n * struct {\n *   ProtocolVersion server_version;\n *   Random random;\n *   SessionID session_id;\n *   CipherSuite cipher_suite;\n *   CompressionMethod compression_method;\n *   select(extensions_present) {\n *     case false:\n *       struct {};\n *     case true:\n *       Extension extensions<0..2^16-1>;\n *   };\n * } ServerHello;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerHello = function(c, record, length) {\n  var msg = tls.parseHelloMessage(c, record, length);\n  if(c.fail) {\n    return;\n  }\n\n  // ensure server version is compatible\n  if(msg.version.minor <= c.version.minor) {\n    c.version.minor = msg.version.minor;\n  } else {\n    return c.error(c, {\n      message: 'Incompatible TLS version.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.protocol_version\n      }\n    });\n  }\n\n  // indicate session version has been set\n  c.session.version = c.version;\n\n  // get the session ID from the message\n  var sessionId = msg.session_id.bytes();\n\n  // if the session ID is not blank and matches the cached one, resume\n  // the session\n  if(sessionId.length > 0 && sessionId === c.session.id) {\n    // resuming session, expect a ChangeCipherSpec next\n    c.expect = SCC;\n    c.session.resuming = true;\n\n    // get new server random\n    c.session.sp.server_random = msg.random.bytes();\n  } else {\n    // not resuming, expect a server Certificate message next\n    c.expect = SCE;\n    c.session.resuming = false;\n\n    // create new security parameters\n    tls.createSecurityParameters(c, msg);\n  }\n\n  // set new session ID\n  c.session.id = sessionId;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a server receives a ClientHello record.\n *\n * When a ClientHello message will be sent:\n *   When a client first connects to a server it is required to send the\n *   client hello as its first message. The client can also send a client\n *   hello in response to a hello request or on its own initiative in order\n *   to renegotiate the security parameters in an existing connection.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleClientHello = function(c, record, length) {\n  var msg = tls.parseHelloMessage(c, record, length);\n  if(c.fail) {\n    return;\n  }\n\n  // get the session ID from the message\n  var sessionId = msg.session_id.bytes();\n\n  // see if the given session ID is in the cache\n  var session = null;\n  if(c.sessionCache) {\n    session = c.sessionCache.getSession(sessionId);\n    if(session === null) {\n      // session ID not found\n      sessionId = '';\n    } else if(session.version.major !== msg.version.major ||\n      session.version.minor > msg.version.minor) {\n      // if session version is incompatible with client version, do not resume\n      session = null;\n      sessionId = '';\n    }\n  }\n\n  // no session found to resume, generate a new session ID\n  if(sessionId.length === 0) {\n    sessionId = forge.random.getBytes(32);\n  }\n\n  // update session\n  c.session.id = sessionId;\n  c.session.clientHelloVersion = msg.version;\n  c.session.sp = {};\n  if(session) {\n    // use version and security parameters from resumed session\n    c.version = c.session.version = session.version;\n    c.session.sp = session.sp;\n  } else {\n    // use highest compatible minor version\n    var version;\n    for(var i = 1; i < tls.SupportedVersions.length; ++i) {\n      version = tls.SupportedVersions[i];\n      if(version.minor <= msg.version.minor) {\n        break;\n      }\n    }\n    c.version = {major: version.major, minor: version.minor};\n    c.session.version = c.version;\n  }\n\n  // if a session is set, resume it\n  if(session !== null) {\n    // resuming session, expect a ChangeCipherSpec next\n    c.expect = CCC;\n    c.session.resuming = true;\n\n    // get new client random\n    c.session.sp.client_random = msg.random.bytes();\n  } else {\n    // not resuming, expect a Certificate or ClientKeyExchange\n    c.expect = (c.verifyClient !== false) ? CCE : CKE;\n    c.session.resuming = false;\n\n    // create new security parameters\n    tls.createSecurityParameters(c, msg);\n  }\n\n  // connection now open\n  c.open = true;\n\n  // queue server hello\n  tls.queue(c, tls.createRecord(c, {\n    type: tls.ContentType.handshake,\n    data: tls.createServerHello(c)\n  }));\n\n  if(c.session.resuming) {\n    // queue change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // create pending state\n    c.state.pending = tls.createConnectionState(c);\n\n    // change current write state to pending write state\n    c.state.current.write = c.state.pending.write;\n\n    // queue finished\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n  } else {\n    // queue server certificate\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createCertificate(c)\n    }));\n\n    if(!c.fail) {\n      // queue server key exchange\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createServerKeyExchange(c)\n      }));\n\n      // request client certificate if set\n      if(c.verifyClient !== false) {\n        // queue certificate request\n        tls.queue(c, tls.createRecord(c, {\n          type: tls.ContentType.handshake,\n          data: tls.createCertificateRequest(c)\n        }));\n      }\n\n      // queue server hello done\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createServerHelloDone(c)\n      }));\n    }\n  }\n\n  // send records\n  tls.flush(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a Certificate record.\n *\n * When this message will be sent:\n *   The server must send a certificate whenever the agreed-upon key exchange\n *   method is not an anonymous one. This message will always immediately\n *   follow the server hello message.\n *\n * Meaning of this message:\n *   The certificate type must be appropriate for the selected cipher suite's\n *   key exchange algorithm, and is generally an X.509v3 certificate. It must\n *   contain a key which matches the key exchange method, as follows. Unless\n *   otherwise specified, the signing algorithm for the certificate must be\n *   the same as the algorithm for the certificate key. Unless otherwise\n *   specified, the public key may be of any length.\n *\n * opaque ASN.1Cert<1..2^24-1>;\n * struct {\n *   ASN.1Cert certificate_list<1..2^24-1>;\n * } Certificate;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificate = function(c, record, length) {\n  // minimum of 3 bytes in message\n  if(length < 3) {\n    return c.error(c, {\n      message: 'Invalid Certificate message. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  var b = record.fragment;\n  var msg = {\n    certificate_list: readVector(b, 3)\n  };\n\n  /* The sender's certificate will be first in the list (chain), each\n    subsequent one that follows will certify the previous one, but root\n    certificates (self-signed) that specify the certificate authority may\n    be omitted under the assumption that clients must already possess it. */\n  var cert, asn1;\n  var certs = [];\n  try {\n    while(msg.certificate_list.length() > 0) {\n      // each entry in msg.certificate_list is a vector with 3 len bytes\n      cert = readVector(msg.certificate_list, 3);\n      asn1 = forge.asn1.fromDer(cert);\n      cert = forge.pki.certificateFromAsn1(asn1, true);\n      certs.push(cert);\n    }\n  } catch(ex) {\n    return c.error(c, {\n      message: 'Could not parse certificate list.',\n      cause: ex,\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.bad_certificate\n      }\n    });\n  }\n\n  // ensure at least 1 certificate was provided if in client-mode\n  // or if verifyClient was set to true to require a certificate\n  // (as opposed to 'optional')\n  var client = (c.entity === tls.ConnectionEnd.client);\n  if((client || c.verifyClient === true) && certs.length === 0) {\n    // error, no certificate\n    c.error(c, {\n      message: client ?\n        'No server certificate provided.' :\n        'No client certificate provided.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  } else if(certs.length === 0) {\n    // no certs to verify\n    // expect a ServerKeyExchange or ClientKeyExchange message next\n    c.expect = client ? SKE : CKE;\n  } else {\n    // save certificate in session\n    if(client) {\n      c.session.serverCertificate = certs[0];\n    } else {\n      c.session.clientCertificate = certs[0];\n    }\n\n    if(tls.verifyCertificateChain(c, certs)) {\n      // expect a ServerKeyExchange or ClientKeyExchange message next\n      c.expect = client ? SKE : CKE;\n    }\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ServerKeyExchange record.\n *\n * When this message will be sent:\n *   This message will be sent immediately after the server certificate\n *   message (or the server hello message, if this is an anonymous\n *   negotiation).\n *\n *   The server key exchange message is sent by the server only when the\n *   server certificate message (if sent) does not contain enough data to\n *   allow the client to exchange a premaster secret.\n *\n * Meaning of this message:\n *   This message conveys cryptographic information to allow the client to\n *   communicate the premaster secret: either an RSA public key to encrypt\n *   the premaster secret with, or a Diffie-Hellman public key with which the\n *   client can complete a key exchange (with the result being the premaster\n *   secret.)\n *\n * enum {\n *   dhe_dss, dhe_rsa, dh_anon, rsa, dh_dss, dh_rsa\n * } KeyExchangeAlgorithm;\n *\n * struct {\n *   opaque dh_p<1..2^16-1>;\n *   opaque dh_g<1..2^16-1>;\n *   opaque dh_Ys<1..2^16-1>;\n * } ServerDHParams;\n *\n * struct {\n *   select(KeyExchangeAlgorithm) {\n *     case dh_anon:\n *       ServerDHParams params;\n *     case dhe_dss:\n *     case dhe_rsa:\n *       ServerDHParams params;\n *       digitally-signed struct {\n *         opaque client_random[32];\n *         opaque server_random[32];\n *         ServerDHParams params;\n *       } signed_params;\n *     case rsa:\n *     case dh_dss:\n *     case dh_rsa:\n *       struct {};\n *   };\n * } ServerKeyExchange;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerKeyExchange = function(c, record, length) {\n  // this implementation only supports RSA, no Diffie-Hellman support\n  // so any length > 0 is invalid\n  if(length > 0) {\n    return c.error(c, {\n      message: 'Invalid key parameters. Only RSA is supported.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unsupported_certificate\n      }\n    });\n  }\n\n  // expect an optional CertificateRequest message next\n  c.expect = SCR;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ClientKeyExchange record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleClientKeyExchange = function(c, record, length) {\n  // this implementation only supports RSA, no Diffie-Hellman support\n  // so any length < 48 is invalid\n  if(length < 48) {\n    return c.error(c, {\n      message: 'Invalid key parameters. Only RSA is supported.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unsupported_certificate\n      }\n    });\n  }\n\n  var b = record.fragment;\n  var msg = {\n    enc_pre_master_secret: readVector(b, 2).getBytes()\n  };\n\n  // do rsa decryption\n  var privateKey = null;\n  if(c.getPrivateKey) {\n    try {\n      privateKey = c.getPrivateKey(c, c.session.serverCertificate);\n      privateKey = forge.pki.privateKeyFromPem(privateKey);\n    } catch(ex) {\n      c.error(c, {\n        message: 'Could not get private key.',\n        cause: ex,\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    }\n  }\n\n  if(privateKey === null) {\n    return c.error(c, {\n      message: 'No private key set.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.internal_error\n      }\n    });\n  }\n\n  try {\n    // decrypt 48-byte pre-master secret\n    var sp = c.session.sp;\n    sp.pre_master_secret = privateKey.decrypt(msg.enc_pre_master_secret);\n\n    // ensure client hello version matches first 2 bytes\n    var version = c.session.clientHelloVersion;\n    if(version.major !== sp.pre_master_secret.charCodeAt(0) ||\n      version.minor !== sp.pre_master_secret.charCodeAt(1)) {\n      // error, do not send alert (see BLEI attack below)\n      throw new Error('TLS version rollback attack detected.');\n    }\n  } catch(ex) {\n    /* Note: Daniel Bleichenbacher [BLEI] can be used to attack a\n      TLS server which is using PKCS#1 encoded RSA, so instead of\n      failing here, we generate 48 random bytes and use that as\n      the pre-master secret. */\n    sp.pre_master_secret = forge.random.getBytes(48);\n  }\n\n  // expect a CertificateVerify message if a Certificate was received that\n  // does not have fixed Diffie-Hellman params, otherwise expect\n  // ChangeCipherSpec\n  c.expect = CCC;\n  if(c.session.clientCertificate !== null) {\n    // only RSA support, so expect CertificateVerify\n    // TODO: support Diffie-Hellman\n    c.expect = CCV;\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a CertificateRequest record.\n *\n * When this message will be sent:\n *   A non-anonymous server can optionally request a certificate from the\n *   client, if appropriate for the selected cipher suite. This message, if\n *   sent, will immediately follow the Server Key Exchange message (if it is\n *   sent; otherwise, the Server Certificate message).\n *\n * enum {\n *   rsa_sign(1), dss_sign(2), rsa_fixed_dh(3), dss_fixed_dh(4),\n *   rsa_ephemeral_dh_RESERVED(5), dss_ephemeral_dh_RESERVED(6),\n *   fortezza_dms_RESERVED(20), (255)\n * } ClientCertificateType;\n *\n * opaque DistinguishedName<1..2^16-1>;\n *\n * struct {\n *   ClientCertificateType certificate_types<1..2^8-1>;\n *   SignatureAndHashAlgorithm supported_signature_algorithms<2^16-1>;\n *   DistinguishedName certificate_authorities<0..2^16-1>;\n * } CertificateRequest;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificateRequest = function(c, record, length) {\n  // minimum of 3 bytes in message\n  if(length < 3) {\n    return c.error(c, {\n      message: 'Invalid CertificateRequest. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // TODO: TLS 1.2+ has different format including\n  // SignatureAndHashAlgorithm after cert types\n  var b = record.fragment;\n  var msg = {\n    certificate_types: readVector(b, 1),\n    certificate_authorities: readVector(b, 2)\n  };\n\n  // save certificate request in session\n  c.session.certificateRequest = msg;\n\n  // expect a ServerHelloDone message next\n  c.expect = SHD;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a server receives a CertificateVerify record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificateVerify = function(c, record, length) {\n  if(length < 2) {\n    return c.error(c, {\n      message: 'Invalid CertificateVerify. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // rewind to get full bytes for message so it can be manually\n  // digested below (special case for CertificateVerify messages because\n  // they must be digested *after* handling as opposed to all others)\n  var b = record.fragment;\n  b.read -= 4;\n  var msgBytes = b.bytes();\n  b.read += 4;\n\n  var msg = {\n    signature: readVector(b, 2).getBytes()\n  };\n\n  // TODO: add support for DSA\n\n  // generate data to verify\n  var verify = forge.util.createBuffer();\n  verify.putBuffer(c.session.md5.digest());\n  verify.putBuffer(c.session.sha1.digest());\n  verify = verify.getBytes();\n\n  try {\n    var cert = c.session.clientCertificate;\n    /*b = forge.pki.rsa.decrypt(\n      msg.signature, cert.publicKey, true, verify.length);\n    if(b !== verify) {*/\n    if(!cert.publicKey.verify(verify, msg.signature, 'NONE')) {\n      throw new Error('CertificateVerify signature does not match.');\n    }\n\n    // digest message now that it has been handled\n    c.session.md5.update(msgBytes);\n    c.session.sha1.update(msgBytes);\n  } catch(ex) {\n    return c.error(c, {\n      message: 'Bad signature in CertificateVerify.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.handshake_failure\n      }\n    });\n  }\n\n  // expect ChangeCipherSpec\n  c.expect = CCC;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ServerHelloDone record.\n *\n * When this message will be sent:\n *   The server hello done message is sent by the server to indicate the end\n *   of the server hello and associated messages. After sending this message\n *   the server will wait for a client response.\n *\n * Meaning of this message:\n *   This message means that the server is done sending messages to support\n *   the key exchange, and the client can proceed with its phase of the key\n *   exchange.\n *\n *   Upon receipt of the server hello done message the client should verify\n *   that the server provided a valid certificate if required and check that\n *   the server hello parameters are acceptable.\n *\n * struct {} ServerHelloDone;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerHelloDone = function(c, record, length) {\n  // len must be 0 bytes\n  if(length > 0) {\n    return c.error(c, {\n      message: 'Invalid ServerHelloDone message. Invalid length.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.record_overflow\n      }\n    });\n  }\n\n  if(c.serverCertificate === null) {\n    // no server certificate was provided\n    var error = {\n      message: 'No server certificate provided. Not enough security.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.insufficient_security\n      }\n    };\n\n    // call application callback\n    var depth = 0;\n    var ret = c.verify(c, error.alert.description, depth, []);\n    if(ret !== true) {\n      // check for custom alert info\n      if(ret || ret === 0) {\n        // set custom message and alert description\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.alert) {\n            error.alert.description = ret.alert;\n          }\n        } else if(typeof ret === 'number') {\n          // set custom alert description\n          error.alert.description = ret;\n        }\n      }\n\n      // send error\n      return c.error(c, error);\n    }\n  }\n\n  // create client certificate message if requested\n  if(c.session.certificateRequest !== null) {\n    record = tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createCertificate(c)\n    });\n    tls.queue(c, record);\n  }\n\n  // create client key exchange message\n  record = tls.createRecord(c, {\n     type: tls.ContentType.handshake,\n     data: tls.createClientKeyExchange(c)\n  });\n  tls.queue(c, record);\n\n  // expect no messages until the following callback has been called\n  c.expect = SER;\n\n  // create callback to handle client signature (for client-certs)\n  var callback = function(c, signature) {\n    if(c.session.certificateRequest !== null &&\n      c.session.clientCertificate !== null) {\n      // create certificate verify message\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createCertificateVerify(c, signature)\n      }));\n    }\n\n    // create change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // create pending state\n    c.state.pending = tls.createConnectionState(c);\n\n    // change current write state to pending write state\n    c.state.current.write = c.state.pending.write;\n\n    // create finished message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n\n    // expect a server ChangeCipherSpec message next\n    c.expect = SCC;\n\n    // send records\n    tls.flush(c);\n\n    // continue\n    c.process();\n  };\n\n  // if there is no certificate request or no client certificate, do\n  // callback immediately\n  if(c.session.certificateRequest === null ||\n    c.session.clientCertificate === null) {\n    return callback(c, null);\n  }\n\n  // otherwise get the client signature\n  tls.getClientSignature(c, callback);\n};\n\n/**\n * Called when a ChangeCipherSpec record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleChangeCipherSpec = function(c, record) {\n  if(record.fragment.getByte() !== 0x01) {\n    return c.error(c, {\n      message: 'Invalid ChangeCipherSpec message received.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // create pending state if:\n  // 1. Resuming session in client mode OR\n  // 2. NOT resuming session in server mode\n  var client = (c.entity === tls.ConnectionEnd.client);\n  if((c.session.resuming && client) || (!c.session.resuming && !client)) {\n    c.state.pending = tls.createConnectionState(c);\n  }\n\n  // change current read state to pending read state\n  c.state.current.read = c.state.pending.read;\n\n  // clear pending state if:\n  // 1. NOT resuming session in client mode OR\n  // 2. resuming a session in server mode\n  if((!c.session.resuming && client) || (c.session.resuming && !client)) {\n    c.state.pending = null;\n  }\n\n  // expect a Finished record next\n  c.expect = client ? SFI : CFI;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Finished record is received.\n *\n * When this message will be sent:\n *   A finished message is always sent immediately after a change\n *   cipher spec message to verify that the key exchange and\n *   authentication processes were successful. It is essential that a\n *   change cipher spec message be received between the other\n *   handshake messages and the Finished message.\n *\n * Meaning of this message:\n *   The finished message is the first protected with the just-\n *   negotiated algorithms, keys, and secrets. Recipients of finished\n *   messages must verify that the contents are correct.  Once a side\n *   has sent its Finished message and received and validated the\n *   Finished message from its peer, it may begin to send and receive\n *   application data over the connection.\n *\n * struct {\n *   opaque verify_data[verify_data_length];\n * } Finished;\n *\n * verify_data\n *   PRF(master_secret, finished_label, Hash(handshake_messages))\n *     [0..verify_data_length-1];\n *\n * finished_label\n *   For Finished messages sent by the client, the string\n *   \"client finished\". For Finished messages sent by the server, the\n *   string \"server finished\".\n *\n * verify_data_length depends on the cipher suite. If it is not specified\n * by the cipher suite, then it is 12. Versions of TLS < 1.2 always used\n * 12 bytes.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleFinished = function(c, record, length) {\n  // rewind to get full bytes for message so it can be manually\n  // digested below (special case for Finished messages because they\n  // must be digested *after* handling as opposed to all others)\n  var b = record.fragment;\n  b.read -= 4;\n  var msgBytes = b.bytes();\n  b.read += 4;\n\n  // message contains only verify_data\n  var vd = record.fragment.getBytes();\n\n  // ensure verify data is correct\n  b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n\n  // set label based on entity type\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var label = client ? 'server finished' : 'client finished';\n\n  // TODO: determine prf function and verify length for TLS 1.2\n  var sp = c.session.sp;\n  var vdl = 12;\n  var prf = prf_TLS1;\n  b = prf(sp.master_secret, label, b.getBytes(), vdl);\n  if(b.getBytes() !== vd) {\n    return c.error(c, {\n      message: 'Invalid verify_data in Finished message.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.decrypt_error\n      }\n    });\n  }\n\n  // digest finished message now that it has been handled\n  c.session.md5.update(msgBytes);\n  c.session.sha1.update(msgBytes);\n\n  // resuming session as client or NOT resuming session as server\n  if((c.session.resuming && client) || (!c.session.resuming && !client)) {\n    // create change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // change current write state to pending write state, clear pending\n    c.state.current.write = c.state.pending.write;\n    c.state.pending = null;\n\n    // create finished message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n  }\n\n  // expect application data next\n  c.expect = client ? SAD : CAD;\n\n  // handshake complete\n  c.handshaking = false;\n  ++c.handshakes;\n\n  // save access to peer certificate\n  c.peerCertificate = client ?\n    c.session.serverCertificate : c.session.clientCertificate;\n\n  // send records\n  tls.flush(c);\n\n  // now connected\n  c.isConnected = true;\n  c.connected(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when an Alert record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleAlert = function(c, record) {\n  // read alert\n  var b = record.fragment;\n  var alert = {\n    level: b.getByte(),\n    description: b.getByte()\n  };\n\n  // TODO: consider using a table?\n  // get appropriate message\n  var msg;\n  switch(alert.description) {\n  case tls.Alert.Description.close_notify:\n    msg = 'Connection closed.';\n    break;\n  case tls.Alert.Description.unexpected_message:\n    msg = 'Unexpected message.';\n    break;\n  case tls.Alert.Description.bad_record_mac:\n    msg = 'Bad record MAC.';\n    break;\n  case tls.Alert.Description.decryption_failed:\n    msg = 'Decryption failed.';\n    break;\n  case tls.Alert.Description.record_overflow:\n    msg = 'Record overflow.';\n    break;\n  case tls.Alert.Description.decompression_failure:\n    msg = 'Decompression failed.';\n    break;\n  case tls.Alert.Description.handshake_failure:\n    msg = 'Handshake failure.';\n    break;\n  case tls.Alert.Description.bad_certificate:\n    msg = 'Bad certificate.';\n    break;\n  case tls.Alert.Description.unsupported_certificate:\n    msg = 'Unsupported certificate.';\n    break;\n  case tls.Alert.Description.certificate_revoked:\n    msg = 'Certificate revoked.';\n    break;\n  case tls.Alert.Description.certificate_expired:\n    msg = 'Certificate expired.';\n    break;\n  case tls.Alert.Description.certificate_unknown:\n    msg = 'Certificate unknown.';\n    break;\n  case tls.Alert.Description.illegal_parameter:\n    msg = 'Illegal parameter.';\n    break;\n  case tls.Alert.Description.unknown_ca:\n    msg = 'Unknown certificate authority.';\n    break;\n  case tls.Alert.Description.access_denied:\n    msg = 'Access denied.';\n    break;\n  case tls.Alert.Description.decode_error:\n    msg = 'Decode error.';\n    break;\n  case tls.Alert.Description.decrypt_error:\n    msg = 'Decrypt error.';\n    break;\n  case tls.Alert.Description.export_restriction:\n    msg = 'Export restriction.';\n    break;\n  case tls.Alert.Description.protocol_version:\n    msg = 'Unsupported protocol version.';\n    break;\n  case tls.Alert.Description.insufficient_security:\n    msg = 'Insufficient security.';\n    break;\n  case tls.Alert.Description.internal_error:\n    msg = 'Internal error.';\n    break;\n  case tls.Alert.Description.user_canceled:\n    msg = 'User canceled.';\n    break;\n  case tls.Alert.Description.no_renegotiation:\n    msg = 'Renegotiation not supported.';\n    break;\n  default:\n    msg = 'Unknown error.';\n    break;\n  }\n\n  // close connection on close_notify, not an error\n  if(alert.description === tls.Alert.Description.close_notify) {\n    return c.close();\n  }\n\n  // call error handler\n  c.error(c, {\n    message: msg,\n    send: false,\n    // origin is the opposite end\n    origin: (c.entity === tls.ConnectionEnd.client) ? 'server' : 'client',\n    alert: alert\n  });\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Handshake record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleHandshake = function(c, record) {\n  // get the handshake type and message length\n  var b = record.fragment;\n  var type = b.getByte();\n  var length = b.getInt24();\n\n  // see if the record fragment doesn't yet contain the full message\n  if(length > b.length()) {\n    // cache the record, clear its fragment, and reset the buffer read\n    // pointer before the type and length were read\n    c.fragmented = record;\n    record.fragment = forge.util.createBuffer();\n    b.read -= 4;\n\n    // continue\n    return c.process();\n  }\n\n  // full message now available, clear cache, reset read pointer to\n  // before type and length\n  c.fragmented = null;\n  b.read -= 4;\n\n  // save the handshake bytes for digestion after handler is found\n  // (include type and length of handshake msg)\n  var bytes = b.bytes(length + 4);\n\n  // restore read pointer\n  b.read += 4;\n\n  // handle expected message\n  if(type in hsTable[c.entity][c.expect]) {\n    // initialize server session\n    if(c.entity === tls.ConnectionEnd.server && !c.open && !c.fail) {\n      c.handshaking = true;\n      c.session = {\n        version: null,\n        extensions: {\n          server_name: {\n            serverNameList: []\n          }\n        },\n        cipherSuite: null,\n        compressionMethod: null,\n        serverCertificate: null,\n        clientCertificate: null,\n        md5: forge.md.md5.create(),\n        sha1: forge.md.sha1.create()\n      };\n    }\n\n    /* Update handshake messages digest. Finished and CertificateVerify\n      messages are not digested here. They can't be digested as part of\n      the verify_data that they contain. These messages are manually\n      digested in their handlers. HelloRequest messages are simply never\n      included in the handshake message digest according to spec. */\n    if(type !== tls.HandshakeType.hello_request &&\n      type !== tls.HandshakeType.certificate_verify &&\n      type !== tls.HandshakeType.finished) {\n      c.session.md5.update(bytes);\n      c.session.sha1.update(bytes);\n    }\n\n    // handle specific handshake type record\n    hsTable[c.entity][c.expect][type](c, record, length);\n  } else {\n    // unexpected record\n    tls.handleUnexpected(c, record);\n  }\n};\n\n/**\n * Called when an ApplicationData record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleApplicationData = function(c, record) {\n  // buffer data, notify that its ready\n  c.data.putBuffer(record.fragment);\n  c.dataReady(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Heartbeat record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleHeartbeat = function(c, record) {\n  // get the heartbeat type and payload\n  var b = record.fragment;\n  var type = b.getByte();\n  var length = b.getInt16();\n  var payload = b.getBytes(length);\n\n  if(type === tls.HeartbeatMessageType.heartbeat_request) {\n    // discard request during handshake or if length is too large\n    if(c.handshaking || length > payload.length) {\n      // continue\n      return c.process();\n    }\n    // retransmit payload\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.heartbeat,\n      data: tls.createHeartbeat(\n        tls.HeartbeatMessageType.heartbeat_response, payload)\n    }));\n    tls.flush(c);\n  } else if(type === tls.HeartbeatMessageType.heartbeat_response) {\n    // check payload against expected payload, discard heartbeat if no match\n    if(payload !== c.expectedHeartbeatPayload) {\n      // continue\n      return c.process();\n    }\n\n    // notify that a valid heartbeat was received\n    if(c.heartbeatReceived) {\n      c.heartbeatReceived(c, forge.util.createBuffer(payload));\n    }\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * The transistional state tables for receiving TLS records. It maps the\n * current TLS engine state and a received record to a function to handle the\n * record and update the state.\n *\n * For instance, if the current state is SHE, then the TLS engine is expecting\n * a ServerHello record. Once a record is received, the handler function is\n * looked up using the state SHE and the record's content type.\n *\n * The resulting function will either be an error handler or a record handler.\n * The function will take whatever action is appropriate and update the state\n * for the next record.\n *\n * The states are all based on possible server record types. Note that the\n * client will never specifically expect to receive a HelloRequest or an alert\n * from the server so there is no state that reflects this. These messages may\n * occur at any time.\n *\n * There are two tables for mapping states because there is a second tier of\n * types for handshake messages. Once a record with a content type of handshake\n * is received, the handshake record handler will look up the handshake type in\n * the secondary map to get its appropriate handler.\n *\n * Valid message orders are as follows:\n *\n * =======================FULL HANDSHAKE======================\n * Client                                               Server\n *\n * ClientHello                  --------\x3e\n *                                                 ServerHello\n *                                                Certificate*\n *                                          ServerKeyExchange*\n *                                         CertificateRequest*\n *                              <--------      ServerHelloDone\n * Certificate*\n * ClientKeyExchange\n * CertificateVerify*\n * [ChangeCipherSpec]\n * Finished                     --------\x3e\n *                                          [ChangeCipherSpec]\n *                              <--------             Finished\n * Application Data             <-------\x3e     Application Data\n *\n * =====================SESSION RESUMPTION=====================\n * Client                                                Server\n *\n * ClientHello                   --------\x3e\n *                                                  ServerHello\n *                                           [ChangeCipherSpec]\n *                               <--------             Finished\n * [ChangeCipherSpec]\n * Finished                      --------\x3e\n * Application Data              <-------\x3e     Application Data\n */\n// client expect states (indicate which records are expected to be received)\nvar SHE = 0; // rcv server hello\nvar SCE = 1; // rcv server certificate\nvar SKE = 2; // rcv server key exchange\nvar SCR = 3; // rcv certificate request\nvar SHD = 4; // rcv server hello done\nvar SCC = 5; // rcv change cipher spec\nvar SFI = 6; // rcv finished\nvar SAD = 7; // rcv application data\nvar SER = 8; // not expecting any messages at this point\n\n// server expect states\nvar CHE = 0; // rcv client hello\nvar CCE = 1; // rcv client certificate\nvar CKE = 2; // rcv client key exchange\nvar CCV = 3; // rcv certificate verify\nvar CCC = 4; // rcv change cipher spec\nvar CFI = 5; // rcv finished\nvar CAD = 6; // rcv application data\nvar CER = 7; // not expecting any messages at this point\n\n// map client current expect state and content type to function\nvar __ = tls.handleUnexpected;\nvar R0 = tls.handleChangeCipherSpec;\nvar R1 = tls.handleAlert;\nvar R2 = tls.handleHandshake;\nvar R3 = tls.handleApplicationData;\nvar R4 = tls.handleHeartbeat;\nvar ctTable = [];\nctTable[tls.ConnectionEnd.client] = [\n//      CC,AL,HS,AD,HB\n/*SHE*/[__,R1,R2,__,R4],\n/*SCE*/[__,R1,R2,__,R4],\n/*SKE*/[__,R1,R2,__,R4],\n/*SCR*/[__,R1,R2,__,R4],\n/*SHD*/[__,R1,R2,__,R4],\n/*SCC*/[R0,R1,__,__,R4],\n/*SFI*/[__,R1,R2,__,R4],\n/*SAD*/[__,R1,R2,R3,R4],\n/*SER*/[__,R1,R2,__,R4]\n];\n\n// map server current expect state and content type to function\nctTable[tls.ConnectionEnd.server] = [\n//      CC,AL,HS,AD\n/*CHE*/[__,R1,R2,__,R4],\n/*CCE*/[__,R1,R2,__,R4],\n/*CKE*/[__,R1,R2,__,R4],\n/*CCV*/[__,R1,R2,__,R4],\n/*CCC*/[R0,R1,__,__,R4],\n/*CFI*/[__,R1,R2,__,R4],\n/*CAD*/[__,R1,R2,R3,R4],\n/*CER*/[__,R1,R2,__,R4]\n];\n\n// map client current expect state and handshake type to function\nvar H0 = tls.handleHelloRequest;\nvar H1 = tls.handleServerHello;\nvar H2 = tls.handleCertificate;\nvar H3 = tls.handleServerKeyExchange;\nvar H4 = tls.handleCertificateRequest;\nvar H5 = tls.handleServerHelloDone;\nvar H6 = tls.handleFinished;\nvar hsTable = [];\nhsTable[tls.ConnectionEnd.client] = [\n//      HR,01,SH,03,04,05,06,07,08,09,10,SC,SK,CR,HD,15,CK,17,18,19,FI\n/*SHE*/[__,__,H1,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SCE*/[H0,__,__,__,__,__,__,__,__,__,__,H2,H3,H4,H5,__,__,__,__,__,__],\n/*SKE*/[H0,__,__,__,__,__,__,__,__,__,__,__,H3,H4,H5,__,__,__,__,__,__],\n/*SCR*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,H4,H5,__,__,__,__,__,__],\n/*SHD*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,H5,__,__,__,__,__,__],\n/*SCC*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SFI*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H6],\n/*SAD*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SER*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__]\n];\n\n// map server current expect state and handshake type to function\n// Note: CAD[CH] does not map to FB because renegotation is prohibited\nvar H7 = tls.handleClientHello;\nvar H8 = tls.handleClientKeyExchange;\nvar H9 = tls.handleCertificateVerify;\nhsTable[tls.ConnectionEnd.server] = [\n//      01,CH,02,03,04,05,06,07,08,09,10,CC,12,13,14,CV,CK,17,18,19,FI\n/*CHE*/[__,H7,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CCE*/[__,__,__,__,__,__,__,__,__,__,__,H2,__,__,__,__,__,__,__,__,__],\n/*CKE*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H8,__,__,__,__],\n/*CCV*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H9,__,__,__,__,__],\n/*CCC*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CFI*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H6],\n/*CAD*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CER*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__]\n];\n\n/**\n * Generates the master_secret and keys using the given security parameters.\n *\n * The security parameters for a TLS connection state are defined as such:\n *\n * struct {\n *   ConnectionEnd          entity;\n *   PRFAlgorithm           prf_algorithm;\n *   BulkCipherAlgorithm    bulk_cipher_algorithm;\n *   CipherType             cipher_type;\n *   uint8                  enc_key_length;\n *   uint8                  block_length;\n *   uint8                  fixed_iv_length;\n *   uint8                  record_iv_length;\n *   MACAlgorithm           mac_algorithm;\n *   uint8                  mac_length;\n *   uint8                  mac_key_length;\n *   CompressionMethod      compression_algorithm;\n *   opaque                 master_secret[48];\n *   opaque                 client_random[32];\n *   opaque                 server_random[32];\n * } SecurityParameters;\n *\n * Note that this definition is from TLS 1.2. In TLS 1.0 some of these\n * parameters are ignored because, for instance, the PRFAlgorithm is a\n * builtin-fixed algorithm combining iterations of MD5 and SHA-1 in TLS 1.0.\n *\n * The Record Protocol requires an algorithm to generate keys required by the\n * current connection state.\n *\n * The master secret is expanded into a sequence of secure bytes, which is then\n * split to a client write MAC key, a server write MAC key, a client write\n * encryption key, and a server write encryption key. In TLS 1.0 a client write\n * IV and server write IV are also generated. Each of these is generated from\n * the byte sequence in that order. Unused values are empty. In TLS 1.2, some\n * AEAD ciphers may additionally require a client write IV and a server write\n * IV (see Section 6.2.3.3).\n *\n * When keys, MAC keys, and IVs are generated, the master secret is used as an\n * entropy source.\n *\n * To generate the key material, compute:\n *\n * master_secret = PRF(pre_master_secret, \"master secret\",\n *                     ClientHello.random + ServerHello.random)\n *\n * key_block = PRF(SecurityParameters.master_secret,\n *                 \"key expansion\",\n *                 SecurityParameters.server_random +\n *                 SecurityParameters.client_random);\n *\n * until enough output has been generated. Then, the key_block is\n * partitioned as follows:\n *\n * client_write_MAC_key[SecurityParameters.mac_key_length]\n * server_write_MAC_key[SecurityParameters.mac_key_length]\n * client_write_key[SecurityParameters.enc_key_length]\n * server_write_key[SecurityParameters.enc_key_length]\n * client_write_IV[SecurityParameters.fixed_iv_length]\n * server_write_IV[SecurityParameters.fixed_iv_length]\n *\n * In TLS 1.2, the client_write_IV and server_write_IV are only generated for\n * implicit nonce techniques as described in Section 3.2.1 of [AEAD]. This\n * implementation uses TLS 1.0 so IVs are generated.\n *\n * Implementation note: The currently defined cipher suite which requires the\n * most material is AES_256_CBC_SHA256. It requires 2 x 32 byte keys and 2 x 32\n * byte MAC keys, for a total 128 bytes of key material. In TLS 1.0 it also\n * requires 2 x 16 byte IVs, so it actually takes 160 bytes of key material.\n *\n * @param c the connection.\n * @param sp the security parameters to use.\n *\n * @return the security keys.\n */\ntls.generateKeys = function(c, sp) {\n  // TLS_RSA_WITH_AES_128_CBC_SHA (required to be compliant with TLS 1.2) &\n  // TLS_RSA_WITH_AES_256_CBC_SHA are the only cipher suites implemented\n  // at present\n\n  // TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA is required to be compliant with\n  // TLS 1.0 but we don't care right now because AES is better and we have\n  // an implementation for it\n\n  // TODO: TLS 1.2 implementation\n  /*\n  // determine the PRF\n  var prf;\n  switch(sp.prf_algorithm) {\n  case tls.PRFAlgorithm.tls_prf_sha256:\n    prf = prf_sha256;\n    break;\n  default:\n    // should never happen\n    throw new Error('Invalid PRF');\n  }\n  */\n\n  // TLS 1.0/1.1 implementation\n  var prf = prf_TLS1;\n\n  // concatenate server and client random\n  var random = sp.client_random + sp.server_random;\n\n  // only create master secret if session is new\n  if(!c.session.resuming) {\n    // create master secret, clean up pre-master secret\n    sp.master_secret = prf(\n      sp.pre_master_secret, 'master secret', random, 48).bytes();\n    sp.pre_master_secret = null;\n  }\n\n  // generate the amount of key material needed\n  random = sp.server_random + sp.client_random;\n  var length = 2 * sp.mac_key_length + 2 * sp.enc_key_length;\n\n  // include IV for TLS/1.0\n  var tls10 = (c.version.major === tls.Versions.TLS_1_0.major &&\n    c.version.minor === tls.Versions.TLS_1_0.minor);\n  if(tls10) {\n    length += 2 * sp.fixed_iv_length;\n  }\n  var km = prf(sp.master_secret, 'key expansion', random, length);\n\n  // split the key material into the MAC and encryption keys\n  var rval = {\n    client_write_MAC_key: km.getBytes(sp.mac_key_length),\n    server_write_MAC_key: km.getBytes(sp.mac_key_length),\n    client_write_key: km.getBytes(sp.enc_key_length),\n    server_write_key: km.getBytes(sp.enc_key_length)\n  };\n\n  // include TLS 1.0 IVs\n  if(tls10) {\n    rval.client_write_IV = km.getBytes(sp.fixed_iv_length);\n    rval.server_write_IV = km.getBytes(sp.fixed_iv_length);\n  }\n\n  return rval;\n};\n\n/**\n * Creates a new initialized TLS connection state. A connection state has\n * a read mode and a write mode.\n *\n * compression state:\n *   The current state of the compression algorithm.\n *\n * cipher state:\n *   The current state of the encryption algorithm. This will consist of the\n *   scheduled key for that connection. For stream ciphers, this will also\n *   contain whatever state information is necessary to allow the stream to\n *   continue to encrypt or decrypt data.\n *\n * MAC key:\n *   The MAC key for the connection.\n *\n * sequence number:\n *   Each connection state contains a sequence number, which is maintained\n *   separately for read and write states. The sequence number MUST be set to\n *   zero whenever a connection state is made the active state. Sequence\n *   numbers are of type uint64 and may not exceed 2^64-1. Sequence numbers do\n *   not wrap. If a TLS implementation would need to wrap a sequence number,\n *   it must renegotiate instead. A sequence number is incremented after each\n *   record: specifically, the first record transmitted under a particular\n *   connection state MUST use sequence number 0.\n *\n * @param c the connection.\n *\n * @return the new initialized TLS connection state.\n */\ntls.createConnectionState = function(c) {\n  var client = (c.entity === tls.ConnectionEnd.client);\n\n  var createMode = function() {\n    var mode = {\n      // two 32-bit numbers, first is most significant\n      sequenceNumber: [0, 0],\n      macKey: null,\n      macLength: 0,\n      macFunction: null,\n      cipherState: null,\n      cipherFunction: function(record) {return true;},\n      compressionState: null,\n      compressFunction: function(record) {return true;},\n      updateSequenceNumber: function() {\n        if(mode.sequenceNumber[1] === 0xFFFFFFFF) {\n          mode.sequenceNumber[1] = 0;\n          ++mode.sequenceNumber[0];\n        } else {\n          ++mode.sequenceNumber[1];\n        }\n      }\n    };\n    return mode;\n  };\n  var state = {\n    read: createMode(),\n    write: createMode()\n  };\n\n  // update function in read mode will decrypt then decompress a record\n  state.read.update = function(c, record) {\n    if(!state.read.cipherFunction(record, state.read)) {\n      c.error(c, {\n        message: 'Could not decrypt record or bad MAC.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          // doesn't matter if decryption failed or MAC was\n          // invalid, return the same error so as not to reveal\n          // which one occurred\n          description: tls.Alert.Description.bad_record_mac\n        }\n      });\n    } else if(!state.read.compressFunction(c, record, state.read)) {\n      c.error(c, {\n        message: 'Could not decompress record.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.decompression_failure\n        }\n      });\n    }\n    return !c.fail;\n  };\n\n  // update function in write mode will compress then encrypt a record\n  state.write.update = function(c, record) {\n    if(!state.write.compressFunction(c, record, state.write)) {\n      // error, but do not send alert since it would require\n      // compression as well\n      c.error(c, {\n        message: 'Could not compress record.',\n        send: false,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    } else if(!state.write.cipherFunction(record, state.write)) {\n      // error, but do not send alert since it would require\n      // encryption as well\n      c.error(c, {\n        message: 'Could not encrypt record.',\n        send: false,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    }\n    return !c.fail;\n  };\n\n  // handle security parameters\n  if(c.session) {\n    var sp = c.session.sp;\n    c.session.cipherSuite.initSecurityParameters(sp);\n\n    // generate keys\n    sp.keys = tls.generateKeys(c, sp);\n    state.read.macKey = client ?\n      sp.keys.server_write_MAC_key : sp.keys.client_write_MAC_key;\n    state.write.macKey = client ?\n      sp.keys.client_write_MAC_key : sp.keys.server_write_MAC_key;\n\n    // cipher suite setup\n    c.session.cipherSuite.initConnectionState(state, c, sp);\n\n    // compression setup\n    switch(sp.compression_algorithm) {\n    case tls.CompressionMethod.none:\n      break;\n    case tls.CompressionMethod.deflate:\n      state.read.compressFunction = inflate;\n      state.write.compressFunction = deflate;\n      break;\n    default:\n      throw new Error('Unsupported compression algorithm.');\n    }\n  }\n\n  return state;\n};\n\n/**\n * Creates a Random structure.\n *\n * struct {\n *   uint32 gmt_unix_time;\n *   opaque random_bytes[28];\n * } Random;\n *\n * gmt_unix_time:\n *   The current time and date in standard UNIX 32-bit format (seconds since\n *   the midnight starting Jan 1, 1970, UTC, ignoring leap seconds) according\n *   to the sender's internal clock. Clocks are not required to be set\n *   correctly by the basic TLS protocol; higher-level or application\n *   protocols may define additional requirements. Note that, for historical\n *   reasons, the data element is named using GMT, the predecessor of the\n *   current worldwide time base, UTC.\n * random_bytes:\n *   28 bytes generated by a secure random number generator.\n *\n * @return the Random structure as a byte array.\n */\ntls.createRandom = function() {\n  // get UTC milliseconds\n  var d = new Date();\n  var utc = +d + d.getTimezoneOffset() * 60000;\n  var rval = forge.util.createBuffer();\n  rval.putInt32(utc);\n  rval.putBytes(forge.random.getBytes(28));\n  return rval;\n};\n\n/**\n * Creates a TLS record with the given type and data.\n *\n * @param c the connection.\n * @param options:\n *   type: the record type.\n *   data: the plain text data in a byte buffer.\n *\n * @return the created record.\n */\ntls.createRecord = function(c, options) {\n  if(!options.data) {\n    return null;\n  }\n  var record = {\n    type: options.type,\n    version: {\n      major: c.version.major,\n      minor: c.version.minor\n    },\n    length: options.data.length(),\n    fragment: options.data\n  };\n  return record;\n};\n\n/**\n * Creates a TLS alert record.\n *\n * @param c the connection.\n * @param alert:\n *   level: the TLS alert level.\n *   description: the TLS alert description.\n *\n * @return the created alert record.\n */\ntls.createAlert = function(c, alert) {\n  var b = forge.util.createBuffer();\n  b.putByte(alert.level);\n  b.putByte(alert.description);\n  return tls.createRecord(c, {\n    type: tls.ContentType.alert,\n    data: b\n  });\n};\n\n/* The structure of a TLS handshake message.\n *\n * struct {\n *    HandshakeType msg_type;    // handshake type\n *    uint24 length;             // bytes in message\n *    select(HandshakeType) {\n *       case hello_request:       HelloRequest;\n *       case client_hello:        ClientHello;\n *       case server_hello:        ServerHello;\n *       case certificate:         Certificate;\n *       case server_key_exchange: ServerKeyExchange;\n *       case certificate_request: CertificateRequest;\n *       case server_hello_done:   ServerHelloDone;\n *       case certificate_verify:  CertificateVerify;\n *       case client_key_exchange: ClientKeyExchange;\n *       case finished:            Finished;\n *    } body;\n * } Handshake;\n */\n\n/**\n * Creates a ClientHello message.\n *\n * opaque SessionID<0..32>;\n * enum { null(0), deflate(1), (255) } CompressionMethod;\n * uint8 CipherSuite[2];\n *\n * struct {\n *   ProtocolVersion client_version;\n *   Random random;\n *   SessionID session_id;\n *   CipherSuite cipher_suites<2..2^16-2>;\n *   CompressionMethod compression_methods<1..2^8-1>;\n *   select(extensions_present) {\n *     case false:\n *       struct {};\n *     case true:\n *       Extension extensions<0..2^16-1>;\n *   };\n * } ClientHello;\n *\n * The extension format for extended client hellos and server hellos is:\n *\n * struct {\n *   ExtensionType extension_type;\n *   opaque extension_data<0..2^16-1>;\n * } Extension;\n *\n * Here:\n *\n * - \"extension_type\" identifies the particular extension type.\n * - \"extension_data\" contains information specific to the particular\n * extension type.\n *\n * The extension types defined in this document are:\n *\n * enum {\n *   server_name(0), max_fragment_length(1),\n *   client_certificate_url(2), trusted_ca_keys(3),\n *   truncated_hmac(4), status_request(5), (65535)\n * } ExtensionType;\n *\n * @param c the connection.\n *\n * @return the ClientHello byte buffer.\n */\ntls.createClientHello = function(c) {\n  // save hello version\n  c.session.clientHelloVersion = {\n    major: c.version.major,\n    minor: c.version.minor\n  };\n\n  // create supported cipher suites\n  var cipherSuites = forge.util.createBuffer();\n  for(var i = 0; i < c.cipherSuites.length; ++i) {\n    var cs = c.cipherSuites[i];\n    cipherSuites.putByte(cs.id[0]);\n    cipherSuites.putByte(cs.id[1]);\n  }\n  var cSuites = cipherSuites.length();\n\n  // create supported compression methods, null always supported, but\n  // also support deflate if connection has inflate and deflate methods\n  var compressionMethods = forge.util.createBuffer();\n  compressionMethods.putByte(tls.CompressionMethod.none);\n  // FIXME: deflate support disabled until issues with raw deflate data\n  // without zlib headers are resolved\n  /*\n  if(c.inflate !== null && c.deflate !== null) {\n    compressionMethods.putByte(tls.CompressionMethod.deflate);\n  }\n  */\n  var cMethods = compressionMethods.length();\n\n  // create TLS SNI (server name indication) extension if virtual host\n  // has been specified, see RFC 3546\n  var extensions = forge.util.createBuffer();\n  if(c.virtualHost) {\n    // create extension struct\n    var ext = forge.util.createBuffer();\n    ext.putByte(0x00); // type server_name (ExtensionType is 2 bytes)\n    ext.putByte(0x00);\n\n    /* In order to provide the server name, clients MAY include an\n     * extension of type \"server_name\" in the (extended) client hello.\n     * The \"extension_data\" field of this extension SHALL contain\n     * \"ServerNameList\" where:\n     *\n     * struct {\n     *   NameType name_type;\n     *   select(name_type) {\n     *     case host_name: HostName;\n     *   } name;\n     * } ServerName;\n     *\n     * enum {\n     *   host_name(0), (255)\n     * } NameType;\n     *\n     * opaque HostName<1..2^16-1>;\n     *\n     * struct {\n     *   ServerName server_name_list<1..2^16-1>\n     * } ServerNameList;\n     */\n    var serverName = forge.util.createBuffer();\n    serverName.putByte(0x00); // type host_name\n    writeVector(serverName, 2, forge.util.createBuffer(c.virtualHost));\n\n    // ServerNameList is in extension_data\n    var snList = forge.util.createBuffer();\n    writeVector(snList, 2, serverName);\n    writeVector(ext, 2, snList);\n    extensions.putBuffer(ext);\n  }\n  var extLength = extensions.length();\n  if(extLength > 0) {\n    // add extension vector length\n    extLength += 2;\n  }\n\n  // determine length of the handshake message\n  // cipher suites and compression methods size will need to be\n  // updated if more get added to the list\n  var sessionId = c.session.id;\n  var length =\n    sessionId.length + 1 + // session ID vector\n    2 +                    // version (major + minor)\n    4 + 28 +               // random time and random bytes\n    2 + cSuites +          // cipher suites vector\n    1 + cMethods +         // compression methods vector\n    extLength;             // extensions vector\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.client_hello);\n  rval.putInt24(length);                     // handshake length\n  rval.putByte(c.version.major);             // major version\n  rval.putByte(c.version.minor);             // minor version\n  rval.putBytes(c.session.sp.client_random); // random time + bytes\n  writeVector(rval, 1, forge.util.createBuffer(sessionId));\n  writeVector(rval, 2, cipherSuites);\n  writeVector(rval, 1, compressionMethods);\n  if(extLength > 0) {\n    writeVector(rval, 2, extensions);\n  }\n  return rval;\n};\n\n/**\n * Creates a ServerHello message.\n *\n * @param c the connection.\n *\n * @return the ServerHello byte buffer.\n */\ntls.createServerHello = function(c) {\n  // determine length of the handshake message\n  var sessionId = c.session.id;\n  var length =\n    sessionId.length + 1 + // session ID vector\n    2 +                    // version (major + minor)\n    4 + 28 +               // random time and random bytes\n    2 +                    // chosen cipher suite\n    1;                     // chosen compression method\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.server_hello);\n  rval.putInt24(length);                     // handshake length\n  rval.putByte(c.version.major);             // major version\n  rval.putByte(c.version.minor);             // minor version\n  rval.putBytes(c.session.sp.server_random); // random time + bytes\n  writeVector(rval, 1, forge.util.createBuffer(sessionId));\n  rval.putByte(c.session.cipherSuite.id[0]);\n  rval.putByte(c.session.cipherSuite.id[1]);\n  rval.putByte(c.session.compressionMethod);\n  return rval;\n};\n\n/**\n * Creates a Certificate message.\n *\n * When this message will be sent:\n *   This is the first message the client can send after receiving a server\n *   hello done message and the first message the server can send after\n *   sending a ServerHello. This client message is only sent if the server\n *   requests a certificate. If no suitable certificate is available, the\n *   client should send a certificate message containing no certificates. If\n *   client authentication is required by the server for the handshake to\n *   continue, it may respond with a fatal handshake failure alert.\n *\n * opaque ASN.1Cert<1..2^24-1>;\n *\n * struct {\n *   ASN.1Cert certificate_list<0..2^24-1>;\n * } Certificate;\n *\n * @param c the connection.\n *\n * @return the Certificate byte buffer.\n */\ntls.createCertificate = function(c) {\n  // TODO: check certificate request to ensure types are supported\n\n  // get a certificate (a certificate as a PEM string)\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var cert = null;\n  if(c.getCertificate) {\n    var hint;\n    if(client) {\n      hint = c.session.certificateRequest;\n    } else {\n      hint = c.session.extensions.server_name.serverNameList;\n    }\n    cert = c.getCertificate(c, hint);\n  }\n\n  // buffer to hold certificate list\n  var certList = forge.util.createBuffer();\n  if(cert !== null) {\n    try {\n      // normalize cert to a chain of certificates\n      if(!forge.util.isArray(cert)) {\n        cert = [cert];\n      }\n      var asn1 = null;\n      for(var i = 0; i < cert.length; ++i) {\n        var msg = forge.pem.decode(cert[i])[0];\n        if(msg.type !== 'CERTIFICATE' &&\n          msg.type !== 'X509 CERTIFICATE' &&\n          msg.type !== 'TRUSTED CERTIFICATE') {\n          var error = new Error('Could not convert certificate from PEM; PEM ' +\n            'header type is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or ' +\n            '\"TRUSTED CERTIFICATE\".');\n          error.headerType = msg.type;\n          throw error;\n        }\n        if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n          throw new Error('Could not convert certificate from PEM; PEM is encrypted.');\n        }\n\n        var der = forge.util.createBuffer(msg.body);\n        if(asn1 === null) {\n          asn1 = forge.asn1.fromDer(der.bytes(), false);\n        }\n\n        // certificate entry is itself a vector with 3 length bytes\n        var certBuffer = forge.util.createBuffer();\n        writeVector(certBuffer, 3, der);\n\n        // add cert vector to cert list vector\n        certList.putBuffer(certBuffer);\n      }\n\n      // save certificate\n      cert = forge.pki.certificateFromAsn1(asn1);\n      if(client) {\n        c.session.clientCertificate = cert;\n      } else {\n        c.session.serverCertificate = cert;\n      }\n    } catch(ex) {\n      return c.error(c, {\n        message: 'Could not send certificate list.',\n        cause: ex,\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.bad_certificate\n        }\n      });\n    }\n  }\n\n  // determine length of the handshake message\n  var length = 3 + certList.length(); // cert list vector\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate);\n  rval.putInt24(length);\n  writeVector(rval, 3, certList);\n  return rval;\n};\n\n/**\n * Creates a ClientKeyExchange message.\n *\n * When this message will be sent:\n *   This message is always sent by the client. It will immediately follow the\n *   client certificate message, if it is sent. Otherwise it will be the first\n *   message sent by the client after it receives the server hello done\n *   message.\n *\n * Meaning of this message:\n *   With this message, the premaster secret is set, either though direct\n *   transmission of the RSA-encrypted secret, or by the transmission of\n *   Diffie-Hellman parameters which will allow each side to agree upon the\n *   same premaster secret. When the key exchange method is DH_RSA or DH_DSS,\n *   client certification has been requested, and the client was able to\n *   respond with a certificate which contained a Diffie-Hellman public key\n *   whose parameters (group and generator) matched those specified by the\n *   server in its certificate, this message will not contain any data.\n *\n * Meaning of this message:\n *   If RSA is being used for key agreement and authentication, the client\n *   generates a 48-byte premaster secret, encrypts it using the public key\n *   from the server's certificate or the temporary RSA key provided in a\n *   server key exchange message, and sends the result in an encrypted\n *   premaster secret message. This structure is a variant of the client\n *   key exchange message, not a message in itself.\n *\n * struct {\n *   select(KeyExchangeAlgorithm) {\n *     case rsa: EncryptedPreMasterSecret;\n *     case diffie_hellman: ClientDiffieHellmanPublic;\n *   } exchange_keys;\n * } ClientKeyExchange;\n *\n * struct {\n *   ProtocolVersion client_version;\n *   opaque random[46];\n * } PreMasterSecret;\n *\n * struct {\n *   public-key-encrypted PreMasterSecret pre_master_secret;\n * } EncryptedPreMasterSecret;\n *\n * A public-key-encrypted element is encoded as a vector <0..2^16-1>.\n *\n * @param c the connection.\n *\n * @return the ClientKeyExchange byte buffer.\n */\ntls.createClientKeyExchange = function(c) {\n  // create buffer to encrypt\n  var b = forge.util.createBuffer();\n\n  // add highest client-supported protocol to help server avoid version\n  // rollback attacks\n  b.putByte(c.session.clientHelloVersion.major);\n  b.putByte(c.session.clientHelloVersion.minor);\n\n  // generate and add 46 random bytes\n  b.putBytes(forge.random.getBytes(46));\n\n  // save pre-master secret\n  var sp = c.session.sp;\n  sp.pre_master_secret = b.getBytes();\n\n  // RSA-encrypt the pre-master secret\n  var key = c.session.serverCertificate.publicKey;\n  b = key.encrypt(sp.pre_master_secret);\n\n  /* Note: The encrypted pre-master secret will be stored in a\n    public-key-encrypted opaque vector that has the length prefixed using\n    2 bytes, so include those 2 bytes in the handshake message length. This\n    is done as a minor optimization instead of calling writeVector(). */\n\n  // determine length of the handshake message\n  var length = b.length + 2;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.client_key_exchange);\n  rval.putInt24(length);\n  // add vector length bytes\n  rval.putInt16(b.length);\n  rval.putBytes(b);\n  return rval;\n};\n\n/**\n * Creates a ServerKeyExchange message.\n *\n * @param c the connection.\n *\n * @return the ServerKeyExchange byte buffer.\n */\ntls.createServerKeyExchange = function(c) {\n  // this implementation only supports RSA, no Diffie-Hellman support,\n  // so this record is empty\n\n  // determine length of the handshake message\n  var length = 0;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  if(length > 0) {\n    rval.putByte(tls.HandshakeType.server_key_exchange);\n    rval.putInt24(length);\n  }\n  return rval;\n};\n\n/**\n * Gets the signed data used to verify a client-side certificate. See\n * tls.createCertificateVerify() for details.\n *\n * @param c the connection.\n * @param callback the callback to call once the signed data is ready.\n */\ntls.getClientSignature = function(c, callback) {\n  // generate data to RSA encrypt\n  var b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n  b = b.getBytes();\n\n  // create default signing function as necessary\n  c.getSignature = c.getSignature || function(c, b, callback) {\n    // do rsa encryption, call callback\n    var privateKey = null;\n    if(c.getPrivateKey) {\n      try {\n        privateKey = c.getPrivateKey(c, c.session.clientCertificate);\n        privateKey = forge.pki.privateKeyFromPem(privateKey);\n      } catch(ex) {\n        c.error(c, {\n          message: 'Could not get private key.',\n          cause: ex,\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.internal_error\n          }\n        });\n      }\n    }\n    if(privateKey === null) {\n      c.error(c, {\n        message: 'No private key set.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    } else {\n      b = privateKey.sign(b, null);\n    }\n    callback(c, b);\n  };\n\n  // get client signature\n  c.getSignature(c, b, callback);\n};\n\n/**\n * Creates a CertificateVerify message.\n *\n * Meaning of this message:\n *   This structure conveys the client's Diffie-Hellman public value\n *   (Yc) if it was not already included in the client's certificate.\n *   The encoding used for Yc is determined by the enumerated\n *   PublicValueEncoding. This structure is a variant of the client\n *   key exchange message, not a message in itself.\n *\n * When this message will be sent:\n *   This message is used to provide explicit verification of a client\n *   certificate. This message is only sent following a client\n *   certificate that has signing capability (i.e. all certificates\n *   except those containing fixed Diffie-Hellman parameters). When\n *   sent, it will immediately follow the client key exchange message.\n *\n * struct {\n *   Signature signature;\n * } CertificateVerify;\n *\n * CertificateVerify.signature.md5_hash\n *   MD5(handshake_messages);\n *\n * Certificate.signature.sha_hash\n *   SHA(handshake_messages);\n *\n * Here handshake_messages refers to all handshake messages sent or\n * received starting at client hello up to but not including this\n * message, including the type and length fields of the handshake\n * messages.\n *\n * select(SignatureAlgorithm) {\n *   case anonymous: struct { };\n *   case rsa:\n *     digitally-signed struct {\n *       opaque md5_hash[16];\n *       opaque sha_hash[20];\n *     };\n *   case dsa:\n *     digitally-signed struct {\n *       opaque sha_hash[20];\n *     };\n * } Signature;\n *\n * In digital signing, one-way hash functions are used as input for a\n * signing algorithm. A digitally-signed element is encoded as an opaque\n * vector <0..2^16-1>, where the length is specified by the signing\n * algorithm and key.\n *\n * In RSA signing, a 36-byte structure of two hashes (one SHA and one\n * MD5) is signed (encrypted with the private key). It is encoded with\n * PKCS #1 block type 0 or type 1 as described in [PKCS1].\n *\n * In DSS, the 20 bytes of the SHA hash are run directly through the\n * Digital Signing Algorithm with no additional hashing.\n *\n * @param c the connection.\n * @param signature the signature to include in the message.\n *\n * @return the CertificateVerify byte buffer.\n */\ntls.createCertificateVerify = function(c, signature) {\n  /* Note: The signature will be stored in a \"digitally-signed\" opaque\n    vector that has the length prefixed using 2 bytes, so include those\n    2 bytes in the handshake message length. This is done as a minor\n    optimization instead of calling writeVector(). */\n\n  // determine length of the handshake message\n  var length = signature.length + 2;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate_verify);\n  rval.putInt24(length);\n  // add vector length bytes\n  rval.putInt16(signature.length);\n  rval.putBytes(signature);\n  return rval;\n};\n\n/**\n * Creates a CertificateRequest message.\n *\n * @param c the connection.\n *\n * @return the CertificateRequest byte buffer.\n */\ntls.createCertificateRequest = function(c) {\n  // TODO: support other certificate types\n  var certTypes = forge.util.createBuffer();\n\n  // common RSA certificate type\n  certTypes.putByte(0x01);\n\n  // add distinguished names from CA store\n  var cAs = forge.util.createBuffer();\n  for(var key in c.caStore.certs) {\n    var cert = c.caStore.certs[key];\n    var dn = forge.pki.distinguishedNameToAsn1(cert.subject);\n    var byteBuffer = forge.asn1.toDer(dn);\n    cAs.putInt16(byteBuffer.length());\n    cAs.putBuffer(byteBuffer);\n  }\n\n  // TODO: TLS 1.2+ has a different format\n\n  // determine length of the handshake message\n  var length =\n    1 + certTypes.length() +\n    2 + cAs.length();\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate_request);\n  rval.putInt24(length);\n  writeVector(rval, 1, certTypes);\n  writeVector(rval, 2, cAs);\n  return rval;\n};\n\n/**\n * Creates a ServerHelloDone message.\n *\n * @param c the connection.\n *\n * @return the ServerHelloDone byte buffer.\n */\ntls.createServerHelloDone = function(c) {\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.server_hello_done);\n  rval.putInt24(0);\n  return rval;\n};\n\n/**\n * Creates a ChangeCipherSpec message.\n *\n * The change cipher spec protocol exists to signal transitions in\n * ciphering strategies. The protocol consists of a single message,\n * which is encrypted and compressed under the current (not the pending)\n * connection state. The message consists of a single byte of value 1.\n *\n * struct {\n *   enum { change_cipher_spec(1), (255) } type;\n * } ChangeCipherSpec;\n *\n * @return the ChangeCipherSpec byte buffer.\n */\ntls.createChangeCipherSpec = function() {\n  var rval = forge.util.createBuffer();\n  rval.putByte(0x01);\n  return rval;\n};\n\n/**\n * Creates a Finished message.\n *\n * struct {\n *   opaque verify_data[12];\n * } Finished;\n *\n * verify_data\n *   PRF(master_secret, finished_label, MD5(handshake_messages) +\n *   SHA-1(handshake_messages)) [0..11];\n *\n * finished_label\n *   For Finished messages sent by the client, the string \"client\n *   finished\". For Finished messages sent by the server, the\n *   string \"server finished\".\n *\n * handshake_messages\n *   All of the data from all handshake messages up to but not\n *   including this message. This is only data visible at the\n *   handshake layer and does not include record layer headers.\n *   This is the concatenation of all the Handshake structures as\n *   defined in 7.4 exchanged thus far.\n *\n * @param c the connection.\n *\n * @return the Finished byte buffer.\n */\ntls.createFinished = function(c) {\n  // generate verify_data\n  var b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n\n  // TODO: determine prf function and verify length for TLS 1.2\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var sp = c.session.sp;\n  var vdl = 12;\n  var prf = prf_TLS1;\n  var label = client ? 'client finished' : 'server finished';\n  b = prf(sp.master_secret, label, b.getBytes(), vdl);\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.finished);\n  rval.putInt24(b.length());\n  rval.putBuffer(b);\n  return rval;\n};\n\n/**\n * Creates a HeartbeatMessage (See RFC 6520).\n *\n * struct {\n *   HeartbeatMessageType type;\n *   uint16 payload_length;\n *   opaque payload[HeartbeatMessage.payload_length];\n *   opaque padding[padding_length];\n * } HeartbeatMessage;\n *\n * The total length of a HeartbeatMessage MUST NOT exceed 2^14 or\n * max_fragment_length when negotiated as defined in [RFC6066].\n *\n * type: The message type, either heartbeat_request or heartbeat_response.\n *\n * payload_length: The length of the payload.\n *\n * payload: The payload consists of arbitrary content.\n *\n * padding: The padding is random content that MUST be ignored by the\n *   receiver. The length of a HeartbeatMessage is TLSPlaintext.length\n *   for TLS and DTLSPlaintext.length for DTLS. Furthermore, the\n *   length of the type field is 1 byte, and the length of the\n *   payload_length is 2. Therefore, the padding_length is\n *   TLSPlaintext.length - payload_length - 3 for TLS and\n *   DTLSPlaintext.length - payload_length - 3 for DTLS. The\n *   padding_length MUST be at least 16.\n *\n * The sender of a HeartbeatMessage MUST use a random padding of at\n * least 16 bytes. The padding of a received HeartbeatMessage message\n * MUST be ignored.\n *\n * If the payload_length of a received HeartbeatMessage is too large,\n * the received HeartbeatMessage MUST be discarded silently.\n *\n * @param c the connection.\n * @param type the tls.HeartbeatMessageType.\n * @param payload the heartbeat data to send as the payload.\n * @param [payloadLength] the payload length to use, defaults to the\n *          actual payload length.\n *\n * @return the HeartbeatRequest byte buffer.\n */\ntls.createHeartbeat = function(type, payload, payloadLength) {\n  if(typeof payloadLength === 'undefined') {\n    payloadLength = payload.length;\n  }\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(type);               // heartbeat message type\n  rval.putInt16(payloadLength);     // payload length\n  rval.putBytes(payload);           // payload\n  // padding\n  var plaintextLength = rval.length();\n  var paddingLength = Math.max(16, plaintextLength - payloadLength - 3);\n  rval.putBytes(forge.random.getBytes(paddingLength));\n  return rval;\n};\n\n/**\n * Fragments, compresses, encrypts, and queues a record for delivery.\n *\n * @param c the connection.\n * @param record the record to queue.\n */\ntls.queue = function(c, record) {\n  // error during record creation\n  if(!record) {\n    return;\n  }\n\n  if(record.fragment.length() === 0) {\n    if(record.type === tls.ContentType.handshake ||\n      record.type === tls.ContentType.alert ||\n      record.type === tls.ContentType.change_cipher_spec) {\n      // Empty handshake, alert of change cipher spec messages are not allowed per the TLS specification and should not be sent.\n      return;\n    }\n  }\n\n  // if the record is a handshake record, update handshake hashes\n  if(record.type === tls.ContentType.handshake) {\n    var bytes = record.fragment.bytes();\n    c.session.md5.update(bytes);\n    c.session.sha1.update(bytes);\n    bytes = null;\n  }\n\n  // handle record fragmentation\n  var records;\n  if(record.fragment.length() <= tls.MaxFragment) {\n    records = [record];\n  } else {\n    // fragment data as long as it is too long\n    records = [];\n    var data = record.fragment.bytes();\n    while(data.length > tls.MaxFragment) {\n      records.push(tls.createRecord(c, {\n        type: record.type,\n        data: forge.util.createBuffer(data.slice(0, tls.MaxFragment))\n      }));\n      data = data.slice(tls.MaxFragment);\n    }\n    // add last record\n    if(data.length > 0) {\n      records.push(tls.createRecord(c, {\n        type: record.type,\n        data: forge.util.createBuffer(data)\n      }));\n    }\n  }\n\n  // compress and encrypt all fragmented records\n  for(var i = 0; i < records.length && !c.fail; ++i) {\n    // update the record using current write state\n    var rec = records[i];\n    var s = c.state.current.write;\n    if(s.update(c, rec)) {\n      // store record\n      c.records.push(rec);\n    }\n  }\n};\n\n/**\n * Flushes all queued records to the output buffer and calls the\n * tlsDataReady() handler on the given connection.\n *\n * @param c the connection.\n *\n * @return true on success, false on failure.\n */\ntls.flush = function(c) {\n  for(var i = 0; i < c.records.length; ++i) {\n    var record = c.records[i];\n\n    // add record header and fragment\n    c.tlsData.putByte(record.type);\n    c.tlsData.putByte(record.version.major);\n    c.tlsData.putByte(record.version.minor);\n    c.tlsData.putInt16(record.fragment.length());\n    c.tlsData.putBuffer(c.records[i].fragment);\n  }\n  c.records = [];\n  return c.tlsDataReady(c);\n};\n\n/**\n * Maps a pki.certificateError to a tls.Alert.Description.\n *\n * @param error the error to map.\n *\n * @return the alert description.\n */\nvar _certErrorToAlertDesc = function(error) {\n  switch(error) {\n  case true:\n    return true;\n  case forge.pki.certificateError.bad_certificate:\n    return tls.Alert.Description.bad_certificate;\n  case forge.pki.certificateError.unsupported_certificate:\n    return tls.Alert.Description.unsupported_certificate;\n  case forge.pki.certificateError.certificate_revoked:\n    return tls.Alert.Description.certificate_revoked;\n  case forge.pki.certificateError.certificate_expired:\n    return tls.Alert.Description.certificate_expired;\n  case forge.pki.certificateError.certificate_unknown:\n    return tls.Alert.Description.certificate_unknown;\n  case forge.pki.certificateError.unknown_ca:\n    return tls.Alert.Description.unknown_ca;\n  default:\n    return tls.Alert.Description.bad_certificate;\n  }\n};\n\n/**\n * Maps a tls.Alert.Description to a pki.certificateError.\n *\n * @param desc the alert description.\n *\n * @return the certificate error.\n */\nvar _alertDescToCertError = function(desc) {\n  switch(desc) {\n  case true:\n    return true;\n  case tls.Alert.Description.bad_certificate:\n    return forge.pki.certificateError.bad_certificate;\n  case tls.Alert.Description.unsupported_certificate:\n    return forge.pki.certificateError.unsupported_certificate;\n  case tls.Alert.Description.certificate_revoked:\n    return forge.pki.certificateError.certificate_revoked;\n  case tls.Alert.Description.certificate_expired:\n    return forge.pki.certificateError.certificate_expired;\n  case tls.Alert.Description.certificate_unknown:\n    return forge.pki.certificateError.certificate_unknown;\n  case tls.Alert.Description.unknown_ca:\n    return forge.pki.certificateError.unknown_ca;\n  default:\n    return forge.pki.certificateError.bad_certificate;\n  }\n};\n\n/**\n * Verifies a certificate chain against the given connection's\n * Certificate Authority store.\n *\n * @param c the TLS connection.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end.\n *\n * @return true if successful, false if not.\n */\ntls.verifyCertificateChain = function(c, chain) {\n  try {\n    // Make a copy of c.verifyOptions so that we can modify options.verify\n    // without modifying c.verifyOptions.\n    var options = {};\n    for (var key in c.verifyOptions) {\n      options[key] = c.verifyOptions[key];\n    }\n\n    options.verify = function(vfd, depth, chain) {\n      // convert pki.certificateError to tls alert description\n      var desc = _certErrorToAlertDesc(vfd);\n\n      // call application callback\n      var ret = c.verify(c, vfd, depth, chain);\n      if(ret !== true) {\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          // throw custom error\n          var error = new Error('The application rejected the certificate.');\n          error.send = true;\n          error.alert = {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.bad_certificate\n          };\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.alert) {\n            error.alert.description = ret.alert;\n          }\n          throw error;\n        }\n\n        // convert tls alert description to pki.certificateError\n        if(ret !== vfd) {\n          ret = _alertDescToCertError(ret);\n        }\n      }\n\n      return ret;\n    };\n\n    // verify chain\n    forge.pki.verifyCertificateChain(c.caStore, chain, options);\n  } catch(ex) {\n    // build tls error if not already customized\n    var err = ex;\n    if(typeof err !== 'object' || forge.util.isArray(err)) {\n      err = {\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: _certErrorToAlertDesc(ex)\n        }\n      };\n    }\n    if(!('send' in err)) {\n      err.send = true;\n    }\n    if(!('alert' in err)) {\n      err.alert = {\n        level: tls.Alert.Level.fatal,\n        description: _certErrorToAlertDesc(err.error)\n      };\n    }\n\n    // send error\n    c.error(c, err);\n  }\n\n  return !c.fail;\n};\n\n/**\n * Creates a new TLS session cache.\n *\n * @param cache optional map of session ID to cached session.\n * @param capacity the maximum size for the cache (default: 100).\n *\n * @return the new TLS session cache.\n */\ntls.createSessionCache = function(cache, capacity) {\n  var rval = null;\n\n  // assume input is already a session cache object\n  if(cache && cache.getSession && cache.setSession && cache.order) {\n    rval = cache;\n  } else {\n    // create cache\n    rval = {};\n    rval.cache = cache || {};\n    rval.capacity = Math.max(capacity || 100, 1);\n    rval.order = [];\n\n    // store order for sessions, delete session overflow\n    for(var key in cache) {\n      if(rval.order.length <= capacity) {\n        rval.order.push(key);\n      } else {\n        delete cache[key];\n      }\n    }\n\n    // get a session from a session ID (or get any session)\n    rval.getSession = function(sessionId) {\n      var session = null;\n      var key = null;\n\n      // if session ID provided, use it\n      if(sessionId) {\n        key = forge.util.bytesToHex(sessionId);\n      } else if(rval.order.length > 0) {\n        // get first session from cache\n        key = rval.order[0];\n      }\n\n      if(key !== null && key in rval.cache) {\n        // get cached session and remove from cache\n        session = rval.cache[key];\n        delete rval.cache[key];\n        for(var i in rval.order) {\n          if(rval.order[i] === key) {\n            rval.order.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      return session;\n    };\n\n    // set a session in the cache\n    rval.setSession = function(sessionId, session) {\n      // remove session from cache if at capacity\n      if(rval.order.length === rval.capacity) {\n        var key = rval.order.shift();\n        delete rval.cache[key];\n      }\n      // add session to cache\n      var key = forge.util.bytesToHex(sessionId);\n      rval.order.push(key);\n      rval.cache[key] = session;\n    };\n  }\n\n  return rval;\n};\n\n/**\n * Creates a new TLS connection.\n *\n * See public createConnection() docs for more details.\n *\n * @param options the options for this connection.\n *\n * @return the new TLS connection.\n */\ntls.createConnection = function(options) {\n  var caStore = null;\n  if(options.caStore) {\n    // if CA store is an array, convert it to a CA store object\n    if(forge.util.isArray(options.caStore)) {\n      caStore = forge.pki.createCaStore(options.caStore);\n    } else {\n      caStore = options.caStore;\n    }\n  } else {\n    // create empty CA store\n    caStore = forge.pki.createCaStore();\n  }\n\n  // setup default cipher suites\n  var cipherSuites = options.cipherSuites || null;\n  if(cipherSuites === null) {\n    cipherSuites = [];\n    for(var key in tls.CipherSuites) {\n      cipherSuites.push(tls.CipherSuites[key]);\n    }\n  }\n\n  // set default entity\n  var entity = (options.server || false) ?\n    tls.ConnectionEnd.server : tls.ConnectionEnd.client;\n\n  // create session cache if requested\n  var sessionCache = options.sessionCache ?\n    tls.createSessionCache(options.sessionCache) : null;\n\n  // create TLS connection\n  var c = {\n    version: {major: tls.Version.major, minor: tls.Version.minor},\n    entity: entity,\n    sessionId: options.sessionId,\n    caStore: caStore,\n    sessionCache: sessionCache,\n    cipherSuites: cipherSuites,\n    connected: options.connected,\n    virtualHost: options.virtualHost || null,\n    verifyClient: options.verifyClient || false,\n    verify: options.verify || function(cn, vfd, dpth, cts) {return vfd;},\n    verifyOptions: options.verifyOptions || {},\n    getCertificate: options.getCertificate || null,\n    getPrivateKey: options.getPrivateKey || null,\n    getSignature: options.getSignature || null,\n    input: forge.util.createBuffer(),\n    tlsData: forge.util.createBuffer(),\n    data: forge.util.createBuffer(),\n    tlsDataReady: options.tlsDataReady,\n    dataReady: options.dataReady,\n    heartbeatReceived: options.heartbeatReceived,\n    closed: options.closed,\n    error: function(c, ex) {\n      // set origin if not set\n      ex.origin = ex.origin ||\n        ((c.entity === tls.ConnectionEnd.client) ? 'client' : 'server');\n\n      // send TLS alert\n      if(ex.send) {\n        tls.queue(c, tls.createAlert(c, ex.alert));\n        tls.flush(c);\n      }\n\n      // error is fatal by default\n      var fatal = (ex.fatal !== false);\n      if(fatal) {\n        // set fail flag\n        c.fail = true;\n      }\n\n      // call error handler first\n      options.error(c, ex);\n\n      if(fatal) {\n        // fatal error, close connection, do not clear fail\n        c.close(false);\n      }\n    },\n    deflate: options.deflate || null,\n    inflate: options.inflate || null\n  };\n\n  /**\n   * Resets a closed TLS connection for reuse. Called in c.close().\n   *\n   * @param clearFail true to clear the fail flag (default: true).\n   */\n  c.reset = function(clearFail) {\n    c.version = {major: tls.Version.major, minor: tls.Version.minor};\n    c.record = null;\n    c.session = null;\n    c.peerCertificate = null;\n    c.state = {\n      pending: null,\n      current: null\n    };\n    c.expect = (c.entity === tls.ConnectionEnd.client) ? SHE : CHE;\n    c.fragmented = null;\n    c.records = [];\n    c.open = false;\n    c.handshakes = 0;\n    c.handshaking = false;\n    c.isConnected = false;\n    c.fail = !(clearFail || typeof(clearFail) === 'undefined');\n    c.input.clear();\n    c.tlsData.clear();\n    c.data.clear();\n    c.state.current = tls.createConnectionState(c);\n  };\n\n  // do initial reset of connection\n  c.reset();\n\n  /**\n   * Updates the current TLS engine state based on the given record.\n   *\n   * @param c the TLS connection.\n   * @param record the TLS record to act on.\n   */\n  var _update = function(c, record) {\n    // get record handler (align type in table by subtracting lowest)\n    var aligned = record.type - tls.ContentType.change_cipher_spec;\n    var handlers = ctTable[c.entity][c.expect];\n    if(aligned in handlers) {\n      handlers[aligned](c, record);\n    } else {\n      // unexpected record\n      tls.handleUnexpected(c, record);\n    }\n  };\n\n  /**\n   * Reads the record header and initializes the next record on the given\n   * connection.\n   *\n   * @param c the TLS connection with the next record.\n   *\n   * @return 0 if the input data could be processed, otherwise the\n   *         number of bytes required for data to be processed.\n   */\n  var _readRecordHeader = function(c) {\n    var rval = 0;\n\n    // get input buffer and its length\n    var b = c.input;\n    var len = b.length();\n\n    // need at least 5 bytes to initialize a record\n    if(len < 5) {\n      rval = 5 - len;\n    } else {\n      // enough bytes for header\n      // initialize record\n      c.record = {\n        type: b.getByte(),\n        version: {\n          major: b.getByte(),\n          minor: b.getByte()\n        },\n        length: b.getInt16(),\n        fragment: forge.util.createBuffer(),\n        ready: false\n      };\n\n      // check record version\n      var compatibleVersion = (c.record.version.major === c.version.major);\n      if(compatibleVersion && c.session && c.session.version) {\n        // session version already set, require same minor version\n        compatibleVersion = (c.record.version.minor === c.version.minor);\n      }\n      if(!compatibleVersion) {\n        c.error(c, {\n          message: 'Incompatible TLS version.',\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        });\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Reads the next record's contents and appends its message to any\n   * previously fragmented message.\n   *\n   * @param c the TLS connection with the next record.\n   *\n   * @return 0 if the input data could be processed, otherwise the\n   *         number of bytes required for data to be processed.\n   */\n  var _readRecord = function(c) {\n    var rval = 0;\n\n    // ensure there is enough input data to get the entire record\n    var b = c.input;\n    var len = b.length();\n    if(len < c.record.length) {\n      // not enough data yet, return how much is required\n      rval = c.record.length - len;\n    } else {\n      // there is enough data to parse the pending record\n      // fill record fragment and compact input buffer\n      c.record.fragment.putBytes(b.getBytes(c.record.length));\n      b.compact();\n\n      // update record using current read state\n      var s = c.state.current.read;\n      if(s.update(c, c.record)) {\n        // see if there is a previously fragmented message that the\n        // new record's message fragment should be appended to\n        if(c.fragmented !== null) {\n          // if the record type matches a previously fragmented\n          // record, append the record fragment to it\n          if(c.fragmented.type === c.record.type) {\n            // concatenate record fragments\n            c.fragmented.fragment.putBuffer(c.record.fragment);\n            c.record = c.fragmented;\n          } else {\n            // error, invalid fragmented record\n            c.error(c, {\n              message: 'Invalid fragmented record.',\n              send: true,\n              alert: {\n                level: tls.Alert.Level.fatal,\n                description:\n                  tls.Alert.Description.unexpected_message\n              }\n            });\n          }\n        }\n\n        // record is now ready\n        c.record.ready = true;\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Performs a handshake using the TLS Handshake Protocol, as a client.\n   *\n   * This method should only be called if the connection is in client mode.\n   *\n   * @param sessionId the session ID to use, null to start a new one.\n   */\n  c.handshake = function(sessionId) {\n    // error to call this in non-client mode\n    if(c.entity !== tls.ConnectionEnd.client) {\n      // not fatal error\n      c.error(c, {\n        message: 'Cannot initiate handshake as a server.',\n        fatal: false\n      });\n    } else if(c.handshaking) {\n      // handshake is already in progress, fail but not fatal error\n      c.error(c, {\n        message: 'Handshake already in progress.',\n        fatal: false\n      });\n    } else {\n      // clear fail flag on reuse\n      if(c.fail && !c.open && c.handshakes === 0) {\n        c.fail = false;\n      }\n\n      // now handshaking\n      c.handshaking = true;\n\n      // default to blank (new session)\n      sessionId = sessionId || '';\n\n      // if a session ID was specified, try to find it in the cache\n      var session = null;\n      if(sessionId.length > 0) {\n        if(c.sessionCache) {\n          session = c.sessionCache.getSession(sessionId);\n        }\n\n        // matching session not found in cache, clear session ID\n        if(session === null) {\n          sessionId = '';\n        }\n      }\n\n      // no session given, grab a session from the cache, if available\n      if(sessionId.length === 0 && c.sessionCache) {\n        session = c.sessionCache.getSession();\n        if(session !== null) {\n          sessionId = session.id;\n        }\n      }\n\n      // set up session\n      c.session = {\n        id: sessionId,\n        version: null,\n        cipherSuite: null,\n        compressionMethod: null,\n        serverCertificate: null,\n        certificateRequest: null,\n        clientCertificate: null,\n        sp: {},\n        md5: forge.md.md5.create(),\n        sha1: forge.md.sha1.create()\n      };\n\n      // use existing session information\n      if(session) {\n        // only update version on connection, session version not yet set\n        c.version = session.version;\n        c.session.sp = session.sp;\n      }\n\n      // generate new client random\n      c.session.sp.client_random = tls.createRandom().getBytes();\n\n      // connection now open\n      c.open = true;\n\n      // send hello\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createClientHello(c)\n      }));\n      tls.flush(c);\n    }\n  };\n\n  /**\n   * Called when TLS protocol data has been received from somewhere and should\n   * be processed by the TLS engine.\n   *\n   * @param data the TLS protocol data, as a string, to process.\n   *\n   * @return 0 if the data could be processed, otherwise the number of bytes\n   *         required for data to be processed.\n   */\n  c.process = function(data) {\n    var rval = 0;\n\n    // buffer input data\n    if(data) {\n      c.input.putBytes(data);\n    }\n\n    // process next record if no failure, process will be called after\n    // each record is handled (since handling can be asynchronous)\n    if(!c.fail) {\n      // reset record if ready and now empty\n      if(c.record !== null &&\n        c.record.ready && c.record.fragment.isEmpty()) {\n        c.record = null;\n      }\n\n      // if there is no pending record, try to read record header\n      if(c.record === null) {\n        rval = _readRecordHeader(c);\n      }\n\n      // read the next record (if record not yet ready)\n      if(!c.fail && c.record !== null && !c.record.ready) {\n        rval = _readRecord(c);\n      }\n\n      // record ready to be handled, update engine state\n      if(!c.fail && c.record !== null && c.record.ready) {\n        _update(c, c.record);\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Requests that application data be packaged into a TLS record. The\n   * tlsDataReady handler will be called when the TLS record(s) have been\n   * prepared.\n   *\n   * @param data the application data, as a raw 'binary' encoded string, to\n   *          be sent; to send utf-16/utf-8 string data, use the return value\n   *          of util.encodeUtf8(str).\n   *\n   * @return true on success, false on failure.\n   */\n  c.prepare = function(data) {\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.application_data,\n      data: forge.util.createBuffer(data)\n    }));\n    return tls.flush(c);\n  };\n\n  /**\n   * Requests that a heartbeat request be packaged into a TLS record for\n   * transmission. The tlsDataReady handler will be called when TLS record(s)\n   * have been prepared.\n   *\n   * When a heartbeat response has been received, the heartbeatReceived\n   * handler will be called with the matching payload. This handler can\n   * be used to clear a retransmission timer, etc.\n   *\n   * @param payload the heartbeat data to send as the payload in the message.\n   * @param [payloadLength] the payload length to use, defaults to the\n   *          actual payload length.\n   *\n   * @return true on success, false on failure.\n   */\n  c.prepareHeartbeatRequest = function(payload, payloadLength) {\n    if(payload instanceof forge.util.ByteBuffer) {\n      payload = payload.bytes();\n    }\n    if(typeof payloadLength === 'undefined') {\n      payloadLength = payload.length;\n    }\n    c.expectedHeartbeatPayload = payload;\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.heartbeat,\n      data: tls.createHeartbeat(\n        tls.HeartbeatMessageType.heartbeat_request, payload, payloadLength)\n    }));\n    return tls.flush(c);\n  };\n\n  /**\n   * Closes the connection (sends a close_notify alert).\n   *\n   * @param clearFail true to clear the fail flag (default: true).\n   */\n  c.close = function(clearFail) {\n    // save session if connection didn't fail\n    if(!c.fail && c.sessionCache && c.session) {\n      // only need to preserve session ID, version, and security params\n      var session = {\n        id: c.session.id,\n        version: c.session.version,\n        sp: c.session.sp\n      };\n      session.sp.keys = null;\n      c.sessionCache.setSession(session.id, session);\n    }\n\n    if(c.open) {\n      // connection no longer open, clear input\n      c.open = false;\n      c.input.clear();\n\n      // if connected or handshaking, send an alert\n      if(c.isConnected || c.handshaking) {\n        c.isConnected = c.handshaking = false;\n\n        // send close_notify alert\n        tls.queue(c, tls.createAlert(c, {\n          level: tls.Alert.Level.warning,\n          description: tls.Alert.Description.close_notify\n        }));\n        tls.flush(c);\n      }\n\n      // call handler\n      c.closed(c);\n    }\n\n    // reset TLS connection, do not clear fail flag\n    c.reset(clearFail);\n  };\n\n  return c;\n};\n\n/* TLS API */\nmodule.exports = forge.tls = forge.tls || {};\n\n// expose non-functions\nfor(var key in tls) {\n  if(typeof tls[key] !== 'function') {\n    forge.tls[key] = tls[key];\n  }\n}\n\n// expose prf_tls1 for testing\nforge.tls.prf_tls1 = prf_TLS1;\n\n// expose sha1 hmac method\nforge.tls.hmac_sha1 = hmac_sha1;\n\n// expose session cache creation\nforge.tls.createSessionCache = tls.createSessionCache;\n\n/**\n * Creates a new TLS connection. This does not make any assumptions about the\n * transport layer that TLS is working on top of, ie: it does not assume there\n * is a TCP/IP connection or establish one. A TLS connection is totally\n * abstracted away from the layer is runs on top of, it merely establishes a\n * secure channel between a client\" and a \"server\".\n *\n * A TLS connection contains 4 connection states: pending read and write, and\n * current read and write.\n *\n * At initialization, the current read and write states will be null. Only once\n * the security parameters have been set and the keys have been generated can\n * the pending states be converted into current states. Current states will be\n * updated for each record processed.\n *\n * A custom certificate verify callback may be provided to check information\n * like the common name on the server's certificate. It will be called for\n * every certificate in the chain. It has the following signature:\n *\n * variable func(c, certs, index, preVerify)\n * Where:\n * c         The TLS connection\n * verified  Set to true if certificate was verified, otherwise the alert\n *           tls.Alert.Description for why the certificate failed.\n * depth     The current index in the chain, where 0 is the server's cert.\n * certs     The certificate chain, *NOTE* if the server was anonymous then\n *           the chain will be empty.\n *\n * The function returns true on success and on failure either the appropriate\n * tls.Alert.Description or an object with 'alert' set to the appropriate\n * tls.Alert.Description and 'message' set to a custom error message. If true\n * is not returned then the connection will abort using, in order of\n * availability, first the returned alert description, second the preVerify\n * alert description, and lastly the default 'bad_certificate'.\n *\n * There are three callbacks that can be used to make use of client-side\n * certificates where each takes the TLS connection as the first parameter:\n *\n * getCertificate(conn, hint)\n *   The second parameter is a hint as to which certificate should be\n *   returned. If the connection entity is a client, then the hint will be\n *   the CertificateRequest message from the server that is part of the\n *   TLS protocol. If the connection entity is a server, then it will be\n *   the servername list provided via an SNI extension the ClientHello, if\n *   one was provided (empty array if not). The hint can be examined to\n *   determine which certificate to use (advanced). Most implementations\n *   will just return a certificate. The return value must be a\n *   PEM-formatted certificate or an array of PEM-formatted certificates\n *   that constitute a certificate chain, with the first in the array/chain\n *   being the client's certificate.\n * getPrivateKey(conn, certificate)\n *   The second parameter is an forge.pki X.509 certificate object that\n *   is associated with the requested private key. The return value must\n *   be a PEM-formatted private key.\n * getSignature(conn, bytes, callback)\n *   This callback can be used instead of getPrivateKey if the private key\n *   is not directly accessible in javascript or should not be. For\n *   instance, a secure external web service could provide the signature\n *   in exchange for appropriate credentials. The second parameter is a\n *   string of bytes to be signed that are part of the TLS protocol. These\n *   bytes are used to verify that the private key for the previously\n *   provided client-side certificate is accessible to the client. The\n *   callback is a function that takes 2 parameters, the TLS connection\n *   and the RSA encrypted (signed) bytes as a string. This callback must\n *   be called once the signature is ready.\n *\n * @param options the options for this connection:\n *   server: true if the connection is server-side, false for client.\n *   sessionId: a session ID to reuse, null for a new connection.\n *   caStore: an array of certificates to trust.\n *   sessionCache: a session cache to use.\n *   cipherSuites: an optional array of cipher suites to use,\n *     see tls.CipherSuites.\n *   connected: function(conn) called when the first handshake completes.\n *   virtualHost: the virtual server name to use in a TLS SNI extension.\n *   verifyClient: true to require a client certificate in server mode,\n *     'optional' to request one, false not to (default: false).\n *   verify: a handler used to custom verify certificates in the chain.\n *   verifyOptions: an object with options for the certificate chain validation.\n *     See documentation of pki.verifyCertificateChain for possible options.\n *     verifyOptions.verify is ignored. If you wish to specify a verify handler\n *     use the verify key.\n *   getCertificate: an optional callback used to get a certificate or\n *     a chain of certificates (as an array).\n *   getPrivateKey: an optional callback used to get a private key.\n *   getSignature: an optional callback used to get a signature.\n *   tlsDataReady: function(conn) called when TLS protocol data has been\n *     prepared and is ready to be used (typically sent over a socket\n *     connection to its destination), read from conn.tlsData buffer.\n *   dataReady: function(conn) called when application data has\n *     been parsed from a TLS record and should be consumed by the\n *     application, read from conn.data buffer.\n *   closed: function(conn) called when the connection has been closed.\n *   error: function(conn, error) called when there was an error.\n *   deflate: function(inBytes) if provided, will deflate TLS records using\n *     the deflate algorithm if the server supports it.\n *   inflate: function(inBytes) if provided, will inflate TLS records using\n *     the deflate algorithm if the server supports it.\n *\n * @return the new TLS connection.\n */\nforge.tls.createConnection = tls.createConnection;\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/tls.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process, setImmediate, global, Buffer) {/**\n * Utility functions for web applications.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2018 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\nvar baseN = __webpack_require__(/*! ./baseN */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/baseN.js\");\n\n/* Utilities API */\nvar util = module.exports = forge.util = forge.util || {};\n\n// define setImmediate and nextTick\n(function() {\n  // use native nextTick (unless we're in webpack)\n  // webpack (or better node-libs-browser polyfill) sets process.browser.\n  // this way we can detect webpack properly\n  if(typeof process !== 'undefined' && process.nextTick && !process.browser) {\n    util.nextTick = process.nextTick;\n    if(typeof setImmediate === 'function') {\n      util.setImmediate = setImmediate;\n    } else {\n      // polyfill setImmediate with nextTick, older versions of node\n      // (those w/o setImmediate) won't totally starve IO\n      util.setImmediate = util.nextTick;\n    }\n    return;\n  }\n\n  // polyfill nextTick with native setImmediate\n  if(typeof setImmediate === 'function') {\n    util.setImmediate = function() { return setImmediate.apply(undefined, arguments); };\n    util.nextTick = function(callback) {\n      return setImmediate(callback);\n    };\n    return;\n  }\n\n  /* Note: A polyfill upgrade pattern is used here to allow combining\n  polyfills. For example, MutationObserver is fast, but blocks UI updates,\n  so it needs to allow UI updates periodically, so it falls back on\n  postMessage or setTimeout. */\n\n  // polyfill with setTimeout\n  util.setImmediate = function(callback) {\n    setTimeout(callback, 0);\n  };\n\n  // upgrade polyfill to use postMessage\n  if(typeof window !== 'undefined' &&\n    typeof window.postMessage === 'function') {\n    var msg = 'forge.setImmediate';\n    var callbacks = [];\n    util.setImmediate = function(callback) {\n      callbacks.push(callback);\n      // only send message when one hasn't been sent in\n      // the current turn of the event loop\n      if(callbacks.length === 1) {\n        window.postMessage(msg, '*');\n      }\n    };\n    function handler(event) {\n      if(event.source === window && event.data === msg) {\n        event.stopPropagation();\n        var copy = callbacks.slice();\n        callbacks.length = 0;\n        copy.forEach(function(callback) {\n          callback();\n        });\n      }\n    }\n    window.addEventListener('message', handler, true);\n  }\n\n  // upgrade polyfill to use MutationObserver\n  if(typeof MutationObserver !== 'undefined') {\n    // polyfill with MutationObserver\n    var now = Date.now();\n    var attr = true;\n    var div = document.createElement('div');\n    var callbacks = [];\n    new MutationObserver(function() {\n      var copy = callbacks.slice();\n      callbacks.length = 0;\n      copy.forEach(function(callback) {\n        callback();\n      });\n    }).observe(div, {attributes: true});\n    var oldSetImmediate = util.setImmediate;\n    util.setImmediate = function(callback) {\n      if(Date.now() - now > 15) {\n        now = Date.now();\n        oldSetImmediate(callback);\n      } else {\n        callbacks.push(callback);\n        // only trigger observer when it hasn't been triggered in\n        // the current turn of the event loop\n        if(callbacks.length === 1) {\n          div.setAttribute('a', attr = !attr);\n        }\n      }\n    };\n  }\n\n  util.nextTick = util.setImmediate;\n})();\n\n// check if running under Node.js\nutil.isNodejs =\n  typeof process !== 'undefined' && process.versions && process.versions.node;\n\n\n// 'self' will also work in Web Workers (instance of WorkerGlobalScope) while\n// it will point to `window` in the main thread.\n// To remain compatible with older browsers, we fall back to 'window' if 'self'\n// is not available.\nutil.globalScope = (function() {\n  if(util.isNodejs) {\n    return global;\n  }\n\n  return typeof self === 'undefined' ? window : self;\n})();\n\n// define isArray\nutil.isArray = Array.isArray || function(x) {\n  return Object.prototype.toString.call(x) === '[object Array]';\n};\n\n// define isArrayBuffer\nutil.isArrayBuffer = function(x) {\n  return typeof ArrayBuffer !== 'undefined' && x instanceof ArrayBuffer;\n};\n\n// define isArrayBufferView\nutil.isArrayBufferView = function(x) {\n  return x && util.isArrayBuffer(x.buffer) && x.byteLength !== undefined;\n};\n\n/**\n * Ensure a bits param is 8, 16, 24, or 32. Used to validate input for\n * algorithms where bit manipulation, JavaScript limitations, and/or algorithm\n * design only allow for byte operations of a limited size.\n *\n * @param n number of bits.\n *\n * Throw Error if n invalid.\n */\nfunction _checkBitsParam(n) {\n  if(!(n === 8 || n === 16 || n === 24 || n === 32)) {\n    throw new Error('Only 8, 16, 24, or 32 bits supported: ' + n);\n  }\n}\n\n// TODO: set ByteBuffer to best available backing\nutil.ByteBuffer = ByteStringBuffer;\n\n/** Buffer w/BinaryString backing */\n\n/**\n * Constructor for a binary string backed byte buffer.\n *\n * @param [b] the bytes to wrap (either encoded as string, one byte per\n *          character, or as an ArrayBuffer or Typed Array).\n */\nfunction ByteStringBuffer(b) {\n  // TODO: update to match DataBuffer API\n\n  // the data in this buffer\n  this.data = '';\n  // the pointer for reading from this buffer\n  this.read = 0;\n\n  if(typeof b === 'string') {\n    this.data = b;\n  } else if(util.isArrayBuffer(b) || util.isArrayBufferView(b)) {\n    if(typeof Buffer !== 'undefined' && b instanceof Buffer) {\n      this.data = b.toString('binary');\n    } else {\n      // convert native buffer to forge buffer\n      // FIXME: support native buffers internally instead\n      var arr = new Uint8Array(b);\n      try {\n        this.data = String.fromCharCode.apply(null, arr);\n      } catch(e) {\n        for(var i = 0; i < arr.length; ++i) {\n          this.putByte(arr[i]);\n        }\n      }\n    }\n  } else if(b instanceof ByteStringBuffer ||\n    (typeof b === 'object' && typeof b.data === 'string' &&\n    typeof b.read === 'number')) {\n    // copy existing buffer\n    this.data = b.data;\n    this.read = b.read;\n  }\n\n  // used for v8 optimization\n  this._constructedStringLength = 0;\n}\nutil.ByteStringBuffer = ByteStringBuffer;\n\n/* Note: This is an optimization for V8-based browsers. When V8 concatenates\n  a string, the strings are only joined logically using a \"cons string\" or\n  \"constructed/concatenated string\". These containers keep references to one\n  another and can result in very large memory usage. For example, if a 2MB\n  string is constructed by concatenating 4 bytes together at a time, the\n  memory usage will be ~44MB; so ~22x increase. The strings are only joined\n  together when an operation requiring their joining takes place, such as\n  substr(). This function is called when adding data to this buffer to ensure\n  these types of strings are periodically joined to reduce the memory\n  footprint. */\nvar _MAX_CONSTRUCTED_STRING_LENGTH = 4096;\nutil.ByteStringBuffer.prototype._optimizeConstructedString = function(x) {\n  this._constructedStringLength += x;\n  if(this._constructedStringLength > _MAX_CONSTRUCTED_STRING_LENGTH) {\n    // this substr() should cause the constructed string to join\n    this.data.substr(0, 1);\n    this._constructedStringLength = 0;\n  }\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.ByteStringBuffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.ByteStringBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putByte = function(b) {\n  return this.putBytes(String.fromCharCode(b));\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.fillWithByte = function(b, n) {\n  b = String.fromCharCode(b);\n  var d = this.data;\n  while(n > 0) {\n    if(n & 1) {\n      d += b;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      b += b;\n    }\n  }\n  this.data = d;\n  this._optimizeConstructedString(n);\n  return this;\n};\n\n/**\n * Puts bytes in this buffer.\n *\n * @param bytes the bytes (as a UTF-8 encoded string) to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBytes = function(bytes) {\n  this.data += bytes;\n  this._optimizeConstructedString(bytes.length);\n  return this;\n};\n\n/**\n * Puts a UTF-16 encoded string into this buffer.\n *\n * @param str the string to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putString = function(str) {\n  return this.putBytes(util.encodeUtf8(str));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 24 & 0xFF));\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  var bytes = '';\n  do {\n    n -= 8;\n    bytes += String.fromCharCode((i >> n) & 0xFF);\n  } while(n > 0);\n  return this.putBytes(bytes);\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putSignedInt = function(i, n) {\n  // putInt checks n\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBuffer = function(buffer) {\n  return this.putBytes(buffer.getBytes());\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.getByte = function() {\n  return this.data.charCodeAt(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 8 ^\n    this.data.charCodeAt(this.read + 1));\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 16 ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16 ^\n    this.data.charCodeAt(this.read + 3) << 24);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by ceil(n/8).\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.charCodeAt(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out into a UTF-8 string and clears them from the buffer.\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a UTF-8 string of bytes.\n */\nutil.ByteStringBuffer.prototype.getBytes = function(count) {\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a UTF-8 encoded string of the bytes from this buffer without modifying\n * the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of UTF-8 encoded characters.\n */\nutil.ByteStringBuffer.prototype.bytes = function(count) {\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.at = function(i) {\n  return this.data.charCodeAt(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.setAt = function(i, b) {\n  this.data = this.data.substr(0, this.read + i) +\n    String.fromCharCode(b) +\n    this.data.substr(this.read + i + 1);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.ByteStringBuffer.prototype.last = function() {\n  return this.data.charCodeAt(this.data.length - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.ByteStringBuffer.prototype.copy = function() {\n  var c = util.createBuffer(this.data);\n  c.read = this.read;\n  return c;\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    this.data = this.data.slice(this.read);\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.clear = function() {\n  this.data = '';\n  this.read = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.truncate = function(count) {\n  var len = Math.max(0, this.length() - count);\n  this.data = this.data.substr(this.read, len);\n  this.read = 0;\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.ByteStringBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a UTF-16 string (standard JavaScript string).\n *\n * @return a UTF-16 string.\n */\nutil.ByteStringBuffer.prototype.toString = function() {\n  return util.decodeUtf8(this.bytes());\n};\n\n/** End Buffer w/BinaryString backing */\n\n/** Buffer w/UInt8Array backing */\n\n/**\n * FIXME: Experimental. Do not use yet.\n *\n * Constructor for an ArrayBuffer-backed byte buffer.\n *\n * The buffer may be constructed from a string, an ArrayBuffer, DataView, or a\n * TypedArray.\n *\n * If a string is given, its encoding should be provided as an option,\n * otherwise it will default to 'binary'. A 'binary' string is encoded such\n * that each character is one byte in length and size.\n *\n * If an ArrayBuffer, DataView, or TypedArray is given, it will be used\n * *directly* without any copying. Note that, if a write to the buffer requires\n * more space, the buffer will allocate a new backing ArrayBuffer to\n * accommodate. The starting read and write offsets for the buffer may be\n * given as options.\n *\n * @param [b] the initial bytes for this buffer.\n * @param options the options to use:\n *          [readOffset] the starting read offset to use (default: 0).\n *          [writeOffset] the starting write offset to use (default: the\n *            length of the first parameter).\n *          [growSize] the minimum amount, in bytes, to grow the buffer by to\n *            accommodate writes (default: 1024).\n *          [encoding] the encoding ('binary', 'utf8', 'utf16', 'hex') for the\n *            first parameter, if it is a string (default: 'binary').\n */\nfunction DataBuffer(b, options) {\n  // default options\n  options = options || {};\n\n  // pointers for read from/write to buffer\n  this.read = options.readOffset || 0;\n  this.growSize = options.growSize || 1024;\n\n  var isArrayBuffer = util.isArrayBuffer(b);\n  var isArrayBufferView = util.isArrayBufferView(b);\n  if(isArrayBuffer || isArrayBufferView) {\n    // use ArrayBuffer directly\n    if(isArrayBuffer) {\n      this.data = new DataView(b);\n    } else {\n      // TODO: adjust read/write offset based on the type of view\n      // or specify that this must be done in the options ... that the\n      // offsets are byte-based\n      this.data = new DataView(b.buffer, b.byteOffset, b.byteLength);\n    }\n    this.write = ('writeOffset' in options ?\n      options.writeOffset : this.data.byteLength);\n    return;\n  }\n\n  // initialize to empty array buffer and add any given bytes using putBytes\n  this.data = new DataView(new ArrayBuffer(0));\n  this.write = 0;\n\n  if(b !== null && b !== undefined) {\n    this.putBytes(b);\n  }\n\n  if('writeOffset' in options) {\n    this.write = options.writeOffset;\n  }\n}\nutil.DataBuffer = DataBuffer;\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.DataBuffer.prototype.length = function() {\n  return this.write - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.DataBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Ensures this buffer has enough empty space to accommodate the given number\n * of bytes. An optional parameter may be given that indicates a minimum\n * amount to grow the buffer if necessary. If the parameter is not given,\n * the buffer will be grown by some previously-specified default amount\n * or heuristic.\n *\n * @param amount the number of bytes to accommodate.\n * @param [growSize] the minimum amount, in bytes, to grow the buffer by if\n *          necessary.\n */\nutil.DataBuffer.prototype.accommodate = function(amount, growSize) {\n  if(this.length() >= amount) {\n    return this;\n  }\n  growSize = Math.max(growSize || this.growSize, amount);\n\n  // grow buffer\n  var src = new Uint8Array(\n    this.data.buffer, this.data.byteOffset, this.data.byteLength);\n  var dst = new Uint8Array(this.length() + growSize);\n  dst.set(src);\n  this.data = new DataView(dst.buffer);\n\n  return this;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putByte = function(b) {\n  this.accommodate(1);\n  this.data.setUint8(this.write++, b);\n  return this;\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.fillWithByte = function(b, n) {\n  this.accommodate(n);\n  for(var i = 0; i < n; ++i) {\n    this.data.setUint8(b);\n  }\n  return this;\n};\n\n/**\n * Puts bytes in this buffer. The bytes may be given as a string, an\n * ArrayBuffer, a DataView, or a TypedArray.\n *\n * @param bytes the bytes to put.\n * @param [encoding] the encoding for the first parameter ('binary', 'utf8',\n *          'utf16', 'hex'), if it is a string (default: 'binary').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBytes = function(bytes, encoding) {\n  if(util.isArrayBufferView(bytes)) {\n    var src = new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    var len = src.byteLength - src.byteOffset;\n    this.accommodate(len);\n    var dst = new Uint8Array(this.data.buffer, this.write);\n    dst.set(src);\n    this.write += len;\n    return this;\n  }\n\n  if(util.isArrayBuffer(bytes)) {\n    var src = new Uint8Array(bytes);\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(this.data.buffer);\n    dst.set(src, this.write);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  // bytes is a util.DataBuffer or equivalent\n  if(bytes instanceof util.DataBuffer ||\n    (typeof bytes === 'object' &&\n    typeof bytes.read === 'number' && typeof bytes.write === 'number' &&\n    util.isArrayBufferView(bytes.data))) {\n    var src = new Uint8Array(bytes.data.byteLength, bytes.read, bytes.length());\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(bytes.data.byteLength, this.write);\n    dst.set(src);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  if(bytes instanceof util.ByteStringBuffer) {\n    // copy binary string and process as the same as a string parameter below\n    bytes = bytes.data;\n    encoding = 'binary';\n  }\n\n  // string conversion\n  encoding = encoding || 'binary';\n  if(typeof bytes === 'string') {\n    var view;\n\n    // decode from string\n    if(encoding === 'hex') {\n      this.accommodate(Math.ceil(bytes.length / 2));\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.hex.decode(bytes, view, this.write);\n      return this;\n    }\n    if(encoding === 'base64') {\n      this.accommodate(Math.ceil(bytes.length / 4) * 3);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.base64.decode(bytes, view, this.write);\n      return this;\n    }\n\n    // encode text as UTF-8 bytes\n    if(encoding === 'utf8') {\n      // encode as UTF-8 then decode string as raw binary\n      bytes = util.encodeUtf8(bytes);\n      encoding = 'binary';\n    }\n\n    // decode string as raw binary\n    if(encoding === 'binary' || encoding === 'raw') {\n      // one byte per character\n      this.accommodate(bytes.length);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.raw.decode(view);\n      return this;\n    }\n\n    // encode text as UTF-16 bytes\n    if(encoding === 'utf16') {\n      // two bytes per character\n      this.accommodate(bytes.length * 2);\n      view = new Uint16Array(this.data.buffer, this.write);\n      this.write += util.text.utf16.encode(view);\n      return this;\n    }\n\n    throw new Error('Invalid encoding: ' + encoding);\n  }\n\n  throw Error('Invalid parameter: ' + bytes);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBuffer = function(buffer) {\n  this.putBytes(buffer);\n  buffer.clear();\n  return this;\n};\n\n/**\n * Puts a string into this buffer.\n *\n * @param str the string to put.\n * @param [encoding] the encoding for the string (default: 'utf16').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putString = function(str) {\n  return this.putBytes(str, 'utf16');\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16 = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24 = function(i) {\n  this.accommodate(3);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32 = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16Le = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i, true);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24Le = function(i) {\n  this.accommodate(3);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF, true);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32Le = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i, true);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  do {\n    n -= 8;\n    this.data.setInt8(this.write++, (i >> n) & 0xFF);\n  } while(n > 0);\n  return this;\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putSignedInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.getByte = function() {\n  return this.data.getInt8(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16 = function() {\n  var rval = this.data.getInt16(this.read);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.getInt16(this.read) << 8 ^\n    this.data.getInt8(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32 = function() {\n  var rval = this.data.getInt32(this.read);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16Le = function() {\n  var rval = this.data.getInt16(this.read, true);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.getInt8(this.read) ^\n    this.data.getInt16(this.read + 1, true) << 8);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32Le = function() {\n  var rval = this.data.getInt32(this.read, true);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.getInt8(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out into a UTF-8 string and clears them from the buffer.\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a UTF-8 string of bytes.\n */\nutil.DataBuffer.prototype.getBytes = function(count) {\n  // TODO: deprecate this method, it is poorly named and\n  // this.toString('binary') replaces it\n  // add a toTypedArray()/toArrayBuffer() function\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a UTF-8 encoded string of the bytes from this buffer without modifying\n * the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of UTF-8 encoded characters.\n */\nutil.DataBuffer.prototype.bytes = function(count) {\n  // TODO: deprecate this method, it is poorly named, add \"getString()\"\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.at = function(i) {\n  return this.data.getUint8(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.setAt = function(i, b) {\n  this.data.setUint8(i, b);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.DataBuffer.prototype.last = function() {\n  return this.data.getUint8(this.write - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.DataBuffer.prototype.copy = function() {\n  return new util.DataBuffer(this);\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    var src = new Uint8Array(this.data.buffer, this.read);\n    var dst = new Uint8Array(src.byteLength);\n    dst.set(src);\n    this.data = new DataView(dst);\n    this.write -= this.read;\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.clear = function() {\n  this.data = new DataView(new ArrayBuffer(0));\n  this.read = this.write = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.truncate = function(count) {\n  this.write = Math.max(0, this.length() - count);\n  this.read = Math.min(this.read, this.write);\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.DataBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.byteLength; ++i) {\n    var b = this.data.getUint8(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a string, using the given encoding. If no\n * encoding is given, 'utf8' (UTF-8) is used.\n *\n * @param [encoding] the encoding to use: 'binary', 'utf8', 'utf16', 'hex',\n *          'base64' (default: 'utf8').\n *\n * @return a string representation of the bytes in this buffer.\n */\nutil.DataBuffer.prototype.toString = function(encoding) {\n  var view = new Uint8Array(this.data, this.read, this.length());\n  encoding = encoding || 'utf8';\n\n  // encode to string\n  if(encoding === 'binary' || encoding === 'raw') {\n    return util.binary.raw.encode(view);\n  }\n  if(encoding === 'hex') {\n    return util.binary.hex.encode(view);\n  }\n  if(encoding === 'base64') {\n    return util.binary.base64.encode(view);\n  }\n\n  // decode to text\n  if(encoding === 'utf8') {\n    return util.text.utf8.decode(view);\n  }\n  if(encoding === 'utf16') {\n    return util.text.utf16.decode(view);\n  }\n\n  throw new Error('Invalid encoding: ' + encoding);\n};\n\n/** End Buffer w/UInt8Array backing */\n\n/**\n * Creates a buffer that stores bytes. A value may be given to put into the\n * buffer that is either a string of bytes or a UTF-16 string that will\n * be encoded using UTF-8 (to do the latter, specify 'utf8' as the encoding).\n *\n * @param [input] the bytes to wrap (as a string) or a UTF-16 string to encode\n *          as UTF-8.\n * @param [encoding] (default: 'raw', other: 'utf8').\n */\nutil.createBuffer = function(input, encoding) {\n  // TODO: deprecate, use new ByteBuffer() instead\n  encoding = encoding || 'raw';\n  if(input !== undefined && encoding === 'utf8') {\n    input = util.encodeUtf8(input);\n  }\n  return new util.ByteBuffer(input);\n};\n\n/**\n * Fills a string with a particular value. If you want the string to be a byte\n * string, pass in String.fromCharCode(theByte).\n *\n * @param c the character to fill the string with, use String.fromCharCode\n *          to fill the string with a byte value.\n * @param n the number of characters of value c to fill with.\n *\n * @return the filled string.\n */\nutil.fillString = function(c, n) {\n  var s = '';\n  while(n > 0) {\n    if(n & 1) {\n      s += c;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      c += c;\n    }\n  }\n  return s;\n};\n\n/**\n * Performs a per byte XOR between two byte strings and returns the result as a\n * string of bytes.\n *\n * @param s1 first string of bytes.\n * @param s2 second string of bytes.\n * @param n the number of bytes to XOR.\n *\n * @return the XOR'd result.\n */\nutil.xorBytes = function(s1, s2, n) {\n  var s3 = '';\n  var b = '';\n  var t = '';\n  var i = 0;\n  var c = 0;\n  for(; n > 0; --n, ++i) {\n    b = s1.charCodeAt(i) ^ s2.charCodeAt(i);\n    if(c >= 10) {\n      s3 += t;\n      t = '';\n      c = 0;\n    }\n    t += String.fromCharCode(b);\n    ++c;\n  }\n  s3 += t;\n  return s3;\n};\n\n/**\n * Converts a hex string into a 'binary' encoded string of bytes.\n *\n * @param hex the hexadecimal string to convert.\n *\n * @return the binary-encoded string of bytes.\n */\nutil.hexToBytes = function(hex) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.decode instead.\"\n  var rval = '';\n  var i = 0;\n  if(hex.length & 1 == 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    rval += String.fromCharCode(parseInt(hex[0], 16));\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    rval += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  }\n  return rval;\n};\n\n/**\n * Converts a 'binary' encoded string of bytes to hex.\n *\n * @param bytes the byte string to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.bytesToHex = function(bytes) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.encode instead.\"\n  return util.createBuffer(bytes).toHex();\n};\n\n/**\n * Converts an 32-bit integer to 4-big-endian byte string.\n *\n * @param i the integer.\n *\n * @return the byte string.\n */\nutil.int32ToBytes = function(i) {\n  return (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n// base64 characters, reverse mapping\nvar _base64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nvar _base64Idx = [\n/*43 -43 = 0*/\n/*'+',  1,  2,  3,'/' */\n   62, -1, -1, -1, 63,\n\n/*'0','1','2','3','4','5','6','7','8','9' */\n   52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\n\n/*15, 16, 17,'=', 19, 20, 21 */\n  -1, -1, -1, 64, -1, -1, -1,\n\n/*65 - 43 = 22*/\n/*'A','B','C','D','E','F','G','H','I','J','K','L','M', */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n\n/*'N','O','P','Q','R','S','T','U','V','W','X','Y','Z' */\n   13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n\n/*91 - 43 = 48 */\n/*48, 49, 50, 51, 52, 53 */\n  -1, -1, -1, -1, -1, -1,\n\n/*97 - 43 = 54*/\n/*'a','b','c','d','e','f','g','h','i','j','k','l','m' */\n   26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n\n/*'n','o','p','q','r','s','t','u','v','w','x','y','z' */\n   39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51\n];\n\n// base58 characters (Bitcoin alphabet)\nvar _base58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\n/**\n * Base64 encodes a 'binary' encoded string of bytes.\n *\n * @param input the binary encoded string of bytes to base64-encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output.\n */\nutil.encode64 = function(input, maxline) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.encode instead.\"\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Base64 decodes a string into a 'binary' encoded string of bytes.\n *\n * @param input the base64-encoded input.\n *\n * @return the binary encoded string.\n */\nutil.decode64 = function(input) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.decode instead.\"\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  var output = '';\n  var enc1, enc2, enc3, enc4;\n  var i = 0;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    output += String.fromCharCode((enc1 << 2) | (enc2 >> 4));\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      output += String.fromCharCode(((enc2 & 15) << 4) | (enc3 >> 2));\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        output += String.fromCharCode(((enc3 & 3) << 6) | enc4);\n      }\n    }\n  }\n\n  return output;\n};\n\n/**\n * UTF-8 encodes the given UTF-16 encoded string (a standard JavaScript\n * string). Non-ASCII characters will be encoded as multiple bytes according\n * to UTF-8.\n *\n * @param str the string to encode.\n *\n * @return the UTF-8 encoded string.\n */\nutil.encodeUtf8 = function(str) {\n  return unescape(encodeURIComponent(str));\n};\n\n/**\n * Decodes a UTF-8 encoded string into a UTF-16 string.\n *\n * @param str the string to decode.\n *\n * @return the UTF-16 encoded string (standard JavaScript string).\n */\nutil.decodeUtf8 = function(str) {\n  return decodeURIComponent(escape(str));\n};\n\n// binary encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.binary = {\n  raw: {},\n  hex: {},\n  base64: {},\n  base58: {},\n  baseN : {\n    encode: baseN.encode,\n    decode: baseN.decode\n  }\n};\n\n/**\n * Encodes a Uint8Array as a binary-encoded string. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param bytes the Uint8Array to encode.\n *\n * @return the binary-encoded string.\n */\nutil.binary.raw.encode = function(bytes) {\n  return String.fromCharCode.apply(null, bytes);\n};\n\n/**\n * Decodes a binary-encoded string to a Uint8Array. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param str the binary-encoded string to decode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.raw.decode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Encodes a 'binary' string, ArrayBuffer, DataView, TypedArray, or\n * ByteBuffer as a string of hexadecimal characters.\n *\n * @param bytes the bytes to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.binary.hex.encode = util.bytesToHex;\n\n/**\n * Decodes a hex-encoded string to a Uint8Array.\n *\n * @param hex the hexadecimal string to convert.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.hex.decode = function(hex, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(hex.length / 2));\n  }\n  offset = offset || 0;\n  var i = 0, j = offset;\n  if(hex.length & 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    out[j++] = parseInt(hex[0], 16);\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    out[j++] = parseInt(hex.substr(i, 2), 16);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Base64-encodes a Uint8Array.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output string.\n */\nutil.binary.base64.encode = function(input, maxline) {\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.byteLength) {\n    chr1 = input[i++];\n    chr2 = input[i++];\n    chr3 = input[i++];\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Decodes a base64-encoded string to a Uint8Array.\n *\n * @param input the base64-encoded input string.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.base64.decode = function(input, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(input.length / 4) * 3);\n  }\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  offset = offset || 0;\n  var enc1, enc2, enc3, enc4;\n  var i = 0, j = offset;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    out[j++] = (enc1 << 2) | (enc2 >> 4);\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      out[j++] = ((enc2 & 15) << 4) | (enc3 >> 2);\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        out[j++] = ((enc3 & 3) << 6) | enc4;\n      }\n    }\n  }\n\n  // make sure result is the exact decoded length\n  return output ? (j - offset) : out.subarray(0, j);\n};\n\n// add support for base58 encoding/decoding with Bitcoin alphabet\nutil.binary.base58.encode = function(input, maxline) {\n  return util.binary.baseN.encode(input, _base58, maxline);\n};\nutil.binary.base58.decode = function(input, maxline) {\n  return util.binary.baseN.decode(input, _base58, maxline);\n};\n\n// text encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.text = {\n  utf8: {},\n  utf16: {}\n};\n\n/**\n * Encodes the given string as UTF-8 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf8.encode = function(str, output, offset) {\n  str = util.encodeUtf8(str);\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-8 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf8.decode = function(bytes) {\n  return util.decodeUtf8(String.fromCharCode.apply(null, bytes));\n};\n\n/**\n * Encodes the given string as UTF-16 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf16.encode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length * 2);\n  }\n  var view = new Uint16Array(out.buffer);\n  offset = offset || 0;\n  var j = offset;\n  var k = offset;\n  for(var i = 0; i < str.length; ++i) {\n    view[k++] = str.charCodeAt(i);\n    j += 2;\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-16 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf16.decode = function(bytes) {\n  return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n};\n\n/**\n * Deflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true to return only raw deflate data, false to include zlib\n *          header and trailer.\n *\n * @return the deflated data as a string.\n */\nutil.deflate = function(api, bytes, raw) {\n  bytes = util.decode64(api.deflate(util.encode64(bytes)).rval);\n\n  // strip zlib header and trailer if necessary\n  if(raw) {\n    // zlib header is 2 bytes (CMF,FLG) where FLG indicates that\n    // there is a 4-byte DICT (alder-32) block before the data if\n    // its 5th bit is set\n    var start = 2;\n    var flg = bytes.charCodeAt(1);\n    if(flg & 0x20) {\n      start = 6;\n    }\n    // zlib trailer is 4 bytes of adler-32\n    bytes = bytes.substring(start, bytes.length - 4);\n  }\n\n  return bytes;\n};\n\n/**\n * Inflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true if the incoming data has no zlib header or trailer and is\n *          raw DEFLATE data.\n *\n * @return the inflated data as a string, null on error.\n */\nutil.inflate = function(api, bytes, raw) {\n  // TODO: add zlib header and trailer if necessary/possible\n  var rval = api.inflate(util.encode64(bytes)).rval;\n  return (rval === null) ? null : util.decode64(rval);\n};\n\n/**\n * Sets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param obj the storage object, null to remove.\n */\nvar _setStorageObject = function(api, id, obj) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  var rval;\n  if(obj === null) {\n    rval = api.removeItem(id);\n  } else {\n    // json-encode and base64-encode object\n    obj = util.encode64(JSON.stringify(obj));\n    rval = api.setItem(id, obj);\n  }\n\n  // handle potential flash error\n  if(typeof(rval) !== 'undefined' && rval.rval !== true) {\n    var error = new Error(rval.error.message);\n    error.id = rval.error.id;\n    error.name = rval.error.name;\n    throw error;\n  }\n};\n\n/**\n * Gets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n *\n * @return the storage object entry or null if none exists.\n */\nvar _getStorageObject = function(api, id) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  // get the existing entry\n  var rval = api.getItem(id);\n\n  /* Note: We check api.init because we can't do (api == localStorage)\n    on IE because of \"Class doesn't support Automation\" exception. Only\n    the flash api has an init method so this works too, but we need a\n    better solution in the future. */\n\n  // flash returns item wrapped in an object, handle special case\n  if(api.init) {\n    if(rval.rval === null) {\n      if(rval.error) {\n        var error = new Error(rval.error.message);\n        error.id = rval.error.id;\n        error.name = rval.error.name;\n        throw error;\n      }\n      // no error, but also no item\n      rval = null;\n    } else {\n      rval = rval.rval;\n    }\n  }\n\n  // handle decoding\n  if(rval !== null) {\n    // base64-decode and json-decode data\n    rval = JSON.parse(util.decode64(rval));\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item in local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n */\nvar _setItem = function(api, id, key, data) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj === null) {\n    // create a new storage object\n    obj = {};\n  }\n  // update key\n  obj[key] = data;\n\n  // set storage object\n  _setStorageObject(api, id, obj);\n};\n\n/**\n * Gets an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n *\n * @return the item.\n */\nvar _getItem = function(api, id, key) {\n  // get storage object\n  var rval = _getStorageObject(api, id);\n  if(rval !== null) {\n    // return data at key\n    rval = (key in rval) ? rval[key] : null;\n  }\n\n  return rval;\n};\n\n/**\n * Removes an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n */\nvar _removeItem = function(api, id, key) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj !== null && key in obj) {\n    // remove key\n    delete obj[key];\n\n    // see if entry has no keys remaining\n    var empty = true;\n    for(var prop in obj) {\n      empty = false;\n      break;\n    }\n    if(empty) {\n      // remove entry entirely if no keys are left\n      obj = null;\n    }\n\n    // set storage object\n    _setStorageObject(api, id, obj);\n  }\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n */\nvar _clearItems = function(api, id) {\n  _setStorageObject(api, id, null);\n};\n\n/**\n * Calls a storage function.\n *\n * @param func the function to call.\n * @param args the arguments for the function.\n * @param location the location argument.\n *\n * @return the return value from the function.\n */\nvar _callStorageFunction = function(func, args, location) {\n  var rval = null;\n\n  // default storage types\n  if(typeof(location) === 'undefined') {\n    location = ['web', 'flash'];\n  }\n\n  // apply storage types in order of preference\n  var type;\n  var done = false;\n  var exception = null;\n  for(var idx in location) {\n    type = location[idx];\n    try {\n      if(type === 'flash' || type === 'both') {\n        if(args[0] === null) {\n          throw new Error('Flash local storage not available.');\n        }\n        rval = func.apply(this, args);\n        done = (type === 'flash');\n      }\n      if(type === 'web' || type === 'both') {\n        args[0] = localStorage;\n        rval = func.apply(this, args);\n        done = true;\n      }\n    } catch(ex) {\n      exception = ex;\n    }\n    if(done) {\n      break;\n    }\n  }\n\n  if(!done) {\n    throw exception;\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item on local disk.\n *\n * The available types of local storage include 'flash', 'web', and 'both'.\n *\n * The type 'flash' refers to flash local storage (SharedObject). In order\n * to use flash local storage, the 'api' parameter must be valid. The type\n * 'web' refers to WebStorage, if supported by the browser. The type 'both'\n * refers to storing using both 'flash' and 'web', not just one or the\n * other.\n *\n * The location array should list the storage types to use in order of\n * preference:\n *\n * ['flash']: flash only storage\n * ['web']: web only storage\n * ['both']: try to store in both\n * ['flash','web']: store in flash first, but if not available, 'web'\n * ['web','flash']: store in web first, but if not available, 'flash'\n *\n * The location array defaults to: ['web', 'flash']\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n * @param location an array with the preferred types of storage to use.\n */\nutil.setItem = function(api, id, key, data, location) {\n  _callStorageFunction(_setItem, arguments, location);\n};\n\n/**\n * Gets an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n *\n * @return the item.\n */\nutil.getItem = function(api, id, key, location) {\n  return _callStorageFunction(_getItem, arguments, location);\n};\n\n/**\n * Removes an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n */\nutil.removeItem = function(api, id, key, location) {\n  _callStorageFunction(_removeItem, arguments, location);\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface if flash is available.\n * @param id the storage ID to use.\n * @param location an array with the preferred types of storage to use.\n */\nutil.clearItems = function(api, id, location) {\n  _callStorageFunction(_clearItems, arguments, location);\n};\n\n/**\n * Parses the scheme, host, and port from an http(s) url.\n *\n * @param str the url string.\n *\n * @return the parsed url object or null if the url is invalid.\n */\nutil.parseUrl = function(str) {\n  // FIXME: this regex looks a bit broken\n  var regex = /^(https?):\\/\\/([^:&^\\/]*):?(\\d*)(.*)$/g;\n  regex.lastIndex = 0;\n  var m = regex.exec(str);\n  var url = (m === null) ? null : {\n    full: str,\n    scheme: m[1],\n    host: m[2],\n    port: m[3],\n    path: m[4]\n  };\n  if(url) {\n    url.fullHost = url.host;\n    if(url.port) {\n      if(url.port !== 80 && url.scheme === 'http') {\n        url.fullHost += ':' + url.port;\n      } else if(url.port !== 443 && url.scheme === 'https') {\n        url.fullHost += ':' + url.port;\n      }\n    } else if(url.scheme === 'http') {\n      url.port = 80;\n    } else if(url.scheme === 'https') {\n      url.port = 443;\n    }\n    url.full = url.scheme + '://' + url.fullHost;\n  }\n  return url;\n};\n\n/* Storage for query variables */\nvar _queryVariables = null;\n\n/**\n * Returns the window location query variables. Query is parsed on the first\n * call and the same object is returned on subsequent calls. The mapping\n * is from keys to an array of values. Parameters without values will have\n * an object key set but no value added to the value array. Values are\n * unescaped.\n *\n * ...?k1=v1&k2=v2:\n * {\n *   \"k1\": [\"v1\"],\n *   \"k2\": [\"v2\"]\n * }\n *\n * ...?k1=v1&k1=v2:\n * {\n *   \"k1\": [\"v1\", \"v2\"]\n * }\n *\n * ...?k1=v1&k2:\n * {\n *   \"k1\": [\"v1\"],\n *   \"k2\": []\n * }\n *\n * ...?k1=v1&k1:\n * {\n *   \"k1\": [\"v1\"]\n * }\n *\n * ...?k1&k1:\n * {\n *   \"k1\": []\n * }\n *\n * @param query the query string to parse (optional, default to cached\n *          results from parsing window location search query).\n *\n * @return object mapping keys to variables.\n */\nutil.getQueryVariables = function(query) {\n  var parse = function(q) {\n    var rval = {};\n    var kvpairs = q.split('&');\n    for(var i = 0; i < kvpairs.length; i++) {\n      var pos = kvpairs[i].indexOf('=');\n      var key;\n      var val;\n      if(pos > 0) {\n        key = kvpairs[i].substring(0, pos);\n        val = kvpairs[i].substring(pos + 1);\n      } else {\n        key = kvpairs[i];\n        val = null;\n      }\n      if(!(key in rval)) {\n        rval[key] = [];\n      }\n      // disallow overriding object prototype keys\n      if(!(key in Object.prototype) && val !== null) {\n        rval[key].push(unescape(val));\n      }\n    }\n    return rval;\n  };\n\n   var rval;\n   if(typeof(query) === 'undefined') {\n     // set cached variables if needed\n     if(_queryVariables === null) {\n       if(typeof(window) !== 'undefined' && window.location && window.location.search) {\n          // parse window search query\n          _queryVariables = parse(window.location.search.substring(1));\n       } else {\n          // no query variables available\n          _queryVariables = {};\n       }\n     }\n     rval = _queryVariables;\n   } else {\n     // parse given query\n     rval = parse(query);\n   }\n   return rval;\n};\n\n/**\n * Parses a fragment into a path and query. This method will take a URI\n * fragment and break it up as if it were the main URI. For example:\n *    /bar/baz?a=1&b=2\n * results in:\n *    {\n *       path: [\"bar\", \"baz\"],\n *       query: {\"k1\": [\"v1\"], \"k2\": [\"v2\"]}\n *    }\n *\n * @return object with a path array and query object.\n */\nutil.parseFragment = function(fragment) {\n  // default to whole fragment\n  var fp = fragment;\n  var fq = '';\n  // split into path and query if possible at the first '?'\n  var pos = fragment.indexOf('?');\n  if(pos > 0) {\n    fp = fragment.substring(0, pos);\n    fq = fragment.substring(pos + 1);\n  }\n  // split path based on '/' and ignore first element if empty\n  var path = fp.split('/');\n  if(path.length > 0 && path[0] === '') {\n    path.shift();\n  }\n  // convert query into object\n  var query = (fq === '') ? {} : util.getQueryVariables(fq);\n\n  return {\n    pathString: fp,\n    queryString: fq,\n    path: path,\n    query: query\n  };\n};\n\n/**\n * Makes a request out of a URI-like request string. This is intended to\n * be used where a fragment id (after a URI '#') is parsed as a URI with\n * path and query parts. The string should have a path beginning and\n * delimited by '/' and optional query parameters following a '?'. The\n * query should be a standard URL set of key value pairs delimited by\n * '&'. For backwards compatibility the initial '/' on the path is not\n * required. The request object has the following API, (fully described\n * in the method code):\n *    {\n *       path: <the path string part>.\n *       query: <the query string part>,\n *       getPath(i): get part or all of the split path array,\n *       getQuery(k, i): get part or all of a query key array,\n *       getQueryLast(k, _default): get last element of a query key array.\n *    }\n *\n * @return object with request parameters.\n */\nutil.makeRequest = function(reqString) {\n  var frag = util.parseFragment(reqString);\n  var req = {\n    // full path string\n    path: frag.pathString,\n    // full query string\n    query: frag.queryString,\n    /**\n     * Get path or element in path.\n     *\n     * @param i optional path index.\n     *\n     * @return path or part of path if i provided.\n     */\n    getPath: function(i) {\n      return (typeof(i) === 'undefined') ? frag.path : frag.path[i];\n    },\n    /**\n     * Get query, values for a key, or value for a key index.\n     *\n     * @param k optional query key.\n     * @param i optional query key index.\n     *\n     * @return query, values for a key, or value for a key index.\n     */\n    getQuery: function(k, i) {\n      var rval;\n      if(typeof(k) === 'undefined') {\n        rval = frag.query;\n      } else {\n        rval = frag.query[k];\n        if(rval && typeof(i) !== 'undefined') {\n           rval = rval[i];\n        }\n      }\n      return rval;\n    },\n    getQueryLast: function(k, _default) {\n      var rval;\n      var vals = req.getQuery(k);\n      if(vals) {\n        rval = vals[vals.length - 1];\n      } else {\n        rval = _default;\n      }\n      return rval;\n    }\n  };\n  return req;\n};\n\n/**\n * Makes a URI out of a path, an object with query parameters, and a\n * fragment. Uses jQuery.param() internally for query string creation.\n * If the path is an array, it will be joined with '/'.\n *\n * @param path string path or array of strings.\n * @param query object with query parameters. (optional)\n * @param fragment fragment string. (optional)\n *\n * @return string object with request parameters.\n */\nutil.makeLink = function(path, query, fragment) {\n  // join path parts if needed\n  path = jQuery.isArray(path) ? path.join('/') : path;\n\n  var qstr = jQuery.param(query || {});\n  fragment = fragment || '';\n  return path +\n    ((qstr.length > 0) ? ('?' + qstr) : '') +\n    ((fragment.length > 0) ? ('#' + fragment) : '');\n};\n\n/**\n * Follows a path of keys deep into an object hierarchy and set a value.\n * If a key does not exist or it's value is not an object, create an\n * object in it's place. This can be destructive to a object tree if\n * leaf nodes are given as non-final path keys.\n * Used to avoid exceptions from missing parts of the path.\n *\n * @param object the starting object.\n * @param keys an array of string keys.\n * @param value the value to set.\n */\nutil.setPath = function(object, keys, value) {\n  // need to start at an object\n  if(typeof(object) === 'object' && object !== null) {\n    var i = 0;\n    var len = keys.length;\n    while(i < len) {\n      var next = keys[i++];\n      if(i == len) {\n        // last\n        object[next] = value;\n      } else {\n        // more\n        var hasNext = (next in object);\n        if(!hasNext ||\n          (hasNext && typeof(object[next]) !== 'object') ||\n          (hasNext && object[next] === null)) {\n          object[next] = {};\n        }\n        object = object[next];\n      }\n    }\n  }\n};\n\n/**\n * Follows a path of keys deep into an object hierarchy and return a value.\n * If a key does not exist, create an object in it's place.\n * Used to avoid exceptions from missing parts of the path.\n *\n * @param object the starting object.\n * @param keys an array of string keys.\n * @param _default value to return if path not found.\n *\n * @return the value at the path if found, else default if given, else\n *         undefined.\n */\nutil.getPath = function(object, keys, _default) {\n  var i = 0;\n  var len = keys.length;\n  var hasNext = true;\n  while(hasNext && i < len &&\n    typeof(object) === 'object' && object !== null) {\n    var next = keys[i++];\n    hasNext = next in object;\n    if(hasNext) {\n      object = object[next];\n    }\n  }\n  return (hasNext ? object : _default);\n};\n\n/**\n * Follow a path of keys deep into an object hierarchy and delete the\n * last one. If a key does not exist, do nothing.\n * Used to avoid exceptions from missing parts of the path.\n *\n * @param object the starting object.\n * @param keys an array of string keys.\n */\nutil.deletePath = function(object, keys) {\n  // need to start at an object\n  if(typeof(object) === 'object' && object !== null) {\n    var i = 0;\n    var len = keys.length;\n    while(i < len) {\n      var next = keys[i++];\n      if(i == len) {\n        // last\n        delete object[next];\n      } else {\n        // more\n        if(!(next in object) ||\n          (typeof(object[next]) !== 'object') ||\n          (object[next] === null)) {\n           break;\n        }\n        object = object[next];\n      }\n    }\n  }\n};\n\n/**\n * Check if an object is empty.\n *\n * Taken from:\n * http://stackoverflow.com/questions/679915/how-do-i-test-for-an-empty-javascript-object-from-json/679937#679937\n *\n * @param object the object to check.\n */\nutil.isEmpty = function(obj) {\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Format with simple printf-style interpolation.\n *\n * %%: literal '%'\n * %s,%o: convert next argument into a string.\n *\n * @param format the string to format.\n * @param ... arguments to interpolate into the format string.\n */\nutil.format = function(format) {\n  var re = /%./g;\n  // current match\n  var match;\n  // current part\n  var part;\n  // current arg index\n  var argi = 0;\n  // collected parts to recombine later\n  var parts = [];\n  // last index found\n  var last = 0;\n  // loop while matches remain\n  while((match = re.exec(format))) {\n    part = format.substring(last, re.lastIndex - 2);\n    // don't add empty strings (ie, parts between %s%s)\n    if(part.length > 0) {\n      parts.push(part);\n    }\n    last = re.lastIndex;\n    // switch on % code\n    var code = match[0][1];\n    switch(code) {\n    case 's':\n    case 'o':\n      // check if enough arguments were given\n      if(argi < arguments.length) {\n        parts.push(arguments[argi++ + 1]);\n      } else {\n        parts.push('<?>');\n      }\n      break;\n    // FIXME: do proper formating for numbers, etc\n    //case 'f':\n    //case 'd':\n    case '%':\n      parts.push('%');\n      break;\n    default:\n      parts.push('<%' + code + '?>');\n    }\n  }\n  // add trailing part of format string\n  parts.push(format.substring(last));\n  return parts.join('');\n};\n\n/**\n * Formats a number.\n *\n * http://snipplr.com/view/5945/javascript-numberformat--ported-from-php/\n */\nutil.formatNumber = function(number, decimals, dec_point, thousands_sep) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +     bugfix by: Michael White (http://crestidg.com)\n  // +     bugfix by: Benjamin Lupton\n  // +     bugfix by: Allan Jensen (http://www.winternet.no)\n  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // *     example 1: number_format(1234.5678, 2, '.', '');\n  // *     returns 1: 1234.57\n\n  var n = number, c = isNaN(decimals = Math.abs(decimals)) ? 2 : decimals;\n  var d = dec_point === undefined ? ',' : dec_point;\n  var t = thousands_sep === undefined ?\n   '.' : thousands_sep, s = n < 0 ? '-' : '';\n  var i = parseInt((n = Math.abs(+n || 0).toFixed(c)), 10) + '';\n  var j = (i.length > 3) ? i.length % 3 : 0;\n  return s + (j ? i.substr(0, j) + t : '') +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + t) +\n    (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');\n};\n\n/**\n * Formats a byte size.\n *\n * http://snipplr.com/view/5949/format-humanize-file-byte-size-presentation-in-javascript/\n */\nutil.formatSize = function(size) {\n  if(size >= 1073741824) {\n    size = util.formatNumber(size / 1073741824, 2, '.', '') + ' GiB';\n  } else if(size >= 1048576) {\n    size = util.formatNumber(size / 1048576, 2, '.', '') + ' MiB';\n  } else if(size >= 1024) {\n    size = util.formatNumber(size / 1024, 0) + ' KiB';\n  } else {\n    size = util.formatNumber(size, 0) + ' bytes';\n  }\n  return size;\n};\n\n/**\n * Converts an IPv4 or IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv4 or IPv6 address to convert.\n *\n * @return the 4-byte IPv6 or 16-byte IPv6 address or null if the address can't\n *         be parsed.\n */\nutil.bytesFromIP = function(ip) {\n  if(ip.indexOf('.') !== -1) {\n    return util.bytesFromIPv4(ip);\n  }\n  if(ip.indexOf(':') !== -1) {\n    return util.bytesFromIPv6(ip);\n  }\n  return null;\n};\n\n/**\n * Converts an IPv4 string representation into bytes (in network order).\n *\n * @param ip the IPv4 address to convert.\n *\n * @return the 4-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv4 = function(ip) {\n  ip = ip.split('.');\n  if(ip.length !== 4) {\n    return null;\n  }\n  var b = util.createBuffer();\n  for(var i = 0; i < ip.length; ++i) {\n    var num = parseInt(ip[i], 10);\n    if(isNaN(num)) {\n      return null;\n    }\n    b.putByte(num);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts an IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv6 address to convert.\n *\n * @return the 16-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv6 = function(ip) {\n  var blanks = 0;\n  ip = ip.split(':').filter(function(e) {\n    if(e.length === 0) ++blanks;\n    return true;\n  });\n  var zeros = (8 - ip.length + blanks) * 2;\n  var b = util.createBuffer();\n  for(var i = 0; i < 8; ++i) {\n    if(!ip[i] || ip[i].length === 0) {\n      b.fillWithByte(0, zeros);\n      zeros = 0;\n      continue;\n    }\n    var bytes = util.hexToBytes(ip[i]);\n    if(bytes.length < 2) {\n      b.putByte(0);\n    }\n    b.putBytes(bytes);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation or 16-bytes into\n * an IPv6 string representation. The bytes must be in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 or IPv6 string representation if 4 or 16 bytes,\n *         respectively, are given, otherwise null.\n */\nutil.bytesToIP = function(bytes) {\n  if(bytes.length === 4) {\n    return util.bytesToIPv4(bytes);\n  }\n  if(bytes.length === 16) {\n    return util.bytesToIPv6(bytes);\n  }\n  return null;\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv4 = function(bytes) {\n  if(bytes.length !== 4) {\n    return null;\n  }\n  var ip = [];\n  for(var i = 0; i < bytes.length; ++i) {\n    ip.push(bytes.charCodeAt(i));\n  }\n  return ip.join('.');\n};\n\n/**\n * Converts 16-bytes into an IPv16 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv16 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv6 = function(bytes) {\n  if(bytes.length !== 16) {\n    return null;\n  }\n  var ip = [];\n  var zeroGroups = [];\n  var zeroMaxGroup = 0;\n  for(var i = 0; i < bytes.length; i += 2) {\n    var hex = util.bytesToHex(bytes[i] + bytes[i + 1]);\n    // canonicalize zero representation\n    while(hex[0] === '0' && hex !== '0') {\n      hex = hex.substr(1);\n    }\n    if(hex === '0') {\n      var last = zeroGroups[zeroGroups.length - 1];\n      var idx = ip.length;\n      if(!last || idx !== last.end + 1) {\n        zeroGroups.push({start: idx, end: idx});\n      } else {\n        last.end = idx;\n        if((last.end - last.start) >\n          (zeroGroups[zeroMaxGroup].end - zeroGroups[zeroMaxGroup].start)) {\n          zeroMaxGroup = zeroGroups.length - 1;\n        }\n      }\n    }\n    ip.push(hex);\n  }\n  if(zeroGroups.length > 0) {\n    var group = zeroGroups[zeroMaxGroup];\n    // only shorten group of length > 0\n    if(group.end - group.start > 0) {\n      ip.splice(group.start, group.end - group.start + 1, '');\n      if(group.start === 0) {\n        ip.unshift('');\n      }\n      if(group.end === 7) {\n        ip.push('');\n      }\n    }\n  }\n  return ip.join(':');\n};\n\n/**\n * Estimates the number of processes that can be run concurrently. If\n * creating Web Workers, keep in mind that the main JavaScript process needs\n * its own core.\n *\n * @param options the options to use:\n *          update true to force an update (not use the cached value).\n * @param callback(err, max) called once the operation completes.\n */\nutil.estimateCores = function(options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  if('cores' in util && !options.update) {\n    return callback(null, util.cores);\n  }\n  if(typeof navigator !== 'undefined' &&\n    'hardwareConcurrency' in navigator &&\n    navigator.hardwareConcurrency > 0) {\n    util.cores = navigator.hardwareConcurrency;\n    return callback(null, util.cores);\n  }\n  if(typeof Worker === 'undefined') {\n    // workers not available\n    util.cores = 1;\n    return callback(null, util.cores);\n  }\n  if(typeof Blob === 'undefined') {\n    // can't estimate, default to 2\n    util.cores = 2;\n    return callback(null, util.cores);\n  }\n\n  // create worker concurrency estimation code as blob\n  var blobUrl = URL.createObjectURL(new Blob(['(',\n    function() {\n      self.addEventListener('message', function(e) {\n        // run worker for 4 ms\n        var st = Date.now();\n        var et = st + 4;\n        while(Date.now() < et);\n        self.postMessage({st: st, et: et});\n      });\n    }.toString(),\n  ')()'], {type: 'application/javascript'}));\n\n  // take 5 samples using 16 workers\n  sample([], 5, 16);\n\n  function sample(max, samples, numWorkers) {\n    if(samples === 0) {\n      // get overlap average\n      var avg = Math.floor(max.reduce(function(avg, x) {\n        return avg + x;\n      }, 0) / max.length);\n      util.cores = Math.max(1, avg);\n      URL.revokeObjectURL(blobUrl);\n      return callback(null, util.cores);\n    }\n    map(numWorkers, function(err, results) {\n      max.push(reduce(numWorkers, results));\n      sample(max, samples - 1, numWorkers);\n    });\n  }\n\n  function map(numWorkers, callback) {\n    var workers = [];\n    var results = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      var worker = new Worker(blobUrl);\n      worker.addEventListener('message', function(e) {\n        results.push(e.data);\n        if(results.length === numWorkers) {\n          for(var i = 0; i < numWorkers; ++i) {\n            workers[i].terminate();\n          }\n          callback(null, results);\n        }\n      });\n      workers.push(worker);\n    }\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].postMessage(i);\n    }\n  }\n\n  function reduce(numWorkers, results) {\n    // find overlapping time windows\n    var overlaps = [];\n    for(var n = 0; n < numWorkers; ++n) {\n      var r1 = results[n];\n      var overlap = overlaps[n] = [];\n      for(var i = 0; i < numWorkers; ++i) {\n        if(n === i) {\n          continue;\n        }\n        var r2 = results[i];\n        if((r1.st > r2.st && r1.st < r2.et) ||\n          (r2.st > r1.st && r2.st < r1.et)) {\n          overlap.push(i);\n        }\n      }\n    }\n    // get maximum overlaps ... don't include overlapping worker itself\n    // as the main JS process was also being scheduled during the work and\n    // would have to be subtracted from the estimate anyway\n    return overlaps.reduce(function(max, overlap) {\n      return Math.max(max, overlap.length);\n    }, 0);\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../process/browser.js */ \"../../node_modules/process/browser.js\"), __webpack_require__(/*! ./../../../../../timers-browserify/main.js */ \"../../node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ \"../../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../../../../node-libs-browser/node_modules/buffer/index.js */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js?")},"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/x509.js":function(module,exports,__webpack_require__){eval("/**\n * Javascript implementation of X.509 and related components (such as\n * Certification Signing Requests) of a Public Key Infrastructure.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The ASN.1 representation of an X.509v3 certificate is as follows\n * (see RFC 2459):\n *\n * Certificate ::= SEQUENCE {\n *   tbsCertificate       TBSCertificate,\n *   signatureAlgorithm   AlgorithmIdentifier,\n *   signatureValue       BIT STRING\n * }\n *\n * TBSCertificate ::= SEQUENCE {\n *   version         [0]  EXPLICIT Version DEFAULT v1,\n *   serialNumber         CertificateSerialNumber,\n *   signature            AlgorithmIdentifier,\n *   issuer               Name,\n *   validity             Validity,\n *   subject              Name,\n *   subjectPublicKeyInfo SubjectPublicKeyInfo,\n *   issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   extensions      [3]  EXPLICIT Extensions OPTIONAL\n *                        -- If present, version shall be v3\n * }\n *\n * Version ::= INTEGER  { v1(0), v2(1), v3(2) }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * Name ::= CHOICE {\n *   // only one possible choice for now\n *   RDNSequence\n * }\n *\n * RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n *\n * RelativeDistinguishedName ::= SET OF AttributeTypeAndValue\n *\n * AttributeTypeAndValue ::= SEQUENCE {\n *   type     AttributeType,\n *   value    AttributeValue\n * }\n * AttributeType ::= OBJECT IDENTIFIER\n * AttributeValue ::= ANY DEFINED BY AttributeType\n *\n * Validity ::= SEQUENCE {\n *   notBefore      Time,\n *   notAfter       Time\n * }\n *\n * Time ::= CHOICE {\n *   utcTime        UTCTime,\n *   generalTime    GeneralizedTime\n * }\n *\n * UniqueIdentifier ::= BIT STRING\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm            AlgorithmIdentifier,\n *   subjectPublicKey     BIT STRING\n * }\n *\n * Extensions ::= SEQUENCE SIZE (1..MAX) OF Extension\n *\n * Extension ::= SEQUENCE {\n *   extnID      OBJECT IDENTIFIER,\n *   critical    BOOLEAN DEFAULT FALSE,\n *   extnValue   OCTET STRING\n * }\n *\n * The only key algorithm currently supported for PKI is RSA.\n *\n * RSASSA-PSS signatures are described in RFC 3447 and RFC 4055.\n *\n * PKCS#10 v1.7 describes certificate signing requests:\n *\n * CertificationRequestInfo:\n *\n * CertificationRequestInfo ::= SEQUENCE {\n *   version       INTEGER { v1(0) } (v1,...),\n *   subject       Name,\n *   subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n *   attributes    [0] Attributes{{ CRIAttributes }}\n * }\n *\n * Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n *\n * CRIAttributes  ATTRIBUTE  ::= {\n *   ... -- add any locally defined attributes here -- }\n *\n * Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n *   type   ATTRIBUTE.&id({IOSet}),\n *   values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n * }\n *\n * CertificationRequest ::= SEQUENCE {\n *   certificationRequestInfo CertificationRequestInfo,\n *   signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n *   signature          BIT STRING\n * }\n */\nvar forge = __webpack_require__(/*! ./forge */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./aes */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/aes.js\");\n__webpack_require__(/*! ./asn1 */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/asn1.js\");\n__webpack_require__(/*! ./des */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/des.js\");\n__webpack_require__(/*! ./md */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/md.js\");\n__webpack_require__(/*! ./mgf */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/mgf.js\");\n__webpack_require__(/*! ./oids */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/oids.js\");\n__webpack_require__(/*! ./pem */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pem.js\");\n__webpack_require__(/*! ./pss */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/pss.js\");\n__webpack_require__(/*! ./rsa */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/rsa.js\");\n__webpack_require__(/*! ./util */ \"../../node_modules/@meeco/cryppo/node_modules/node-forge/lib/util.js\");\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\nvar oids = pki.oids;\n\n// short name OID mappings\nvar _shortNames = {};\n_shortNames['CN'] = oids['commonName'];\n_shortNames['commonName'] = 'CN';\n_shortNames['C'] = oids['countryName'];\n_shortNames['countryName'] = 'C';\n_shortNames['L'] = oids['localityName'];\n_shortNames['localityName'] = 'L';\n_shortNames['ST'] = oids['stateOrProvinceName'];\n_shortNames['stateOrProvinceName'] = 'ST';\n_shortNames['O'] = oids['organizationName'];\n_shortNames['organizationName'] = 'O';\n_shortNames['OU'] = oids['organizationalUnitName'];\n_shortNames['organizationalUnitName'] = 'OU';\n_shortNames['E'] = oids['emailAddress'];\n_shortNames['emailAddress'] = 'E';\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator;\n\n// validator for an X.509v3 certificate\nvar x509CertificateValidator = {\n  name: 'Certificate',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Certificate.TBSCertificate',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'tbsCertificate',\n    value: [{\n      name: 'Certificate.TBSCertificate.version',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 0,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.version.integer',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'certVersion'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'certSerialNumber'\n    }, {\n      name: 'Certificate.TBSCertificate.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.signature.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'certinfoSignatureOid'\n      }, {\n        name: 'Certificate.TBSCertificate.signature.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'certinfoSignatureParams'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certIssuer'\n    }, {\n      name: 'Certificate.TBSCertificate.validity',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      // Note: UTC and generalized times may both appear so the capture\n      // names are based on their detected order, the names used below\n      // are only for the common case, which validity time really means\n      // \"notBefore\" and which means \"notAfter\" will be determined by order\n      value: [{\n        // notBefore (Time) (UTC time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity1UTCTime'\n      }, {\n        // notBefore (Time) (generalized time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity2GeneralizedTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity3UTCTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity4GeneralizedTime'\n      }]\n    }, {\n      // Name (subject) (RDNSequence)\n      name: 'Certificate.TBSCertificate.subject',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certSubject'\n    },\n    // SubjectPublicKeyInfo\n    publicKeyValidator,\n    {\n      // issuerUniqueID (optional)\n      name: 'Certificate.TBSCertificate.issuerUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 1,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.issuerUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certIssuerUniqueId'\n      }]\n    }, {\n      // subjectUniqueID (optional)\n      name: 'Certificate.TBSCertificate.subjectUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 2,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.subjectUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certSubjectUniqueId'\n      }]\n    }, {\n      // Extensions (optional)\n      name: 'Certificate.TBSCertificate.extensions',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 3,\n      constructed: true,\n      captureAsn1: 'certExtensions',\n      optional: true\n    }]\n  }, {\n    // AlgorithmIdentifier (signature algorithm)\n    name: 'Certificate.signatureAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      // algorithm\n      name: 'Certificate.signatureAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'certSignatureOid'\n    }, {\n      name: 'Certificate.TBSCertificate.signature.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      optional: true,\n      captureAsn1: 'certSignatureParams'\n    }]\n  }, {\n    // SignatureValue\n    name: 'Certificate.signatureValue',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    captureBitStringValue: 'certSignature'\n  }]\n};\n\nvar rsassaPssParameterValidator = {\n  name: 'rsapss',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'rsapss.hashAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    value: [{\n      name: 'rsapss.hashAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'hashOid'\n        /* parameter block omitted, for SHA1 NULL anyhow. */\n      }]\n    }]\n  }, {\n    name: 'rsapss.maskGenAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    value: [{\n      name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'maskGenOid'\n      }, {\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        value: [{\n          name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'maskGenHashOid'\n          /* parameter block omitted, for SHA1 NULL anyhow. */\n        }]\n      }]\n    }]\n  }, {\n    name: 'rsapss.saltLength',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 2,\n    optional: true,\n    value: [{\n      name: 'rsapss.saltLength.saltLength',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'saltLength'\n    }]\n  }, {\n    name: 'rsapss.trailerField',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 3,\n    optional: true,\n    value: [{\n      name: 'rsapss.trailer.trailer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'trailer'\n    }]\n  }]\n};\n\n// validator for a CertificationRequestInfo structure\nvar certificationRequestInfoValidator = {\n  name: 'CertificationRequestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'certificationRequestInfo',\n  value: [{\n    name: 'CertificationRequestInfo.integer',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'certificationRequestInfoVersion'\n  }, {\n    // Name (subject) (RDNSequence)\n    name: 'CertificationRequestInfo.subject',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'certificationRequestInfoSubject'\n  },\n  // SubjectPublicKeyInfo\n  publicKeyValidator,\n  {\n    name: 'CertificationRequestInfo.attributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'certificationRequestInfoAttributes',\n    value: [{\n      name: 'CertificationRequestInfo.attributes',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'CertificationRequestInfo.attributes.type',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false\n      }, {\n        name: 'CertificationRequestInfo.attributes.value',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SET,\n        constructed: true\n      }]\n    }]\n  }]\n};\n\n// validator for a CertificationRequest structure\nvar certificationRequestValidator = {\n  name: 'CertificationRequest',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'csr',\n  value: [\n    certificationRequestInfoValidator, {\n      // AlgorithmIdentifier (signature algorithm)\n      name: 'CertificationRequest.signatureAlgorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        // algorithm\n        name: 'CertificationRequest.signatureAlgorithm.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'csrSignatureOid'\n      }, {\n        name: 'CertificationRequest.signatureAlgorithm.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'csrSignatureParams'\n      }]\n    }, {\n      // signature\n      name: 'CertificationRequest.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.BITSTRING,\n      constructed: false,\n      captureBitStringValue: 'csrSignature'\n    }\n  ]\n};\n\n/**\n * Converts an RDNSequence of ASN.1 DER-encoded RelativeDistinguishedName\n * sets into an array with objects that have type and value properties.\n *\n * @param rdn the RDNSequence to convert.\n * @param md a message digest to append type and value to if provided.\n */\npki.RDNAttributesAsArray = function(rdn, md) {\n  var rval = [];\n\n  // each value in 'rdn' in is a SET of RelativeDistinguishedName\n  var set, attr, obj;\n  for(var si = 0; si < rdn.value.length; ++si) {\n    // get the RelativeDistinguishedName set\n    set = rdn.value[si];\n\n    // each value in the SET is an AttributeTypeAndValue sequence\n    // containing first a type (an OID) and second a value (defined by\n    // the OID)\n    for(var i = 0; i < set.value.length; ++i) {\n      obj = {};\n      attr = set.value[i];\n      obj.type = asn1.derToOid(attr.value[0].value);\n      obj.value = attr.value[1].value;\n      obj.valueTagClass = attr.value[1].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      if(md) {\n        md.update(obj.type);\n        md.update(obj.value);\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Converts ASN.1 CRIAttributes into an array with objects that have type and\n * value properties.\n *\n * @param attributes the CRIAttributes to convert.\n */\npki.CRIAttributesAsArray = function(attributes) {\n  var rval = [];\n\n  // each value in 'attributes' in is a SEQUENCE with an OID and a SET\n  for(var si = 0; si < attributes.length; ++si) {\n    // get the attribute sequence\n    var seq = attributes[si];\n\n    // each value in the SEQUENCE containing first a type (an OID) and\n    // second a set of values (defined by the OID)\n    var type = asn1.derToOid(seq.value[0].value);\n    var values = seq.value[1].value;\n    for(var vi = 0; vi < values.length; ++vi) {\n      var obj = {};\n      obj.type = type;\n      obj.value = values[vi].value;\n      obj.valueTagClass = values[vi].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      // parse extensions\n      if(obj.type === oids.extensionRequest) {\n        obj.extensions = [];\n        for(var ei = 0; ei < obj.value.length; ++ei) {\n          obj.extensions.push(pki.certificateExtensionFromAsn1(obj.value[ei]));\n        }\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Gets an issuer or subject attribute from its name, type, or short name.\n *\n * @param obj the issuer or subject object.\n * @param options a short name string or an object with:\n *          shortName the short name for the attribute.\n *          name the name for the attribute.\n *          type the type for the attribute.\n *\n * @return the attribute.\n */\nfunction _getAttribute(obj, options) {\n  if(typeof options === 'string') {\n    options = {shortName: options};\n  }\n\n  var rval = null;\n  var attr;\n  for(var i = 0; rval === null && i < obj.attributes.length; ++i) {\n    attr = obj.attributes[i];\n    if(options.type && options.type === attr.type) {\n      rval = attr;\n    } else if(options.name && options.name === attr.name) {\n      rval = attr;\n    } else if(options.shortName && options.shortName === attr.shortName) {\n      rval = attr;\n    }\n  }\n  return rval;\n}\n\n/**\n * Converts signature parameters from ASN.1 structure.\n *\n * Currently only RSASSA-PSS supported.  The PKCS#1 v1.5 signature scheme had\n * no parameters.\n *\n * RSASSA-PSS-params  ::=  SEQUENCE  {\n *   hashAlgorithm      [0] HashAlgorithm DEFAULT\n *                             sha1Identifier,\n *   maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT\n *                             mgf1SHA1Identifier,\n *   saltLength         [2] INTEGER DEFAULT 20,\n *   trailerField       [3] INTEGER DEFAULT 1\n * }\n *\n * HashAlgorithm  ::=  AlgorithmIdentifier\n *\n * MaskGenAlgorithm  ::=  AlgorithmIdentifier\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * @param oid The OID specifying the signature algorithm\n * @param obj The ASN.1 structure holding the parameters\n * @param fillDefaults Whether to use return default values where omitted\n * @return signature parameter object\n */\nvar _readSignatureParameters = function(oid, obj, fillDefaults) {\n  var params = {};\n\n  if(oid !== oids['RSASSA-PSS']) {\n    return params;\n  }\n\n  if(fillDefaults) {\n    params = {\n      hash: {\n        algorithmOid: oids['sha1']\n      },\n      mgf: {\n        algorithmOid: oids['mgf1'],\n        hash: {\n          algorithmOid: oids['sha1']\n        }\n      },\n      saltLength: 20\n    };\n  }\n\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, rsassaPssParameterValidator, capture, errors)) {\n    var error = new Error('Cannot read RSASSA-PSS parameter block.');\n    error.errors = errors;\n    throw error;\n  }\n\n  if(capture.hashOid !== undefined) {\n    params.hash = params.hash || {};\n    params.hash.algorithmOid = asn1.derToOid(capture.hashOid);\n  }\n\n  if(capture.maskGenOid !== undefined) {\n    params.mgf = params.mgf || {};\n    params.mgf.algorithmOid = asn1.derToOid(capture.maskGenOid);\n    params.mgf.hash = params.mgf.hash || {};\n    params.mgf.hash.algorithmOid = asn1.derToOid(capture.maskGenHashOid);\n  }\n\n  if(capture.saltLength !== undefined) {\n    params.saltLength = capture.saltLength.charCodeAt(0);\n  }\n\n  return params;\n};\n\n/**\n * Converts an X.509 certificate from PEM format.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. This will scan the TBSCertificate part of the ASN.1\n * object while it is converted so it doesn't need to be converted back\n * to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certificate.\n */\npki.certificateFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE' &&\n    msg.type !== 'X509 CERTIFICATE' &&\n    msg.type !== 'TRUSTED CERTIFICATE') {\n    var error = new Error(\n      'Could not convert certificate from PEM; PEM header type ' +\n      'is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or \"TRUSTED CERTIFICATE\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error(\n      'Could not convert certificate from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificateFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts an X.509 certificate to PEM format.\n *\n * @param cert the certificate.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certificate.\n */\npki.certificateToPem = function(cert, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE',\n    body: asn1.toDer(pki.certificateToAsn1(cert)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key from PEM format.\n *\n * @param pem the PEM-formatted public key.\n *\n * @return the public key.\n */\npki.publicKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PUBLIC KEY' && msg.type !== 'RSA PUBLIC KEY') {\n    var error = new Error('Could not convert public key from PEM; PEM header ' +\n      'type is not \"PUBLIC KEY\" or \"RSA PUBLIC KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert public key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.publicKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA public key to PEM format (using a SubjectPublicKeyInfo).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key to PEM format (using an RSAPublicKey).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToRSAPublicKeyPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Gets a fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.sha1).\n *          [type] the type of fingerprint, such as 'RSAPublicKey',\n *            'SubjectPublicKeyInfo' (defaults to 'RSAPublicKey').\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\npki.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.sha1.create();\n  var type = options.type || 'RSAPublicKey';\n\n  var bytes;\n  switch(type) {\n    case 'RSAPublicKey':\n      bytes = asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes();\n      break;\n    case 'SubjectPublicKeyInfo':\n      bytes = asn1.toDer(pki.publicKeyToAsn1(key)).getBytes();\n      break;\n    default:\n      throw new Error('Unknown fingerprint type \"' + options.type + '\".');\n  }\n\n  // hash public key bytes\n  md.start();\n  md.update(bytes);\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from PEM format.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. This will scan the CertificationRequestInfo part of\n * the ASN.1 object while it is converted so it doesn't need to be converted\n * back to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE REQUEST') {\n    var error = new Error('Could not convert certification request from PEM; ' +\n      'PEM header type is not \"CERTIFICATE REQUEST\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert certification request from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificationRequestFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) to PEM format.\n *\n * @param csr the certification request.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certification request.\n */\npki.certificationRequestToPem = function(csr, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE REQUEST',\n    body: asn1.toDer(pki.certificationRequestToAsn1(csr)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Creates an empty X.509v3 RSA certificate.\n *\n * @return the certificate.\n */\npki.createCertificate = function() {\n  var cert = {};\n  cert.version = 0x02;\n  cert.serialNumber = '00';\n  cert.signatureOid = null;\n  cert.signature = null;\n  cert.siginfo = {};\n  cert.siginfo.algorithmOid = null;\n  cert.validity = {};\n  cert.validity.notBefore = new Date();\n  cert.validity.notAfter = new Date();\n\n  cert.issuer = {};\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = [];\n  cert.issuer.hash = null;\n\n  cert.subject = {};\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = [];\n  cert.subject.hash = null;\n\n  cert.extensions = [];\n  cert.publicKey = null;\n  cert.md = null;\n\n  /**\n   * Sets the subject of this certificate.\n   *\n   * @param attrs the array of subject attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setSubject = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.subject.attributes = attrs;\n    delete cert.subject.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.subject.uniqueId = uniqueId;\n    }\n    cert.subject.hash = null;\n  };\n\n  /**\n   * Sets the issuer of this certificate.\n   *\n   * @param attrs the array of issuer attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setIssuer = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.issuer.attributes = attrs;\n    delete cert.issuer.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.issuer.uniqueId = uniqueId;\n    }\n    cert.issuer.hash = null;\n  };\n\n  /**\n   * Sets the extensions of this certificate.\n   *\n   * @param exts the array of extensions to use.\n   */\n  cert.setExtensions = function(exts) {\n    for(var i = 0; i < exts.length; ++i) {\n      _fillMissingExtensionFields(exts[i], {cert: cert});\n    }\n    // set new extensions\n    cert.extensions = exts;\n  };\n\n  /**\n   * Gets an extension by its name or id.\n   *\n   * @param options the name to use or an object with:\n   *          name the name to use.\n   *          id the id to use.\n   *\n   * @return the extension or null if not found.\n   */\n  cert.getExtension = function(options) {\n    if(typeof options === 'string') {\n      options = {name: options};\n    }\n\n    var rval = null;\n    var ext;\n    for(var i = 0; rval === null && i < cert.extensions.length; ++i) {\n      ext = cert.extensions[i];\n      if(options.id && ext.id === options.id) {\n        rval = ext;\n      } else if(options.name && ext.name === options.name) {\n        rval = ext;\n      }\n    }\n    return rval;\n  };\n\n  /**\n   * Signs this certificate using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  cert.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    cert.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[cert.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = cert.md.algorithm;\n      throw error;\n    }\n    cert.signatureOid = cert.siginfo.algorithmOid = algorithmOid;\n\n    // get TBSCertificate, convert to DER\n    cert.tbsCertificate = pki.getTBSCertificate(cert);\n    var bytes = asn1.toDer(cert.tbsCertificate);\n\n    // digest and sign\n    cert.md.update(bytes.getBytes());\n    cert.signature = key.sign(cert.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certificate using this\n   * certificate's public key.\n   *\n   * @param child the certificate to verify.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verify = function(child) {\n    var rval = false;\n\n    if(!cert.issued(child)) {\n      var issuer = child.issuer;\n      var subject = cert.subject;\n      var error = new Error(\n        'The parent certificate did not issue the given child ' +\n        'certificate; the child certificate\\'s issuer does not match the ' +\n        'parent\\'s subject.');\n      error.expectedIssuer = issuer.attributes;\n      error.actualIssuer = subject.attributes;\n      throw error;\n    }\n\n    var md = child.md;\n    if(md === null) {\n      // check signature OID for supported signature types\n      if(child.signatureOid in oids) {\n        var oid = oids[child.signatureOid];\n        switch(oid) {\n          case 'sha1WithRSAEncryption':\n            md = forge.md.sha1.create();\n            break;\n          case 'md5WithRSAEncryption':\n            md = forge.md.md5.create();\n            break;\n          case 'sha256WithRSAEncryption':\n            md = forge.md.sha256.create();\n            break;\n          case 'sha384WithRSAEncryption':\n            md = forge.md.sha384.create();\n            break;\n          case 'sha512WithRSAEncryption':\n            md = forge.md.sha512.create();\n            break;\n          case 'RSASSA-PSS':\n            md = forge.md.sha256.create();\n            break;\n        }\n      }\n      if(md === null) {\n        var error = new Error('Could not compute certificate digest. ' +\n          'Unknown signature OID.');\n        error.signatureOid = child.signatureOid;\n        throw error;\n      }\n\n      // produce DER formatted TBSCertificate and digest it\n      var tbsCertificate = child.tbsCertificate || pki.getTBSCertificate(child);\n      var bytes = asn1.toDer(tbsCertificate);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      var scheme;\n\n      switch(child.signatureOid) {\n        case oids.sha1WithRSAEncryption:\n          scheme = undefined; /* use PKCS#1 v1.5 padding scheme */\n          break;\n        case oids['RSASSA-PSS']:\n          var hash, mgf;\n\n          /* initialize mgf */\n          hash = oids[child.signatureParameters.mgf.hash.algorithmOid];\n          if(hash === undefined || forge.md[hash] === undefined) {\n            var error = new Error('Unsupported MGF hash function.');\n            error.oid = child.signatureParameters.mgf.hash.algorithmOid;\n            error.name = hash;\n            throw error;\n          }\n\n          mgf = oids[child.signatureParameters.mgf.algorithmOid];\n          if(mgf === undefined || forge.mgf[mgf] === undefined) {\n            var error = new Error('Unsupported MGF function.');\n            error.oid = child.signatureParameters.mgf.algorithmOid;\n            error.name = mgf;\n            throw error;\n          }\n\n          mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n          /* initialize hash function */\n          hash = oids[child.signatureParameters.hash.algorithmOid];\n          if(hash === undefined || forge.md[hash] === undefined) {\n            throw {\n              message: 'Unsupported RSASSA-PSS hash function.',\n              oid: child.signatureParameters.hash.algorithmOid,\n              name: hash\n            };\n          }\n\n          scheme = forge.pss.create(forge.md[hash].create(), mgf,\n            child.signatureParameters.saltLength);\n          break;\n      }\n\n      // verify signature on cert using public key\n      rval = cert.publicKey.verify(\n        md.digest().getBytes(), child.signature, scheme);\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's issuer matches the passed\n   * certificate's subject. Note that no signature check is performed.\n   *\n   * @param parent the certificate to check.\n   *\n   * @return true if this certificate's issuer matches the passed certificate's\n   *         subject.\n   */\n  cert.isIssuer = function(parent) {\n    var rval = false;\n\n    var i = cert.issuer;\n    var s = parent.subject;\n\n    // compare hashes if present\n    if(i.hash && s.hash) {\n      rval = (i.hash === s.hash);\n    } else if(i.attributes.length === s.attributes.length) {\n      // all attributes are the same so issuer matches subject\n      rval = true;\n      var iattr, sattr;\n      for(var n = 0; rval && n < i.attributes.length; ++n) {\n        iattr = i.attributes[n];\n        sattr = s.attributes[n];\n        if(iattr.type !== sattr.type || iattr.value !== sattr.value) {\n          // attribute mismatch\n          rval = false;\n        }\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's subject matches the issuer of the\n   * given certificate). Note that not signature check is performed.\n   *\n   * @param child the certificate to check.\n   *\n   * @return true if this certificate's subject matches the passed\n   *         certificate's issuer.\n   */\n  cert.issued = function(child) {\n    return child.isIssuer(cert);\n  };\n\n  /**\n   * Generates the subjectKeyIdentifier for this certificate as byte buffer.\n   *\n   * @return the subjectKeyIdentifier for this certificate as byte buffer.\n   */\n  cert.generateSubjectKeyIdentifier = function() {\n    /* See: 4.2.1.2 section of the the RFC3280, keyIdentifier is either:\n\n      (1) The keyIdentifier is composed of the 160-bit SHA-1 hash of the\n        value of the BIT STRING subjectPublicKey (excluding the tag,\n        length, and number of unused bits).\n\n      (2) The keyIdentifier is composed of a four bit type field with\n        the value 0100 followed by the least significant 60 bits of the\n        SHA-1 hash of the value of the BIT STRING subjectPublicKey\n        (excluding the tag, length, and number of unused bit string bits).\n    */\n\n    // skipping the tag, length, and number of unused bits is the same\n    // as just using the RSAPublicKey (for RSA keys, which are the\n    // only ones supported)\n    return pki.getPublicKeyFingerprint(cert.publicKey, {type: 'RSAPublicKey'});\n  };\n\n  /**\n   * Verifies the subjectKeyIdentifier extension value for this certificate\n   * against its public key. If no extension is found, false will be\n   * returned.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verifySubjectKeyIdentifier = function() {\n    var oid = oids['subjectKeyIdentifier'];\n    for(var i = 0; i < cert.extensions.length; ++i) {\n      var ext = cert.extensions[i];\n      if(ext.id === oid) {\n        var ski = cert.generateSubjectKeyIdentifier().getBytes();\n        return (forge.util.hexToBytes(ext.subjectKeyIdentifier) === ski);\n      }\n    }\n    return false;\n  };\n\n  return cert;\n};\n\n/**\n * Converts an X.509v3 RSA certificate from an ASN.1 object.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the TBSCertificate part of the ASN.1\n * object needs to be scanned before the cert object is created.\n *\n * @param obj the asn1 representation of an X.509v3 RSA certificate.\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certificate.\n */\npki.certificateFromAsn1 = function(obj, computeHash) {\n  // validate certificate and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, x509CertificateValidator, capture, errors)) {\n    var error = new Error('Cannot read X.509 certificate. ' +\n      'ASN.1 object is not an X509v3 Certificate.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certificate\n  var cert = pki.createCertificate();\n  cert.version = capture.certVersion ?\n    capture.certVersion.charCodeAt(0) : 0;\n  var serial = forge.util.createBuffer(capture.certSerialNumber);\n  cert.serialNumber = serial.toHex();\n  cert.signatureOid = forge.asn1.derToOid(capture.certSignatureOid);\n  cert.signatureParameters = _readSignatureParameters(\n    cert.signatureOid, capture.certSignatureParams, true);\n  cert.siginfo.algorithmOid = forge.asn1.derToOid(capture.certinfoSignatureOid);\n  cert.siginfo.parameters = _readSignatureParameters(cert.siginfo.algorithmOid,\n    capture.certinfoSignatureParams, false);\n  cert.signature = capture.certSignature;\n\n  var validity = [];\n  if(capture.certValidity1UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity1UTCTime));\n  }\n  if(capture.certValidity2GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity2GeneralizedTime));\n  }\n  if(capture.certValidity3UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity3UTCTime));\n  }\n  if(capture.certValidity4GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity4GeneralizedTime));\n  }\n  if(validity.length > 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; more ' +\n      'than two times were provided in the certificate.');\n  }\n  if(validity.length < 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; they ' +\n      'were not provided as either UTCTime or GeneralizedTime.');\n  }\n  cert.validity.notBefore = validity[0];\n  cert.validity.notAfter = validity[1];\n\n  // keep TBSCertificate to preserve signature when exporting\n  cert.tbsCertificate = capture.tbsCertificate;\n\n  if(computeHash) {\n    // check signature OID for supported signature types\n    cert.md = null;\n    if(cert.signatureOid in oids) {\n      var oid = oids[cert.signatureOid];\n      switch(oid) {\n        case 'sha1WithRSAEncryption':\n          cert.md = forge.md.sha1.create();\n          break;\n        case 'md5WithRSAEncryption':\n          cert.md = forge.md.md5.create();\n          break;\n        case 'sha256WithRSAEncryption':\n          cert.md = forge.md.sha256.create();\n          break;\n        case 'sha384WithRSAEncryption':\n          cert.md = forge.md.sha384.create();\n          break;\n        case 'sha512WithRSAEncryption':\n          cert.md = forge.md.sha512.create();\n          break;\n        case 'RSASSA-PSS':\n          cert.md = forge.md.sha256.create();\n          break;\n      }\n    }\n    if(cert.md === null) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = cert.signatureOid;\n      throw error;\n    }\n\n    // produce DER formatted TBSCertificate and digest it\n    var bytes = asn1.toDer(cert.tbsCertificate);\n    cert.md.update(bytes.getBytes());\n  }\n\n  // handle issuer, build issuer message digest\n  var imd = forge.md.sha1.create();\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = pki.RDNAttributesAsArray(capture.certIssuer, imd);\n  if(capture.certIssuerUniqueId) {\n    cert.issuer.uniqueId = capture.certIssuerUniqueId;\n  }\n  cert.issuer.hash = imd.digest().toHex();\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = pki.RDNAttributesAsArray(capture.certSubject, smd);\n  if(capture.certSubjectUniqueId) {\n    cert.subject.uniqueId = capture.certSubjectUniqueId;\n  }\n  cert.subject.hash = smd.digest().toHex();\n\n  // handle extensions\n  if(capture.certExtensions) {\n    cert.extensions = pki.certificateExtensionsFromAsn1(capture.certExtensions);\n  } else {\n    cert.extensions = [];\n  }\n\n  // convert RSA public key from ASN.1\n  cert.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  return cert;\n};\n\n/**\n * Converts an ASN.1 extensions object (with extension sequences as its\n * values) into an array of extension objects with types and values.\n *\n * Supported extensions:\n *\n * id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n * KeyUsage ::= BIT STRING {\n *   digitalSignature        (0),\n *   nonRepudiation          (1),\n *   keyEncipherment         (2),\n *   dataEncipherment        (3),\n *   keyAgreement            (4),\n *   keyCertSign             (5),\n *   cRLSign                 (6),\n *   encipherOnly            (7),\n *   decipherOnly            (8)\n * }\n *\n * id-ce-basicConstraints OBJECT IDENTIFIER ::=  { id-ce 19 }\n * BasicConstraints ::= SEQUENCE {\n *   cA                      BOOLEAN DEFAULT FALSE,\n *   pathLenConstraint       INTEGER (0..MAX) OPTIONAL\n * }\n *\n * subjectAltName EXTENSION ::= {\n *   SYNTAX GeneralNames\n *   IDENTIFIED BY id-ce-subjectAltName\n * }\n *\n * GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\n *\n * GeneralName ::= CHOICE {\n *   otherName      [0] INSTANCE OF OTHER-NAME,\n *   rfc822Name     [1] IA5String,\n *   dNSName        [2] IA5String,\n *   x400Address    [3] ORAddress,\n *   directoryName  [4] Name,\n *   ediPartyName   [5] EDIPartyName,\n *   uniformResourceIdentifier [6] IA5String,\n *   IPAddress      [7] OCTET STRING,\n *   registeredID   [8] OBJECT IDENTIFIER\n * }\n *\n * OTHER-NAME ::= TYPE-IDENTIFIER\n *\n * EDIPartyName ::= SEQUENCE {\n *   nameAssigner [0] DirectoryString {ub-name} OPTIONAL,\n *   partyName    [1] DirectoryString {ub-name}\n * }\n *\n * @param exts the extensions ASN.1 with extension sequences to parse.\n *\n * @return the array.\n */\npki.certificateExtensionsFromAsn1 = function(exts) {\n  var rval = [];\n  for(var i = 0; i < exts.value.length; ++i) {\n    // get extension sequence\n    var extseq = exts.value[i];\n    for(var ei = 0; ei < extseq.value.length; ++ei) {\n      rval.push(pki.certificateExtensionFromAsn1(extseq.value[ei]));\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Parses a single certificate extension from ASN.1.\n *\n * @param ext the extension in ASN.1 format.\n *\n * @return the parsed extension as an object.\n */\npki.certificateExtensionFromAsn1 = function(ext) {\n  // an extension has:\n  // [0] extnID      OBJECT IDENTIFIER\n  // [1] critical    BOOLEAN DEFAULT FALSE\n  // [2] extnValue   OCTET STRING\n  var e = {};\n  e.id = asn1.derToOid(ext.value[0].value);\n  e.critical = false;\n  if(ext.value[1].type === asn1.Type.BOOLEAN) {\n    e.critical = (ext.value[1].value.charCodeAt(0) !== 0x00);\n    e.value = ext.value[2].value;\n  } else {\n    e.value = ext.value[1].value;\n  }\n  // if the oid is known, get its name\n  if(e.id in oids) {\n    e.name = oids[e.id];\n\n    // handle key usage\n    if(e.name === 'keyUsage') {\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      var b3 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n        b3 = ev.value.length > 2 ? ev.value.charCodeAt(2) : 0;\n      }\n      // set flags\n      e.digitalSignature = (b2 & 0x80) === 0x80;\n      e.nonRepudiation = (b2 & 0x40) === 0x40;\n      e.keyEncipherment = (b2 & 0x20) === 0x20;\n      e.dataEncipherment = (b2 & 0x10) === 0x10;\n      e.keyAgreement = (b2 & 0x08) === 0x08;\n      e.keyCertSign = (b2 & 0x04) === 0x04;\n      e.cRLSign = (b2 & 0x02) === 0x02;\n      e.encipherOnly = (b2 & 0x01) === 0x01;\n      e.decipherOnly = (b3 & 0x80) === 0x80;\n    } else if(e.name === 'basicConstraints') {\n      // handle basic constraints\n      // get value as SEQUENCE\n      var ev = asn1.fromDer(e.value);\n      // get cA BOOLEAN flag (defaults to false)\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.BOOLEAN) {\n        e.cA = (ev.value[0].value.charCodeAt(0) !== 0x00);\n      } else {\n        e.cA = false;\n      }\n      // get path length constraint\n      var value = null;\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.INTEGER) {\n        value = ev.value[0].value;\n      } else if(ev.value.length > 1) {\n        value = ev.value[1].value;\n      }\n      if(value !== null) {\n        e.pathLenConstraint = asn1.derToInteger(value);\n      }\n    } else if(e.name === 'extKeyUsage') {\n      // handle extKeyUsage\n      // value is a SEQUENCE of OIDs\n      var ev = asn1.fromDer(e.value);\n      for(var vi = 0; vi < ev.value.length; ++vi) {\n        var oid = asn1.derToOid(ev.value[vi].value);\n        if(oid in oids) {\n          e[oids[oid]] = true;\n        } else {\n          e[oid] = true;\n        }\n      }\n    } else if(e.name === 'nsCertType') {\n      // handle nsCertType\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n      }\n      // set flags\n      e.client = (b2 & 0x80) === 0x80;\n      e.server = (b2 & 0x40) === 0x40;\n      e.email = (b2 & 0x20) === 0x20;\n      e.objsign = (b2 & 0x10) === 0x10;\n      e.reserved = (b2 & 0x08) === 0x08;\n      e.sslCA = (b2 & 0x04) === 0x04;\n      e.emailCA = (b2 & 0x02) === 0x02;\n      e.objCA = (b2 & 0x01) === 0x01;\n    } else if(\n      e.name === 'subjectAltName' ||\n      e.name === 'issuerAltName') {\n      // handle subjectAltName/issuerAltName\n      e.altNames = [];\n\n      // ev is a SYNTAX SEQUENCE\n      var gn;\n      var ev = asn1.fromDer(e.value);\n      for(var n = 0; n < ev.value.length; ++n) {\n        // get GeneralName\n        gn = ev.value[n];\n\n        var altName = {\n          type: gn.type,\n          value: gn.value\n        };\n        e.altNames.push(altName);\n\n        // Note: Support for types 1,2,6,7,8\n        switch(gn.type) {\n          // rfc822Name\n          case 1:\n          // dNSName\n          case 2:\n          // uniformResourceIdentifier (URI)\n          case 6:\n            break;\n          // IPAddress\n          case 7:\n            // convert to IPv4/IPv6 string representation\n            altName.ip = forge.util.bytesToIP(gn.value);\n            break;\n          // registeredID\n          case 8:\n            altName.oid = asn1.derToOid(gn.value);\n            break;\n          default:\n            // unsupported\n        }\n      }\n    } else if(e.name === 'subjectKeyIdentifier') {\n      // value is an OCTETSTRING w/the hash of the key-type specific\n      // public key structure (eg: RSAPublicKey)\n      var ev = asn1.fromDer(e.value);\n      e.subjectKeyIdentifier = forge.util.bytesToHex(ev.value);\n    }\n  }\n  return e;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from an ASN.1 object.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the CertificationRequestInfo part of the\n * ASN.1 object needs to be scanned before the csr object is created.\n *\n * @param obj the asn1 representation of a PKCS#10 certification request (CSR).\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromAsn1 = function(obj, computeHash) {\n  // validate certification request and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, certificationRequestValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#10 certificate request. ' +\n      'ASN.1 object is not a PKCS#10 CertificationRequest.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certification request\n  var csr = pki.createCertificationRequest();\n  csr.version = capture.csrVersion ? capture.csrVersion.charCodeAt(0) : 0;\n  csr.signatureOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.signatureParameters = _readSignatureParameters(\n    csr.signatureOid, capture.csrSignatureParams, true);\n  csr.siginfo.algorithmOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.siginfo.parameters = _readSignatureParameters(\n    csr.siginfo.algorithmOid, capture.csrSignatureParams, false);\n  csr.signature = capture.csrSignature;\n\n  // keep CertificationRequestInfo to preserve signature when exporting\n  csr.certificationRequestInfo = capture.certificationRequestInfo;\n\n  if(computeHash) {\n    // check signature OID for supported signature types\n    csr.md = null;\n    if(csr.signatureOid in oids) {\n      var oid = oids[csr.signatureOid];\n      switch(oid) {\n        case 'sha1WithRSAEncryption':\n          csr.md = forge.md.sha1.create();\n          break;\n        case 'md5WithRSAEncryption':\n          csr.md = forge.md.md5.create();\n          break;\n        case 'sha256WithRSAEncryption':\n          csr.md = forge.md.sha256.create();\n          break;\n        case 'sha384WithRSAEncryption':\n          csr.md = forge.md.sha384.create();\n          break;\n        case 'sha512WithRSAEncryption':\n          csr.md = forge.md.sha512.create();\n          break;\n        case 'RSASSA-PSS':\n          csr.md = forge.md.sha256.create();\n          break;\n      }\n    }\n    if(csr.md === null) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = csr.signatureOid;\n      throw error;\n    }\n\n    // produce DER formatted CertificationRequestInfo and digest it\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n    csr.md.update(bytes.getBytes());\n  }\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = pki.RDNAttributesAsArray(\n    capture.certificationRequestInfoSubject, smd);\n  csr.subject.hash = smd.digest().toHex();\n\n  // convert RSA public key from ASN.1\n  csr.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  // convert attributes from ASN.1\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.attributes = pki.CRIAttributesAsArray(\n    capture.certificationRequestInfoAttributes || []);\n\n  return csr;\n};\n\n/**\n * Creates an empty certification request (a CSR or certificate signing\n * request). Once created, its public key and attributes can be set and then\n * it can be signed.\n *\n * @return the empty certification request.\n */\npki.createCertificationRequest = function() {\n  var csr = {};\n  csr.version = 0x00;\n  csr.signatureOid = null;\n  csr.signature = null;\n  csr.siginfo = {};\n  csr.siginfo.algorithmOid = null;\n\n  csr.subject = {};\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = [];\n  csr.subject.hash = null;\n\n  csr.publicKey = null;\n  csr.attributes = [];\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.md = null;\n\n  /**\n   * Sets the subject of this certification request.\n   *\n   * @param attrs the array of subject attributes to use.\n   */\n  csr.setSubject = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.subject.attributes = attrs;\n    csr.subject.hash = null;\n  };\n\n  /**\n   * Sets the attributes of this certification request.\n   *\n   * @param attrs the array of attributes to use.\n   */\n  csr.setAttributes = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.attributes = attrs;\n  };\n\n  /**\n   * Signs this certification request using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  csr.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    csr.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[csr.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = csr.md.algorithm;\n      throw error;\n    }\n    csr.signatureOid = csr.siginfo.algorithmOid = algorithmOid;\n\n    // get CertificationRequestInfo, convert to DER\n    csr.certificationRequestInfo = pki.getCertificationRequestInfo(csr);\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n\n    // digest and sign\n    csr.md.update(bytes.getBytes());\n    csr.signature = key.sign(csr.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certification request using\n   * its public key.\n   *\n   * A CSR that has been exported to a file in PEM format can be verified using\n   * OpenSSL using this command:\n   *\n   * openssl req -in <the-csr-pem-file> -verify -noout -text\n   *\n   * @return true if verified, false if not.\n   */\n  csr.verify = function() {\n    var rval = false;\n\n    var md = csr.md;\n    if(md === null) {\n      // check signature OID for supported signature types\n      if(csr.signatureOid in oids) {\n        // TODO: create DRY `OID to md` function\n        var oid = oids[csr.signatureOid];\n        switch(oid) {\n          case 'sha1WithRSAEncryption':\n            md = forge.md.sha1.create();\n            break;\n          case 'md5WithRSAEncryption':\n            md = forge.md.md5.create();\n            break;\n          case 'sha256WithRSAEncryption':\n            md = forge.md.sha256.create();\n            break;\n          case 'sha384WithRSAEncryption':\n            md = forge.md.sha384.create();\n            break;\n          case 'sha512WithRSAEncryption':\n            md = forge.md.sha512.create();\n            break;\n          case 'RSASSA-PSS':\n            md = forge.md.sha256.create();\n            break;\n        }\n      }\n      if(md === null) {\n        var error = new Error(\n          'Could not compute certification request digest. ' +\n          'Unknown signature OID.');\n        error.signatureOid = csr.signatureOid;\n        throw error;\n      }\n\n      // produce DER formatted CertificationRequestInfo and digest it\n      var cri = csr.certificationRequestInfo ||\n        pki.getCertificationRequestInfo(csr);\n      var bytes = asn1.toDer(cri);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      var scheme;\n\n      switch(csr.signatureOid) {\n        case oids.sha1WithRSAEncryption:\n          /* use PKCS#1 v1.5 padding scheme */\n          break;\n        case oids['RSASSA-PSS']:\n          var hash, mgf;\n\n          /* initialize mgf */\n          hash = oids[csr.signatureParameters.mgf.hash.algorithmOid];\n          if(hash === undefined || forge.md[hash] === undefined) {\n            var error = new Error('Unsupported MGF hash function.');\n            error.oid = csr.signatureParameters.mgf.hash.algorithmOid;\n            error.name = hash;\n            throw error;\n          }\n\n          mgf = oids[csr.signatureParameters.mgf.algorithmOid];\n          if(mgf === undefined || forge.mgf[mgf] === undefined) {\n            var error = new Error('Unsupported MGF function.');\n            error.oid = csr.signatureParameters.mgf.algorithmOid;\n            error.name = mgf;\n            throw error;\n          }\n\n          mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n          /* initialize hash function */\n          hash = oids[csr.signatureParameters.hash.algorithmOid];\n          if(hash === undefined || forge.md[hash] === undefined) {\n            var error = new Error('Unsupported RSASSA-PSS hash function.');\n            error.oid = csr.signatureParameters.hash.algorithmOid;\n            error.name = hash;\n            throw error;\n          }\n\n          scheme = forge.pss.create(forge.md[hash].create(), mgf,\n            csr.signatureParameters.saltLength);\n          break;\n      }\n\n      // verify signature on csr using its public key\n      rval = csr.publicKey.verify(\n        md.digest().getBytes(), csr.signature, scheme);\n    }\n\n    return rval;\n  };\n\n  return csr;\n};\n\n/**\n * Converts an X.509 subject or issuer to an ASN.1 RDNSequence.\n *\n * @param obj the subject or issuer (distinguished name).\n *\n * @return the ASN.1 RDNSequence.\n */\nfunction _dnToAsn1(obj) {\n  // create an empty RDNSequence\n  var rval = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // iterate over attributes\n  var attr, set;\n  var attrs = obj.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.PRINTABLESTRING;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n\n      if(valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(value);\n      }\n      // FIXME: handle more encodings\n    }\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    set = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // AttributeType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(attr.type).getBytes()),\n        // AttributeValue\n        asn1.create(asn1.Class.UNIVERSAL, valueTagClass, false, value)\n      ])\n    ]);\n    rval.value.push(set);\n  }\n\n  return rval;\n}\n\n/**\n * Gets all printable attributes (typically of an issuer or subject) in a\n * simplified JSON format for display.\n *\n * @param attrs the attributes.\n *\n * @return the JSON for display.\n */\nfunction _getAttributesAsJson(attrs) {\n  var rval = {};\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(attr.shortName && (\n      attr.valueTagClass === asn1.Type.UTF8 ||\n      attr.valueTagClass === asn1.Type.PRINTABLESTRING ||\n      attr.valueTagClass === asn1.Type.IA5STRING)) {\n      var value = attr.value;\n      if(attr.valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(attr.value);\n      }\n      if(!(attr.shortName in rval)) {\n        rval[attr.shortName] = value;\n      } else if(forge.util.isArray(rval[attr.shortName])) {\n        rval[attr.shortName].push(value);\n      } else {\n        rval[attr.shortName] = [rval[attr.shortName], value];\n      }\n    }\n  }\n  return rval;\n}\n\n/**\n * Fills in missing fields in attributes.\n *\n * @param attrs the attributes to fill missing fields in.\n */\nfunction _fillMissingFields(attrs) {\n  var attr;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n\n    // populate missing name\n    if(typeof attr.name === 'undefined') {\n      if(attr.type && attr.type in pki.oids) {\n        attr.name = pki.oids[attr.type];\n      } else if(attr.shortName && attr.shortName in _shortNames) {\n        attr.name = pki.oids[_shortNames[attr.shortName]];\n      }\n    }\n\n    // populate missing type (OID)\n    if(typeof attr.type === 'undefined') {\n      if(attr.name && attr.name in pki.oids) {\n        attr.type = pki.oids[attr.name];\n      } else {\n        var error = new Error('Attribute type not specified.');\n        error.attribute = attr;\n        throw error;\n      }\n    }\n\n    // populate missing shortname\n    if(typeof attr.shortName === 'undefined') {\n      if(attr.name && attr.name in _shortNames) {\n        attr.shortName = _shortNames[attr.name];\n      }\n    }\n\n    // convert extensions to value\n    if(attr.type === oids.extensionRequest) {\n      attr.valueConstructed = true;\n      attr.valueTagClass = asn1.Type.SEQUENCE;\n      if(!attr.value && attr.extensions) {\n        attr.value = [];\n        for(var ei = 0; ei < attr.extensions.length; ++ei) {\n          attr.value.push(pki.certificateExtensionToAsn1(\n            _fillMissingExtensionFields(attr.extensions[ei])));\n        }\n      }\n    }\n\n    if(typeof attr.value === 'undefined') {\n      var error = new Error('Attribute value not specified.');\n      error.attribute = attr;\n      throw error;\n    }\n  }\n}\n\n/**\n * Fills in missing fields in certificate extensions.\n *\n * @param e the extension.\n * @param [options] the options to use.\n *          [cert] the certificate the extensions are for.\n *\n * @return the extension.\n */\nfunction _fillMissingExtensionFields(e, options) {\n  options = options || {};\n\n  // populate missing name\n  if(typeof e.name === 'undefined') {\n    if(e.id && e.id in pki.oids) {\n      e.name = pki.oids[e.id];\n    }\n  }\n\n  // populate missing id\n  if(typeof e.id === 'undefined') {\n    if(e.name && e.name in pki.oids) {\n      e.id = pki.oids[e.name];\n    } else {\n      var error = new Error('Extension ID not specified.');\n      error.extension = e;\n      throw error;\n    }\n  }\n\n  if(typeof e.value !== 'undefined') {\n    return e;\n  }\n\n  // handle missing value:\n\n  // value is a BIT STRING\n  if(e.name === 'keyUsage') {\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n    var b3 = 0x00;\n    if(e.digitalSignature) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.nonRepudiation) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.keyEncipherment) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.dataEncipherment) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.keyAgreement) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.keyCertSign) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.cRLSign) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.encipherOnly) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n    if(e.decipherOnly) {\n      b3 |= 0x80;\n      unused = 7;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b3 !== 0) {\n      value += String.fromCharCode(b2) + String.fromCharCode(b3);\n    } else if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'basicConstraints') {\n    // basicConstraints is a SEQUENCE\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    // cA BOOLEAN flag defaults to false\n    if(e.cA) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n        String.fromCharCode(0xFF)));\n    }\n    if('pathLenConstraint' in e) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(e.pathLenConstraint).getBytes()));\n    }\n  } else if(e.name === 'extKeyUsage') {\n    // extKeyUsage is a SEQUENCE of OIDs\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n    for(var key in e) {\n      if(e[key] !== true) {\n        continue;\n      }\n      // key is name in OID map\n      if(key in oids) {\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(oids[key]).getBytes()));\n      } else if(key.indexOf('.') !== -1) {\n        // assume key is an OID\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(key).getBytes()));\n      }\n    }\n  } else if(e.name === 'nsCertType') {\n    // nsCertType is a BIT STRING\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n\n    if(e.client) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.server) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.email) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.objsign) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.reserved) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.sslCA) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.emailCA) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.objCA) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'subjectAltName' || e.name === 'issuerAltName') {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      e.value.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n  } else if(e.name === 'nsComment' && options.cert) {\n    // sanity check value is ASCII (req'd) and not too big\n    if(!(/^[\\x00-\\x7F]*$/.test(e.comment)) ||\n      (e.comment.length < 1) || (e.comment.length > 128)) {\n      throw new Error('Invalid \"nsComment\" content.');\n    }\n    // IA5STRING opaque comment\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.IA5STRING, false, e.comment);\n  } else if(e.name === 'subjectKeyIdentifier' && options.cert) {\n    var ski = options.cert.generateSubjectKeyIdentifier();\n    e.subjectKeyIdentifier = ski.toHex();\n    // OCTETSTRING w/digest\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, ski.getBytes());\n  } else if(e.name === 'authorityKeyIdentifier' && options.cert) {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    if(e.keyIdentifier) {\n      var keyIdentifier = (e.keyIdentifier === true ?\n        options.cert.generateSubjectKeyIdentifier().getBytes() :\n        e.keyIdentifier);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, false, keyIdentifier));\n    }\n\n    if(e.authorityCertIssuer) {\n      var authorityCertIssuer = [\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 4, true, [\n          _dnToAsn1(e.authorityCertIssuer === true ?\n            options.cert.issuer : e.authorityCertIssuer)\n        ])\n      ];\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, authorityCertIssuer));\n    }\n\n    if(e.serialNumber) {\n      var serialNumber = forge.util.hexToBytes(e.serialNumber === true ?\n        options.cert.serialNumber : e.serialNumber);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, false, serialNumber));\n    }\n  } else if(e.name === 'cRLDistributionPoints') {\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    // Create sub SEQUENCE of DistributionPointName\n    var subSeq = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    // Create fullName CHOICE\n    var fullNameGeneralNames = asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      fullNameGeneralNames.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n\n    // Add to the parent SEQUENCE\n    subSeq.value.push(asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, [fullNameGeneralNames]));\n    seq.push(subSeq);\n  }\n\n  // ensure value has been defined by now\n  if(typeof e.value === 'undefined') {\n    var error = new Error('Extension value not specified.');\n    error.extension = e;\n    throw error;\n  }\n\n  return e;\n}\n\n/**\n * Convert signature parameters object to ASN.1\n *\n * @param {String} oid Signature algorithm OID\n * @param params The signature parametrs object\n * @return ASN.1 object representing signature parameters\n */\nfunction _signatureParametersToAsn1(oid, params) {\n  switch(oid) {\n    case oids['RSASSA-PSS']:\n      var parts = [];\n\n      if(params.hash.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.hash.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n          ])\n        ]));\n      }\n\n      if(params.mgf.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.mgf.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n                asn1.oidToDer(params.mgf.hash.algorithmOid).getBytes()),\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n            ])\n          ])\n        ]));\n      }\n\n      if(params.saltLength !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(params.saltLength).getBytes())\n        ]));\n      }\n\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, parts);\n\n    default:\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '');\n  }\n}\n\n/**\n * Converts a certification request's attributes to an ASN.1 set of\n * CRIAttributes.\n *\n * @param csr certification request.\n *\n * @return the ASN.1 set of CRIAttributes.\n */\nfunction _CRIAttributesToAsn1(csr) {\n  // create an empty context-specific container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n  // no attributes, return empty container\n  if(csr.attributes.length === 0) {\n    return rval;\n  }\n\n  // each attribute has a sequence with a type and a set of values\n  var attrs = csr.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.UTF8;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n    }\n    if(valueTagClass === asn1.Type.UTF8) {\n      value = forge.util.encodeUtf8(value);\n    }\n    var valueConstructed = false;\n    if('valueConstructed' in attr) {\n      valueConstructed = attr.valueConstructed;\n    }\n    // FIXME: handle more encodings\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // AttributeType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(attr.type).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n        // AttributeValue\n        asn1.create(\n          asn1.Class.UNIVERSAL, valueTagClass, valueConstructed, value)\n      ])\n    ]);\n    rval.value.push(seq);\n  }\n\n  return rval;\n}\n\nvar jan_1_1950 = new Date('1950-01-01T00:00:00Z');\nvar jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n\n/**\n * Converts a Date object to ASN.1\n * Handles the different format before and after 1st January 2050\n *\n * @param date date object.\n *\n * @return the ASN.1 object representing the date.\n */\nfunction _dateToAsn1(date) {\n  if(date >= jan_1_1950 && date < jan_1_2050) {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n      asn1.dateToUtcTime(date));\n  } else {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n      asn1.dateToGeneralizedTime(date));\n  }\n}\n\n/**\n * Gets the ASN.1 TBSCertificate part of an X.509v3 certificate.\n *\n * @param cert the certificate.\n *\n * @return the asn1 TBSCertificate.\n */\npki.getTBSCertificate = function(cert) {\n  // TBSCertificate\n  var notBefore = _dateToAsn1(cert.validity.notBefore);\n  var notAfter = _dateToAsn1(cert.validity.notAfter);\n  var tbs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      // integer\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(cert.version).getBytes())\n    ]),\n    // serialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      forge.util.hexToBytes(cert.serialNumber)),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.siginfo.algorithmOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(\n        cert.siginfo.algorithmOid, cert.siginfo.parameters)\n    ]),\n    // issuer\n    _dnToAsn1(cert.issuer),\n    // validity\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      notBefore,\n      notAfter\n    ]),\n    // subject\n    _dnToAsn1(cert.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(cert.publicKey)\n  ]);\n\n  if(cert.issuer.uniqueId) {\n    // issuerUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.issuer.uniqueId\n        )\n      ])\n    );\n  }\n  if(cert.subject.uniqueId) {\n    // subjectUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.subject.uniqueId\n        )\n      ])\n    );\n  }\n\n  if(cert.extensions.length > 0) {\n    // extensions (optional)\n    tbs.value.push(pki.certificateExtensionsToAsn1(cert.extensions));\n  }\n\n  return tbs;\n};\n\n/**\n * Gets the ASN.1 CertificationRequestInfo part of a\n * PKCS#10 CertificationRequest.\n *\n * @param csr the certification request.\n *\n * @return the asn1 CertificationRequestInfo.\n */\npki.getCertificationRequestInfo = function(csr) {\n  // CertificationRequestInfo\n  var cri = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(csr.version).getBytes()),\n    // subject\n    _dnToAsn1(csr.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(csr.publicKey),\n    // attributes\n    _CRIAttributesToAsn1(csr)\n  ]);\n\n  return cri;\n};\n\n/**\n * Converts a DistinguishedName (subject or issuer) to an ASN.1 object.\n *\n * @param dn the DistinguishedName.\n *\n * @return the asn1 representation of a DistinguishedName.\n */\npki.distinguishedNameToAsn1 = function(dn) {\n  return _dnToAsn1(dn);\n};\n\n/**\n * Converts an X.509v3 RSA certificate to an ASN.1 object.\n *\n * @param cert the certificate.\n *\n * @return the asn1 representation of an X.509v3 RSA certificate.\n */\npki.certificateToAsn1 = function(cert) {\n  // prefer cached TBSCertificate over generating one\n  var tbsCertificate = cert.tbsCertificate || pki.getTBSCertificate(cert);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // TBSCertificate\n    tbsCertificate,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(cert.signatureOid, cert.signatureParameters)\n    ]),\n    // SignatureValue\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + cert.signature)\n  ]);\n};\n\n/**\n * Converts X.509v3 certificate extensions to ASN.1.\n *\n * @param exts the extensions to convert.\n *\n * @return the extensions in ASN.1 format.\n */\npki.certificateExtensionsToAsn1 = function(exts) {\n  // create top-level extension container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 3, true, []);\n\n  // create extension sequence (stores a sequence for each extension)\n  var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  rval.value.push(seq);\n\n  for(var i = 0; i < exts.length; ++i) {\n    seq.value.push(pki.certificateExtensionToAsn1(exts[i]));\n  }\n\n  return rval;\n};\n\n/**\n * Converts a single certificate extension to ASN.1.\n *\n * @param ext the extension to convert.\n *\n * @return the extension in ASN.1 format.\n */\npki.certificateExtensionToAsn1 = function(ext) {\n  // create a sequence for each extension\n  var extseq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // extnID (OID)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n    asn1.oidToDer(ext.id).getBytes()));\n\n  // critical defaults to false\n  if(ext.critical) {\n    // critical BOOLEAN DEFAULT FALSE\n    extseq.value.push(asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n      String.fromCharCode(0xFF)));\n  }\n\n  var value = ext.value;\n  if(typeof ext.value !== 'string') {\n    // value is asn.1\n    value = asn1.toDer(value).getBytes();\n  }\n\n  // extnValue (OCTET STRING)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, value));\n\n  return extseq;\n};\n\n/**\n * Converts a PKCS#10 certification request to an ASN.1 object.\n *\n * @param csr the certification request.\n *\n * @return the asn1 representation of a certification request.\n */\npki.certificationRequestToAsn1 = function(csr) {\n  // prefer cached CertificationRequestInfo over generating one\n  var cri = csr.certificationRequestInfo ||\n    pki.getCertificationRequestInfo(csr);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // CertificationRequestInfo\n    cri,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(csr.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(csr.signatureOid, csr.signatureParameters)\n    ]),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + csr.signature)\n  ]);\n};\n\n/**\n * Creates a CA store.\n *\n * @param certs an optional array of certificate objects or PEM-formatted\n *          certificate strings to add to the CA store.\n *\n * @return the CA store.\n */\npki.createCaStore = function(certs) {\n  // create CA store\n  var caStore = {\n    // stored certificates\n    certs: {}\n  };\n\n  /**\n   * Gets the certificate that issued the passed certificate or its\n   * 'parent'.\n   *\n   * @param cert the certificate to get the parent for.\n   *\n   * @return the parent certificate or null if none was found.\n   */\n  caStore.getIssuer = function(cert) {\n    var rval = getBySubject(cert.issuer);\n\n    // see if there are multiple matches\n    /*if(forge.util.isArray(rval)) {\n      // TODO: resolve multiple matches by checking\n      // authorityKey/subjectKey/issuerUniqueID/other identifiers, etc.\n      // FIXME: or alternatively do authority key mapping\n      // if possible (X.509v1 certs can't work?)\n      throw new Error('Resolving multiple issuer matches not implemented yet.');\n    }*/\n\n    return rval;\n  };\n\n  /**\n   * Adds a trusted certificate to the store.\n   *\n   * @param cert the certificate to add as a trusted certificate (either a\n   *          pki.certificate object or a PEM-formatted certificate).\n   */\n  caStore.addCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    ensureSubjectHasHash(cert.subject);\n\n    if(!caStore.hasCertificate(cert)) { // avoid duplicate certificates in store\n      if(cert.subject.hash in caStore.certs) {\n        // subject hash already exists, append to array\n        var tmp = caStore.certs[cert.subject.hash];\n        if(!forge.util.isArray(tmp)) {\n          tmp = [tmp];\n        }\n        tmp.push(cert);\n        caStore.certs[cert.subject.hash] = tmp;\n      } else {\n        caStore.certs[cert.subject.hash] = cert;\n      }\n    }\n  };\n\n  /**\n   * Checks to see if the given certificate is in the store.\n   *\n   * @param cert the certificate to check (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return true if the certificate is in the store, false if not.\n   */\n  caStore.hasCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    var match = getBySubject(cert.subject);\n    if(!match) {\n      return false;\n    }\n    if(!forge.util.isArray(match)) {\n      match = [match];\n    }\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Lists all of the certificates kept in the store.\n   *\n   * @return an array of all of the pki.certificate objects in the store.\n   */\n  caStore.listAllCertificates = function() {\n    var certList = [];\n\n    for(var hash in caStore.certs) {\n      if(caStore.certs.hasOwnProperty(hash)) {\n        var value = caStore.certs[hash];\n        if(!forge.util.isArray(value)) {\n          certList.push(value);\n        } else {\n          for(var i = 0; i < value.length; ++i) {\n            certList.push(value[i]);\n          }\n        }\n      }\n    }\n\n    return certList;\n  };\n\n  /**\n   * Removes a certificate from the store.\n   *\n   * @param cert the certificate to remove (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return the certificate that was removed or null if the certificate\n   *           wasn't in store.\n   */\n  caStore.removeCertificate = function(cert) {\n    var result;\n\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n    ensureSubjectHasHash(cert.subject);\n    if(!caStore.hasCertificate(cert)) {\n      return null;\n    }\n\n    var match = getBySubject(cert.subject);\n\n    if(!forge.util.isArray(match)) {\n      result = caStore.certs[cert.subject.hash];\n      delete caStore.certs[cert.subject.hash];\n      return result;\n    }\n\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        result = match[i];\n        match.splice(i, 1);\n      }\n    }\n    if(match.length === 0) {\n      delete caStore.certs[cert.subject.hash];\n    }\n\n    return result;\n  };\n\n  function getBySubject(subject) {\n    ensureSubjectHasHash(subject);\n    return caStore.certs[subject.hash] || null;\n  }\n\n  function ensureSubjectHasHash(subject) {\n    // produce subject hash if it doesn't exist\n    if(!subject.hash) {\n      var md = forge.md.sha1.create();\n      subject.attributes = pki.RDNAttributesAsArray(_dnToAsn1(subject), md);\n      subject.hash = md.digest().toHex();\n    }\n  }\n\n  // auto-add passed in certs\n  if(certs) {\n    // parse PEM-formatted certificates as necessary\n    for(var i = 0; i < certs.length; ++i) {\n      var cert = certs[i];\n      caStore.addCertificate(cert);\n    }\n  }\n\n  return caStore;\n};\n\n/**\n * Certificate verification errors, based on TLS.\n */\npki.certificateError = {\n  bad_certificate: 'forge.pki.BadCertificate',\n  unsupported_certificate: 'forge.pki.UnsupportedCertificate',\n  certificate_revoked: 'forge.pki.CertificateRevoked',\n  certificate_expired: 'forge.pki.CertificateExpired',\n  certificate_unknown: 'forge.pki.CertificateUnknown',\n  unknown_ca: 'forge.pki.UnknownCertificateAuthority'\n};\n\n/**\n * Verifies a certificate chain against the given Certificate Authority store\n * with an optional custom verify callback.\n *\n * @param caStore a certificate store to verify against.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end (an array of certificates).\n * @param options a callback to be called for every certificate in the chain or\n *                  an object with:\n *                  verify a callback to be called for every certificate in the\n *                    chain\n *                  validityCheckDate the date against which the certificate\n *                    validity period should be checked. Pass null to not check\n *                    the validity period. By default, the current date is used.\n *\n * The verify callback has the following signature:\n *\n * verified - Set to true if certificate was verified, otherwise the\n *   pki.certificateError for why the certificate failed.\n * depth - The current index in the chain, where 0 is the end point's cert.\n * certs - The certificate chain, *NOTE* an empty chain indicates an anonymous\n *   end point.\n *\n * The function returns true on success and on failure either the appropriate\n * pki.certificateError or an object with 'error' set to the appropriate\n * pki.certificateError and 'message' set to a custom error message.\n *\n * @return true if successful, error thrown if not.\n */\npki.verifyCertificateChain = function(caStore, chain, options) {\n  /* From: RFC3280 - Internet X.509 Public Key Infrastructure Certificate\n    Section 6: Certification Path Validation\n    See inline parentheticals related to this particular implementation.\n\n    The primary goal of path validation is to verify the binding between\n    a subject distinguished name or a subject alternative name and subject\n    public key, as represented in the end entity certificate, based on the\n    public key of the trust anchor. This requires obtaining a sequence of\n    certificates that support that binding. That sequence should be provided\n    in the passed 'chain'. The trust anchor should be in the given CA\n    store. The 'end entity' certificate is the certificate provided by the\n    end point (typically a server) and is the first in the chain.\n\n    To meet this goal, the path validation process verifies, among other\n    things, that a prospective certification path (a sequence of n\n    certificates or a 'chain') satisfies the following conditions:\n\n    (a) for all x in {1, ..., n-1}, the subject of certificate x is\n          the issuer of certificate x+1;\n\n    (b) certificate 1 is issued by the trust anchor;\n\n    (c) certificate n is the certificate to be validated; and\n\n    (d) for all x in {1, ..., n}, the certificate was valid at the\n          time in question.\n\n    Note that here 'n' is index 0 in the chain and 1 is the last certificate\n    in the chain and it must be signed by a certificate in the connection's\n    CA store.\n\n    The path validation process also determines the set of certificate\n    policies that are valid for this path, based on the certificate policies\n    extension, policy mapping extension, policy constraints extension, and\n    inhibit any-policy extension.\n\n    Note: Policy mapping extension not supported (Not Required).\n\n    Note: If the certificate has an unsupported critical extension, then it\n    must be rejected.\n\n    Note: A certificate is self-issued if the DNs that appear in the subject\n    and issuer fields are identical and are not empty.\n\n    The path validation algorithm assumes the following seven inputs are\n    provided to the path processing logic. What this specific implementation\n    will use is provided parenthetically:\n\n    (a) a prospective certification path of length n (the 'chain')\n    (b) the current date/time: ('now').\n    (c) user-initial-policy-set: A set of certificate policy identifiers\n          naming the policies that are acceptable to the certificate user.\n          The user-initial-policy-set contains the special value any-policy\n          if the user is not concerned about certificate policy\n          (Not implemented. Any policy is accepted).\n    (d) trust anchor information, describing a CA that serves as a trust\n          anchor for the certification path. The trust anchor information\n          includes:\n\n      (1)  the trusted issuer name,\n      (2)  the trusted public key algorithm,\n      (3)  the trusted public key, and\n      (4)  optionally, the trusted public key parameters associated\n             with the public key.\n\n      (Trust anchors are provided via certificates in the CA store).\n\n      The trust anchor information may be provided to the path processing\n      procedure in the form of a self-signed certificate. The trusted anchor\n      information is trusted because it was delivered to the path processing\n      procedure by some trustworthy out-of-band procedure. If the trusted\n      public key algorithm requires parameters, then the parameters are\n      provided along with the trusted public key (No parameters used in this\n      implementation).\n\n    (e) initial-policy-mapping-inhibit, which indicates if policy mapping is\n          allowed in the certification path.\n          (Not implemented, no policy checking)\n\n    (f) initial-explicit-policy, which indicates if the path must be valid\n          for at least one of the certificate policies in the user-initial-\n          policy-set.\n          (Not implemented, no policy checking)\n\n    (g) initial-any-policy-inhibit, which indicates whether the\n          anyPolicy OID should be processed if it is included in a\n          certificate.\n          (Not implemented, so any policy is valid provided that it is\n          not marked as critical) */\n\n  /* Basic Path Processing:\n\n    For each certificate in the 'chain', the following is checked:\n\n    1. The certificate validity period includes the current time.\n    2. The certificate was signed by its parent (where the parent is either\n       the next in the chain or from the CA store). Allow processing to\n       continue to the next step if no parent is found but the certificate is\n       in the CA store.\n    3. TODO: The certificate has not been revoked.\n    4. The certificate issuer name matches the parent's subject name.\n    5. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is within one of the permitted subtrees of X.500 distinguished names\n       and that each of the alternative names in the subjectAltName extension\n       (critical or non-critical) is within one of the permitted subtrees for\n       that name type.\n    6. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is not within one of the excluded subtrees for X.500 distinguished\n       names and none of the subjectAltName extension names are excluded for\n       that name type.\n    7. The other steps in the algorithm for basic path processing involve\n       handling the policy extension which is not presently supported in this\n       implementation. Instead, if a critical policy extension is found, the\n       certificate is rejected as not supported.\n    8. If the certificate is not the first or if its the only certificate in\n       the chain (having no parent from the CA store or is self-signed) and it\n       has a critical key usage extension, verify that the keyCertSign bit is\n       set. If the key usage extension exists, verify that the basic\n       constraints extension exists. If the basic constraints extension exists,\n       verify that the cA flag is set. If pathLenConstraint is set, ensure that\n       the number of certificates that precede in the chain (come earlier\n       in the chain as implemented below), excluding the very first in the\n       chain (typically the end-entity one), isn't greater than the\n       pathLenConstraint. This constraint limits the number of intermediate\n       CAs that may appear below a CA before only end-entity certificates\n       may be issued. */\n\n  // if a verify callback is passed as the third parameter, package it within\n  // the options object. This is to support a legacy function signature that\n  // expected the verify callback as the third parameter.\n  if(typeof options === 'function') {\n    options = {verify: options};\n  }\n  options = options || {};\n\n  // copy cert chain references to another array to protect against changes\n  // in verify callback\n  chain = chain.slice(0);\n  var certs = chain.slice(0);\n\n  var validityCheckDate = options.validityCheckDate;\n  // if no validityCheckDate is specified, default to the current date. Make\n  // sure to maintain the value null because it indicates that the validity\n  // period should not be checked.\n  if(typeof validityCheckDate === 'undefined') {\n    validityCheckDate = new Date();\n  }\n\n  // verify each cert in the chain using its parent, where the parent\n  // is either the next in the chain or from the CA store\n  var first = true;\n  var error = null;\n  var depth = 0;\n  do {\n    var cert = chain.shift();\n    var parent = null;\n    var selfSigned = false;\n\n    if(validityCheckDate) {\n      // 1. check valid time\n      if(validityCheckDate < cert.validity.notBefore ||\n         validityCheckDate > cert.validity.notAfter) {\n        error = {\n          message: 'Certificate is not valid yet or has expired.',\n          error: pki.certificateError.certificate_expired,\n          notBefore: cert.validity.notBefore,\n          notAfter: cert.validity.notAfter,\n          // TODO: we might want to reconsider renaming 'now' to\n          // 'validityCheckDate' should this API be changed in the future.\n          now: validityCheckDate\n        };\n      }\n    }\n\n    // 2. verify with parent from chain or CA store\n    if(error === null) {\n      parent = chain[0] || caStore.getIssuer(cert);\n      if(parent === null) {\n        // check for self-signed cert\n        if(cert.isIssuer(cert)) {\n          selfSigned = true;\n          parent = cert;\n        }\n      }\n\n      if(parent) {\n        // FIXME: current CA store implementation might have multiple\n        // certificates where the issuer can't be determined from the\n        // certificate (happens rarely with, eg: old certificates) so normalize\n        // by always putting parents into an array\n        // TODO: there's may be an extreme degenerate case currently uncovered\n        // where an old intermediate certificate seems to have a matching parent\n        // but none of the parents actually verify ... but the intermediate\n        // is in the CA and it should pass this check; needs investigation\n        var parents = parent;\n        if(!forge.util.isArray(parents)) {\n          parents = [parents];\n        }\n\n        // try to verify with each possible parent (typically only one)\n        var verified = false;\n        while(!verified && parents.length > 0) {\n          parent = parents.shift();\n          try {\n            verified = parent.verify(cert);\n          } catch(ex) {\n            // failure to verify, don't care why, try next one\n          }\n        }\n\n        if(!verified) {\n          error = {\n            message: 'Certificate signature is invalid.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n\n      if(error === null && (!parent || selfSigned) &&\n        !caStore.hasCertificate(cert)) {\n        // no parent issuer and certificate itself is not trusted\n        error = {\n          message: 'Certificate is not trusted.',\n          error: pki.certificateError.unknown_ca\n        };\n      }\n    }\n\n    // TODO: 3. check revoked\n\n    // 4. check for matching issuer/subject\n    if(error === null && parent && !cert.isIssuer(parent)) {\n      // parent is not issuer\n      error = {\n        message: 'Certificate issuer is invalid.',\n        error: pki.certificateError.bad_certificate\n      };\n    }\n\n    // 5. TODO: check names with permitted names tree\n\n    // 6. TODO: check names against excluded names tree\n\n    // 7. check for unsupported critical extensions\n    if(error === null) {\n      // supported extensions\n      var se = {\n        keyUsage: true,\n        basicConstraints: true\n      };\n      for(var i = 0; error === null && i < cert.extensions.length; ++i) {\n        var ext = cert.extensions[i];\n        if(ext.critical && !(ext.name in se)) {\n          error = {\n            message:\n              'Certificate has an unsupported critical extension.',\n            error: pki.certificateError.unsupported_certificate\n          };\n        }\n      }\n    }\n\n    // 8. check for CA if cert is not first or is the only certificate\n    // remaining in chain with no parent or is self-signed\n    if(error === null &&\n      (!first || (chain.length === 0 && (!parent || selfSigned)))) {\n      // first check keyUsage extension and then basic constraints\n      var bcExt = cert.getExtension('basicConstraints');\n      var keyUsageExt = cert.getExtension('keyUsage');\n      if(keyUsageExt !== null) {\n        // keyCertSign must be true and there must be a basic\n        // constraints extension\n        if(!keyUsageExt.keyCertSign || bcExt === null) {\n          // bad certificate\n          error = {\n            message:\n              'Certificate keyUsage or basicConstraints conflict ' +\n              'or indicate that the certificate is not a CA. ' +\n              'If the certificate is the only one in the chain or ' +\n              'isn\\'t the first then the certificate must be a ' +\n              'valid CA.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n      // basic constraints cA flag must be set\n      if(error === null && bcExt !== null && !bcExt.cA) {\n        // bad certificate\n        error = {\n          message:\n            'Certificate basicConstraints indicates the certificate ' +\n            'is not a CA.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n      // if error is not null and keyUsage is available, then we know it\n      // has keyCertSign and there is a basic constraints extension too,\n      // which means we can check pathLenConstraint (if it exists)\n      if(error === null && keyUsageExt !== null &&\n        'pathLenConstraint' in bcExt) {\n        // pathLen is the maximum # of intermediate CA certs that can be\n        // found between the current certificate and the end-entity (depth 0)\n        // certificate; this number does not include the end-entity (depth 0,\n        // last in the chain) even if it happens to be a CA certificate itself\n        var pathLen = depth - 1;\n        if(pathLen > bcExt.pathLenConstraint) {\n          // pathLenConstraint violated, bad certificate\n          error = {\n            message:\n              'Certificate basicConstraints pathLenConstraint violated.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n    }\n\n    // call application callback\n    var vfd = (error === null) ? true : error.error;\n    var ret = options.verify ? options.verify(vfd, depth, certs) : vfd;\n    if(ret === true) {\n      // clear any set error\n      error = null;\n    } else {\n      // if passed basic tests, set default message and alert\n      if(vfd === true) {\n        error = {\n          message: 'The application rejected the certificate.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n\n      // check for custom error info\n      if(ret || ret === 0) {\n        // set custom message and error\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.error) {\n            error.error = ret.error;\n          }\n        } else if(typeof ret === 'string') {\n          // set custom error\n          error.error = ret;\n        }\n      }\n\n      // throw error\n      throw error;\n    }\n\n    // no longer first cert in chain\n    first = false;\n    ++depth;\n  } while(chain.length > 0);\n\n  return true;\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/cryppo/node_modules/node-forge/lib/x509.js?")},"../../node_modules/@meeco/keystore-api-sdk/lib/esm/api.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COLLECTION_FORMATS", function() { return COLLECTION_FORMATS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseAPI", function() { return BaseAPI; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequiredError", function() { return RequiredError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenApiFetchParamCreator", function() { return AdmissionTokenApiFetchParamCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenApiFp", function() { return AdmissionTokenApiFp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenApiFactory", function() { return AdmissionTokenApiFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenApi", function() { return AdmissionTokenApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataEncryptionKeyApiFetchParamCreator", function() { return DataEncryptionKeyApiFetchParamCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataEncryptionKeyApiFp", function() { return DataEncryptionKeyApiFp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataEncryptionKeyApiFactory", function() { return DataEncryptionKeyApiFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataEncryptionKeyApi", function() { return DataEncryptionKeyApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DelegationApiFetchParamCreator", function() { return DelegationApiFetchParamCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DelegationApiFp", function() { return DelegationApiFp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DelegationApiFactory", function() { return DelegationApiFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DelegationApi", function() { return DelegationApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExternalAdmissionTokensApiFetchParamCreator", function() { return ExternalAdmissionTokensApiFetchParamCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExternalAdmissionTokensApiFp", function() { return ExternalAdmissionTokensApiFp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExternalAdmissionTokensApiFactory", function() { return ExternalAdmissionTokensApiFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExternalAdmissionTokensApi", function() { return ExternalAdmissionTokensApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeApiFetchParamCreator", function() { return HomeApiFetchParamCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeApiFp", function() { return HomeApiFp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeApiFactory", function() { return HomeApiFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeApi", function() { return HomeApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImportUserApiFetchParamCreator", function() { return ImportUserApiFetchParamCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImportUserApiFp", function() { return ImportUserApiFp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImportUserApiFactory", function() { return ImportUserApiFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImportUserApi", function() { return ImportUserApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyEncryptionKeyApiFetchParamCreator", function() { return KeyEncryptionKeyApiFetchParamCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyEncryptionKeyApiFp", function() { return KeyEncryptionKeyApiFp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyEncryptionKeyApiFactory", function() { return KeyEncryptionKeyApiFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyEncryptionKeyApi", function() { return KeyEncryptionKeyApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeypairApiFetchParamCreator", function() { return KeypairApiFetchParamCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeypairApiFp", function() { return KeypairApiFp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeypairApiFactory", function() { return KeypairApiFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeypairApi", function() { return KeypairApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PassphraseDerivationArtefactApiFetchParamCreator", function() { return PassphraseDerivationArtefactApiFetchParamCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PassphraseDerivationArtefactApiFp", function() { return PassphraseDerivationArtefactApiFp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PassphraseDerivationArtefactApiFactory", function() { return PassphraseDerivationArtefactApiFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PassphraseDerivationArtefactApi", function() { return PassphraseDerivationArtefactApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SessionApiFetchParamCreator", function() { return SessionApiFetchParamCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SessionApiFp", function() { return SessionApiFp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SessionApiFactory", function() { return SessionApiFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SessionApi", function() { return SessionApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserApiFetchParamCreator", function() { return UserApiFetchParamCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserApiFp", function() { return UserApiFp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserApiFactory", function() { return UserApiFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserApi", function() { return UserApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VersionApiFetchParamCreator", function() { return VersionApiFetchParamCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VersionApiFp", function() { return VersionApiFp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VersionApiFactory", function() { return VersionApiFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VersionApi", function() { return VersionApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WellKnownApiFetchParamCreator", function() { return WellKnownApiFetchParamCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WellKnownApiFp", function() { return WellKnownApiFp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WellKnownApiFactory", function() { return WellKnownApiFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WellKnownApi", function() { return WellKnownApi; });\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! url */ "../../node_modules/url/url.js");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var portable_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! portable-fetch */ "../../node_modules/portable-fetch/fetch-npm-browserify.js");\n/* harmony import */ var portable_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(portable_fetch__WEBPACK_IMPORTED_MODULE_1__);\n/// <reference path="./custom.d.ts" />\n// tslint:disable\n/**\n * Keystore\n * Storage for secrets and keys. When a user creates and encrypts Data Encryption Keys and Keypairs, they are stored in the Keystore. A user cannot access the Vault without first using the Keystore. In the current implementation the Keystore functionality is implemented by meeco-keystore.\n *\n * OpenAPI spec version: 5.1.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n\nconst BASE_PATH = "https://localhost:4000".replace(/\\/+$/, "");\n/**\n *\n * @export\n */\nconst COLLECTION_FORMATS = {\n    csv: ",",\n    ssv: " ",\n    tsv: "\\t",\n    pipes: "|",\n};\n/**\n *\n * @export\n * @class BaseAPI\n */\nclass BaseAPI {\n    constructor(configuration, basePath = BASE_PATH, fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__) {\n        this.basePath = basePath;\n        this.fetch = fetch;\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n}\n;\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nclass RequiredError extends Error {\n    constructor(field, msg) {\n        super(msg);\n        this.field = field;\n    }\n}\n/**\n * AdmissionTokenApi - fetch parameter creator\n * @export\n */\nconst AdmissionTokenApiFetchParamCreator = function (configuration) {\n    return {\n        /**\n         * Creates an AdmissionToken, used as authentication for user creation.\n         * @summary Creates an admission token\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        admissionTokensPost(options = {}) {\n            const localVarPath = `/admission_tokens`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication providerApiKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Retrieves an AdmissionToken, specified by its unique token value\n         * @summary Returns an admission token\n         * @param {string} token_value A token value\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        admissionTokensTokenValueGet(token_value, options = {}) {\n            // verify required parameter \'token_value\' is not null or undefined\n            if (token_value === null || token_value === undefined) {\n                throw new RequiredError(\'token_value\', \'Required parameter token_value was null or undefined when calling admissionTokensTokenValueGet.\');\n            }\n            const localVarPath = `/admission_tokens/{token_value}`\n                .replace(`{${"token_value"}}`, encodeURIComponent(String(token_value)));\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'GET\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication providerApiKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * AdmissionTokenApi - functional programming interface\n * @export\n */\nconst AdmissionTokenApiFp = function (configuration) {\n    return {\n        /**\n         * Creates an AdmissionToken, used as authentication for user creation.\n         * @summary Creates an admission token\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        admissionTokensPost(options) {\n            const localVarFetchArgs = AdmissionTokenApiFetchParamCreator(configuration).admissionTokensPost(options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Retrieves an AdmissionToken, specified by its unique token value\n         * @summary Returns an admission token\n         * @param {string} token_value A token value\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        admissionTokensTokenValueGet(token_value, options) {\n            const localVarFetchArgs = AdmissionTokenApiFetchParamCreator(configuration).admissionTokensTokenValueGet(token_value, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n    };\n};\n/**\n * AdmissionTokenApi - factory interface\n * @export\n */\nconst AdmissionTokenApiFactory = function (configuration, fetch, basePath) {\n    return {\n        /**\n         * Creates an AdmissionToken, used as authentication for user creation.\n         * @summary Creates an admission token\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        admissionTokensPost(options) {\n            return AdmissionTokenApiFp(configuration).admissionTokensPost(options)(fetch, basePath);\n        },\n        /**\n         * Retrieves an AdmissionToken, specified by its unique token value\n         * @summary Returns an admission token\n         * @param {string} token_value A token value\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        admissionTokensTokenValueGet(token_value, options) {\n            return AdmissionTokenApiFp(configuration).admissionTokensTokenValueGet(token_value, options)(fetch, basePath);\n        },\n    };\n};\n/**\n * AdmissionTokenApi - object-oriented interface\n * @export\n * @class AdmissionTokenApi\n * @extends {BaseAPI}\n */\nclass AdmissionTokenApi extends BaseAPI {\n    /**\n     * Creates an AdmissionToken, used as authentication for user creation.\n     * @summary Creates an admission token\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AdmissionTokenApi\n     */\n    admissionTokensPost(options) {\n        return AdmissionTokenApiFp(this.configuration).admissionTokensPost(options)(this.fetch, this.basePath);\n    }\n    /**\n     * Retrieves an AdmissionToken, specified by its unique token value\n     * @summary Returns an admission token\n     * @param {string} token_value A token value\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AdmissionTokenApi\n     */\n    admissionTokensTokenValueGet(token_value, options) {\n        return AdmissionTokenApiFp(this.configuration).admissionTokensTokenValueGet(token_value, options)(this.fetch, this.basePath);\n    }\n}\n/**\n * DataEncryptionKeyApi - fetch parameter creator\n * @export\n */\nconst DataEncryptionKeyApiFetchParamCreator = function (configuration) {\n    return {\n        /**\n         * Deletes a data encryption key identified by its ID.\n         * @summary Deletes a data encryption key\n         * @param {string} id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        dataEncryptionKeysIdDelete(id, options = {}) {\n            // verify required parameter \'id\' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError(\'id\', \'Required parameter id was null or undefined when calling dataEncryptionKeysIdDelete.\');\n            }\n            const localVarPath = `/data_encryption_keys/{id}`\n                .replace(`{${"id"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'DELETE\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication oidc2UserAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("authorizationoidc2")\n                    : configuration.apiKey;\n                localVarHeaderParameter["authorizationoidc2"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Retrieves a data encryption key by its ID.The data encryption key is encrypted with the key encryption key (KEK) of the user. The format is the serialization format of the Cryppo library.\n         * @summary Retrieves a data encryption key\n         * @param {string} id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        dataEncryptionKeysIdGet(id, options = {}) {\n            // verify required parameter \'id\' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError(\'id\', \'Required parameter id was null or undefined when calling dataEncryptionKeysIdGet.\');\n            }\n            const localVarPath = `/data_encryption_keys/{id}`\n                .replace(`{${"id"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'GET\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication oidc2UserAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("authorizationoidc2")\n                    : configuration.apiKey;\n                localVarHeaderParameter["authorizationoidc2"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Stores a data encryption key encrypted with the key encryption key (KEK) of the user. The expected format is the serialization format of the Cryppo library.\n         * @summary Stores a data encryption key\n         * @param {PostDataEncryptionKeysRequest} [create_data_encryption_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        dataEncryptionKeysPost(create_data_encryption_params, options = {}) {\n            const localVarPath = `/data_encryption_keys`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication oidc2UserAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("authorizationoidc2")\n                    : configuration.apiKey;\n                localVarHeaderParameter["authorizationoidc2"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(create_data_encryption_params || {}) : (create_data_encryption_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * DataEncryptionKeyApi - functional programming interface\n * @export\n */\nconst DataEncryptionKeyApiFp = function (configuration) {\n    return {\n        /**\n         * Deletes a data encryption key identified by its ID.\n         * @summary Deletes a data encryption key\n         * @param {string} id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        dataEncryptionKeysIdDelete(id, options) {\n            const localVarFetchArgs = DataEncryptionKeyApiFetchParamCreator(configuration).dataEncryptionKeysIdDelete(id, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Retrieves a data encryption key by its ID.The data encryption key is encrypted with the key encryption key (KEK) of the user. The format is the serialization format of the Cryppo library.\n         * @summary Retrieves a data encryption key\n         * @param {string} id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        dataEncryptionKeysIdGet(id, options) {\n            const localVarFetchArgs = DataEncryptionKeyApiFetchParamCreator(configuration).dataEncryptionKeysIdGet(id, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Stores a data encryption key encrypted with the key encryption key (KEK) of the user. The expected format is the serialization format of the Cryppo library.\n         * @summary Stores a data encryption key\n         * @param {PostDataEncryptionKeysRequest} [create_data_encryption_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        dataEncryptionKeysPost(create_data_encryption_params, options) {\n            const localVarFetchArgs = DataEncryptionKeyApiFetchParamCreator(configuration).dataEncryptionKeysPost(create_data_encryption_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n    };\n};\n/**\n * DataEncryptionKeyApi - factory interface\n * @export\n */\nconst DataEncryptionKeyApiFactory = function (configuration, fetch, basePath) {\n    return {\n        /**\n         * Deletes a data encryption key identified by its ID.\n         * @summary Deletes a data encryption key\n         * @param {string} id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        dataEncryptionKeysIdDelete(id, options) {\n            return DataEncryptionKeyApiFp(configuration).dataEncryptionKeysIdDelete(id, options)(fetch, basePath);\n        },\n        /**\n         * Retrieves a data encryption key by its ID.The data encryption key is encrypted with the key encryption key (KEK) of the user. The format is the serialization format of the Cryppo library.\n         * @summary Retrieves a data encryption key\n         * @param {string} id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        dataEncryptionKeysIdGet(id, options) {\n            return DataEncryptionKeyApiFp(configuration).dataEncryptionKeysIdGet(id, options)(fetch, basePath);\n        },\n        /**\n         * Stores a data encryption key encrypted with the key encryption key (KEK) of the user. The expected format is the serialization format of the Cryppo library.\n         * @summary Stores a data encryption key\n         * @param {PostDataEncryptionKeysRequest} [create_data_encryption_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        dataEncryptionKeysPost(create_data_encryption_params, options) {\n            return DataEncryptionKeyApiFp(configuration).dataEncryptionKeysPost(create_data_encryption_params, options)(fetch, basePath);\n        },\n    };\n};\n/**\n * DataEncryptionKeyApi - object-oriented interface\n * @export\n * @class DataEncryptionKeyApi\n * @extends {BaseAPI}\n */\nclass DataEncryptionKeyApi extends BaseAPI {\n    /**\n     * Deletes a data encryption key identified by its ID.\n     * @summary Deletes a data encryption key\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DataEncryptionKeyApi\n     */\n    dataEncryptionKeysIdDelete(id, options) {\n        return DataEncryptionKeyApiFp(this.configuration).dataEncryptionKeysIdDelete(id, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Retrieves a data encryption key by its ID.The data encryption key is encrypted with the key encryption key (KEK) of the user. The format is the serialization format of the Cryppo library.\n     * @summary Retrieves a data encryption key\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DataEncryptionKeyApi\n     */\n    dataEncryptionKeysIdGet(id, options) {\n        return DataEncryptionKeyApiFp(this.configuration).dataEncryptionKeysIdGet(id, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Stores a data encryption key encrypted with the key encryption key (KEK) of the user. The expected format is the serialization format of the Cryppo library.\n     * @summary Stores a data encryption key\n     * @param {PostDataEncryptionKeysRequest} [create_data_encryption_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DataEncryptionKeyApi\n     */\n    dataEncryptionKeysPost(create_data_encryption_params, options) {\n        return DataEncryptionKeyApiFp(this.configuration).dataEncryptionKeysPost(create_data_encryption_params, options)(this.fetch, this.basePath);\n    }\n}\n/**\n * DelegationApi - fetch parameter creator\n * @export\n */\nconst DelegationApiFetchParamCreator = function (configuration) {\n    return {\n        /**\n         * A parent/child business case is a special case of delegation where a child account is created by the parent account. The child account cannot login.  The first step is running `POST /child_users` in the vault thus creating a child user in the vault.  This endpoint allows an existing user (= delegate user) to create a child account (= owner account) in the keystore.  The KEK of the child account will be initially encrypted with the KEK of the parent keystore account.  In the terminology of the generic delegation case  * a child account is the owner account * a parent account is the delegate account\n         * @summary Creates a child user\n         * @param {PostChildUserRequest} [create_child_user_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        childUsersPost(create_child_user_params, options = {}) {\n            const localVarPath = `/child_users`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(create_child_user_params || {}) : (create_child_user_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Claims a delegation record with a delegation token.  Once the delegate user has accepted a delegation invitation in the vault the delegate user can retrieve the delegation token from the connection and claim the delegation record using this endpoint.  The delegate user is expected to submit a signature signed with the the delegate user\'s private key from the delegation connection in the vault. If the signature is verified successfully the delegaton relation is established and the delegate user obtains access to a subset of keys of the account owner.\n         * @summary Claims a delegation record\n         * @param {string} delegation_token\n         * @param {ClaimDelegationRequest} [claim_delegation_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsDelegationTokenClaimPost(delegation_token, claim_delegation_params, options = {}) {\n            // verify required parameter \'delegation_token\' is not null or undefined\n            if (delegation_token === null || delegation_token === undefined) {\n                throw new RequiredError(\'delegation_token\', \'Required parameter delegation_token was null or undefined when calling delegationsDelegationTokenClaimPost.\');\n            }\n            const localVarPath = `/delegations/{delegation_token}/claim`\n                .replace(`{${"delegation_token"}}`, encodeURIComponent(String(delegation_token)));\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(claim_delegation_params || {}) : (claim_delegation_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Deletes a delegation connection identified by its token.  Both the delegate user and the account owner may delete a delegation record.\n         * @summary Deletes a delegation connection\n         * @param {string} delegation_token\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsDelegationTokenDelete(delegation_token, options = {}) {\n            // verify required parameter \'delegation_token\' is not null or undefined\n            if (delegation_token === null || delegation_token === undefined) {\n                throw new RequiredError(\'delegation_token\', \'Required parameter delegation_token was null or undefined when calling delegationsDelegationTokenDelete.\');\n            }\n            const localVarPath = `/delegations/{delegation_token}`\n                .replace(`{${"delegation_token"}}`, encodeURIComponent(String(delegation_token)));\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'DELETE\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Reads a delegation connection identified by its delegation token or `vault_account_owner_id`.  Both the account owner and the delegate user may read the delegation record, but the key encryption key is hidden for the account owner, because the KEK stored in the delegation record is for the delegate user, and can only be decrypted by the delegate user.\n         * @summary Reads a delegation connection\n         * @param {string} delegation_token  &#x60;delegation_token&#x60; or &#x60;vault_account_owner_id&#x60; of the delegation.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsDelegationTokenGet(delegation_token, options = {}) {\n            // verify required parameter \'delegation_token\' is not null or undefined\n            if (delegation_token === null || delegation_token === undefined) {\n                throw new RequiredError(\'delegation_token\', \'Required parameter delegation_token was null or undefined when calling delegationsDelegationTokenGet.\');\n            }\n            const localVarPath = `/delegations/{delegation_token}`\n                .replace(`{${"delegation_token"}}`, encodeURIComponent(String(delegation_token)));\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'GET\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Initially the account owner shares his/her KEK with the delegate user, and the KEK is encrypted with the public key belonging to the keypair of the delegate user from the vault connection between the account owner and the delegate user.This endpoint allows the delegate user to save the same KEK re-encrypted with the delegate\'s KEK. Field `account_owner_kek_encrypted_with_connection_keypair` is set to `false`.\n         * @summary Re-uploads account owner\'s KEK re-encrypted with the delegate\'s KEK.\n         * @param {string} delegation_token\n         * @param {ReencryptDelegationKekRequest} [reencrypt_delegation_kek_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsDelegationTokenReencryptPut(delegation_token, reencrypt_delegation_kek_params, options = {}) {\n            // verify required parameter \'delegation_token\' is not null or undefined\n            if (delegation_token === null || delegation_token === undefined) {\n                throw new RequiredError(\'delegation_token\', \'Required parameter delegation_token was null or undefined when calling delegationsDelegationTokenReencryptPut.\');\n            }\n            const localVarPath = `/delegations/{delegation_token}/reencrypt`\n                .replace(`{${"delegation_token"}}`, encodeURIComponent(String(delegation_token)));\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'PUT\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(reencrypt_delegation_kek_params || {}) : (reencrypt_delegation_kek_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Share a key encryption key with the delegate user.  Once the delegate user has accepted the delegation connection, the delegate user can claim the delegation record using the delegation token, and thus get access to a subset of account owner\'s keys. But these keys are encrypted with the KEK of the account owner.   This endpoint allows the account owner to share the KEK with the delegate user. This KEK is encrypted with the public key belonging to the keypair of the delegate user from the vault connection between the account owner and the delegate user.  The account owner may call this endpoint multiple times in case a new KEK is generated and all account owner\' keys are re-encrypted with the new KEK.  When the endpoint is called for the first time the backend also expects the public key belonging to the keypair of the delegate user from the vault connection between the account owner and the delegate user. This public key is required for the verification of the signature signed and added by the delegate user.\n         * @summary Share a key encryption key with the delegate user\n         * @param {string} delegation_token\n         * @param {ShareDelegationKekRequest} [reencrypt_delegation_kek_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsDelegationTokenSharePut(delegation_token, reencrypt_delegation_kek_params, options = {}) {\n            // verify required parameter \'delegation_token\' is not null or undefined\n            if (delegation_token === null || delegation_token === undefined) {\n                throw new RequiredError(\'delegation_token\', \'Required parameter delegation_token was null or undefined when calling delegationsDelegationTokenSharePut.\');\n            }\n            const localVarPath = `/delegations/{delegation_token}/share`\n                .replace(`{${"delegation_token"}}`, encodeURIComponent(String(delegation_token)));\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'PUT\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(reencrypt_delegation_kek_params || {}) : (reencrypt_delegation_kek_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Creates a delegation token.   This endpoint is the first step in setting up a delegation relation in the vault and the keystore. Any user who wants to grant other users delegation permissions can generate a delegation token via this endpoint.  * A user who grants delegation permissions is a _account owner_ * A user who receives delegation permission is a _delegate user_.  A delegation record and a random delegation token are created. This delegation token is used to identify the delegation record. The account owner can then add this delegation token to a delegation invitation in the vault. Once the invitee accepts the invitation he/she can retrieve the delegation token from the delegation connection and use token to claim this delegation record in the keystore. Once this delegation record in the keystore has been claimed, the delegate user obtains access to a subset of account owner\'s keys.\n         * @summary Creates delegation token\n         * @param {PostDelegationRequest} [delegation_create_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsPost(delegation_create_params, options = {}) {\n            const localVarPath = `/delegations`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(delegation_create_params || {}) : (delegation_create_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * DelegationApi - functional programming interface\n * @export\n */\nconst DelegationApiFp = function (configuration) {\n    return {\n        /**\n         * A parent/child business case is a special case of delegation where a child account is created by the parent account. The child account cannot login.  The first step is running `POST /child_users` in the vault thus creating a child user in the vault.  This endpoint allows an existing user (= delegate user) to create a child account (= owner account) in the keystore.  The KEK of the child account will be initially encrypted with the KEK of the parent keystore account.  In the terminology of the generic delegation case  * a child account is the owner account * a parent account is the delegate account\n         * @summary Creates a child user\n         * @param {PostChildUserRequest} [create_child_user_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        childUsersPost(create_child_user_params, options) {\n            const localVarFetchArgs = DelegationApiFetchParamCreator(configuration).childUsersPost(create_child_user_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Claims a delegation record with a delegation token.  Once the delegate user has accepted a delegation invitation in the vault the delegate user can retrieve the delegation token from the connection and claim the delegation record using this endpoint.  The delegate user is expected to submit a signature signed with the the delegate user\'s private key from the delegation connection in the vault. If the signature is verified successfully the delegaton relation is established and the delegate user obtains access to a subset of keys of the account owner.\n         * @summary Claims a delegation record\n         * @param {string} delegation_token\n         * @param {ClaimDelegationRequest} [claim_delegation_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsDelegationTokenClaimPost(delegation_token, claim_delegation_params, options) {\n            const localVarFetchArgs = DelegationApiFetchParamCreator(configuration).delegationsDelegationTokenClaimPost(delegation_token, claim_delegation_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Deletes a delegation connection identified by its token.  Both the delegate user and the account owner may delete a delegation record.\n         * @summary Deletes a delegation connection\n         * @param {string} delegation_token\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsDelegationTokenDelete(delegation_token, options) {\n            const localVarFetchArgs = DelegationApiFetchParamCreator(configuration).delegationsDelegationTokenDelete(delegation_token, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Reads a delegation connection identified by its delegation token or `vault_account_owner_id`.  Both the account owner and the delegate user may read the delegation record, but the key encryption key is hidden for the account owner, because the KEK stored in the delegation record is for the delegate user, and can only be decrypted by the delegate user.\n         * @summary Reads a delegation connection\n         * @param {string} delegation_token  &#x60;delegation_token&#x60; or &#x60;vault_account_owner_id&#x60; of the delegation.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsDelegationTokenGet(delegation_token, options) {\n            const localVarFetchArgs = DelegationApiFetchParamCreator(configuration).delegationsDelegationTokenGet(delegation_token, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Initially the account owner shares his/her KEK with the delegate user, and the KEK is encrypted with the public key belonging to the keypair of the delegate user from the vault connection between the account owner and the delegate user.This endpoint allows the delegate user to save the same KEK re-encrypted with the delegate\'s KEK. Field `account_owner_kek_encrypted_with_connection_keypair` is set to `false`.\n         * @summary Re-uploads account owner\'s KEK re-encrypted with the delegate\'s KEK.\n         * @param {string} delegation_token\n         * @param {ReencryptDelegationKekRequest} [reencrypt_delegation_kek_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsDelegationTokenReencryptPut(delegation_token, reencrypt_delegation_kek_params, options) {\n            const localVarFetchArgs = DelegationApiFetchParamCreator(configuration).delegationsDelegationTokenReencryptPut(delegation_token, reencrypt_delegation_kek_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Share a key encryption key with the delegate user.  Once the delegate user has accepted the delegation connection, the delegate user can claim the delegation record using the delegation token, and thus get access to a subset of account owner\'s keys. But these keys are encrypted with the KEK of the account owner.   This endpoint allows the account owner to share the KEK with the delegate user. This KEK is encrypted with the public key belonging to the keypair of the delegate user from the vault connection between the account owner and the delegate user.  The account owner may call this endpoint multiple times in case a new KEK is generated and all account owner\' keys are re-encrypted with the new KEK.  When the endpoint is called for the first time the backend also expects the public key belonging to the keypair of the delegate user from the vault connection between the account owner and the delegate user. This public key is required for the verification of the signature signed and added by the delegate user.\n         * @summary Share a key encryption key with the delegate user\n         * @param {string} delegation_token\n         * @param {ShareDelegationKekRequest} [reencrypt_delegation_kek_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsDelegationTokenSharePut(delegation_token, reencrypt_delegation_kek_params, options) {\n            const localVarFetchArgs = DelegationApiFetchParamCreator(configuration).delegationsDelegationTokenSharePut(delegation_token, reencrypt_delegation_kek_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Creates a delegation token.   This endpoint is the first step in setting up a delegation relation in the vault and the keystore. Any user who wants to grant other users delegation permissions can generate a delegation token via this endpoint.  * A user who grants delegation permissions is a _account owner_ * A user who receives delegation permission is a _delegate user_.  A delegation record and a random delegation token are created. This delegation token is used to identify the delegation record. The account owner can then add this delegation token to a delegation invitation in the vault. Once the invitee accepts the invitation he/she can retrieve the delegation token from the delegation connection and use token to claim this delegation record in the keystore. Once this delegation record in the keystore has been claimed, the delegate user obtains access to a subset of account owner\'s keys.\n         * @summary Creates delegation token\n         * @param {PostDelegationRequest} [delegation_create_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsPost(delegation_create_params, options) {\n            const localVarFetchArgs = DelegationApiFetchParamCreator(configuration).delegationsPost(delegation_create_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n    };\n};\n/**\n * DelegationApi - factory interface\n * @export\n */\nconst DelegationApiFactory = function (configuration, fetch, basePath) {\n    return {\n        /**\n         * A parent/child business case is a special case of delegation where a child account is created by the parent account. The child account cannot login.  The first step is running `POST /child_users` in the vault thus creating a child user in the vault.  This endpoint allows an existing user (= delegate user) to create a child account (= owner account) in the keystore.  The KEK of the child account will be initially encrypted with the KEK of the parent keystore account.  In the terminology of the generic delegation case  * a child account is the owner account * a parent account is the delegate account\n         * @summary Creates a child user\n         * @param {PostChildUserRequest} [create_child_user_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        childUsersPost(create_child_user_params, options) {\n            return DelegationApiFp(configuration).childUsersPost(create_child_user_params, options)(fetch, basePath);\n        },\n        /**\n         * Claims a delegation record with a delegation token.  Once the delegate user has accepted a delegation invitation in the vault the delegate user can retrieve the delegation token from the connection and claim the delegation record using this endpoint.  The delegate user is expected to submit a signature signed with the the delegate user\'s private key from the delegation connection in the vault. If the signature is verified successfully the delegaton relation is established and the delegate user obtains access to a subset of keys of the account owner.\n         * @summary Claims a delegation record\n         * @param {string} delegation_token\n         * @param {ClaimDelegationRequest} [claim_delegation_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsDelegationTokenClaimPost(delegation_token, claim_delegation_params, options) {\n            return DelegationApiFp(configuration).delegationsDelegationTokenClaimPost(delegation_token, claim_delegation_params, options)(fetch, basePath);\n        },\n        /**\n         * Deletes a delegation connection identified by its token.  Both the delegate user and the account owner may delete a delegation record.\n         * @summary Deletes a delegation connection\n         * @param {string} delegation_token\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsDelegationTokenDelete(delegation_token, options) {\n            return DelegationApiFp(configuration).delegationsDelegationTokenDelete(delegation_token, options)(fetch, basePath);\n        },\n        /**\n         * Reads a delegation connection identified by its delegation token or `vault_account_owner_id`.  Both the account owner and the delegate user may read the delegation record, but the key encryption key is hidden for the account owner, because the KEK stored in the delegation record is for the delegate user, and can only be decrypted by the delegate user.\n         * @summary Reads a delegation connection\n         * @param {string} delegation_token  &#x60;delegation_token&#x60; or &#x60;vault_account_owner_id&#x60; of the delegation.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsDelegationTokenGet(delegation_token, options) {\n            return DelegationApiFp(configuration).delegationsDelegationTokenGet(delegation_token, options)(fetch, basePath);\n        },\n        /**\n         * Initially the account owner shares his/her KEK with the delegate user, and the KEK is encrypted with the public key belonging to the keypair of the delegate user from the vault connection between the account owner and the delegate user.This endpoint allows the delegate user to save the same KEK re-encrypted with the delegate\'s KEK. Field `account_owner_kek_encrypted_with_connection_keypair` is set to `false`.\n         * @summary Re-uploads account owner\'s KEK re-encrypted with the delegate\'s KEK.\n         * @param {string} delegation_token\n         * @param {ReencryptDelegationKekRequest} [reencrypt_delegation_kek_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsDelegationTokenReencryptPut(delegation_token, reencrypt_delegation_kek_params, options) {\n            return DelegationApiFp(configuration).delegationsDelegationTokenReencryptPut(delegation_token, reencrypt_delegation_kek_params, options)(fetch, basePath);\n        },\n        /**\n         * Share a key encryption key with the delegate user.  Once the delegate user has accepted the delegation connection, the delegate user can claim the delegation record using the delegation token, and thus get access to a subset of account owner\'s keys. But these keys are encrypted with the KEK of the account owner.   This endpoint allows the account owner to share the KEK with the delegate user. This KEK is encrypted with the public key belonging to the keypair of the delegate user from the vault connection between the account owner and the delegate user.  The account owner may call this endpoint multiple times in case a new KEK is generated and all account owner\' keys are re-encrypted with the new KEK.  When the endpoint is called for the first time the backend also expects the public key belonging to the keypair of the delegate user from the vault connection between the account owner and the delegate user. This public key is required for the verification of the signature signed and added by the delegate user.\n         * @summary Share a key encryption key with the delegate user\n         * @param {string} delegation_token\n         * @param {ShareDelegationKekRequest} [reencrypt_delegation_kek_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsDelegationTokenSharePut(delegation_token, reencrypt_delegation_kek_params, options) {\n            return DelegationApiFp(configuration).delegationsDelegationTokenSharePut(delegation_token, reencrypt_delegation_kek_params, options)(fetch, basePath);\n        },\n        /**\n         * Creates a delegation token.   This endpoint is the first step in setting up a delegation relation in the vault and the keystore. Any user who wants to grant other users delegation permissions can generate a delegation token via this endpoint.  * A user who grants delegation permissions is a _account owner_ * A user who receives delegation permission is a _delegate user_.  A delegation record and a random delegation token are created. This delegation token is used to identify the delegation record. The account owner can then add this delegation token to a delegation invitation in the vault. Once the invitee accepts the invitation he/she can retrieve the delegation token from the delegation connection and use token to claim this delegation record in the keystore. Once this delegation record in the keystore has been claimed, the delegate user obtains access to a subset of account owner\'s keys.\n         * @summary Creates delegation token\n         * @param {PostDelegationRequest} [delegation_create_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        delegationsPost(delegation_create_params, options) {\n            return DelegationApiFp(configuration).delegationsPost(delegation_create_params, options)(fetch, basePath);\n        },\n    };\n};\n/**\n * DelegationApi - object-oriented interface\n * @export\n * @class DelegationApi\n * @extends {BaseAPI}\n */\nclass DelegationApi extends BaseAPI {\n    /**\n     * A parent/child business case is a special case of delegation where a child account is created by the parent account. The child account cannot login.  The first step is running `POST /child_users` in the vault thus creating a child user in the vault.  This endpoint allows an existing user (= delegate user) to create a child account (= owner account) in the keystore.  The KEK of the child account will be initially encrypted with the KEK of the parent keystore account.  In the terminology of the generic delegation case  * a child account is the owner account * a parent account is the delegate account\n     * @summary Creates a child user\n     * @param {PostChildUserRequest} [create_child_user_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DelegationApi\n     */\n    childUsersPost(create_child_user_params, options) {\n        return DelegationApiFp(this.configuration).childUsersPost(create_child_user_params, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Claims a delegation record with a delegation token.  Once the delegate user has accepted a delegation invitation in the vault the delegate user can retrieve the delegation token from the connection and claim the delegation record using this endpoint.  The delegate user is expected to submit a signature signed with the the delegate user\'s private key from the delegation connection in the vault. If the signature is verified successfully the delegaton relation is established and the delegate user obtains access to a subset of keys of the account owner.\n     * @summary Claims a delegation record\n     * @param {string} delegation_token\n     * @param {ClaimDelegationRequest} [claim_delegation_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DelegationApi\n     */\n    delegationsDelegationTokenClaimPost(delegation_token, claim_delegation_params, options) {\n        return DelegationApiFp(this.configuration).delegationsDelegationTokenClaimPost(delegation_token, claim_delegation_params, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Deletes a delegation connection identified by its token.  Both the delegate user and the account owner may delete a delegation record.\n     * @summary Deletes a delegation connection\n     * @param {string} delegation_token\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DelegationApi\n     */\n    delegationsDelegationTokenDelete(delegation_token, options) {\n        return DelegationApiFp(this.configuration).delegationsDelegationTokenDelete(delegation_token, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Reads a delegation connection identified by its delegation token or `vault_account_owner_id`.  Both the account owner and the delegate user may read the delegation record, but the key encryption key is hidden for the account owner, because the KEK stored in the delegation record is for the delegate user, and can only be decrypted by the delegate user.\n     * @summary Reads a delegation connection\n     * @param {string} delegation_token  &#x60;delegation_token&#x60; or &#x60;vault_account_owner_id&#x60; of the delegation.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DelegationApi\n     */\n    delegationsDelegationTokenGet(delegation_token, options) {\n        return DelegationApiFp(this.configuration).delegationsDelegationTokenGet(delegation_token, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Initially the account owner shares his/her KEK with the delegate user, and the KEK is encrypted with the public key belonging to the keypair of the delegate user from the vault connection between the account owner and the delegate user.This endpoint allows the delegate user to save the same KEK re-encrypted with the delegate\'s KEK. Field `account_owner_kek_encrypted_with_connection_keypair` is set to `false`.\n     * @summary Re-uploads account owner\'s KEK re-encrypted with the delegate\'s KEK.\n     * @param {string} delegation_token\n     * @param {ReencryptDelegationKekRequest} [reencrypt_delegation_kek_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DelegationApi\n     */\n    delegationsDelegationTokenReencryptPut(delegation_token, reencrypt_delegation_kek_params, options) {\n        return DelegationApiFp(this.configuration).delegationsDelegationTokenReencryptPut(delegation_token, reencrypt_delegation_kek_params, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Share a key encryption key with the delegate user.  Once the delegate user has accepted the delegation connection, the delegate user can claim the delegation record using the delegation token, and thus get access to a subset of account owner\'s keys. But these keys are encrypted with the KEK of the account owner.   This endpoint allows the account owner to share the KEK with the delegate user. This KEK is encrypted with the public key belonging to the keypair of the delegate user from the vault connection between the account owner and the delegate user.  The account owner may call this endpoint multiple times in case a new KEK is generated and all account owner\' keys are re-encrypted with the new KEK.  When the endpoint is called for the first time the backend also expects the public key belonging to the keypair of the delegate user from the vault connection between the account owner and the delegate user. This public key is required for the verification of the signature signed and added by the delegate user.\n     * @summary Share a key encryption key with the delegate user\n     * @param {string} delegation_token\n     * @param {ShareDelegationKekRequest} [reencrypt_delegation_kek_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DelegationApi\n     */\n    delegationsDelegationTokenSharePut(delegation_token, reencrypt_delegation_kek_params, options) {\n        return DelegationApiFp(this.configuration).delegationsDelegationTokenSharePut(delegation_token, reencrypt_delegation_kek_params, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Creates a delegation token.   This endpoint is the first step in setting up a delegation relation in the vault and the keystore. Any user who wants to grant other users delegation permissions can generate a delegation token via this endpoint.  * A user who grants delegation permissions is a _account owner_ * A user who receives delegation permission is a _delegate user_.  A delegation record and a random delegation token are created. This delegation token is used to identify the delegation record. The account owner can then add this delegation token to a delegation invitation in the vault. Once the invitee accepts the invitation he/she can retrieve the delegation token from the delegation connection and use token to claim this delegation record in the keystore. Once this delegation record in the keystore has been claimed, the delegate user obtains access to a subset of account owner\'s keys.\n     * @summary Creates delegation token\n     * @param {PostDelegationRequest} [delegation_create_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DelegationApi\n     */\n    delegationsPost(delegation_create_params, options) {\n        return DelegationApiFp(this.configuration).delegationsPost(delegation_create_params, options)(this.fetch, this.basePath);\n    }\n}\n/**\n * ExternalAdmissionTokensApi - fetch parameter creator\n * @export\n */\nconst ExternalAdmissionTokensApiFetchParamCreator = function (configuration) {\n    return {\n        /**\n         * Retrieves admission tokens for the Vault and the Passphrase store. Admission tokens in Vault and the Passphrase store are required to create user accounts. Admission tokens can be created by the Keystore only on behalf of the user. Configuration variables that control interaction with mentioned services: `vault_present` and `passphrase_store_present`.\n         * @summary Retrieve admission tokens\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        externalAdmissionTokensGet(options = {}) {\n            const localVarPath = `/external_admission_tokens`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'GET\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication oidc2UserAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("authorizationoidc2")\n                    : configuration.apiKey;\n                localVarHeaderParameter["authorizationoidc2"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * ExternalAdmissionTokensApi - functional programming interface\n * @export\n */\nconst ExternalAdmissionTokensApiFp = function (configuration) {\n    return {\n        /**\n         * Retrieves admission tokens for the Vault and the Passphrase store. Admission tokens in Vault and the Passphrase store are required to create user accounts. Admission tokens can be created by the Keystore only on behalf of the user. Configuration variables that control interaction with mentioned services: `vault_present` and `passphrase_store_present`.\n         * @summary Retrieve admission tokens\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        externalAdmissionTokensGet(options) {\n            const localVarFetchArgs = ExternalAdmissionTokensApiFetchParamCreator(configuration).externalAdmissionTokensGet(options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n    };\n};\n/**\n * ExternalAdmissionTokensApi - factory interface\n * @export\n */\nconst ExternalAdmissionTokensApiFactory = function (configuration, fetch, basePath) {\n    return {\n        /**\n         * Retrieves admission tokens for the Vault and the Passphrase store. Admission tokens in Vault and the Passphrase store are required to create user accounts. Admission tokens can be created by the Keystore only on behalf of the user. Configuration variables that control interaction with mentioned services: `vault_present` and `passphrase_store_present`.\n         * @summary Retrieve admission tokens\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        externalAdmissionTokensGet(options) {\n            return ExternalAdmissionTokensApiFp(configuration).externalAdmissionTokensGet(options)(fetch, basePath);\n        },\n    };\n};\n/**\n * ExternalAdmissionTokensApi - object-oriented interface\n * @export\n * @class ExternalAdmissionTokensApi\n * @extends {BaseAPI}\n */\nclass ExternalAdmissionTokensApi extends BaseAPI {\n    /**\n     * Retrieves admission tokens for the Vault and the Passphrase store. Admission tokens in Vault and the Passphrase store are required to create user accounts. Admission tokens can be created by the Keystore only on behalf of the user. Configuration variables that control interaction with mentioned services: `vault_present` and `passphrase_store_present`.\n     * @summary Retrieve admission tokens\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ExternalAdmissionTokensApi\n     */\n    externalAdmissionTokensGet(options) {\n        return ExternalAdmissionTokensApiFp(this.configuration).externalAdmissionTokensGet(options)(this.fetch, this.basePath);\n    }\n}\n/**\n * HomeApi - fetch parameter creator\n * @export\n */\nconst HomeApiFetchParamCreator = function (configuration) {\n    return {\n        /**\n         * Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n         * @summary Gets recaptcha form  that can be used for getting a captcha_token for later use in the srp/username endpoint\n         * @param {string} [redirect_url]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        homeCaptchaCallbackFormGet(redirect_url, options = {}) {\n            const localVarPath = `/home/captcha_callback_form`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'GET\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            if (redirect_url !== undefined) {\n                localVarQueryParameter[\'redirect_url\'] = redirect_url;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n         * @summary Gets recaptcha form that can be used for getting a captcha_token for later use in the srp/username endpoint\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        homeCaptchaFormGet(options = {}) {\n            const localVarPath = `/home/captcha_form`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'GET\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * HomeApi - functional programming interface\n * @export\n */\nconst HomeApiFp = function (configuration) {\n    return {\n        /**\n         * Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n         * @summary Gets recaptcha form  that can be used for getting a captcha_token for later use in the srp/username endpoint\n         * @param {string} [redirect_url]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        homeCaptchaCallbackFormGet(redirect_url, options) {\n            const localVarFetchArgs = HomeApiFetchParamCreator(configuration).homeCaptchaCallbackFormGet(redirect_url, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n         * @summary Gets recaptcha form that can be used for getting a captcha_token for later use in the srp/username endpoint\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        homeCaptchaFormGet(options) {\n            const localVarFetchArgs = HomeApiFetchParamCreator(configuration).homeCaptchaFormGet(options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n    };\n};\n/**\n * HomeApi - factory interface\n * @export\n */\nconst HomeApiFactory = function (configuration, fetch, basePath) {\n    return {\n        /**\n         * Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n         * @summary Gets recaptcha form  that can be used for getting a captcha_token for later use in the srp/username endpoint\n         * @param {string} [redirect_url]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        homeCaptchaCallbackFormGet(redirect_url, options) {\n            return HomeApiFp(configuration).homeCaptchaCallbackFormGet(redirect_url, options)(fetch, basePath);\n        },\n        /**\n         * Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n         * @summary Gets recaptcha form that can be used for getting a captcha_token for later use in the srp/username endpoint\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        homeCaptchaFormGet(options) {\n            return HomeApiFp(configuration).homeCaptchaFormGet(options)(fetch, basePath);\n        },\n    };\n};\n/**\n * HomeApi - object-oriented interface\n * @export\n * @class HomeApi\n * @extends {BaseAPI}\n */\nclass HomeApi extends BaseAPI {\n    /**\n     * Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n     * @summary Gets recaptcha form  that can be used for getting a captcha_token for later use in the srp/username endpoint\n     * @param {string} [redirect_url]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HomeApi\n     */\n    homeCaptchaCallbackFormGet(redirect_url, options) {\n        return HomeApiFp(this.configuration).homeCaptchaCallbackFormGet(redirect_url, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n     * @summary Gets recaptcha form that can be used for getting a captcha_token for later use in the srp/username endpoint\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HomeApi\n     */\n    homeCaptchaFormGet(options) {\n        return HomeApiFp(this.configuration).homeCaptchaFormGet(options)(this.fetch, this.basePath);\n    }\n}\n/**\n * ImportUserApi - fetch parameter creator\n * @export\n */\nconst ImportUserApiFetchParamCreator = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Creates a new user key store user and imports the keys\n         * @param {PostImportUserRequest} [import_user_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        importUserPost(import_user_params, options = {}) {\n            const localVarPath = `/import_user`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication providerApiKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(import_user_params || {}) : (import_user_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * ImportUserApi - functional programming interface\n * @export\n */\nconst ImportUserApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Creates a new user key store user and imports the keys\n         * @param {PostImportUserRequest} [import_user_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        importUserPost(import_user_params, options) {\n            const localVarFetchArgs = ImportUserApiFetchParamCreator(configuration).importUserPost(import_user_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n    };\n};\n/**\n * ImportUserApi - factory interface\n * @export\n */\nconst ImportUserApiFactory = function (configuration, fetch, basePath) {\n    return {\n        /**\n         *\n         * @summary Creates a new user key store user and imports the keys\n         * @param {PostImportUserRequest} [import_user_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        importUserPost(import_user_params, options) {\n            return ImportUserApiFp(configuration).importUserPost(import_user_params, options)(fetch, basePath);\n        },\n    };\n};\n/**\n * ImportUserApi - object-oriented interface\n * @export\n * @class ImportUserApi\n * @extends {BaseAPI}\n */\nclass ImportUserApi extends BaseAPI {\n    /**\n     *\n     * @summary Creates a new user key store user and imports the keys\n     * @param {PostImportUserRequest} [import_user_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ImportUserApi\n     */\n    importUserPost(import_user_params, options) {\n        return ImportUserApiFp(this.configuration).importUserPost(import_user_params, options)(this.fetch, this.basePath);\n    }\n}\n/**\n * KeyEncryptionKeyApi - fetch parameter creator\n * @export\n */\nconst KeyEncryptionKeyApiFetchParamCreator = function (configuration) {\n    return {\n        /**\n         * Returns a key encryption key (KEK) encrypted with the passphrase derived key of the user. The format is the serialization format of the Cryppo library.\n         * @summary Retrieves a key encryption key  (KEK)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keyEncryptionKeyGet(options = {}) {\n            const localVarPath = `/key_encryption_key`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'GET\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication oidc2UserAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("authorizationoidc2")\n                    : configuration.apiKey;\n                localVarHeaderParameter["authorizationoidc2"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Stores a key encryption key (KEK) encrypted with the passphrase derived key of the user. The expected format is the serialization format of the Cryppo library.\n         * @summary Stores a key encryption key (KEK)\n         * @param {PostKeyEncryptionKeyRequest} [create_key_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keyEncryptionKeyPost(create_key_params, options = {}) {\n            const localVarPath = `/key_encryption_key`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication oidc2UserAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("authorizationoidc2")\n                    : configuration.apiKey;\n                localVarHeaderParameter["authorizationoidc2"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(create_key_params || {}) : (create_key_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * KeyEncryptionKeyApi - functional programming interface\n * @export\n */\nconst KeyEncryptionKeyApiFp = function (configuration) {\n    return {\n        /**\n         * Returns a key encryption key (KEK) encrypted with the passphrase derived key of the user. The format is the serialization format of the Cryppo library.\n         * @summary Retrieves a key encryption key  (KEK)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keyEncryptionKeyGet(options) {\n            const localVarFetchArgs = KeyEncryptionKeyApiFetchParamCreator(configuration).keyEncryptionKeyGet(options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Stores a key encryption key (KEK) encrypted with the passphrase derived key of the user. The expected format is the serialization format of the Cryppo library.\n         * @summary Stores a key encryption key (KEK)\n         * @param {PostKeyEncryptionKeyRequest} [create_key_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keyEncryptionKeyPost(create_key_params, options) {\n            const localVarFetchArgs = KeyEncryptionKeyApiFetchParamCreator(configuration).keyEncryptionKeyPost(create_key_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n    };\n};\n/**\n * KeyEncryptionKeyApi - factory interface\n * @export\n */\nconst KeyEncryptionKeyApiFactory = function (configuration, fetch, basePath) {\n    return {\n        /**\n         * Returns a key encryption key (KEK) encrypted with the passphrase derived key of the user. The format is the serialization format of the Cryppo library.\n         * @summary Retrieves a key encryption key  (KEK)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keyEncryptionKeyGet(options) {\n            return KeyEncryptionKeyApiFp(configuration).keyEncryptionKeyGet(options)(fetch, basePath);\n        },\n        /**\n         * Stores a key encryption key (KEK) encrypted with the passphrase derived key of the user. The expected format is the serialization format of the Cryppo library.\n         * @summary Stores a key encryption key (KEK)\n         * @param {PostKeyEncryptionKeyRequest} [create_key_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keyEncryptionKeyPost(create_key_params, options) {\n            return KeyEncryptionKeyApiFp(configuration).keyEncryptionKeyPost(create_key_params, options)(fetch, basePath);\n        },\n    };\n};\n/**\n * KeyEncryptionKeyApi - object-oriented interface\n * @export\n * @class KeyEncryptionKeyApi\n * @extends {BaseAPI}\n */\nclass KeyEncryptionKeyApi extends BaseAPI {\n    /**\n     * Returns a key encryption key (KEK) encrypted with the passphrase derived key of the user. The format is the serialization format of the Cryppo library.\n     * @summary Retrieves a key encryption key  (KEK)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof KeyEncryptionKeyApi\n     */\n    keyEncryptionKeyGet(options) {\n        return KeyEncryptionKeyApiFp(this.configuration).keyEncryptionKeyGet(options)(this.fetch, this.basePath);\n    }\n    /**\n     * Stores a key encryption key (KEK) encrypted with the passphrase derived key of the user. The expected format is the serialization format of the Cryppo library.\n     * @summary Stores a key encryption key (KEK)\n     * @param {PostKeyEncryptionKeyRequest} [create_key_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof KeyEncryptionKeyApi\n     */\n    keyEncryptionKeyPost(create_key_params, options) {\n        return KeyEncryptionKeyApiFp(this.configuration).keyEncryptionKeyPost(create_key_params, options)(this.fetch, this.basePath);\n    }\n}\n/**\n * KeypairApi - fetch parameter creator\n * @export\n */\nconst KeypairApiFetchParamCreator = function (configuration) {\n    return {\n        /**\n         * Retrieves a KeyPair specified by `external_id` (eg the `id` for a Connection, if the KeyPair was created for that purpose).\n         * @summary Retrieves a keypair by external id\n         * @param {string} external_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keypairsExternalIdExternalIdGet(external_id, options = {}) {\n            // verify required parameter \'external_id\' is not null or undefined\n            if (external_id === null || external_id === undefined) {\n                throw new RequiredError(\'external_id\', \'Required parameter external_id was null or undefined when calling keypairsExternalIdExternalIdGet.\');\n            }\n            const localVarPath = `/keypairs/external_id/{external_id}`\n                .replace(`{${"external_id"}}`, encodeURIComponent(String(external_id)));\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'GET\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication oidc2UserAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("authorizationoidc2")\n                    : configuration.apiKey;\n                localVarHeaderParameter["authorizationoidc2"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Deletes a keypair identified by its ID.\n         * @summary Deletes a keypair\n         * @param {string} id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keypairsIdDelete(id, options = {}) {\n            // verify required parameter \'id\' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError(\'id\', \'Required parameter id was null or undefined when calling keypairsIdDelete.\');\n            }\n            const localVarPath = `/keypairs/{id}`\n                .replace(`{${"id"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'DELETE\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication oidc2UserAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("authorizationoidc2")\n                    : configuration.apiKey;\n                localVarHeaderParameter["authorizationoidc2"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Retrieves a keypair identified by its ID. The keypair encrypted with the key encryption key (KEK) of the user (field `encrypted_serialized_key`). The format is the serialization format of the Cryppo library. The public key is also served unencrypted as a PEM\n         * @summary Retrieves a keypair\n         * @param {string} id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keypairsIdGet(id, options = {}) {\n            // verify required parameter \'id\' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError(\'id\', \'Required parameter id was null or undefined when calling keypairsIdGet.\');\n            }\n            const localVarPath = `/keypairs/{id}`\n                .replace(`{${"id"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'GET\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication oidc2UserAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("authorizationoidc2")\n                    : configuration.apiKey;\n                localVarHeaderParameter["authorizationoidc2"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Updates fields for KeyPair specified by id with new values if provided in params.\n         * @summary Updates a keypair\n         * @param {string} id\n         * @param {PutKeypairsRequest} [update_keypair_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keypairsIdPatch(id, update_keypair_params, options = {}) {\n            // verify required parameter \'id\' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError(\'id\', \'Required parameter id was null or undefined when calling keypairsIdPatch.\');\n            }\n            const localVarPath = `/keypairs/{id}`\n                .replace(`{${"id"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'PATCH\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(update_keypair_params || {}) : (update_keypair_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Stores a keypair. The keypair encrypted with the key encryption key (KEK) of the user (field `encrypted_serialized_key`). The format is the serialization format of the Cryppo library. Also stores the public key unencrypted as a PEM. Each keypair can be tagged by a list of tags which make is possible for the client to differentiate between various keypairs.\n         * @summary Stores a keypair\n         * @param {PostKeypairsRequest} [create_keypair_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keypairsPost(create_keypair_params, options = {}) {\n            const localVarPath = `/keypairs`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication oidc2UserAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("authorizationoidc2")\n                    : configuration.apiKey;\n                localVarHeaderParameter["authorizationoidc2"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(create_keypair_params || {}) : (create_keypair_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * KeypairApi - functional programming interface\n * @export\n */\nconst KeypairApiFp = function (configuration) {\n    return {\n        /**\n         * Retrieves a KeyPair specified by `external_id` (eg the `id` for a Connection, if the KeyPair was created for that purpose).\n         * @summary Retrieves a keypair by external id\n         * @param {string} external_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keypairsExternalIdExternalIdGet(external_id, options) {\n            const localVarFetchArgs = KeypairApiFetchParamCreator(configuration).keypairsExternalIdExternalIdGet(external_id, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Deletes a keypair identified by its ID.\n         * @summary Deletes a keypair\n         * @param {string} id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keypairsIdDelete(id, options) {\n            const localVarFetchArgs = KeypairApiFetchParamCreator(configuration).keypairsIdDelete(id, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Retrieves a keypair identified by its ID. The keypair encrypted with the key encryption key (KEK) of the user (field `encrypted_serialized_key`). The format is the serialization format of the Cryppo library. The public key is also served unencrypted as a PEM\n         * @summary Retrieves a keypair\n         * @param {string} id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keypairsIdGet(id, options) {\n            const localVarFetchArgs = KeypairApiFetchParamCreator(configuration).keypairsIdGet(id, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Updates fields for KeyPair specified by id with new values if provided in params.\n         * @summary Updates a keypair\n         * @param {string} id\n         * @param {PutKeypairsRequest} [update_keypair_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keypairsIdPatch(id, update_keypair_params, options) {\n            const localVarFetchArgs = KeypairApiFetchParamCreator(configuration).keypairsIdPatch(id, update_keypair_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Stores a keypair. The keypair encrypted with the key encryption key (KEK) of the user (field `encrypted_serialized_key`). The format is the serialization format of the Cryppo library. Also stores the public key unencrypted as a PEM. Each keypair can be tagged by a list of tags which make is possible for the client to differentiate between various keypairs.\n         * @summary Stores a keypair\n         * @param {PostKeypairsRequest} [create_keypair_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keypairsPost(create_keypair_params, options) {\n            const localVarFetchArgs = KeypairApiFetchParamCreator(configuration).keypairsPost(create_keypair_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n    };\n};\n/**\n * KeypairApi - factory interface\n * @export\n */\nconst KeypairApiFactory = function (configuration, fetch, basePath) {\n    return {\n        /**\n         * Retrieves a KeyPair specified by `external_id` (eg the `id` for a Connection, if the KeyPair was created for that purpose).\n         * @summary Retrieves a keypair by external id\n         * @param {string} external_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keypairsExternalIdExternalIdGet(external_id, options) {\n            return KeypairApiFp(configuration).keypairsExternalIdExternalIdGet(external_id, options)(fetch, basePath);\n        },\n        /**\n         * Deletes a keypair identified by its ID.\n         * @summary Deletes a keypair\n         * @param {string} id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keypairsIdDelete(id, options) {\n            return KeypairApiFp(configuration).keypairsIdDelete(id, options)(fetch, basePath);\n        },\n        /**\n         * Retrieves a keypair identified by its ID. The keypair encrypted with the key encryption key (KEK) of the user (field `encrypted_serialized_key`). The format is the serialization format of the Cryppo library. The public key is also served unencrypted as a PEM\n         * @summary Retrieves a keypair\n         * @param {string} id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keypairsIdGet(id, options) {\n            return KeypairApiFp(configuration).keypairsIdGet(id, options)(fetch, basePath);\n        },\n        /**\n         * Updates fields for KeyPair specified by id with new values if provided in params.\n         * @summary Updates a keypair\n         * @param {string} id\n         * @param {PutKeypairsRequest} [update_keypair_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keypairsIdPatch(id, update_keypair_params, options) {\n            return KeypairApiFp(configuration).keypairsIdPatch(id, update_keypair_params, options)(fetch, basePath);\n        },\n        /**\n         * Stores a keypair. The keypair encrypted with the key encryption key (KEK) of the user (field `encrypted_serialized_key`). The format is the serialization format of the Cryppo library. Also stores the public key unencrypted as a PEM. Each keypair can be tagged by a list of tags which make is possible for the client to differentiate between various keypairs.\n         * @summary Stores a keypair\n         * @param {PostKeypairsRequest} [create_keypair_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        keypairsPost(create_keypair_params, options) {\n            return KeypairApiFp(configuration).keypairsPost(create_keypair_params, options)(fetch, basePath);\n        },\n    };\n};\n/**\n * KeypairApi - object-oriented interface\n * @export\n * @class KeypairApi\n * @extends {BaseAPI}\n */\nclass KeypairApi extends BaseAPI {\n    /**\n     * Retrieves a KeyPair specified by `external_id` (eg the `id` for a Connection, if the KeyPair was created for that purpose).\n     * @summary Retrieves a keypair by external id\n     * @param {string} external_id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof KeypairApi\n     */\n    keypairsExternalIdExternalIdGet(external_id, options) {\n        return KeypairApiFp(this.configuration).keypairsExternalIdExternalIdGet(external_id, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Deletes a keypair identified by its ID.\n     * @summary Deletes a keypair\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof KeypairApi\n     */\n    keypairsIdDelete(id, options) {\n        return KeypairApiFp(this.configuration).keypairsIdDelete(id, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Retrieves a keypair identified by its ID. The keypair encrypted with the key encryption key (KEK) of the user (field `encrypted_serialized_key`). The format is the serialization format of the Cryppo library. The public key is also served unencrypted as a PEM\n     * @summary Retrieves a keypair\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof KeypairApi\n     */\n    keypairsIdGet(id, options) {\n        return KeypairApiFp(this.configuration).keypairsIdGet(id, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Updates fields for KeyPair specified by id with new values if provided in params.\n     * @summary Updates a keypair\n     * @param {string} id\n     * @param {PutKeypairsRequest} [update_keypair_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof KeypairApi\n     */\n    keypairsIdPatch(id, update_keypair_params, options) {\n        return KeypairApiFp(this.configuration).keypairsIdPatch(id, update_keypair_params, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Stores a keypair. The keypair encrypted with the key encryption key (KEK) of the user (field `encrypted_serialized_key`). The format is the serialization format of the Cryppo library. Also stores the public key unencrypted as a PEM. Each keypair can be tagged by a list of tags which make is possible for the client to differentiate between various keypairs.\n     * @summary Stores a keypair\n     * @param {PostKeypairsRequest} [create_keypair_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof KeypairApi\n     */\n    keypairsPost(create_keypair_params, options) {\n        return KeypairApiFp(this.configuration).keypairsPost(create_keypair_params, options)(this.fetch, this.basePath);\n    }\n}\n/**\n * PassphraseDerivationArtefactApi - fetch parameter creator\n * @export\n */\nconst PassphraseDerivationArtefactApiFetchParamCreator = function (configuration) {\n    return {\n        /**\n         * Returnes passphrase derivation artefacts which were used for generation of the passphrase derived key.The format is as a JSON string encoded as Base64 (urlsafe).\n         * @summary Retrieves the passphrase derivation artefact for the current user\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        passphraseDerivationArtefactGet(options = {}) {\n            const localVarPath = `/passphrase_derivation_artefact`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'GET\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication oidc2UserAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("authorizationoidc2")\n                    : configuration.apiKey;\n                localVarHeaderParameter["authorizationoidc2"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Passphrase derivation artefacts used for generation of the passphrase derived key are expected to be sent as a JSON string encoded as Base64 (urlsafe) a field of the payload to this endpoint.\n         * @summary Stores passphrase derivation artefacts\n         * @param {PostPassphraseDerivationArtefactRequest} [create_passphrase_artefact_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        passphraseDerivationArtefactPost(create_passphrase_artefact_params, options = {}) {\n            const localVarPath = `/passphrase_derivation_artefact`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication oidc2UserAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("authorizationoidc2")\n                    : configuration.apiKey;\n                localVarHeaderParameter["authorizationoidc2"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(create_passphrase_artefact_params || {}) : (create_passphrase_artefact_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * PassphraseDerivationArtefactApi - functional programming interface\n * @export\n */\nconst PassphraseDerivationArtefactApiFp = function (configuration) {\n    return {\n        /**\n         * Returnes passphrase derivation artefacts which were used for generation of the passphrase derived key.The format is as a JSON string encoded as Base64 (urlsafe).\n         * @summary Retrieves the passphrase derivation artefact for the current user\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        passphraseDerivationArtefactGet(options) {\n            const localVarFetchArgs = PassphraseDerivationArtefactApiFetchParamCreator(configuration).passphraseDerivationArtefactGet(options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Passphrase derivation artefacts used for generation of the passphrase derived key are expected to be sent as a JSON string encoded as Base64 (urlsafe) a field of the payload to this endpoint.\n         * @summary Stores passphrase derivation artefacts\n         * @param {PostPassphraseDerivationArtefactRequest} [create_passphrase_artefact_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        passphraseDerivationArtefactPost(create_passphrase_artefact_params, options) {\n            const localVarFetchArgs = PassphraseDerivationArtefactApiFetchParamCreator(configuration).passphraseDerivationArtefactPost(create_passphrase_artefact_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n    };\n};\n/**\n * PassphraseDerivationArtefactApi - factory interface\n * @export\n */\nconst PassphraseDerivationArtefactApiFactory = function (configuration, fetch, basePath) {\n    return {\n        /**\n         * Returnes passphrase derivation artefacts which were used for generation of the passphrase derived key.The format is as a JSON string encoded as Base64 (urlsafe).\n         * @summary Retrieves the passphrase derivation artefact for the current user\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        passphraseDerivationArtefactGet(options) {\n            return PassphraseDerivationArtefactApiFp(configuration).passphraseDerivationArtefactGet(options)(fetch, basePath);\n        },\n        /**\n         * Passphrase derivation artefacts used for generation of the passphrase derived key are expected to be sent as a JSON string encoded as Base64 (urlsafe) a field of the payload to this endpoint.\n         * @summary Stores passphrase derivation artefacts\n         * @param {PostPassphraseDerivationArtefactRequest} [create_passphrase_artefact_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        passphraseDerivationArtefactPost(create_passphrase_artefact_params, options) {\n            return PassphraseDerivationArtefactApiFp(configuration).passphraseDerivationArtefactPost(create_passphrase_artefact_params, options)(fetch, basePath);\n        },\n    };\n};\n/**\n * PassphraseDerivationArtefactApi - object-oriented interface\n * @export\n * @class PassphraseDerivationArtefactApi\n * @extends {BaseAPI}\n */\nclass PassphraseDerivationArtefactApi extends BaseAPI {\n    /**\n     * Returnes passphrase derivation artefacts which were used for generation of the passphrase derived key.The format is as a JSON string encoded as Base64 (urlsafe).\n     * @summary Retrieves the passphrase derivation artefact for the current user\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PassphraseDerivationArtefactApi\n     */\n    passphraseDerivationArtefactGet(options) {\n        return PassphraseDerivationArtefactApiFp(this.configuration).passphraseDerivationArtefactGet(options)(this.fetch, this.basePath);\n    }\n    /**\n     * Passphrase derivation artefacts used for generation of the passphrase derived key are expected to be sent as a JSON string encoded as Base64 (urlsafe) a field of the payload to this endpoint.\n     * @summary Stores passphrase derivation artefacts\n     * @param {PostPassphraseDerivationArtefactRequest} [create_passphrase_artefact_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PassphraseDerivationArtefactApi\n     */\n    passphraseDerivationArtefactPost(create_passphrase_artefact_params, options) {\n        return PassphraseDerivationArtefactApiFp(this.configuration).passphraseDerivationArtefactPost(create_passphrase_artefact_params, options)(this.fetch, this.basePath);\n    }\n}\n/**\n * SessionApi - fetch parameter creator\n * @export\n */\nconst SessionApiFetchParamCreator = function (configuration) {\n    return {\n        /**\n         * Deletes either (1) all user sessions (that is, access tokens), (2) or all user sessions except for the session under which the current call is being executed.\n         * @summary Deletes all user sessions\n         * @param {boolean} [except_current] if present, the current session will not be deleted. If absent, all current session will be deleted\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sessionAllDelete(except_current, options = {}) {\n            const localVarPath = `/session/all`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'DELETE\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication oidc2UserAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("authorizationoidc2")\n                    : configuration.apiKey;\n                localVarHeaderParameter["authorizationoidc2"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            if (except_current !== undefined) {\n                localVarQueryParameter[\'except_current\'] = except_current;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Log out, deleting current Session.\n         * @summary Deletes a session\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sessionDelete(options = {}) {\n            const localVarPath = `/session`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'DELETE\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Log in with username and passphrase, creating a Session\n         * @summary Creates a session\n         * @param {PostSessionRequest} [create_session_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sessionPost(create_session_params, options = {}) {\n            const localVarPath = `/session`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(create_session_params || {}) : (create_session_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * A call to log in and obtain a session authentication string in the flowwith an external party. `login_key` is an identification token which will be sent to the external party for user verification.This call must be preceded by the external party calling `/admin/users` and creating a user record.\n         * @summary Creates a session with a login key of the external party\n         * @param {PostSessionWithLoginKeyRequest} [create_session_with_login_key_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sessionWithLoginKeyPost(create_session_with_login_key_params, options = {}) {\n            const localVarPath = `/session/with_login_key`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(create_session_with_login_key_params || {}) : (create_session_with_login_key_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Creates a session using SRP (Secure Remote Password) authentication\n         * @summary Creates a session with SRP authentication\n         * @param {PostSrpSessionRequest} [user_param]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        srpSessionPost(user_param, options = {}) {\n            const localVarPath = `/srp/session`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(user_param || {}) : (user_param || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * SessionApi - functional programming interface\n * @export\n */\nconst SessionApiFp = function (configuration) {\n    return {\n        /**\n         * Deletes either (1) all user sessions (that is, access tokens), (2) or all user sessions except for the session under which the current call is being executed.\n         * @summary Deletes all user sessions\n         * @param {boolean} [except_current] if present, the current session will not be deleted. If absent, all current session will be deleted\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sessionAllDelete(except_current, options) {\n            const localVarFetchArgs = SessionApiFetchParamCreator(configuration).sessionAllDelete(except_current, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Log out, deleting current Session.\n         * @summary Deletes a session\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sessionDelete(options) {\n            const localVarFetchArgs = SessionApiFetchParamCreator(configuration).sessionDelete(options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Log in with username and passphrase, creating a Session\n         * @summary Creates a session\n         * @param {PostSessionRequest} [create_session_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sessionPost(create_session_params, options) {\n            const localVarFetchArgs = SessionApiFetchParamCreator(configuration).sessionPost(create_session_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * A call to log in and obtain a session authentication string in the flowwith an external party. `login_key` is an identification token which will be sent to the external party for user verification.This call must be preceded by the external party calling `/admin/users` and creating a user record.\n         * @summary Creates a session with a login key of the external party\n         * @param {PostSessionWithLoginKeyRequest} [create_session_with_login_key_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sessionWithLoginKeyPost(create_session_with_login_key_params, options) {\n            const localVarFetchArgs = SessionApiFetchParamCreator(configuration).sessionWithLoginKeyPost(create_session_with_login_key_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Creates a session using SRP (Secure Remote Password) authentication\n         * @summary Creates a session with SRP authentication\n         * @param {PostSrpSessionRequest} [user_param]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        srpSessionPost(user_param, options) {\n            const localVarFetchArgs = SessionApiFetchParamCreator(configuration).srpSessionPost(user_param, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n    };\n};\n/**\n * SessionApi - factory interface\n * @export\n */\nconst SessionApiFactory = function (configuration, fetch, basePath) {\n    return {\n        /**\n         * Deletes either (1) all user sessions (that is, access tokens), (2) or all user sessions except for the session under which the current call is being executed.\n         * @summary Deletes all user sessions\n         * @param {boolean} [except_current] if present, the current session will not be deleted. If absent, all current session will be deleted\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sessionAllDelete(except_current, options) {\n            return SessionApiFp(configuration).sessionAllDelete(except_current, options)(fetch, basePath);\n        },\n        /**\n         * Log out, deleting current Session.\n         * @summary Deletes a session\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sessionDelete(options) {\n            return SessionApiFp(configuration).sessionDelete(options)(fetch, basePath);\n        },\n        /**\n         * Log in with username and passphrase, creating a Session\n         * @summary Creates a session\n         * @param {PostSessionRequest} [create_session_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sessionPost(create_session_params, options) {\n            return SessionApiFp(configuration).sessionPost(create_session_params, options)(fetch, basePath);\n        },\n        /**\n         * A call to log in and obtain a session authentication string in the flowwith an external party. `login_key` is an identification token which will be sent to the external party for user verification.This call must be preceded by the external party calling `/admin/users` and creating a user record.\n         * @summary Creates a session with a login key of the external party\n         * @param {PostSessionWithLoginKeyRequest} [create_session_with_login_key_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sessionWithLoginKeyPost(create_session_with_login_key_params, options) {\n            return SessionApiFp(configuration).sessionWithLoginKeyPost(create_session_with_login_key_params, options)(fetch, basePath);\n        },\n        /**\n         * Creates a session using SRP (Secure Remote Password) authentication\n         * @summary Creates a session with SRP authentication\n         * @param {PostSrpSessionRequest} [user_param]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        srpSessionPost(user_param, options) {\n            return SessionApiFp(configuration).srpSessionPost(user_param, options)(fetch, basePath);\n        },\n    };\n};\n/**\n * SessionApi - object-oriented interface\n * @export\n * @class SessionApi\n * @extends {BaseAPI}\n */\nclass SessionApi extends BaseAPI {\n    /**\n     * Deletes either (1) all user sessions (that is, access tokens), (2) or all user sessions except for the session under which the current call is being executed.\n     * @summary Deletes all user sessions\n     * @param {boolean} [except_current] if present, the current session will not be deleted. If absent, all current session will be deleted\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SessionApi\n     */\n    sessionAllDelete(except_current, options) {\n        return SessionApiFp(this.configuration).sessionAllDelete(except_current, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Log out, deleting current Session.\n     * @summary Deletes a session\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SessionApi\n     */\n    sessionDelete(options) {\n        return SessionApiFp(this.configuration).sessionDelete(options)(this.fetch, this.basePath);\n    }\n    /**\n     * Log in with username and passphrase, creating a Session\n     * @summary Creates a session\n     * @param {PostSessionRequest} [create_session_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SessionApi\n     */\n    sessionPost(create_session_params, options) {\n        return SessionApiFp(this.configuration).sessionPost(create_session_params, options)(this.fetch, this.basePath);\n    }\n    /**\n     * A call to log in and obtain a session authentication string in the flowwith an external party. `login_key` is an identification token which will be sent to the external party for user verification.This call must be preceded by the external party calling `/admin/users` and creating a user record.\n     * @summary Creates a session with a login key of the external party\n     * @param {PostSessionWithLoginKeyRequest} [create_session_with_login_key_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SessionApi\n     */\n    sessionWithLoginKeyPost(create_session_with_login_key_params, options) {\n        return SessionApiFp(this.configuration).sessionWithLoginKeyPost(create_session_with_login_key_params, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Creates a session using SRP (Secure Remote Password) authentication\n     * @summary Creates a session with SRP authentication\n     * @param {PostSrpSessionRequest} [user_param]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SessionApi\n     */\n    srpSessionPost(user_param, options) {\n        return SessionApiFp(this.configuration).srpSessionPost(user_param, options)(this.fetch, this.basePath);\n    }\n}\n/**\n * UserApi - fetch parameter creator\n * @export\n */\nconst UserApiFetchParamCreator = function (configuration) {\n    return {\n        /**\n         * A Vault user account is created by the external party, this is a backend-to-backend call. In order to perform this call the external party must possess a `provider_api_key`.\n         * @summary Creates a user account\n         * @param {PostAdminUsersRequest} [admin_create_user_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        adminUsersPost(admin_create_user_params, options = {}) {\n            const localVarPath = `/admin/users`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(admin_create_user_params || {}) : (admin_create_user_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * A Vault user account is created by the external party, this is a backend-to-backend call. In order to perform this call the external party must possess a `provider_api_key`.\n         * @summary Creates a user account\n         * @param {PostResellerUserCreateRequest} [reseller_user_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        portalServiceV1ResellerUserCreatePost(reseller_user_params, options = {}) {\n            const localVarPath = `/portal-service/v1/reseller/user/create`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(reseller_user_params || {}) : (reseller_user_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Creates an SRP challenge to authenticate with for a given username (Secure Remote Password)\n         * @summary Creates a challenge for SRP user auth\n         * @param {PostSrpChallengesRequest} [challenge]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        srpChallengesPost(challenge, options = {}) {\n            const localVarPath = `/srp/challenges`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(challenge || {}) : (challenge || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Creates a username for use on the POST /srp/users endpoint\n         * @summary Creates a username for use with SRP auth\n         * @param {PostSrpUsernameRequest} [create_username_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        srpUsernamePost(create_username_params, options = {}) {\n            const localVarPath = `/srp/username`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(create_username_params || {}) : (create_username_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Creates a user acception only SRP (Secure Remote Password) authentication\n         * @summary Creates a user using SRP auth\n         * @param {PostSrpUsersRequest} [create_user_with_srp_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        srpUsersPost(create_user_with_srp_params, options = {}) {\n            const localVarPath = `/srp/users`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(create_user_with_srp_params || {}) : (create_user_with_srp_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Removes the current user from the queue for asynchronous deletion.\n         * @summary removes a user from queue for deletion\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        usersDeletionQueueDelete(options = {}) {\n            const localVarPath = `/users/deletion_queue`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'DELETE\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Queues the current user for asynchronous deletion.\n         * @summary Queues a user for deletion\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        usersDeletionQueuePost(options = {}) {\n            const localVarPath = `/users/deletion_queue`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication meecoDelegationId required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Delegation-Id")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Delegation-Id"] = localVarApiKeyValue;\n            }\n            // authentication oidc2UserAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("authorizationoidc2")\n                    : configuration.apiKey;\n                localVarHeaderParameter["authorizationoidc2"] = localVarApiKeyValue;\n            }\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            // authentication userAuthToken required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Authorization")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Creates a new Keystore user with provided credentials and a one-off admission token. (Requires valid admission_token, see _Admission Token_ for details).\n         * @summary Creates a user\n         * @param {PostUsersRequest} [create_user_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        usersPost(create_user_params, options = {}) {\n            const localVarPath = `/users`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'POST\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            localVarHeaderParameter[\'Content-Type\'] = \'application/json\';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = ( true) || false;\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(create_user_params || {}) : (create_user_params || "");\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * UserApi - functional programming interface\n * @export\n */\nconst UserApiFp = function (configuration) {\n    return {\n        /**\n         * A Vault user account is created by the external party, this is a backend-to-backend call. In order to perform this call the external party must possess a `provider_api_key`.\n         * @summary Creates a user account\n         * @param {PostAdminUsersRequest} [admin_create_user_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        adminUsersPost(admin_create_user_params, options) {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).adminUsersPost(admin_create_user_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * A Vault user account is created by the external party, this is a backend-to-backend call. In order to perform this call the external party must possess a `provider_api_key`.\n         * @summary Creates a user account\n         * @param {PostResellerUserCreateRequest} [reseller_user_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        portalServiceV1ResellerUserCreatePost(reseller_user_params, options) {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).portalServiceV1ResellerUserCreatePost(reseller_user_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Creates an SRP challenge to authenticate with for a given username (Secure Remote Password)\n         * @summary Creates a challenge for SRP user auth\n         * @param {PostSrpChallengesRequest} [challenge]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        srpChallengesPost(challenge, options) {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).srpChallengesPost(challenge, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Creates a username for use on the POST /srp/users endpoint\n         * @summary Creates a username for use with SRP auth\n         * @param {PostSrpUsernameRequest} [create_username_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        srpUsernamePost(create_username_params, options) {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).srpUsernamePost(create_username_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Creates a user acception only SRP (Secure Remote Password) authentication\n         * @summary Creates a user using SRP auth\n         * @param {PostSrpUsersRequest} [create_user_with_srp_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        srpUsersPost(create_user_with_srp_params, options) {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).srpUsersPost(create_user_with_srp_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Removes the current user from the queue for asynchronous deletion.\n         * @summary removes a user from queue for deletion\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        usersDeletionQueueDelete(options) {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).usersDeletionQueueDelete(options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Queues the current user for asynchronous deletion.\n         * @summary Queues a user for deletion\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        usersDeletionQueuePost(options) {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).usersDeletionQueuePost(options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         * Creates a new Keystore user with provided credentials and a one-off admission token. (Requires valid admission_token, see _Admission Token_ for details).\n         * @summary Creates a user\n         * @param {PostUsersRequest} [create_user_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        usersPost(create_user_params, options) {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).usersPost(create_user_params, options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n    };\n};\n/**\n * UserApi - factory interface\n * @export\n */\nconst UserApiFactory = function (configuration, fetch, basePath) {\n    return {\n        /**\n         * A Vault user account is created by the external party, this is a backend-to-backend call. In order to perform this call the external party must possess a `provider_api_key`.\n         * @summary Creates a user account\n         * @param {PostAdminUsersRequest} [admin_create_user_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        adminUsersPost(admin_create_user_params, options) {\n            return UserApiFp(configuration).adminUsersPost(admin_create_user_params, options)(fetch, basePath);\n        },\n        /**\n         * A Vault user account is created by the external party, this is a backend-to-backend call. In order to perform this call the external party must possess a `provider_api_key`.\n         * @summary Creates a user account\n         * @param {PostResellerUserCreateRequest} [reseller_user_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        portalServiceV1ResellerUserCreatePost(reseller_user_params, options) {\n            return UserApiFp(configuration).portalServiceV1ResellerUserCreatePost(reseller_user_params, options)(fetch, basePath);\n        },\n        /**\n         * Creates an SRP challenge to authenticate with for a given username (Secure Remote Password)\n         * @summary Creates a challenge for SRP user auth\n         * @param {PostSrpChallengesRequest} [challenge]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        srpChallengesPost(challenge, options) {\n            return UserApiFp(configuration).srpChallengesPost(challenge, options)(fetch, basePath);\n        },\n        /**\n         * Creates a username for use on the POST /srp/users endpoint\n         * @summary Creates a username for use with SRP auth\n         * @param {PostSrpUsernameRequest} [create_username_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        srpUsernamePost(create_username_params, options) {\n            return UserApiFp(configuration).srpUsernamePost(create_username_params, options)(fetch, basePath);\n        },\n        /**\n         * Creates a user acception only SRP (Secure Remote Password) authentication\n         * @summary Creates a user using SRP auth\n         * @param {PostSrpUsersRequest} [create_user_with_srp_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        srpUsersPost(create_user_with_srp_params, options) {\n            return UserApiFp(configuration).srpUsersPost(create_user_with_srp_params, options)(fetch, basePath);\n        },\n        /**\n         * Removes the current user from the queue for asynchronous deletion.\n         * @summary removes a user from queue for deletion\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        usersDeletionQueueDelete(options) {\n            return UserApiFp(configuration).usersDeletionQueueDelete(options)(fetch, basePath);\n        },\n        /**\n         * Queues the current user for asynchronous deletion.\n         * @summary Queues a user for deletion\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        usersDeletionQueuePost(options) {\n            return UserApiFp(configuration).usersDeletionQueuePost(options)(fetch, basePath);\n        },\n        /**\n         * Creates a new Keystore user with provided credentials and a one-off admission token. (Requires valid admission_token, see _Admission Token_ for details).\n         * @summary Creates a user\n         * @param {PostUsersRequest} [create_user_params]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        usersPost(create_user_params, options) {\n            return UserApiFp(configuration).usersPost(create_user_params, options)(fetch, basePath);\n        },\n    };\n};\n/**\n * UserApi - object-oriented interface\n * @export\n * @class UserApi\n * @extends {BaseAPI}\n */\nclass UserApi extends BaseAPI {\n    /**\n     * A Vault user account is created by the external party, this is a backend-to-backend call. In order to perform this call the external party must possess a `provider_api_key`.\n     * @summary Creates a user account\n     * @param {PostAdminUsersRequest} [admin_create_user_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    adminUsersPost(admin_create_user_params, options) {\n        return UserApiFp(this.configuration).adminUsersPost(admin_create_user_params, options)(this.fetch, this.basePath);\n    }\n    /**\n     * A Vault user account is created by the external party, this is a backend-to-backend call. In order to perform this call the external party must possess a `provider_api_key`.\n     * @summary Creates a user account\n     * @param {PostResellerUserCreateRequest} [reseller_user_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    portalServiceV1ResellerUserCreatePost(reseller_user_params, options) {\n        return UserApiFp(this.configuration).portalServiceV1ResellerUserCreatePost(reseller_user_params, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Creates an SRP challenge to authenticate with for a given username (Secure Remote Password)\n     * @summary Creates a challenge for SRP user auth\n     * @param {PostSrpChallengesRequest} [challenge]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    srpChallengesPost(challenge, options) {\n        return UserApiFp(this.configuration).srpChallengesPost(challenge, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Creates a username for use on the POST /srp/users endpoint\n     * @summary Creates a username for use with SRP auth\n     * @param {PostSrpUsernameRequest} [create_username_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    srpUsernamePost(create_username_params, options) {\n        return UserApiFp(this.configuration).srpUsernamePost(create_username_params, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Creates a user acception only SRP (Secure Remote Password) authentication\n     * @summary Creates a user using SRP auth\n     * @param {PostSrpUsersRequest} [create_user_with_srp_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    srpUsersPost(create_user_with_srp_params, options) {\n        return UserApiFp(this.configuration).srpUsersPost(create_user_with_srp_params, options)(this.fetch, this.basePath);\n    }\n    /**\n     * Removes the current user from the queue for asynchronous deletion.\n     * @summary removes a user from queue for deletion\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    usersDeletionQueueDelete(options) {\n        return UserApiFp(this.configuration).usersDeletionQueueDelete(options)(this.fetch, this.basePath);\n    }\n    /**\n     * Queues the current user for asynchronous deletion.\n     * @summary Queues a user for deletion\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    usersDeletionQueuePost(options) {\n        return UserApiFp(this.configuration).usersDeletionQueuePost(options)(this.fetch, this.basePath);\n    }\n    /**\n     * Creates a new Keystore user with provided credentials and a one-off admission token. (Requires valid admission_token, see _Admission Token_ for details).\n     * @summary Creates a user\n     * @param {PostUsersRequest} [create_user_params]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    usersPost(create_user_params, options) {\n        return UserApiFp(this.configuration).usersPost(create_user_params, options)(this.fetch, this.basePath);\n    }\n}\n/**\n * VersionApi - fetch parameter creator\n * @export\n */\nconst VersionApiFetchParamCreator = function (configuration) {\n    return {\n        /**\n         * Returns the API version and the component name\n         * @summary Returns the API version and the component name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        versionGet(options = {}) {\n            const localVarPath = `/version`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'GET\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            // authentication subscriptionKey required\n            if (configuration && configuration.apiKey) {\n                const localVarApiKeyValue = typeof configuration.apiKey === \'function\'\n                    ? configuration.apiKey("Meeco-Subscription-Key")\n                    : configuration.apiKey;\n                localVarHeaderParameter["Meeco-Subscription-Key"] = localVarApiKeyValue;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * VersionApi - functional programming interface\n * @export\n */\nconst VersionApiFp = function (configuration) {\n    return {\n        /**\n         * Returns the API version and the component name\n         * @summary Returns the API version and the component name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        versionGet(options) {\n            const localVarFetchArgs = VersionApiFetchParamCreator(configuration).versionGet(options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n    };\n};\n/**\n * VersionApi - factory interface\n * @export\n */\nconst VersionApiFactory = function (configuration, fetch, basePath) {\n    return {\n        /**\n         * Returns the API version and the component name\n         * @summary Returns the API version and the component name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        versionGet(options) {\n            return VersionApiFp(configuration).versionGet(options)(fetch, basePath);\n        },\n    };\n};\n/**\n * VersionApi - object-oriented interface\n * @export\n * @class VersionApi\n * @extends {BaseAPI}\n */\nclass VersionApi extends BaseAPI {\n    /**\n     * Returns the API version and the component name\n     * @summary Returns the API version and the component name\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VersionApi\n     */\n    versionGet(options) {\n        return VersionApiFp(this.configuration).versionGet(options)(this.fetch, this.basePath);\n    }\n}\n/**\n * WellKnownApi - fetch parameter creator\n * @export\n */\nconst WellKnownApiFetchParamCreator = function (configuration) {\n    return {\n        /**\n         * Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n         * @summary Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        wellKnownRecaptchaGet(options = {}) {\n            const localVarPath = `/.well-known/recaptcha`;\n            const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__["parse"](localVarPath, true);\n            const localVarRequestOptions = Object.assign({ method: \'GET\' }, options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url__WEBPACK_IMPORTED_MODULE_0__["format"](localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * WellKnownApi - functional programming interface\n * @export\n */\nconst WellKnownApiFp = function (configuration) {\n    return {\n        /**\n         * Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n         * @summary Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        wellKnownRecaptchaGet(options) {\n            const localVarFetchArgs = WellKnownApiFetchParamCreator(configuration).wellKnownRecaptchaGet(options);\n            return (fetch = portable_fetch__WEBPACK_IMPORTED_MODULE_1__, basePath = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    }\n                    else {\n                        throw response;\n                    }\n                });\n            };\n        },\n    };\n};\n/**\n * WellKnownApi - factory interface\n * @export\n */\nconst WellKnownApiFactory = function (configuration, fetch, basePath) {\n    return {\n        /**\n         * Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n         * @summary Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        wellKnownRecaptchaGet(options) {\n            return WellKnownApiFp(configuration).wellKnownRecaptchaGet(options)(fetch, basePath);\n        },\n    };\n};\n/**\n * WellKnownApi - object-oriented interface\n * @export\n * @class WellKnownApi\n * @extends {BaseAPI}\n */\nclass WellKnownApi extends BaseAPI {\n    /**\n     * Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n     * @summary Gets recaptcha settings (mainly site key to be used for recaptcha verifications)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WellKnownApi\n     */\n    wellKnownRecaptchaGet(options) {\n        return WellKnownApiFp(this.configuration).wellKnownRecaptchaGet(options)(this.fetch, this.basePath);\n    }\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/keystore-api-sdk/lib/esm/api.js?')},"../../node_modules/@meeco/keystore-api-sdk/lib/esm/configuration.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Configuration", function() { return Configuration; });\n// tslint:disable\n/**\n * Keystore\n * Storage for secrets and keys. When a user creates and encrypts Data Encryption Keys and Keypairs, they are stored in the Keystore. A user cannot access the Vault without first using the Keystore. In the current implementation the Keystore functionality is implemented by meeco-keystore.\n *\n * OpenAPI spec version: 5.1.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nclass Configuration {\n    constructor(param = {}) {\n        this.apiKey = param.apiKey;\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n    }\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/keystore-api-sdk/lib/esm/configuration.js?')},"../../node_modules/@meeco/keystore-api-sdk/lib/esm/index.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ "../../node_modules/@meeco/keystore-api-sdk/lib/esm/api.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "COLLECTION_FORMATS", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["COLLECTION_FORMATS"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BaseAPI", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RequiredError", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["RequiredError"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenApiFetchParamCreator", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["AdmissionTokenApiFetchParamCreator"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenApiFp", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["AdmissionTokenApiFp"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenApiFactory", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["AdmissionTokenApiFactory"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenApi", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["AdmissionTokenApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataEncryptionKeyApiFetchParamCreator", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["DataEncryptionKeyApiFetchParamCreator"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataEncryptionKeyApiFp", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["DataEncryptionKeyApiFp"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataEncryptionKeyApiFactory", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["DataEncryptionKeyApiFactory"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataEncryptionKeyApi", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["DataEncryptionKeyApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DelegationApiFetchParamCreator", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["DelegationApiFetchParamCreator"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DelegationApiFp", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["DelegationApiFp"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DelegationApiFactory", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["DelegationApiFactory"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DelegationApi", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["DelegationApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExternalAdmissionTokensApiFetchParamCreator", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["ExternalAdmissionTokensApiFetchParamCreator"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExternalAdmissionTokensApiFp", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["ExternalAdmissionTokensApiFp"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExternalAdmissionTokensApiFactory", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["ExternalAdmissionTokensApiFactory"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExternalAdmissionTokensApi", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["ExternalAdmissionTokensApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HomeApiFetchParamCreator", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["HomeApiFetchParamCreator"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HomeApiFp", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["HomeApiFp"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HomeApiFactory", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["HomeApiFactory"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HomeApi", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["HomeApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImportUserApiFetchParamCreator", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["ImportUserApiFetchParamCreator"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImportUserApiFp", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["ImportUserApiFp"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImportUserApiFactory", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["ImportUserApiFactory"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImportUserApi", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["ImportUserApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KeyEncryptionKeyApiFetchParamCreator", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["KeyEncryptionKeyApiFetchParamCreator"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KeyEncryptionKeyApiFp", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["KeyEncryptionKeyApiFp"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KeyEncryptionKeyApiFactory", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["KeyEncryptionKeyApiFactory"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KeyEncryptionKeyApi", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["KeyEncryptionKeyApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KeypairApiFetchParamCreator", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["KeypairApiFetchParamCreator"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KeypairApiFp", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["KeypairApiFp"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KeypairApiFactory", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["KeypairApiFactory"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KeypairApi", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["KeypairApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PassphraseDerivationArtefactApiFetchParamCreator", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["PassphraseDerivationArtefactApiFetchParamCreator"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PassphraseDerivationArtefactApiFp", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["PassphraseDerivationArtefactApiFp"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PassphraseDerivationArtefactApiFactory", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["PassphraseDerivationArtefactApiFactory"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PassphraseDerivationArtefactApi", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["PassphraseDerivationArtefactApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionApiFetchParamCreator", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["SessionApiFetchParamCreator"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionApiFp", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["SessionApiFp"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionApiFactory", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["SessionApiFactory"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionApi", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["SessionApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserApiFetchParamCreator", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["UserApiFetchParamCreator"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserApiFp", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["UserApiFp"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserApiFactory", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["UserApiFactory"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserApi", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["UserApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VersionApiFetchParamCreator", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["VersionApiFetchParamCreator"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VersionApiFp", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["VersionApiFp"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VersionApiFactory", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["VersionApiFactory"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VersionApi", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["VersionApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WellKnownApiFetchParamCreator", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["WellKnownApiFetchParamCreator"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WellKnownApiFp", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["WellKnownApiFp"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WellKnownApiFactory", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["WellKnownApiFactory"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WellKnownApi", function() { return _api__WEBPACK_IMPORTED_MODULE_0__["WellKnownApi"]; });\n\n/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./configuration */ "../../node_modules/@meeco/keystore-api-sdk/lib/esm/configuration.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Configuration", function() { return _configuration__WEBPACK_IMPORTED_MODULE_1__["Configuration"]; });\n\n// tslint:disable\n/**\n * Keystore\n * Storage for secrets and keys. When a user creates and encrypts Data Encryption Keys and Keypairs, they are stored in the Keystore. A user cannot access the Vault without first using the Keystore. In the current implementation the Keystore functionality is implemented by meeco-keystore.\n *\n * OpenAPI spec version: 5.1.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/@meeco/keystore-api-sdk/lib/esm/index.js?')},"../../node_modules/ansi-styles/index.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = __webpack_require__(/*! color-convert */ \"../../node_modules/color-convert/index.js\");\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ \"../../node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/ansi-styles/index.js?")},"../../node_modules/base-x/src/index.js":function(module,exports,__webpack_require__){"use strict";eval("\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = __webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/base-x/src/index.js?")},"../../node_modules/base64-js/index.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/base64-js/index.js?")},"../../node_modules/bson/dist/bson.browser.esm.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global, Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSONRegExp\", function() { return bson_9; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSONSymbol\", function() { return bson_19; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_BINARY_SUBTYPE_BYTE_ARRAY\", function() { return bson_57; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_BINARY_SUBTYPE_DEFAULT\", function() { return bson_56; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_BINARY_SUBTYPE_FUNCTION\", function() { return bson_55; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_BINARY_SUBTYPE_MD5\", function() { return bson_54; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_BINARY_SUBTYPE_USER_DEFINED\", function() { return bson_53; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_BINARY_SUBTYPE_UUID\", function() { return bson_52; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_BINARY_SUBTYPE_UUID_NEW\", function() { return bson_51; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_ARRAY\", function() { return bson_50; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_BINARY\", function() { return bson_49; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_BOOLEAN\", function() { return bson_48; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_CODE\", function() { return bson_47; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_CODE_W_SCOPE\", function() { return bson_46; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_DATE\", function() { return bson_45; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_DBPOINTER\", function() { return bson_44; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_DECIMAL128\", function() { return bson_43; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_INT\", function() { return bson_42; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_LONG\", function() { return bson_41; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_MAX_KEY\", function() { return bson_40; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_MIN_KEY\", function() { return bson_39; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_NULL\", function() { return bson_38; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_NUMBER\", function() { return bson_37; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_OBJECT\", function() { return bson_36; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_OID\", function() { return bson_35; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_REGEXP\", function() { return bson_34; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_STRING\", function() { return bson_33; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_SYMBOL\", function() { return bson_32; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_TIMESTAMP\", function() { return bson_31; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_DATA_UNDEFINED\", function() { return bson_30; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_INT32_MAX\", function() { return bson_29; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_INT32_MIN\", function() { return bson_28; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_INT64_MAX\", function() { return bson_27; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BSON_INT64_MIN\", function() { return bson_26; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Binary\", function() { return bson_17; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Code\", function() { return bson_21; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DBRef\", function() { return bson_18; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Decimal128\", function() { return bson_8; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Double\", function() { return bson_13; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EJSON\", function() { return bson_23; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Int32\", function() { return bson_12; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JS_INT_MAX\", function() { return bson_25; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JS_INT_MIN\", function() { return bson_24; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Long\", function() { return bson_15; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LongWithoutOverridesClass\", function() { return bson_22; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Map\", function() { return bson_20; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MaxKey\", function() { return bson_10; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MinKey\", function() { return bson_11; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ObjectID\", function() { return bson_7; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ObjectId\", function() { return bson_16; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Timestamp\", function() { return bson_14; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calculateObjectSize\", function() { return bson_2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deserialize\", function() { return bson_3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deserializeStream\", function() { return bson_1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"serialize\", function() { return bson_5; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"serializeWithBufferAndIndex\", function() { return bson_4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setInternalBufferSize\", function() { return bson_6; });\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar byteLength_1 = byteLength;\nvar toByteArray_1 = toByteArray;\nvar fromByteArray_1 = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}\n\nvar base64Js = {\n  byteLength: byteLength_1,\n  toByteArray: toByteArray_1,\n  fromByteArray: fromByteArray_1\n};\n\nvar read = function read(buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nvar write = function write(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};\n\nvar ieee754 = {\n  read: read,\n  write: write\n};\n\nvar buffer = createCommonjsModule(function (module, exports) {\n\n  var customInspectSymbol = typeof Symbol === 'function' && typeof Symbol[\"for\"] === 'function' ? Symbol[\"for\"]('nodejs.util.inspect.custom') : null;\n  exports.Buffer = Buffer;\n  exports.SlowBuffer = SlowBuffer;\n  exports.INSPECT_MAX_BYTES = 50;\n  var K_MAX_LENGTH = 0x7fffffff;\n  exports.kMaxLength = K_MAX_LENGTH;\n  /**\n   * If `Buffer.TYPED_ARRAY_SUPPORT`:\n   *   === true    Use Uint8Array implementation (fastest)\n   *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n   *               implementation (most compatible, even IE6)\n   *\n   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n   * Opera 11.6+, iOS 4.2+.\n   *\n   * We report that the browser does not support typed arrays if the are not subclassable\n   * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n   * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n   * for __proto__ and has a buggy typed array implementation.\n   */\n\n  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n  }\n\n  function typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n      var arr = new Uint8Array(1);\n      var proto = {\n        foo: function foo() {\n          return 42;\n        }\n      };\n      Object.setPrototypeOf(proto, Uint8Array.prototype);\n      Object.setPrototypeOf(arr, proto);\n      return arr.foo() === 42;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  Object.defineProperty(Buffer.prototype, 'parent', {\n    enumerable: true,\n    get: function get() {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.buffer;\n    }\n  });\n  Object.defineProperty(Buffer.prototype, 'offset', {\n    enumerable: true,\n    get: function get() {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.byteOffset;\n    }\n  });\n\n  function createBuffer(length) {\n    if (length > K_MAX_LENGTH) {\n      throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n    } // Return an augmented `Uint8Array` instance\n\n\n    var buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n  /**\n   * The Buffer constructor returns instances of `Uint8Array` that have their\n   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n   * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n   * returns a single octet.\n   *\n   * The `Uint8Array` prototype remains unmodified.\n   */\n\n\n  function Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === 'number') {\n      if (typeof encodingOrOffset === 'string') {\n        throw new TypeError('The \"string\" argument must be of type string. Received type number');\n      }\n\n      return allocUnsafe(arg);\n    }\n\n    return from(arg, encodingOrOffset, length);\n  }\n\n  Buffer.poolSize = 8192; // not used by this implementation\n\n  function from(value, encodingOrOffset, length) {\n    if (typeof value === 'string') {\n      return fromString(value, encodingOrOffset);\n    }\n\n    if (ArrayBuffer.isView(value)) {\n      return fromArrayLike(value);\n    }\n\n    if (value == null) {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + babelHelpers[\"typeof\"](value));\n    }\n\n    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n    }\n\n    var valueOf = value.valueOf && value.valueOf();\n\n    if (valueOf != null && valueOf !== value) {\n      return Buffer.from(valueOf, encodingOrOffset, length);\n    }\n\n    var b = fromObject(value);\n    if (b) return b;\n\n    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n      return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n    }\n\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + babelHelpers[\"typeof\"](value));\n  }\n  /**\n   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n   * if value is a number.\n   * Buffer.from(str[, encoding])\n   * Buffer.from(array)\n   * Buffer.from(buffer)\n   * Buffer.from(arrayBuffer[, byteOffset[, length]])\n   **/\n\n\n  Buffer.from = function (value, encodingOrOffset, length) {\n    return from(value, encodingOrOffset, length);\n  }; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n  // https://github.com/feross/buffer/pull/148\n\n\n  Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\n  Object.setPrototypeOf(Buffer, Uint8Array);\n\n  function assertSize(size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('\"size\" argument must be of type number');\n    } else if (size < 0) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n    }\n  }\n\n  function alloc(size, fill, encoding) {\n    assertSize(size);\n\n    if (size <= 0) {\n      return createBuffer(size);\n    }\n\n    if (fill !== undefined) {\n      // Only pay attention to encoding if it's a string. This\n      // prevents accidentally sending in a number that would\n      // be interpretted as a start offset.\n      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n    }\n\n    return createBuffer(size);\n  }\n  /**\n   * Creates a new filled Buffer instance.\n   * alloc(size[, fill[, encoding]])\n   **/\n\n\n  Buffer.alloc = function (size, fill, encoding) {\n    return alloc(size, fill, encoding);\n  };\n\n  function allocUnsafe(size) {\n    assertSize(size);\n    return createBuffer(size < 0 ? 0 : checked(size) | 0);\n  }\n  /**\n   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n   * */\n\n\n  Buffer.allocUnsafe = function (size) {\n    return allocUnsafe(size);\n  };\n  /**\n   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n   */\n\n\n  Buffer.allocUnsafeSlow = function (size) {\n    return allocUnsafe(size);\n  };\n\n  function fromString(string, encoding) {\n    if (typeof encoding !== 'string' || encoding === '') {\n      encoding = 'utf8';\n    }\n\n    if (!Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n\n    var length = byteLength(string, encoding) | 0;\n    var buf = createBuffer(length);\n    var actual = buf.write(string, encoding);\n\n    if (actual !== length) {\n      // Writing a hex string, for example, that contains invalid characters will\n      // cause everything after the first invalid character to be ignored. (e.g.\n      // 'abxxcd' will be treated as 'ab')\n      buf = buf.slice(0, actual);\n    }\n\n    return buf;\n  }\n\n  function fromArrayLike(array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0;\n    var buf = createBuffer(length);\n\n    for (var i = 0; i < length; i += 1) {\n      buf[i] = array[i] & 255;\n    }\n\n    return buf;\n  }\n\n  function fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n      throw new RangeError('\"offset\" is outside of buffer bounds');\n    }\n\n    if (array.byteLength < byteOffset + (length || 0)) {\n      throw new RangeError('\"length\" is outside of buffer bounds');\n    }\n\n    var buf;\n\n    if (byteOffset === undefined && length === undefined) {\n      buf = new Uint8Array(array);\n    } else if (length === undefined) {\n      buf = new Uint8Array(array, byteOffset);\n    } else {\n      buf = new Uint8Array(array, byteOffset, length);\n    } // Return an augmented `Uint8Array` instance\n\n\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n\n  function fromObject(obj) {\n    if (Buffer.isBuffer(obj)) {\n      var len = checked(obj.length) | 0;\n      var buf = createBuffer(len);\n\n      if (buf.length === 0) {\n        return buf;\n      }\n\n      obj.copy(buf, 0, 0, len);\n      return buf;\n    }\n\n    if (obj.length !== undefined) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0);\n      }\n\n      return fromArrayLike(obj);\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data);\n    }\n  }\n\n  function checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= K_MAX_LENGTH) {\n      throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n    }\n\n    return length | 0;\n  }\n\n  function SlowBuffer(length) {\n    if (+length != length) {\n      // eslint-disable-line eqeqeq\n      length = 0;\n    }\n\n    return Buffer.alloc(+length);\n  }\n\n  Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n  };\n\n  Buffer.compare = function compare(a, b) {\n    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\n    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n      throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n    }\n\n    if (a === b) return 0;\n    var x = a.length;\n    var y = b.length;\n\n    for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n      if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  };\n\n  Buffer.isEncoding = function isEncoding(encoding) {\n    switch (String(encoding).toLowerCase()) {\n      case 'hex':\n      case 'utf8':\n      case 'utf-8':\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n      case 'base64':\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    if (list.length === 0) {\n      return Buffer.alloc(0);\n    }\n\n    var i;\n\n    if (length === undefined) {\n      length = 0;\n\n      for (i = 0; i < list.length; ++i) {\n        length += list[i].length;\n      }\n    }\n\n    var buffer = Buffer.allocUnsafe(length);\n    var pos = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      var buf = list[i];\n\n      if (isInstance(buf, Uint8Array)) {\n        buf = Buffer.from(buf);\n      }\n\n      if (!Buffer.isBuffer(buf)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n      }\n\n      buf.copy(buffer, pos);\n      pos += buf.length;\n    }\n\n    return buffer;\n  };\n\n  function byteLength(string, encoding) {\n    if (Buffer.isBuffer(string)) {\n      return string.length;\n    }\n\n    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n      return string.byteLength;\n    }\n\n    if (typeof string !== 'string') {\n      throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + babelHelpers[\"typeof\"](string));\n    }\n\n    var len = string.length;\n    var mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion\n\n    var loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n          return len;\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8ToBytes(string).length;\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return len * 2;\n\n        case 'hex':\n          return len >>> 1;\n\n        case 'base64':\n          return base64ToBytes(string).length;\n\n        default:\n          if (loweredCase) {\n            return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n          }\n\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  }\n\n  Buffer.byteLength = byteLength;\n\n  function slowToString(encoding, start, end) {\n    var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n    if (start === undefined || start < 0) {\n      start = 0;\n    } // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n\n\n    if (start > this.length) {\n      return '';\n    }\n\n    if (end === undefined || end > this.length) {\n      end = this.length;\n    }\n\n    if (end <= 0) {\n      return '';\n    } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n    end >>>= 0;\n    start >>>= 0;\n\n    if (end <= start) {\n      return '';\n    }\n\n    if (!encoding) encoding = 'utf8';\n\n    while (true) {\n      switch (encoding) {\n        case 'hex':\n          return hexSlice(this, start, end);\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Slice(this, start, end);\n\n        case 'ascii':\n          return asciiSlice(this, start, end);\n\n        case 'latin1':\n        case 'binary':\n          return latin1Slice(this, start, end);\n\n        case 'base64':\n          return base64Slice(this, start, end);\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return utf16leSlice(this, start, end);\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n          encoding = (encoding + '').toLowerCase();\n          loweredCase = true;\n      }\n    }\n  } // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n  // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n  // reliably in a browserify context because there could be multiple different\n  // copies of the 'buffer' package in use. This method works even for Buffer\n  // instances that were created from another copy of the `buffer` package.\n  // See: https://github.com/feross/buffer/issues/154\n\n\n  Buffer.prototype._isBuffer = true;\n\n  function swap(b, n, m) {\n    var i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n  }\n\n  Buffer.prototype.swap16 = function swap16() {\n    var len = this.length;\n\n    if (len % 2 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 16-bits');\n    }\n\n    for (var i = 0; i < len; i += 2) {\n      swap(this, i, i + 1);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap32 = function swap32() {\n    var len = this.length;\n\n    if (len % 4 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 32-bits');\n    }\n\n    for (var i = 0; i < len; i += 4) {\n      swap(this, i, i + 3);\n      swap(this, i + 1, i + 2);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap64 = function swap64() {\n    var len = this.length;\n\n    if (len % 8 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 64-bits');\n    }\n\n    for (var i = 0; i < len; i += 8) {\n      swap(this, i, i + 7);\n      swap(this, i + 1, i + 6);\n      swap(this, i + 2, i + 5);\n      swap(this, i + 3, i + 4);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.toString = function toString() {\n    var length = this.length;\n    if (length === 0) return '';\n    if (arguments.length === 0) return utf8Slice(this, 0, length);\n    return slowToString.apply(this, arguments);\n  };\n\n  Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n\n  Buffer.prototype.equals = function equals(b) {\n    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n    if (this === b) return true;\n    return Buffer.compare(this, b) === 0;\n  };\n\n  Buffer.prototype.inspect = function inspect() {\n    var str = '';\n    var max = exports.INSPECT_MAX_BYTES;\n    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n    if (this.length > max) str += ' ... ';\n    return '<Buffer ' + str + '>';\n  };\n\n  if (customInspectSymbol) {\n    Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n  }\n\n  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if (isInstance(target, Uint8Array)) {\n      target = Buffer.from(target, target.offset, target.byteLength);\n    }\n\n    if (!Buffer.isBuffer(target)) {\n      throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + babelHelpers[\"typeof\"](target));\n    }\n\n    if (start === undefined) {\n      start = 0;\n    }\n\n    if (end === undefined) {\n      end = target ? target.length : 0;\n    }\n\n    if (thisStart === undefined) {\n      thisStart = 0;\n    }\n\n    if (thisEnd === undefined) {\n      thisEnd = this.length;\n    }\n\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n      throw new RangeError('out of range index');\n    }\n\n    if (thisStart >= thisEnd && start >= end) {\n      return 0;\n    }\n\n    if (thisStart >= thisEnd) {\n      return -1;\n    }\n\n    if (start >= end) {\n      return 1;\n    }\n\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    var x = thisEnd - thisStart;\n    var y = end - start;\n    var len = Math.min(x, y);\n    var thisCopy = this.slice(thisStart, thisEnd);\n    var targetCopy = target.slice(start, end);\n\n    for (var i = 0; i < len; ++i) {\n      if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  }; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n  //\n  // Arguments:\n  // - buffer - a Buffer to search\n  // - val - a string, Buffer, or number\n  // - byteOffset - an index into `buffer`; will be clamped to an int32\n  // - encoding - an optional encoding, relevant is val is a string\n  // - dir - true for indexOf, false for lastIndexOf\n\n\n  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1; // Normalize byteOffset\n\n    if (typeof byteOffset === 'string') {\n      encoding = byteOffset;\n      byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) {\n      byteOffset = 0x7fffffff;\n    } else if (byteOffset < -0x80000000) {\n      byteOffset = -0x80000000;\n    }\n\n    byteOffset = +byteOffset; // Coerce to Number.\n\n    if (numberIsNaN(byteOffset)) {\n      // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n      byteOffset = dir ? 0 : buffer.length - 1;\n    } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n    if (byteOffset >= buffer.length) {\n      if (dir) return -1;else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n      if (dir) byteOffset = 0;else return -1;\n    } // Normalize val\n\n\n    if (typeof val === 'string') {\n      val = Buffer.from(val, encoding);\n    } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n    if (Buffer.isBuffer(val)) {\n      // Special case: looking for empty string/buffer always fails\n      if (val.length === 0) {\n        return -1;\n      }\n\n      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === 'number') {\n      val = val & 0xFF; // Search for a byte value [0-255]\n\n      if (typeof Uint8Array.prototype.indexOf === 'function') {\n        if (dir) {\n          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n        } else {\n          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n      }\n\n      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n    }\n\n    throw new TypeError('val must be string, number or Buffer');\n  }\n\n  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1;\n    var arrLength = arr.length;\n    var valLength = val.length;\n\n    if (encoding !== undefined) {\n      encoding = String(encoding).toLowerCase();\n\n      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n        if (arr.length < 2 || val.length < 2) {\n          return -1;\n        }\n\n        indexSize = 2;\n        arrLength /= 2;\n        valLength /= 2;\n        byteOffset /= 2;\n      }\n    }\n\n    function read(buf, i) {\n      if (indexSize === 1) {\n        return buf[i];\n      } else {\n        return buf.readUInt16BE(i * indexSize);\n      }\n    }\n\n    var i;\n\n    if (dir) {\n      var foundIndex = -1;\n\n      for (i = byteOffset; i < arrLength; i++) {\n        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n          if (foundIndex === -1) foundIndex = i;\n          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n          if (foundIndex !== -1) i -= i - foundIndex;\n          foundIndex = -1;\n        }\n      }\n    } else {\n      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n      for (i = byteOffset; i >= 0; i--) {\n        var found = true;\n\n        for (var j = 0; j < valLength; j++) {\n          if (read(arr, i + j) !== read(val, j)) {\n            found = false;\n            break;\n          }\n        }\n\n        if (found) return i;\n      }\n    }\n\n    return -1;\n  }\n\n  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n  };\n\n  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n  };\n\n  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n  };\n\n  function hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    var remaining = buf.length - offset;\n\n    if (!length) {\n      length = remaining;\n    } else {\n      length = Number(length);\n\n      if (length > remaining) {\n        length = remaining;\n      }\n    }\n\n    var strLen = string.length;\n\n    if (length > strLen / 2) {\n      length = strLen / 2;\n    }\n\n    for (var i = 0; i < length; ++i) {\n      var parsed = parseInt(string.substr(i * 2, 2), 16);\n      if (numberIsNaN(parsed)) return i;\n      buf[offset + i] = parsed;\n    }\n\n    return i;\n  }\n\n  function utf8Write(buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  function asciiWrite(buf, string, offset, length) {\n    return blitBuffer(asciiToBytes(string), buf, offset, length);\n  }\n\n  function latin1Write(buf, string, offset, length) {\n    return asciiWrite(buf, string, offset, length);\n  }\n\n  function base64Write(buf, string, offset, length) {\n    return blitBuffer(base64ToBytes(string), buf, offset, length);\n  }\n\n  function ucs2Write(buf, string, offset, length) {\n    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n      encoding = 'utf8';\n      length = this.length;\n      offset = 0; // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === 'string') {\n      encoding = offset;\n      length = this.length;\n      offset = 0; // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n      offset = offset >>> 0;\n\n      if (isFinite(length)) {\n        length = length >>> 0;\n        if (encoding === undefined) encoding = 'utf8';\n      } else {\n        encoding = length;\n        length = undefined;\n      }\n    } else {\n      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n    }\n\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n      throw new RangeError('Attempt to write outside buffer bounds');\n    }\n\n    if (!encoding) encoding = 'utf8';\n    var loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case 'hex':\n          return hexWrite(this, string, offset, length);\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Write(this, string, offset, length);\n\n        case 'ascii':\n          return asciiWrite(this, string, offset, length);\n\n        case 'latin1':\n        case 'binary':\n          return latin1Write(this, string, offset, length);\n\n        case 'base64':\n          // Warning: maxLength not taken into account in base64Write\n          return base64Write(this, string, offset, length);\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return ucs2Write(this, string, offset, length);\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  };\n\n  Buffer.prototype.toJSON = function toJSON() {\n    return {\n      type: 'Buffer',\n      data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n  };\n\n  function base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) {\n      return base64Js.fromByteArray(buf);\n    } else {\n      return base64Js.fromByteArray(buf.slice(start, end));\n    }\n  }\n\n  function utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    var res = [];\n    var i = start;\n\n    while (i < end) {\n      var firstByte = buf[i];\n      var codePoint = null;\n      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n      if (i + bytesPerSequence <= end) {\n        var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n        switch (bytesPerSequence) {\n          case 1:\n            if (firstByte < 0x80) {\n              codePoint = firstByte;\n            }\n\n            break;\n\n          case 2:\n            secondByte = buf[i + 1];\n\n            if ((secondByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n              if (tempCodePoint > 0x7F) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 3:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 4:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n            fourthByte = buf[i + 3];\n\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n        }\n      }\n\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 0xFFFD;\n        bytesPerSequence = 1;\n      } else if (codePoint > 0xFFFF) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 0x10000;\n        res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n        codePoint = 0xDC00 | codePoint & 0x3FF;\n      }\n\n      res.push(codePoint);\n      i += bytesPerSequence;\n    }\n\n    return decodeCodePointsArray(res);\n  } // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n  // the lowest limit is Chrome, with 0x10000 args.\n  // We go 1 magnitude less, for safety\n\n\n  var MAX_ARGUMENTS_LENGTH = 0x1000;\n\n  function decodeCodePointsArray(codePoints) {\n    var len = codePoints.length;\n\n    if (len <= MAX_ARGUMENTS_LENGTH) {\n      return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n    } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n    var res = '';\n    var i = 0;\n\n    while (i < len) {\n      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n    }\n\n    return res;\n  }\n\n  function asciiSlice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i] & 0x7F);\n    }\n\n    return ret;\n  }\n\n  function latin1Slice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i]);\n    }\n\n    return ret;\n  }\n\n  function hexSlice(buf, start, end) {\n    var len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    var out = '';\n\n    for (var i = start; i < end; ++i) {\n      out += hexSliceLookupTable[buf[i]];\n    }\n\n    return out;\n  }\n\n  function utf16leSlice(buf, start, end) {\n    var bytes = buf.slice(start, end);\n    var res = '';\n\n    for (var i = 0; i < bytes.length; i += 2) {\n      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    }\n\n    return res;\n  }\n\n  Buffer.prototype.slice = function slice(start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n\n    if (start < 0) {\n      start += len;\n      if (start < 0) start = 0;\n    } else if (start > len) {\n      start = len;\n    }\n\n    if (end < 0) {\n      end += len;\n      if (end < 0) end = 0;\n    } else if (end > len) {\n      end = len;\n    }\n\n    if (end < start) end = start;\n    var newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n    Object.setPrototypeOf(newBuf, Buffer.prototype);\n    return newBuf;\n  };\n  /*\n   * Need to make sure that buffer isn't trying to write out of bounds.\n   */\n\n\n  function checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n  }\n\n  Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      checkOffset(offset, byteLength, this.length);\n    }\n\n    var val = this[offset + --byteLength];\n    var mul = 1;\n\n    while (byteLength > 0 && (mul *= 0x100)) {\n      val += this[offset + --byteLength] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    return this[offset];\n  };\n\n  Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n  };\n\n  Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n  };\n\n  Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n  };\n\n  Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n  };\n\n  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var i = byteLength;\n    var mul = 1;\n    var val = this[offset + --i];\n\n    while (i > 0 && (mul *= 0x100)) {\n      val += this[offset + --i] * mul;\n    }\n\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return this[offset];\n    return (0xff - this[offset] + 1) * -1;\n  };\n\n  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset] | this[offset + 1] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n  };\n\n  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset + 1] | this[offset] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n  };\n\n  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n  };\n\n  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n  };\n\n  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, true, 23, 4);\n  };\n\n  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, false, 23, 4);\n  };\n\n  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, true, 52, 8);\n  };\n\n  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, false, 52, 8);\n  };\n\n  function checkInt(buf, value, offset, ext, max, min) {\n    if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  }\n\n  Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var mul = 1;\n    var i = 0;\n    this[offset] = value & 0xFF;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      this[offset + i] = value / mul & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    this[offset + i] = value & 0xFF;\n\n    while (--i >= 0 && (mul *= 0x100)) {\n      this[offset + i] = value / mul & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n    this[offset] = value & 0xff;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = 0;\n    var mul = 1;\n    var sub = 0;\n    this[offset] = value & 0xFF;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    var sub = 0;\n    this[offset + i] = value & 0xFF;\n\n    while (--i >= 0 && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = value & 0xff;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    if (value < 0) value = 0xffffffff + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n  };\n\n  function checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n    if (offset < 0) throw new RangeError('Index out of range');\n  }\n\n  function writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 4);\n    }\n\n    ieee754.write(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n  }\n\n  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, false, noAssert);\n  };\n\n  function writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 8);\n    }\n\n    ieee754.write(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n  }\n\n  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, false, noAssert);\n  }; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\n  Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n    if (targetStart < 0) {\n      throw new RangeError('targetStart out of bounds');\n    }\n\n    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n    if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n    if (end > this.length) end = this.length;\n\n    if (target.length - targetStart < end - start) {\n      end = target.length - targetStart + start;\n    }\n\n    var len = end - start;\n\n    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n      // Use built-in when available, missing from IE11\n      this.copyWithin(targetStart, start, end);\n    } else if (this === target && start < targetStart && targetStart < end) {\n      // descending copy from end\n      for (var i = len - 1; i >= 0; --i) {\n        target[i + targetStart] = this[i + start];\n      }\n    } else {\n      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    }\n\n    return len;\n  }; // Usage:\n  //    buffer.fill(number[, offset[, end]])\n  //    buffer.fill(buffer[, offset[, end]])\n  //    buffer.fill(string[, offset[, end]][, encoding])\n\n\n  Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n      if (typeof start === 'string') {\n        encoding = start;\n        start = 0;\n        end = this.length;\n      } else if (typeof end === 'string') {\n        encoding = end;\n        end = this.length;\n      }\n\n      if (encoding !== undefined && typeof encoding !== 'string') {\n        throw new TypeError('encoding must be a string');\n      }\n\n      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n        throw new TypeError('Unknown encoding: ' + encoding);\n      }\n\n      if (val.length === 1) {\n        var code = val.charCodeAt(0);\n\n        if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n          // Fast path: If `val` fits into a single byte, use that numeric value.\n          val = code;\n        }\n      }\n    } else if (typeof val === 'number') {\n      val = val & 255;\n    } else if (typeof val === 'boolean') {\n      val = Number(val);\n    } // Invalid ranges are not set to a default, so can range check early.\n\n\n    if (start < 0 || this.length < start || this.length < end) {\n      throw new RangeError('Out of range index');\n    }\n\n    if (end <= start) {\n      return this;\n    }\n\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    var i;\n\n    if (typeof val === 'number') {\n      for (i = start; i < end; ++i) {\n        this[i] = val;\n      }\n    } else {\n      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n      var len = bytes.length;\n\n      if (len === 0) {\n        throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n      }\n\n      for (i = 0; i < end - start; ++i) {\n        this[i + start] = bytes[i % len];\n      }\n    }\n\n    return this;\n  }; // HELPER FUNCTIONS\n  // ================\n\n\n  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\n  function base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split('=')[0]; // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\n    str = str.trim().replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n    if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n    while (str.length % 4 !== 0) {\n      str = str + '=';\n    }\n\n    return str;\n  }\n\n  function utf8ToBytes(string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n\n    for (var i = 0; i < length; ++i) {\n      codePoint = string.charCodeAt(i); // is surrogate component\n\n      if (codePoint > 0xD7FF && codePoint < 0xE000) {\n        // last char was a lead\n        if (!leadSurrogate) {\n          // no lead yet\n          if (codePoint > 0xDBFF) {\n            // unexpected trail\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue;\n          } else if (i + 1 === length) {\n            // unpaired lead\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue;\n          } // valid lead\n\n\n          leadSurrogate = codePoint;\n          continue;\n        } // 2 leads in a row\n\n\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          leadSurrogate = codePoint;\n          continue;\n        } // valid surrogate pair\n\n\n        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n      } else if (leadSurrogate) {\n        // valid bmp char, but last char was a lead\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n      }\n\n      leadSurrogate = null; // encode utf8\n\n      if (codePoint < 0x80) {\n        if ((units -= 1) < 0) break;\n        bytes.push(codePoint);\n      } else if (codePoint < 0x800) {\n        if ((units -= 2) < 0) break;\n        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n      } else if (codePoint < 0x10000) {\n        if ((units -= 3) < 0) break;\n        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n      } else if (codePoint < 0x110000) {\n        if ((units -= 4) < 0) break;\n        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n      } else {\n        throw new Error('Invalid code point');\n      }\n    }\n\n    return bytes;\n  }\n\n  function asciiToBytes(str) {\n    var byteArray = [];\n\n    for (var i = 0; i < str.length; ++i) {\n      // Node's code seems to be doing this and not & 0x7F..\n      byteArray.push(str.charCodeAt(i) & 0xFF);\n    }\n\n    return byteArray;\n  }\n\n  function utf16leToBytes(str, units) {\n    var c, hi, lo;\n    var byteArray = [];\n\n    for (var i = 0; i < str.length; ++i) {\n      if ((units -= 2) < 0) break;\n      c = str.charCodeAt(i);\n      hi = c >> 8;\n      lo = c % 256;\n      byteArray.push(lo);\n      byteArray.push(hi);\n    }\n\n    return byteArray;\n  }\n\n  function base64ToBytes(str) {\n    return base64Js.toByteArray(base64clean(str));\n  }\n\n  function blitBuffer(src, dst, offset, length) {\n    for (var i = 0; i < length; ++i) {\n      if (i + offset >= dst.length || i >= src.length) break;\n      dst[i + offset] = src[i];\n    }\n\n    return i;\n  } // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n  // the `instanceof` check but they should be treated as of that type.\n  // See: https://github.com/feross/buffer/issues/166\n\n\n  function isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n  }\n\n  function numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj; // eslint-disable-line no-self-compare\n  } // Create lookup table for `toString('hex')`\n  // See: https://github.com/feross/buffer/issues/219\n\n\n  var hexSliceLookupTable = function () {\n    var alphabet = '0123456789abcdef';\n    var table = new Array(256);\n\n    for (var i = 0; i < 16; ++i) {\n      var i16 = i * 16;\n\n      for (var j = 0; j < 16; ++j) {\n        table[i16 + j] = alphabet[i] + alphabet[j];\n      }\n    }\n\n    return table;\n  }();\n});\nvar buffer_1 = buffer.Buffer;\nvar buffer_2 = buffer.SlowBuffer;\nvar buffer_3 = buffer.INSPECT_MAX_BYTES;\nvar buffer_4 = buffer.kMaxLength;\n\nvar ensure_buffer = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ensureBuffer = void 0;\n\n/**\n * Makes sure that, if a Uint8Array is passed in, it is wrapped in a Buffer.\n *\n * @param potentialBuffer - The potential buffer\n * @returns Buffer the input if potentialBuffer is a buffer, or a buffer that\n * wraps a passed in Uint8Array\n * @throws TypeError If anything other than a Buffer or Uint8Array is passed in\n */\nfunction ensureBuffer(potentialBuffer) {\n    if (buffer.Buffer.isBuffer(potentialBuffer)) {\n        return potentialBuffer;\n    }\n    if (ArrayBuffer.isView(potentialBuffer)) {\n        return buffer.Buffer.from(potentialBuffer.buffer);\n    }\n    if (potentialBuffer instanceof ArrayBuffer) {\n        return buffer.Buffer.from(potentialBuffer);\n    }\n    throw new TypeError('Must use either Buffer or TypedArray');\n}\nexports.ensureBuffer = ensureBuffer;\n\n});\n\nunwrapExports(ensure_buffer);\nvar ensure_buffer_1 = ensure_buffer.ensureBuffer;\n\nvar uuid = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUUID = void 0;\n/**\n * UUID regular expression pattern copied from `uuid` npm module.\n * @see https://github.com/uuidjs/uuid/blob/master/src/regex.js\n */\nconst UUID_RX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n/**\n * Parser function copied from `uuid` npm module.\n * @see https://github.com/uuidjs/uuid/blob/master/src/parse.js\n * @internal\n */\nfunction parseUUID(uuid) {\n    if (typeof uuid !== 'string') {\n        throw new TypeError('Invalid type for UUID, expected string but got ' + typeof uuid);\n    }\n    if (!UUID_RX.test(uuid)) {\n        throw new TypeError('Invalid format for UUID: ' + uuid);\n    }\n    let v;\n    const arr = new Uint8Array(16);\n    // Parse ########-....-....-....-............\n    arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n    arr[1] = (v >>> 16) & 0xff;\n    arr[2] = (v >>> 8) & 0xff;\n    arr[3] = v & 0xff;\n    // Parse ........-####-....-....-............\n    arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n    arr[5] = v & 0xff;\n    // Parse ........-....-####-....-............\n    arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n    arr[7] = v & 0xff;\n    // Parse ........-....-....-####-............\n    arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n    arr[9] = v & 0xff;\n    // Parse ........-....-....-....-############\n    // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n    arr[10] = ((v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000) & 0xff;\n    arr[11] = (v / 0x100000000) & 0xff;\n    arr[12] = (v >>> 24) & 0xff;\n    arr[13] = (v >>> 16) & 0xff;\n    arr[14] = (v >>> 8) & 0xff;\n    arr[15] = v & 0xff;\n    return arr;\n}\nexports.parseUUID = parseUUID;\n\n});\n\nunwrapExports(uuid);\nvar uuid_1 = uuid.parseUUID;\n\nvar binary = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Binary = void 0;\n\n\n\n/**\n * A class representation of the BSON Binary type.\n * @public\n */\nclass Binary {\n    /**\n     * @param buffer - a buffer object containing the binary data.\n     * @param subType - the option binary type.\n     */\n    constructor(buffer$1, subType) {\n        if (!(buffer$1 == null) &&\n            !(typeof buffer$1 === 'string') &&\n            !ArrayBuffer.isView(buffer$1) &&\n            !(buffer$1 instanceof ArrayBuffer) &&\n            !Array.isArray(buffer$1)) {\n            throw new TypeError('Binary can only be constructed from string, Buffer, TypedArray, or Array<number>');\n        }\n        this.sub_type = subType !== null && subType !== void 0 ? subType : Binary.BSON_BINARY_SUBTYPE_DEFAULT;\n        if (buffer$1 == null) {\n            // create an empty binary buffer\n            this.buffer = buffer.Buffer.alloc(Binary.BUFFER_SIZE);\n            this.position = 0;\n        }\n        else {\n            if (typeof buffer$1 === 'string') {\n                // string\n                this.buffer = buffer.Buffer.from(buffer$1, 'binary');\n            }\n            else if (Array.isArray(buffer$1)) {\n                // number[]\n                this.buffer = buffer.Buffer.from(buffer$1);\n            }\n            else {\n                // Buffer | TypedArray | ArrayBuffer\n                this.buffer = ensure_buffer.ensureBuffer(buffer$1);\n            }\n            this.position = this.buffer.byteLength;\n        }\n    }\n    /**\n     * Updates this binary with byte_value.\n     *\n     * @param byteValue - a single byte we wish to write.\n     */\n    put(byteValue) {\n        // If it's a string and a has more than one character throw an error\n        if (typeof byteValue === 'string' && byteValue.length !== 1) {\n            throw new TypeError('only accepts single character String');\n        }\n        else if (typeof byteValue !== 'number' && byteValue.length !== 1)\n            throw new TypeError('only accepts single character Uint8Array or Array');\n        // Decode the byte value once\n        let decodedByte;\n        if (typeof byteValue === 'string') {\n            decodedByte = byteValue.charCodeAt(0);\n        }\n        else if (typeof byteValue === 'number') {\n            decodedByte = byteValue;\n        }\n        else {\n            decodedByte = byteValue[0];\n        }\n        if (decodedByte < 0 || decodedByte > 255) {\n            throw new TypeError('only accepts number in a valid unsigned byte range 0-255');\n        }\n        if (this.buffer.length > this.position) {\n            this.buffer[this.position++] = decodedByte;\n        }\n        else {\n            const buffer$1 = buffer.Buffer.alloc(Binary.BUFFER_SIZE + this.buffer.length);\n            // Combine the two buffers together\n            this.buffer.copy(buffer$1, 0, 0, this.buffer.length);\n            this.buffer = buffer$1;\n            this.buffer[this.position++] = decodedByte;\n        }\n    }\n    /**\n     * Writes a buffer or string to the binary.\n     *\n     * @param sequence - a string or buffer to be written to the Binary BSON object.\n     * @param offset - specify the binary of where to write the content.\n     */\n    write(sequence, offset) {\n        offset = typeof offset === 'number' ? offset : this.position;\n        // If the buffer is to small let's extend the buffer\n        if (this.buffer.length < offset + sequence.length) {\n            const buffer$1 = buffer.Buffer.alloc(this.buffer.length + sequence.length);\n            this.buffer.copy(buffer$1, 0, 0, this.buffer.length);\n            // Assign the new buffer\n            this.buffer = buffer$1;\n        }\n        if (ArrayBuffer.isView(sequence)) {\n            this.buffer.set(ensure_buffer.ensureBuffer(sequence), offset);\n            this.position =\n                offset + sequence.byteLength > this.position ? offset + sequence.length : this.position;\n        }\n        else if (typeof sequence === 'string') {\n            this.buffer.write(sequence, offset, sequence.length, 'binary');\n            this.position =\n                offset + sequence.length > this.position ? offset + sequence.length : this.position;\n        }\n    }\n    /**\n     * Reads **length** bytes starting at **position**.\n     *\n     * @param position - read from the given position in the Binary.\n     * @param length - the number of bytes to read.\n     */\n    read(position, length) {\n        length = length && length > 0 ? length : this.position;\n        // Let's return the data based on the type we have\n        return this.buffer.slice(position, position + length);\n    }\n    /**\n     * Returns the value of this binary as a string.\n     * @param asRaw - Will skip converting to a string\n     * @remarks\n     * This is handy when calling this function conditionally for some key value pairs and not others\n     */\n    value(asRaw) {\n        asRaw = !!asRaw;\n        // Optimize to serialize for the situation where the data == size of buffer\n        if (asRaw && this.buffer.length === this.position) {\n            return this.buffer;\n        }\n        // If it's a node.js buffer object\n        if (asRaw) {\n            return this.buffer.slice(0, this.position);\n        }\n        return this.buffer.toString('binary', 0, this.position);\n    }\n    /** the length of the binary sequence */\n    length() {\n        return this.position;\n    }\n    /** @internal */\n    toJSON() {\n        return this.buffer.toString('base64');\n    }\n    /** @internal */\n    toString(format) {\n        return this.buffer.toString(format);\n    }\n    /** @internal */\n    toExtendedJSON(options) {\n        options = options || {};\n        const base64String = this.buffer.toString('base64');\n        const subType = Number(this.sub_type).toString(16);\n        if (options.legacy) {\n            return {\n                $binary: base64String,\n                $type: subType.length === 1 ? '0' + subType : subType\n            };\n        }\n        return {\n            $binary: {\n                base64: base64String,\n                subType: subType.length === 1 ? '0' + subType : subType\n            }\n        };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc, options) {\n        options = options || {};\n        let data;\n        let type;\n        if ('$binary' in doc) {\n            if (options.legacy && typeof doc.$binary === 'string' && '$type' in doc) {\n                type = doc.$type ? parseInt(doc.$type, 16) : 0;\n                data = buffer.Buffer.from(doc.$binary, 'base64');\n            }\n            else {\n                if (typeof doc.$binary !== 'string') {\n                    type = doc.$binary.subType ? parseInt(doc.$binary.subType, 16) : 0;\n                    data = buffer.Buffer.from(doc.$binary.base64, 'base64');\n                }\n            }\n        }\n        else if ('$uuid' in doc) {\n            type = 4;\n            data = buffer.Buffer.from(uuid.parseUUID(doc.$uuid));\n        }\n        if (!data) {\n            throw new TypeError(`Unexpected Binary Extended JSON format ${JSON.stringify(doc)}`);\n        }\n        return new Binary(data, type);\n    }\n}\nexports.Binary = Binary;\n/**\n * Binary default subtype\n * @internal\n */\nBinary.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/** Initial buffer default size */\nBinary.BUFFER_SIZE = 256;\n/** Default BSON type */\nBinary.SUBTYPE_DEFAULT = 0;\n/** Function BSON type */\nBinary.SUBTYPE_FUNCTION = 1;\n/** Byte Array BSON type */\nBinary.SUBTYPE_BYTE_ARRAY = 2;\n/** Deprecated UUID BSON type @deprecated Please use SUBTYPE_UUID */\nBinary.SUBTYPE_UUID_OLD = 3;\n/** UUID BSON type */\nBinary.SUBTYPE_UUID = 4;\n/** MD5 BSON type */\nBinary.SUBTYPE_MD5 = 5;\n/** User BSON type */\nBinary.SUBTYPE_USER_DEFINED = 128;\nObject.defineProperty(Binary.prototype, '_bsontype', { value: 'Binary' });\n\n});\n\nunwrapExports(binary);\nvar binary_1 = binary.Binary;\n\nvar code$1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Code = void 0;\n/**\n * A class representation of the BSON Code type.\n * @public\n */\nclass Code {\n    /**\n     * @param code - a string or function.\n     * @param scope - an optional scope for the function.\n     */\n    constructor(code, scope) {\n        this.code = code;\n        this.scope = scope;\n    }\n    /** @internal */\n    toJSON() {\n        return { code: this.code, scope: this.scope };\n    }\n    /** @internal */\n    toExtendedJSON() {\n        if (this.scope) {\n            return { $code: this.code, $scope: this.scope };\n        }\n        return { $code: this.code };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc) {\n        return new Code(doc.$code, doc.$scope);\n    }\n}\nexports.Code = Code;\nObject.defineProperty(Code.prototype, '_bsontype', { value: 'Code' });\n\n});\n\nunwrapExports(code$1);\nvar code_1 = code$1.Code;\n\nvar require$$0 = {};\n\nvar inherits;\n\nif (typeof Object.create === 'function') {\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\n\nvar inherits$1 = inherits;\n\n// Copyright Joyent, Inc. and other Node contributors.\nvar formatRegExp = /%[sdj%]/g;\nfunction format(f) {\n  if (!isString(f)) {\n    var objects = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function (x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n\n    switch (x) {\n      case '%s':\n        return String(args[i++]);\n\n      case '%d':\n        return Number(args[i++]);\n\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n\n      default:\n        return x;\n    }\n  });\n\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n\n  return str;\n}\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\n\nfunction deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function () {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n\n  function deprecated() {\n    if (!warned) {\n      {\n        console.error(msg);\n      }\n\n      warned = true;\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\nvar debugs = {};\nvar debugEnviron;\nfunction debuglog(set) {\n  if (isUndefined(debugEnviron)) debugEnviron =  '';\n  set = set.toUpperCase();\n\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n\n      debugs[set] = function () {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function () {};\n    }\n  }\n\n  return debugs[set];\n}\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n\n/* legacy: obj, showHidden, depth, colors*/\n\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  }; // legacy...\n\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  } // set default options\n\n\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n} // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\ninspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n}; // Don't use 'blue' not visible on cmd.exe\n\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return \"\\x1B[\" + inspect.colors[style][0] + 'm' + str + \"\\x1B[\" + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n  value.inspect !== inspect && // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  } // Primitive types cannot have properties\n\n\n  var primitive = formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  } // Look up the keys of the object.\n\n\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  } // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  } // Some type of object without properties can be shortcutted.\n\n\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}']; // Make Array say that they are Array\n\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  } // Make functions say that they are functions\n\n\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  } // Make RegExps say that they are RegExps\n\n\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  } // Make dates with properties first say the date\n\n\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  } // Make error with message first say the error\n\n\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function (prev, cur) {\n    if (cur.indexOf('\\n') >= 0) ;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n} // NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nfunction isSymbol(arg) {\n  return babelHelpers[\"typeof\"](arg) === 'symbol';\n}\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nfunction isObject(arg) {\n  return babelHelpers[\"typeof\"](arg) === 'object' && arg !== null;\n}\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || babelHelpers[\"typeof\"](arg) === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\nfunction isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34\n\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n} // log is just a thin wrapper to console.log that prepends a timestamp\n\n\nfunction log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\nfunction _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar require$$1 = {\n  inherits: inherits$1,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n};\n\nvar utils = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deprecate = exports.isObjectLike = exports.isDate = exports.isBuffer = exports.haveBuffer = exports.isBigUInt64Array = exports.isBigInt64Array = exports.isUint8Array = exports.randomBytes = exports.normalizedFunctionString = void 0;\n\n/**\n * Normalizes our expected stringified form of a function across versions of node\n * @param fn - The function to stringify\n */\nfunction normalizedFunctionString(fn) {\n    return fn.toString().replace('function(', 'function (');\n}\nexports.normalizedFunctionString = normalizedFunctionString;\nfunction insecureRandomBytes(size) {\n    const result = buffer.Buffer.alloc(size);\n    for (let i = 0; i < size; ++i)\n        result[i] = Math.floor(Math.random() * 256);\n    return result;\n}\nexports.randomBytes = insecureRandomBytes;\nif (typeof window !== 'undefined' && window.crypto && window.crypto.getRandomValues) {\n    exports.randomBytes = size => window.crypto.getRandomValues(buffer.Buffer.alloc(size));\n}\nelse {\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        exports.randomBytes = require$$0.randomBytes;\n    }\n    catch (e) {\n        // keep the fallback\n    }\n    // NOTE: in transpiled cases the above require might return null/undefined\n    if (exports.randomBytes == null) {\n        exports.randomBytes = insecureRandomBytes;\n    }\n}\nfunction isUint8Array(value) {\n    return Object.prototype.toString.call(value) === '[object Uint8Array]';\n}\nexports.isUint8Array = isUint8Array;\nfunction isBigInt64Array(value) {\n    return Object.prototype.toString.call(value) === '[object BigInt64Array]';\n}\nexports.isBigInt64Array = isBigInt64Array;\nfunction isBigUInt64Array(value) {\n    return Object.prototype.toString.call(value) === '[object BigUint64Array]';\n}\nexports.isBigUInt64Array = isBigUInt64Array;\n/** Call to check if your environment has `Buffer` */\nfunction haveBuffer() {\n    return typeof commonjsGlobal !== 'undefined' && typeof commonjsGlobal.Buffer !== 'undefined';\n}\nexports.haveBuffer = haveBuffer;\n/** Callable in any environment to check if value is a Buffer */\nfunction isBuffer(value) {\n    return haveBuffer() && buffer.Buffer.isBuffer(value);\n}\nexports.isBuffer = isBuffer;\n// To ensure that 0.4 of node works correctly\nfunction isDate(d) {\n    return isObjectLike(d) && Object.prototype.toString.call(d) === '[object Date]';\n}\nexports.isDate = isDate;\n/**\n * @internal\n * this is to solve the `'someKey' in x` problem where x is unknown.\n * https://github.com/typescript-eslint/typescript-eslint/issues/1071#issuecomment-541955753\n */\nfunction isObjectLike(candidate) {\n    return typeof candidate === 'object' && candidate !== null;\n}\nexports.isObjectLike = isObjectLike;\nfunction deprecate(fn, message) {\n    if (typeof window === 'undefined' || typeof self === 'undefined') {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        return require$$1.deprecate(fn, message);\n    }\n    let warned = false;\n    function deprecated(...args) {\n        if (!warned) {\n            console.warn(message);\n            warned = true;\n        }\n        return fn.apply(this, ...args);\n    }\n    return deprecated;\n}\nexports.deprecate = deprecate;\n\n});\n\nunwrapExports(utils);\nvar utils_1 = utils.deprecate;\nvar utils_2 = utils.isObjectLike;\nvar utils_3 = utils.isDate;\nvar utils_4 = utils.isBuffer;\nvar utils_5 = utils.haveBuffer;\nvar utils_6 = utils.isBigUInt64Array;\nvar utils_7 = utils.isBigInt64Array;\nvar utils_8 = utils.isUint8Array;\nvar utils_9 = utils.randomBytes;\nvar utils_10 = utils.normalizedFunctionString;\n\nvar db_ref = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DBRef = exports.isDBRefLike = void 0;\n\n/** @internal */\nfunction isDBRefLike(value) {\n    return utils.isObjectLike(value) && value['$id'] != null && value['$ref'] != null;\n}\nexports.isDBRefLike = isDBRefLike;\n/**\n * A class representation of the BSON DBRef type.\n * @public\n */\nclass DBRef {\n    /**\n     * @param collection - the collection name.\n     * @param oid - the reference ObjectId.\n     * @param db - optional db name, if omitted the reference is local to the current db.\n     */\n    constructor(collection, oid, db, fields) {\n        // check if namespace has been provided\n        const parts = collection.split('.');\n        if (parts.length === 2) {\n            db = parts.shift();\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            collection = parts.shift();\n        }\n        this.collection = collection;\n        this.oid = oid;\n        this.db = db;\n        this.fields = fields || {};\n    }\n    // Property provided for compatibility with the 1.x parser\n    // the 1.x parser used a \"namespace\" property, while 4.x uses \"collection\"\n    /** @internal */\n    get namespace() {\n        return this.collection;\n    }\n    set namespace(value) {\n        this.collection = value;\n    }\n    /** @internal */\n    toJSON() {\n        const o = Object.assign({\n            $ref: this.collection,\n            $id: this.oid\n        }, this.fields);\n        if (this.db != null)\n            o.$db = this.db;\n        return o;\n    }\n    /** @internal */\n    toExtendedJSON(options) {\n        options = options || {};\n        let o = {\n            $ref: this.collection,\n            $id: this.oid\n        };\n        if (options.legacy) {\n            return o;\n        }\n        if (this.db)\n            o.$db = this.db;\n        o = Object.assign(o, this.fields);\n        return o;\n    }\n    /** @internal */\n    static fromExtendedJSON(doc) {\n        const copy = Object.assign({}, doc);\n        delete copy.$ref;\n        delete copy.$id;\n        delete copy.$db;\n        return new DBRef(doc.$ref, doc.$id, doc.$db, copy);\n    }\n}\nexports.DBRef = DBRef;\nObject.defineProperty(DBRef.prototype, '_bsontype', { value: 'DBRef' });\n\n});\n\nunwrapExports(db_ref);\nvar db_ref_1 = db_ref.DBRef;\nvar db_ref_2 = db_ref.isDBRefLike;\n\nvar long_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Long = void 0;\n\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nlet wasm = undefined;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(\n    // prettier-ignore\n    new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n}\ncatch (_a) {\n    // no wasm support\n}\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_24_DBL = 1 << 24;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nconst TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nconst TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/** A cache of the Long representations of small integer values. */\nconst INT_CACHE = {};\n/** A cache of the Long representations of small unsigned integer values. */\nconst UINT_CACHE = {};\n/**\n * A class representing a 64-bit integer\n * @public\n * @remarks\n * The internal representation of a long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16 bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n * Common constant values ZERO, ONE, NEG_ONE, etc. are found as static properties on this class.\n */\nclass Long {\n    /**\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n     *  See the from* functions below for more convenient ways of constructing Longs.\n     * @param low - The low (signed) 32 bits of the long\n     * @param high - The high (signed) 32 bits of the long\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     */\n    constructor(low = 0, high = 0, unsigned) {\n        /** This is an alias of {@link Long.compare} */\n        this.comp = Long.prototype.compare;\n        /**This is an alias of {@link Long.divide} */\n        this.div = Long.prototype.divide;\n        /** This is an alias of {@link Long.equals} */\n        this.eq = Long.prototype.equals;\n        /** This is an alias of {@link Long.greaterThan} */\n        this.gt = Long.prototype.greaterThan;\n        /** This is an alias of {@link Long.greaterThanOrEqual} */\n        this.gte = Long.prototype.greaterThanOrEqual;\n        /** This is an alias of {@link Long.greaterThanOrEqual} */\n        this.ge = Long.prototype.greaterThanOrEqual;\n        /** This is an alias of {@link Long#lessThan}. */\n        this.lt = Long.prototype.lessThan;\n        /** This is an alias of {@link Long.lessThanOrEqual} */\n        this.lte = Long.prototype.lessThanOrEqual;\n        /** This is an alias of {@link Long.modulo} */\n        this.mod = Long.prototype.modulo;\n        /** This is an alias of {@link Long.modulo} */\n        this.rem = Long.prototype.modulo;\n        /** This is an alias of {@link Long.multiply} */\n        this.mul = Long.prototype.multiply;\n        /** This is an alias of {@link Long.negate} */\n        this.neg = Long.prototype.negate;\n        /** This is an alias of {@link Long.notEquals} */\n        this.neq = Long.prototype.notEquals;\n        /** This is an alias of {@link Long.notEquals} */\n        this.ne = Long.prototype.notEquals;\n        /** This is an alias of {@link Long.shiftLeft} */\n        this.shl = Long.prototype.shiftLeft;\n        /** This is an alias of {@link Long.shiftRight} */\n        this.shr = Long.prototype.shiftRight;\n        /** This is an alias of {@link Long.shiftRightUnsigned} */\n        this.shr_u = Long.prototype.shiftRightUnsigned;\n        /** This is an alias of {@link Long.shiftRightUnsigned} */\n        this.shru = Long.prototype.shiftRightUnsigned;\n        /** This is an alias of {@link Long.subtract} */\n        this.sub = Long.prototype.subtract;\n        /** This is an alias of {@link Long.isZero} */\n        this.eqz = Long.prototype.isZero;\n        /** This is an alias of {@link Long.lessThanOrEqual} */\n        this.le = Long.prototype.lessThanOrEqual;\n        this.low = low | 0;\n        this.high = high | 0;\n        this.unsigned = !!unsigned;\n        Object.defineProperty(this, '__isLong__', {\n            value: true,\n            configurable: false,\n            writable: false,\n            enumerable: false\n        });\n    }\n    /**\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits.\n     * Each is assumed to use 32 bits.\n     * @param lowBits - The low 32 bits\n     * @param highBits - The high 32 bits\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    static fromBits(lowBits, highBits, unsigned) {\n        return new Long(lowBits, highBits, unsigned);\n    }\n    /**\n     * Returns a Long representing the given 32 bit integer value.\n     * @param value - The 32 bit integer in question\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    static fromInt(value, unsigned) {\n        let obj, cachedObj, cache;\n        if (unsigned) {\n            value >>>= 0;\n            if ((cache = 0 <= value && value < 256)) {\n                cachedObj = UINT_CACHE[value];\n                if (cachedObj)\n                    return cachedObj;\n            }\n            obj = Long.fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n            if (cache)\n                UINT_CACHE[value] = obj;\n            return obj;\n        }\n        else {\n            value |= 0;\n            if ((cache = -128 <= value && value < 128)) {\n                cachedObj = INT_CACHE[value];\n                if (cachedObj)\n                    return cachedObj;\n            }\n            obj = Long.fromBits(value, value < 0 ? -1 : 0, false);\n            if (cache)\n                INT_CACHE[value] = obj;\n            return obj;\n        }\n    }\n    /**\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n     * @param value - The number in question\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    static fromNumber(value, unsigned) {\n        if (isNaN(value))\n            return unsigned ? Long.UZERO : Long.ZERO;\n        if (unsigned) {\n            if (value < 0)\n                return Long.UZERO;\n            if (value >= TWO_PWR_64_DBL)\n                return Long.MAX_UNSIGNED_VALUE;\n        }\n        else {\n            if (value <= -TWO_PWR_63_DBL)\n                return Long.MIN_VALUE;\n            if (value + 1 >= TWO_PWR_63_DBL)\n                return Long.MAX_VALUE;\n        }\n        if (value < 0)\n            return Long.fromNumber(-value, unsigned).neg();\n        return Long.fromBits(value % TWO_PWR_32_DBL | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n    }\n    /**\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n     * @param value - The number in question\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    static fromBigInt(value, unsigned) {\n        return Long.fromString(value.toString(), unsigned);\n    }\n    /**\n     * Returns a Long representation of the given string, written using the specified radix.\n     * @param str - The textual representation of the Long\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @param radix - The radix in which the text is written (2-36), defaults to 10\n     * @returns The corresponding Long value\n     */\n    static fromString(str, unsigned, radix) {\n        if (str.length === 0)\n            throw Error('empty string');\n        if (str === 'NaN' || str === 'Infinity' || str === '+Infinity' || str === '-Infinity')\n            return Long.ZERO;\n        if (typeof unsigned === 'number') {\n            // For goog.math.long compatibility\n            (radix = unsigned), (unsigned = false);\n        }\n        else {\n            unsigned = !!unsigned;\n        }\n        radix = radix || 10;\n        if (radix < 2 || 36 < radix)\n            throw RangeError('radix');\n        let p;\n        if ((p = str.indexOf('-')) > 0)\n            throw Error('interior hyphen');\n        else if (p === 0) {\n            return Long.fromString(str.substring(1), unsigned, radix).neg();\n        }\n        // Do several (8) digits each time through the loop, so as to\n        // minimize the calls to the very expensive emulated div.\n        const radixToPower = Long.fromNumber(Math.pow(radix, 8));\n        let result = Long.ZERO;\n        for (let i = 0; i < str.length; i += 8) {\n            const size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n            if (size < 8) {\n                const power = Long.fromNumber(Math.pow(radix, size));\n                result = result.mul(power).add(Long.fromNumber(value));\n            }\n            else {\n                result = result.mul(radixToPower);\n                result = result.add(Long.fromNumber(value));\n            }\n        }\n        result.unsigned = unsigned;\n        return result;\n    }\n    /**\n     * Creates a Long from its byte representation.\n     * @param bytes - Byte representation\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @param le - Whether little or big endian, defaults to big endian\n     * @returns The corresponding Long value\n     */\n    static fromBytes(bytes, unsigned, le) {\n        return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n    }\n    /**\n     * Creates a Long from its little endian byte representation.\n     * @param bytes - Little endian byte representation\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    static fromBytesLE(bytes, unsigned) {\n        return new Long(bytes[0] | (bytes[1] << 8) | (bytes[2] << 16) | (bytes[3] << 24), bytes[4] | (bytes[5] << 8) | (bytes[6] << 16) | (bytes[7] << 24), unsigned);\n    }\n    /**\n     * Creates a Long from its big endian byte representation.\n     * @param bytes - Big endian byte representation\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    static fromBytesBE(bytes, unsigned) {\n        return new Long((bytes[4] << 24) | (bytes[5] << 16) | (bytes[6] << 8) | bytes[7], (bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3], unsigned);\n    }\n    /**\n     * Tests if the specified object is a Long.\n     */\n    static isLong(value) {\n        return utils.isObjectLike(value) && value['__isLong__'] === true;\n    }\n    /**\n     * Converts the specified value to a Long.\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     */\n    static fromValue(val, unsigned) {\n        if (typeof val === 'number')\n            return Long.fromNumber(val, unsigned);\n        if (typeof val === 'string')\n            return Long.fromString(val, unsigned);\n        // Throws for non-objects, converts non-instanceof Long:\n        return Long.fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n    }\n    /** Returns the sum of this and the specified Long. */\n    add(addend) {\n        if (!Long.isLong(addend))\n            addend = Long.fromValue(addend);\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n        const a48 = this.high >>> 16;\n        const a32 = this.high & 0xffff;\n        const a16 = this.low >>> 16;\n        const a00 = this.low & 0xffff;\n        const b48 = addend.high >>> 16;\n        const b32 = addend.high & 0xffff;\n        const b16 = addend.low >>> 16;\n        const b00 = addend.low & 0xffff;\n        let c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n        c00 += a00 + b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xffff;\n        c16 += a16 + b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c32 += a32 + b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c48 += a48 + b48;\n        c48 &= 0xffff;\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    }\n    /**\n     * Returns the sum of this and the specified Long.\n     * @returns Sum\n     */\n    and(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n    }\n    /**\n     * Compares this Long's value with the specified's.\n     * @returns 0 if they are the same, 1 if the this is greater and -1 if the given one is greater\n     */\n    compare(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        if (this.eq(other))\n            return 0;\n        const thisNeg = this.isNegative(), otherNeg = other.isNegative();\n        if (thisNeg && !otherNeg)\n            return -1;\n        if (!thisNeg && otherNeg)\n            return 1;\n        // At this point the sign bits are the same\n        if (!this.unsigned)\n            return this.sub(other).isNegative() ? -1 : 1;\n        // Both are positive if at least one is unsigned\n        return other.high >>> 0 > this.high >>> 0 ||\n            (other.high === this.high && other.low >>> 0 > this.low >>> 0)\n            ? -1\n            : 1;\n    }\n    /**\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or unsigned if this Long is unsigned.\n     * @returns Quotient\n     */\n    divide(divisor) {\n        if (!Long.isLong(divisor))\n            divisor = Long.fromValue(divisor);\n        if (divisor.isZero())\n            throw Error('division by zero');\n        // use wasm support if present\n        if (wasm) {\n            // guard against signed division overflow: the largest\n            // negative number / -1 would be 1 larger than the largest\n            // positive number, due to two's complement.\n            if (!this.unsigned &&\n                this.high === -0x80000000 &&\n                divisor.low === -1 &&\n                divisor.high === -1) {\n                // be consistent with non-wasm code path\n                return this;\n            }\n            const low = (this.unsigned ? wasm.div_u : wasm.div_s)(this.low, this.high, divisor.low, divisor.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        if (this.isZero())\n            return this.unsigned ? Long.UZERO : Long.ZERO;\n        let approx, rem, res;\n        if (!this.unsigned) {\n            // This section is only relevant for signed longs and is derived from the\n            // closure library as a whole.\n            if (this.eq(Long.MIN_VALUE)) {\n                if (divisor.eq(Long.ONE) || divisor.eq(Long.NEG_ONE))\n                    return Long.MIN_VALUE;\n                // recall that -MIN_VALUE == MIN_VALUE\n                else if (divisor.eq(Long.MIN_VALUE))\n                    return Long.ONE;\n                else {\n                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                    const halfThis = this.shr(1);\n                    approx = halfThis.div(divisor).shl(1);\n                    if (approx.eq(Long.ZERO)) {\n                        return divisor.isNegative() ? Long.ONE : Long.NEG_ONE;\n                    }\n                    else {\n                        rem = this.sub(divisor.mul(approx));\n                        res = approx.add(rem.div(divisor));\n                        return res;\n                    }\n                }\n            }\n            else if (divisor.eq(Long.MIN_VALUE))\n                return this.unsigned ? Long.UZERO : Long.ZERO;\n            if (this.isNegative()) {\n                if (divisor.isNegative())\n                    return this.neg().div(divisor.neg());\n                return this.neg().div(divisor).neg();\n            }\n            else if (divisor.isNegative())\n                return this.div(divisor.neg()).neg();\n            res = Long.ZERO;\n        }\n        else {\n            // The algorithm below has not been made for unsigned longs. It's therefore\n            // required to take special care of the MSB prior to running it.\n            if (!divisor.unsigned)\n                divisor = divisor.toUnsigned();\n            if (divisor.gt(this))\n                return Long.UZERO;\n            if (divisor.gt(this.shru(1)))\n                // 15 >>> 1 = 7 ; with divisor = 8 ; true\n                return Long.UONE;\n            res = Long.UZERO;\n        }\n        // Repeat the following until the remainder is less than other:  find a\n        // floating-point that approximates remainder / other *from below*, add this\n        // into the result, and subtract it from the remainder.  It is critical that\n        // the approximate value is less than or equal to the real value so that the\n        // remainder never becomes negative.\n        rem = this;\n        while (rem.gte(divisor)) {\n            // Approximate the result of division. This may be a little greater or\n            // smaller than the actual value.\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n            // We will tweak the approximate result by changing it in the 48-th digit or\n            // the smallest non-fractional digit, whichever is larger.\n            const log2 = Math.ceil(Math.log(approx) / Math.LN2);\n            const delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n            // Decrease the approximation until it is smaller than the remainder.  Note\n            // that if it is too large, the product overflows and is negative.\n            let approxRes = Long.fromNumber(approx);\n            let approxRem = approxRes.mul(divisor);\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\n                approx -= delta;\n                approxRes = Long.fromNumber(approx, this.unsigned);\n                approxRem = approxRes.mul(divisor);\n            }\n            // We know the answer can't be zero... and actually, zero would cause\n            // infinite recursion since we would make no progress.\n            if (approxRes.isZero())\n                approxRes = Long.ONE;\n            res = res.add(approxRes);\n            rem = rem.sub(approxRem);\n        }\n        return res;\n    }\n    /**\n     * Tests if this Long's value equals the specified's.\n     * @param other - Other value\n     */\n    equals(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1)\n            return false;\n        return this.high === other.high && this.low === other.low;\n    }\n    /** Gets the high 32 bits as a signed integer. */\n    getHighBits() {\n        return this.high;\n    }\n    /** Gets the high 32 bits as an unsigned integer. */\n    getHighBitsUnsigned() {\n        return this.high >>> 0;\n    }\n    /** Gets the low 32 bits as a signed integer. */\n    getLowBits() {\n        return this.low;\n    }\n    /** Gets the low 32 bits as an unsigned integer. */\n    getLowBitsUnsigned() {\n        return this.low >>> 0;\n    }\n    /** Gets the number of bits needed to represent the absolute value of this Long. */\n    getNumBitsAbs() {\n        if (this.isNegative()) {\n            // Unsigned Longs are never negative\n            return this.eq(Long.MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n        }\n        const val = this.high !== 0 ? this.high : this.low;\n        let bit;\n        for (bit = 31; bit > 0; bit--)\n            if ((val & (1 << bit)) !== 0)\n                break;\n        return this.high !== 0 ? bit + 33 : bit + 1;\n    }\n    /** Tests if this Long's value is greater than the specified's. */\n    greaterThan(other) {\n        return this.comp(other) > 0;\n    }\n    /** Tests if this Long's value is greater than or equal the specified's. */\n    greaterThanOrEqual(other) {\n        return this.comp(other) >= 0;\n    }\n    /** Tests if this Long's value is even. */\n    isEven() {\n        return (this.low & 1) === 0;\n    }\n    /** Tests if this Long's value is negative. */\n    isNegative() {\n        return !this.unsigned && this.high < 0;\n    }\n    /** Tests if this Long's value is odd. */\n    isOdd() {\n        return (this.low & 1) === 1;\n    }\n    /** Tests if this Long's value is positive. */\n    isPositive() {\n        return this.unsigned || this.high >= 0;\n    }\n    /** Tests if this Long's value equals zero. */\n    isZero() {\n        return this.high === 0 && this.low === 0;\n    }\n    /** Tests if this Long's value is less than the specified's. */\n    lessThan(other) {\n        return this.comp(other) < 0;\n    }\n    /** Tests if this Long's value is less than or equal the specified's. */\n    lessThanOrEqual(other) {\n        return this.comp(other) <= 0;\n    }\n    /** Returns this Long modulo the specified. */\n    modulo(divisor) {\n        if (!Long.isLong(divisor))\n            divisor = Long.fromValue(divisor);\n        // use wasm support if present\n        if (wasm) {\n            const low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(this.low, this.high, divisor.low, divisor.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        return this.sub(this.div(divisor).mul(divisor));\n    }\n    /**\n     * Returns the product of this and the specified Long.\n     * @param multiplier - Multiplier\n     * @returns Product\n     */\n    multiply(multiplier) {\n        if (this.isZero())\n            return Long.ZERO;\n        if (!Long.isLong(multiplier))\n            multiplier = Long.fromValue(multiplier);\n        // use wasm support if present\n        if (wasm) {\n            const low = wasm.mul(this.low, this.high, multiplier.low, multiplier.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        if (multiplier.isZero())\n            return Long.ZERO;\n        if (this.eq(Long.MIN_VALUE))\n            return multiplier.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n        if (multiplier.eq(Long.MIN_VALUE))\n            return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n        if (this.isNegative()) {\n            if (multiplier.isNegative())\n                return this.neg().mul(multiplier.neg());\n            else\n                return this.neg().mul(multiplier).neg();\n        }\n        else if (multiplier.isNegative())\n            return this.mul(multiplier.neg()).neg();\n        // If both longs are small, use float multiplication\n        if (this.lt(Long.TWO_PWR_24) && multiplier.lt(Long.TWO_PWR_24))\n            return Long.fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n        // We can skip products that would overflow.\n        const a48 = this.high >>> 16;\n        const a32 = this.high & 0xffff;\n        const a16 = this.low >>> 16;\n        const a00 = this.low & 0xffff;\n        const b48 = multiplier.high >>> 16;\n        const b32 = multiplier.high & 0xffff;\n        const b16 = multiplier.low >>> 16;\n        const b00 = multiplier.low & 0xffff;\n        let c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n        c00 += a00 * b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xffff;\n        c16 += a16 * b00;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c16 += a00 * b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c32 += a32 * b00;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c32 += a16 * b16;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c32 += a00 * b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n        c48 &= 0xffff;\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    }\n    /** Returns the Negation of this Long's value. */\n    negate() {\n        if (!this.unsigned && this.eq(Long.MIN_VALUE))\n            return Long.MIN_VALUE;\n        return this.not().add(Long.ONE);\n    }\n    /** Returns the bitwise NOT of this Long. */\n    not() {\n        return Long.fromBits(~this.low, ~this.high, this.unsigned);\n    }\n    /** Tests if this Long's value differs from the specified's. */\n    notEquals(other) {\n        return !this.equals(other);\n    }\n    /**\n     * Returns the bitwise OR of this Long and the specified.\n     */\n    or(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n    }\n    /**\n     * Returns this Long with bits shifted to the left by the given amount.\n     * @param numBits - Number of bits\n     * @returns Shifted Long\n     */\n    shiftLeft(numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        if ((numBits &= 63) === 0)\n            return this;\n        else if (numBits < 32)\n            return Long.fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\n        else\n            return Long.fromBits(0, this.low << (numBits - 32), this.unsigned);\n    }\n    /**\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\n     * @param numBits - Number of bits\n     * @returns Shifted Long\n     */\n    shiftRight(numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        if ((numBits &= 63) === 0)\n            return this;\n        else if (numBits < 32)\n            return Long.fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\n        else\n            return Long.fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\n    }\n    /**\n     * Returns this Long with bits logically shifted to the right by the given amount.\n     * @param numBits - Number of bits\n     * @returns Shifted Long\n     */\n    shiftRightUnsigned(numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        numBits &= 63;\n        if (numBits === 0)\n            return this;\n        else {\n            const high = this.high;\n            if (numBits < 32) {\n                const low = this.low;\n                return Long.fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\n            }\n            else if (numBits === 32)\n                return Long.fromBits(high, 0, this.unsigned);\n            else\n                return Long.fromBits(high >>> (numBits - 32), 0, this.unsigned);\n        }\n    }\n    /**\n     * Returns the difference of this and the specified Long.\n     * @param subtrahend - Subtrahend\n     * @returns Difference\n     */\n    subtract(subtrahend) {\n        if (!Long.isLong(subtrahend))\n            subtrahend = Long.fromValue(subtrahend);\n        return this.add(subtrahend.neg());\n    }\n    /** Converts the Long to a 32 bit integer, assuming it is a 32 bit integer. */\n    toInt() {\n        return this.unsigned ? this.low >>> 0 : this.low;\n    }\n    /** Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa). */\n    toNumber() {\n        if (this.unsigned)\n            return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n    }\n    /** Converts the Long to a BigInt (arbitrary precision). */\n    toBigInt() {\n        return BigInt(this.toString());\n    }\n    /**\n     * Converts this Long to its byte representation.\n     * @param le - Whether little or big endian, defaults to big endian\n     * @returns Byte representation\n     */\n    toBytes(le) {\n        return le ? this.toBytesLE() : this.toBytesBE();\n    }\n    /**\n     * Converts this Long to its little endian byte representation.\n     * @returns Little endian byte representation\n     */\n    toBytesLE() {\n        const hi = this.high, lo = this.low;\n        return [\n            lo & 0xff,\n            (lo >>> 8) & 0xff,\n            (lo >>> 16) & 0xff,\n            lo >>> 24,\n            hi & 0xff,\n            (hi >>> 8) & 0xff,\n            (hi >>> 16) & 0xff,\n            hi >>> 24\n        ];\n    }\n    /**\n     * Converts this Long to its big endian byte representation.\n     * @returns Big endian byte representation\n     */\n    toBytesBE() {\n        const hi = this.high, lo = this.low;\n        return [\n            hi >>> 24,\n            (hi >>> 16) & 0xff,\n            (hi >>> 8) & 0xff,\n            hi & 0xff,\n            lo >>> 24,\n            (lo >>> 16) & 0xff,\n            (lo >>> 8) & 0xff,\n            lo & 0xff\n        ];\n    }\n    /**\n     * Converts this Long to signed.\n     */\n    toSigned() {\n        if (!this.unsigned)\n            return this;\n        return Long.fromBits(this.low, this.high, false);\n    }\n    /**\n     * Converts the Long to a string written in the specified radix.\n     * @param radix - Radix (2-36), defaults to 10\n     * @throws RangeError If `radix` is out of range\n     */\n    toString(radix) {\n        radix = radix || 10;\n        if (radix < 2 || 36 < radix)\n            throw RangeError('radix');\n        if (this.isZero())\n            return '0';\n        if (this.isNegative()) {\n            // Unsigned Longs are never negative\n            if (this.eq(Long.MIN_VALUE)) {\n                // We need to change the Long value before it can be negated, so we remove\n                // the bottom-most digit in this base and then recurse to do the rest.\n                const radixLong = Long.fromNumber(radix), div = this.div(radixLong), rem1 = div.mul(radixLong).sub(this);\n                return div.toString(radix) + rem1.toInt().toString(radix);\n            }\n            else\n                return '-' + this.neg().toString(radix);\n        }\n        // Do several (6) digits each time through the loop, so as to\n        // minimize the calls to the very expensive emulated div.\n        const radixToPower = Long.fromNumber(Math.pow(radix, 6), this.unsigned);\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let rem = this;\n        let result = '';\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const remDiv = rem.div(radixToPower);\n            const intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0;\n            let digits = intval.toString(radix);\n            rem = remDiv;\n            if (rem.isZero()) {\n                return digits + result;\n            }\n            else {\n                while (digits.length < 6)\n                    digits = '0' + digits;\n                result = '' + digits + result;\n            }\n        }\n    }\n    /** Converts this Long to unsigned. */\n    toUnsigned() {\n        if (this.unsigned)\n            return this;\n        return Long.fromBits(this.low, this.high, true);\n    }\n    /** Returns the bitwise XOR of this Long and the given one. */\n    xor(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n    }\n    /*\n     ****************************************************************\n     *                  BSON SPECIFIC ADDITIONS                     *\n     ****************************************************************\n     */\n    toExtendedJSON(options) {\n        if (options && options.relaxed)\n            return this.toNumber();\n        return { $numberLong: this.toString() };\n    }\n    static fromExtendedJSON(doc, options) {\n        const result = Long.fromString(doc.$numberLong);\n        return options && options.relaxed ? result.toNumber() : result;\n    }\n}\nexports.Long = Long;\nLong.TWO_PWR_24 = Long.fromInt(TWO_PWR_24_DBL);\n/** Maximum unsigned value. */\nLong.MAX_UNSIGNED_VALUE = Long.fromBits(0xffffffff | 0, 0xffffffff | 0, true);\n/** Signed zero */\nLong.ZERO = Long.fromInt(0);\n/** Unsigned zero. */\nLong.UZERO = Long.fromInt(0, true);\n/** Signed one. */\nLong.ONE = Long.fromInt(1);\n/** Unsigned one. */\nLong.UONE = Long.fromInt(1, true);\n/** Signed negative one. */\nLong.NEG_ONE = Long.fromInt(-1);\n/** Maximum signed value. */\nLong.MAX_VALUE = Long.fromBits(0xffffffff | 0, 0x7fffffff | 0, false);\n/** Minimum signed value. */\nLong.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0, false);\nObject.defineProperty(Long.prototype, '__isLong__', { value: true });\nObject.defineProperty(Long.prototype, '_bsontype', { value: 'Long' });\n\n});\n\nunwrapExports(long_1);\nvar long_2 = long_1.Long;\n\nvar decimal128 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Decimal128 = void 0;\n\n\nconst PARSE_STRING_REGEXP = /^(\\+|-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([-+])?(\\d+)?$/;\nconst PARSE_INF_REGEXP = /^(\\+|-)?(Infinity|inf)$/i;\nconst PARSE_NAN_REGEXP = /^(\\+|-)?NaN$/i;\nconst EXPONENT_MAX = 6111;\nconst EXPONENT_MIN = -6176;\nconst EXPONENT_BIAS = 6176;\nconst MAX_DIGITS = 34;\n// Nan value bits as 32 bit values (due to lack of longs)\nconst NAN_BUFFER = [\n    0x7c,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00\n].reverse();\n// Infinity value bits 32 bit values (due to lack of longs)\nconst INF_NEGATIVE_BUFFER = [\n    0xf8,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00\n].reverse();\nconst INF_POSITIVE_BUFFER = [\n    0x78,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00\n].reverse();\nconst EXPONENT_REGEX = /^([-+])?(\\d+)?$/;\n// Extract least significant 5 bits\nconst COMBINATION_MASK = 0x1f;\n// Extract least significant 14 bits\nconst EXPONENT_MASK = 0x3fff;\n// Value of combination field for Inf\nconst COMBINATION_INFINITY = 30;\n// Value of combination field for NaN\nconst COMBINATION_NAN = 31;\n// Detect if the value is a digit\nfunction isDigit(value) {\n    return !isNaN(parseInt(value, 10));\n}\n// Divide two uint128 values\nfunction divideu128(value) {\n    const DIVISOR = long_1.Long.fromNumber(1000 * 1000 * 1000);\n    let _rem = long_1.Long.fromNumber(0);\n    if (!value.parts[0] && !value.parts[1] && !value.parts[2] && !value.parts[3]) {\n        return { quotient: value, rem: _rem };\n    }\n    for (let i = 0; i <= 3; i++) {\n        // Adjust remainder to match value of next dividend\n        _rem = _rem.shiftLeft(32);\n        // Add the divided to _rem\n        _rem = _rem.add(new long_1.Long(value.parts[i], 0));\n        value.parts[i] = _rem.div(DIVISOR).low;\n        _rem = _rem.modulo(DIVISOR);\n    }\n    return { quotient: value, rem: _rem };\n}\n// Multiply two Long values and return the 128 bit value\nfunction multiply64x2(left, right) {\n    if (!left && !right) {\n        return { high: long_1.Long.fromNumber(0), low: long_1.Long.fromNumber(0) };\n    }\n    const leftHigh = left.shiftRightUnsigned(32);\n    const leftLow = new long_1.Long(left.getLowBits(), 0);\n    const rightHigh = right.shiftRightUnsigned(32);\n    const rightLow = new long_1.Long(right.getLowBits(), 0);\n    let productHigh = leftHigh.multiply(rightHigh);\n    let productMid = leftHigh.multiply(rightLow);\n    const productMid2 = leftLow.multiply(rightHigh);\n    let productLow = leftLow.multiply(rightLow);\n    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n    productMid = new long_1.Long(productMid.getLowBits(), 0)\n        .add(productMid2)\n        .add(productLow.shiftRightUnsigned(32));\n    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n    productLow = productMid.shiftLeft(32).add(new long_1.Long(productLow.getLowBits(), 0));\n    // Return the 128 bit result\n    return { high: productHigh, low: productLow };\n}\nfunction lessThan(left, right) {\n    // Make values unsigned\n    const uhleft = left.high >>> 0;\n    const uhright = right.high >>> 0;\n    // Compare high bits first\n    if (uhleft < uhright) {\n        return true;\n    }\n    else if (uhleft === uhright) {\n        const ulleft = left.low >>> 0;\n        const ulright = right.low >>> 0;\n        if (ulleft < ulright)\n            return true;\n    }\n    return false;\n}\nfunction invalidErr(string, message) {\n    throw new TypeError(`\"${string}\" is not a valid Decimal128 string - ${message}`);\n}\n/**\n * A class representation of the BSON Decimal128 type.\n * @public\n */\nclass Decimal128 {\n    /** @param bytes - a buffer containing the raw Decimal128 bytes in little endian order */\n    constructor(bytes) {\n        this.bytes = bytes;\n    }\n    /**\n     * Create a Decimal128 instance from a string representation\n     *\n     * @param representation - a numeric string representation.\n     */\n    static fromString(representation) {\n        // Parse state tracking\n        let isNegative = false;\n        let sawRadix = false;\n        let foundNonZero = false;\n        // Total number of significant digits (no leading or trailing zero)\n        let significantDigits = 0;\n        // Total number of significand digits read\n        let nDigitsRead = 0;\n        // Total number of digits (no leading zeros)\n        let nDigits = 0;\n        // The number of the digits after radix\n        let radixPosition = 0;\n        // The index of the first non-zero in *str*\n        let firstNonZero = 0;\n        // Digits Array\n        const digits = [0];\n        // The number of digits in digits\n        let nDigitsStored = 0;\n        // Insertion pointer for digits\n        let digitsInsert = 0;\n        // The index of the first non-zero digit\n        let firstDigit = 0;\n        // The index of the last digit\n        let lastDigit = 0;\n        // Exponent\n        let exponent = 0;\n        // loop index over array\n        let i = 0;\n        // The high 17 digits of the significand\n        let significandHigh = new long_1.Long(0, 0);\n        // The low 17 digits of the significand\n        let significandLow = new long_1.Long(0, 0);\n        // The biased exponent\n        let biasedExponent = 0;\n        // Read index\n        let index = 0;\n        // Naively prevent against REDOS attacks.\n        // TODO: implementing a custom parsing for this, or refactoring the regex would yield\n        //       further gains.\n        if (representation.length >= 7000) {\n            throw new TypeError('' + representation + ' not a valid Decimal128 string');\n        }\n        // Results\n        const stringMatch = representation.match(PARSE_STRING_REGEXP);\n        const infMatch = representation.match(PARSE_INF_REGEXP);\n        const nanMatch = representation.match(PARSE_NAN_REGEXP);\n        // Validate the string\n        if ((!stringMatch && !infMatch && !nanMatch) || representation.length === 0) {\n            throw new TypeError('' + representation + ' not a valid Decimal128 string');\n        }\n        if (stringMatch) {\n            // full_match = stringMatch[0]\n            // sign = stringMatch[1]\n            const unsignedNumber = stringMatch[2];\n            // stringMatch[3] is undefined if a whole number (ex \"1\", 12\")\n            // but defined if a number w/ decimal in it (ex \"1.0, 12.2\")\n            const e = stringMatch[4];\n            const expSign = stringMatch[5];\n            const expNumber = stringMatch[6];\n            // they provided e, but didn't give an exponent number. for ex \"1e\"\n            if (e && expNumber === undefined)\n                invalidErr(representation, 'missing exponent power');\n            // they provided e, but didn't give a number before it. for ex \"e1\"\n            if (e && unsignedNumber === undefined)\n                invalidErr(representation, 'missing exponent base');\n            if (e === undefined && (expSign || expNumber)) {\n                invalidErr(representation, 'missing e before exponent');\n            }\n        }\n        // Get the negative or positive sign\n        if (representation[index] === '+' || representation[index] === '-') {\n            isNegative = representation[index++] === '-';\n        }\n        // Check if user passed Infinity or NaN\n        if (!isDigit(representation[index]) && representation[index] !== '.') {\n            if (representation[index] === 'i' || representation[index] === 'I') {\n                return new Decimal128(buffer.Buffer.from(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n            }\n            else if (representation[index] === 'N') {\n                return new Decimal128(buffer.Buffer.from(NAN_BUFFER));\n            }\n        }\n        // Read all the digits\n        while (isDigit(representation[index]) || representation[index] === '.') {\n            if (representation[index] === '.') {\n                if (sawRadix)\n                    invalidErr(representation, 'contains multiple periods');\n                sawRadix = true;\n                index = index + 1;\n                continue;\n            }\n            if (nDigitsStored < 34) {\n                if (representation[index] !== '0' || foundNonZero) {\n                    if (!foundNonZero) {\n                        firstNonZero = nDigitsRead;\n                    }\n                    foundNonZero = true;\n                    // Only store 34 digits\n                    digits[digitsInsert++] = parseInt(representation[index], 10);\n                    nDigitsStored = nDigitsStored + 1;\n                }\n            }\n            if (foundNonZero)\n                nDigits = nDigits + 1;\n            if (sawRadix)\n                radixPosition = radixPosition + 1;\n            nDigitsRead = nDigitsRead + 1;\n            index = index + 1;\n        }\n        if (sawRadix && !nDigitsRead)\n            throw new TypeError('' + representation + ' not a valid Decimal128 string');\n        // Read exponent if exists\n        if (representation[index] === 'e' || representation[index] === 'E') {\n            // Read exponent digits\n            const match = representation.substr(++index).match(EXPONENT_REGEX);\n            // No digits read\n            if (!match || !match[2])\n                return new Decimal128(buffer.Buffer.from(NAN_BUFFER));\n            // Get exponent\n            exponent = parseInt(match[0], 10);\n            // Adjust the index\n            index = index + match[0].length;\n        }\n        // Return not a number\n        if (representation[index])\n            return new Decimal128(buffer.Buffer.from(NAN_BUFFER));\n        // Done reading input\n        // Find first non-zero digit in digits\n        firstDigit = 0;\n        if (!nDigitsStored) {\n            firstDigit = 0;\n            lastDigit = 0;\n            digits[0] = 0;\n            nDigits = 1;\n            nDigitsStored = 1;\n            significantDigits = 0;\n        }\n        else {\n            lastDigit = nDigitsStored - 1;\n            significantDigits = nDigits;\n            if (significantDigits !== 1) {\n                while (representation[firstNonZero + significantDigits - 1] === '0') {\n                    significantDigits = significantDigits - 1;\n                }\n            }\n        }\n        // Normalization of exponent\n        // Correct exponent based on radix position, and shift significand as needed\n        // to represent user input\n        // Overflow prevention\n        if (exponent <= radixPosition && radixPosition - exponent > 1 << 14) {\n            exponent = EXPONENT_MIN;\n        }\n        else {\n            exponent = exponent - radixPosition;\n        }\n        // Attempt to normalize the exponent\n        while (exponent > EXPONENT_MAX) {\n            // Shift exponent to significand and decrease\n            lastDigit = lastDigit + 1;\n            if (lastDigit - firstDigit > MAX_DIGITS) {\n                // Check if we have a zero then just hard clamp, otherwise fail\n                const digitsString = digits.join('');\n                if (digitsString.match(/^0+$/)) {\n                    exponent = EXPONENT_MAX;\n                    break;\n                }\n                invalidErr(representation, 'overflow');\n            }\n            exponent = exponent - 1;\n        }\n        while (exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n            // Shift last digit. can only do this if < significant digits than # stored.\n            if (lastDigit === 0 && significantDigits < nDigitsStored) {\n                exponent = EXPONENT_MIN;\n                significantDigits = 0;\n                break;\n            }\n            if (nDigitsStored < nDigits) {\n                // adjust to match digits not stored\n                nDigits = nDigits - 1;\n            }\n            else {\n                // adjust to round\n                lastDigit = lastDigit - 1;\n            }\n            if (exponent < EXPONENT_MAX) {\n                exponent = exponent + 1;\n            }\n            else {\n                // Check if we have a zero then just hard clamp, otherwise fail\n                const digitsString = digits.join('');\n                if (digitsString.match(/^0+$/)) {\n                    exponent = EXPONENT_MAX;\n                    break;\n                }\n                invalidErr(representation, 'overflow');\n            }\n        }\n        // Round\n        // We've normalized the exponent, but might still need to round.\n        if (lastDigit - firstDigit + 1 < significantDigits) {\n            let endOfString = nDigitsRead;\n            // If we have seen a radix point, 'string' is 1 longer than we have\n            // documented with ndigits_read, so inc the position of the first nonzero\n            // digit and the position that digits are read to.\n            if (sawRadix) {\n                firstNonZero = firstNonZero + 1;\n                endOfString = endOfString + 1;\n            }\n            // if negative, we need to increment again to account for - sign at start.\n            if (isNegative) {\n                firstNonZero = firstNonZero + 1;\n                endOfString = endOfString + 1;\n            }\n            const roundDigit = parseInt(representation[firstNonZero + lastDigit + 1], 10);\n            let roundBit = 0;\n            if (roundDigit >= 5) {\n                roundBit = 1;\n                if (roundDigit === 5) {\n                    roundBit = digits[lastDigit] % 2 === 1 ? 1 : 0;\n                    for (i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n                        if (parseInt(representation[i], 10)) {\n                            roundBit = 1;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (roundBit) {\n                let dIdx = lastDigit;\n                for (; dIdx >= 0; dIdx--) {\n                    if (++digits[dIdx] > 9) {\n                        digits[dIdx] = 0;\n                        // overflowed most significant digit\n                        if (dIdx === 0) {\n                            if (exponent < EXPONENT_MAX) {\n                                exponent = exponent + 1;\n                                digits[dIdx] = 1;\n                            }\n                            else {\n                                return new Decimal128(buffer.Buffer.from(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // Encode significand\n        // The high 17 digits of the significand\n        significandHigh = long_1.Long.fromNumber(0);\n        // The low 17 digits of the significand\n        significandLow = long_1.Long.fromNumber(0);\n        // read a zero\n        if (significantDigits === 0) {\n            significandHigh = long_1.Long.fromNumber(0);\n            significandLow = long_1.Long.fromNumber(0);\n        }\n        else if (lastDigit - firstDigit < 17) {\n            let dIdx = firstDigit;\n            significandLow = long_1.Long.fromNumber(digits[dIdx++]);\n            significandHigh = new long_1.Long(0, 0);\n            for (; dIdx <= lastDigit; dIdx++) {\n                significandLow = significandLow.multiply(long_1.Long.fromNumber(10));\n                significandLow = significandLow.add(long_1.Long.fromNumber(digits[dIdx]));\n            }\n        }\n        else {\n            let dIdx = firstDigit;\n            significandHigh = long_1.Long.fromNumber(digits[dIdx++]);\n            for (; dIdx <= lastDigit - 17; dIdx++) {\n                significandHigh = significandHigh.multiply(long_1.Long.fromNumber(10));\n                significandHigh = significandHigh.add(long_1.Long.fromNumber(digits[dIdx]));\n            }\n            significandLow = long_1.Long.fromNumber(digits[dIdx++]);\n            for (; dIdx <= lastDigit; dIdx++) {\n                significandLow = significandLow.multiply(long_1.Long.fromNumber(10));\n                significandLow = significandLow.add(long_1.Long.fromNumber(digits[dIdx]));\n            }\n        }\n        const significand = multiply64x2(significandHigh, long_1.Long.fromString('100000000000000000'));\n        significand.low = significand.low.add(significandLow);\n        if (lessThan(significand.low, significandLow)) {\n            significand.high = significand.high.add(long_1.Long.fromNumber(1));\n        }\n        // Biased exponent\n        biasedExponent = exponent + EXPONENT_BIAS;\n        const dec = { low: long_1.Long.fromNumber(0), high: long_1.Long.fromNumber(0) };\n        // Encode combination, exponent, and significand.\n        if (significand.high.shiftRightUnsigned(49).and(long_1.Long.fromNumber(1)).equals(long_1.Long.fromNumber(1))) {\n            // Encode '11' into bits 1 to 3\n            dec.high = dec.high.or(long_1.Long.fromNumber(0x3).shiftLeft(61));\n            dec.high = dec.high.or(long_1.Long.fromNumber(biasedExponent).and(long_1.Long.fromNumber(0x3fff).shiftLeft(47)));\n            dec.high = dec.high.or(significand.high.and(long_1.Long.fromNumber(0x7fffffffffff)));\n        }\n        else {\n            dec.high = dec.high.or(long_1.Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n            dec.high = dec.high.or(significand.high.and(long_1.Long.fromNumber(0x1ffffffffffff)));\n        }\n        dec.low = significand.low;\n        // Encode sign\n        if (isNegative) {\n            dec.high = dec.high.or(long_1.Long.fromString('9223372036854775808'));\n        }\n        // Encode into a buffer\n        const buffer$1 = buffer.Buffer.alloc(16);\n        index = 0;\n        // Encode the low 64 bits of the decimal\n        // Encode low bits\n        buffer$1[index++] = dec.low.low & 0xff;\n        buffer$1[index++] = (dec.low.low >> 8) & 0xff;\n        buffer$1[index++] = (dec.low.low >> 16) & 0xff;\n        buffer$1[index++] = (dec.low.low >> 24) & 0xff;\n        // Encode high bits\n        buffer$1[index++] = dec.low.high & 0xff;\n        buffer$1[index++] = (dec.low.high >> 8) & 0xff;\n        buffer$1[index++] = (dec.low.high >> 16) & 0xff;\n        buffer$1[index++] = (dec.low.high >> 24) & 0xff;\n        // Encode the high 64 bits of the decimal\n        // Encode low bits\n        buffer$1[index++] = dec.high.low & 0xff;\n        buffer$1[index++] = (dec.high.low >> 8) & 0xff;\n        buffer$1[index++] = (dec.high.low >> 16) & 0xff;\n        buffer$1[index++] = (dec.high.low >> 24) & 0xff;\n        // Encode high bits\n        buffer$1[index++] = dec.high.high & 0xff;\n        buffer$1[index++] = (dec.high.high >> 8) & 0xff;\n        buffer$1[index++] = (dec.high.high >> 16) & 0xff;\n        buffer$1[index++] = (dec.high.high >> 24) & 0xff;\n        // Return the new Decimal128\n        return new Decimal128(buffer$1);\n    }\n    /** Create a string representation of the raw Decimal128 value */\n    toString() {\n        // Note: bits in this routine are referred to starting at 0,\n        // from the sign bit, towards the coefficient.\n        // decoded biased exponent (14 bits)\n        let biased_exponent;\n        // the number of significand digits\n        let significand_digits = 0;\n        // the base-10 digits in the significand\n        const significand = new Array(36);\n        for (let i = 0; i < significand.length; i++)\n            significand[i] = 0;\n        // read pointer into significand\n        let index = 0;\n        // true if the number is zero\n        let is_zero = false;\n        // the most significant significand bits (50-46)\n        let significand_msb;\n        // temporary storage for significand decoding\n        let significand128 = { parts: [0, 0, 0, 0] };\n        // indexing variables\n        let j, k;\n        // Output string\n        const string = [];\n        // Unpack index\n        index = 0;\n        // Buffer reference\n        const buffer = this.bytes;\n        // Unpack the low 64bits into a long\n        // bits 96 - 127\n        const low = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        // bits 64 - 95\n        const midl = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        // Unpack the high 64bits into a long\n        // bits 32 - 63\n        const midh = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        // bits 0 - 31\n        const high = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        // Unpack index\n        index = 0;\n        // Create the state of the decimal\n        const dec = {\n            low: new long_1.Long(low, midl),\n            high: new long_1.Long(midh, high)\n        };\n        if (dec.high.lessThan(long_1.Long.ZERO)) {\n            string.push('-');\n        }\n        // Decode combination field and exponent\n        // bits 1 - 5\n        const combination = (high >> 26) & COMBINATION_MASK;\n        if (combination >> 3 === 3) {\n            // Check for 'special' values\n            if (combination === COMBINATION_INFINITY) {\n                return string.join('') + 'Infinity';\n            }\n            else if (combination === COMBINATION_NAN) {\n                return 'NaN';\n            }\n            else {\n                biased_exponent = (high >> 15) & EXPONENT_MASK;\n                significand_msb = 0x08 + ((high >> 14) & 0x01);\n            }\n        }\n        else {\n            significand_msb = (high >> 14) & 0x07;\n            biased_exponent = (high >> 17) & EXPONENT_MASK;\n        }\n        // unbiased exponent\n        const exponent = biased_exponent - EXPONENT_BIAS;\n        // Create string of significand digits\n        // Convert the 114-bit binary number represented by\n        // (significand_high, significand_low) to at most 34 decimal\n        // digits through modulo and division.\n        significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n        significand128.parts[1] = midh;\n        significand128.parts[2] = midl;\n        significand128.parts[3] = low;\n        if (significand128.parts[0] === 0 &&\n            significand128.parts[1] === 0 &&\n            significand128.parts[2] === 0 &&\n            significand128.parts[3] === 0) {\n            is_zero = true;\n        }\n        else {\n            for (k = 3; k >= 0; k--) {\n                let least_digits = 0;\n                // Perform the divide\n                const result = divideu128(significand128);\n                significand128 = result.quotient;\n                least_digits = result.rem.low;\n                // We now have the 9 least significant digits (in base 2).\n                // Convert and output to string.\n                if (!least_digits)\n                    continue;\n                for (j = 8; j >= 0; j--) {\n                    // significand[k * 9 + j] = Math.round(least_digits % 10);\n                    significand[k * 9 + j] = least_digits % 10;\n                    // least_digits = Math.round(least_digits / 10);\n                    least_digits = Math.floor(least_digits / 10);\n                }\n            }\n        }\n        // Output format options:\n        // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n        // Regular    - ddd.ddd\n        if (is_zero) {\n            significand_digits = 1;\n            significand[index] = 0;\n        }\n        else {\n            significand_digits = 36;\n            while (!significand[index]) {\n                significand_digits = significand_digits - 1;\n                index = index + 1;\n            }\n        }\n        // the exponent if scientific notation is used\n        const scientific_exponent = significand_digits - 1 + exponent;\n        // The scientific exponent checks are dictated by the string conversion\n        // specification and are somewhat arbitrary cutoffs.\n        //\n        // We must check exponent > 0, because if this is the case, the number\n        // has trailing zeros.  However, we *cannot* output these trailing zeros,\n        // because doing so would change the precision of the value, and would\n        // change stored data if the string converted number is round tripped.\n        if (scientific_exponent >= 34 || scientific_exponent <= -7 || exponent > 0) {\n            // Scientific format\n            // if there are too many significant digits, we should just be treating numbers\n            // as + or - 0 and using the non-scientific exponent (this is for the \"invalid\n            // representation should be treated as 0/-0\" spec cases in decimal128-1.json)\n            if (significand_digits > 34) {\n                string.push(`${0}`);\n                if (exponent > 0)\n                    string.push('E+' + exponent);\n                else if (exponent < 0)\n                    string.push('E' + exponent);\n                return string.join('');\n            }\n            string.push(`${significand[index++]}`);\n            significand_digits = significand_digits - 1;\n            if (significand_digits) {\n                string.push('.');\n            }\n            for (let i = 0; i < significand_digits; i++) {\n                string.push(`${significand[index++]}`);\n            }\n            // Exponent\n            string.push('E');\n            if (scientific_exponent > 0) {\n                string.push('+' + scientific_exponent);\n            }\n            else {\n                string.push(`${scientific_exponent}`);\n            }\n        }\n        else {\n            // Regular format with no decimal place\n            if (exponent >= 0) {\n                for (let i = 0; i < significand_digits; i++) {\n                    string.push(`${significand[index++]}`);\n                }\n            }\n            else {\n                let radix_position = significand_digits + exponent;\n                // non-zero digits before radix\n                if (radix_position > 0) {\n                    for (let i = 0; i < radix_position; i++) {\n                        string.push(`${significand[index++]}`);\n                    }\n                }\n                else {\n                    string.push('0');\n                }\n                string.push('.');\n                // add leading zeros after radix\n                while (radix_position++ < 0) {\n                    string.push('0');\n                }\n                for (let i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n                    string.push(`${significand[index++]}`);\n                }\n            }\n        }\n        return string.join('');\n    }\n    toJSON() {\n        return { $numberDecimal: this.toString() };\n    }\n    /** @internal */\n    toExtendedJSON() {\n        return { $numberDecimal: this.toString() };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc) {\n        return Decimal128.fromString(doc.$numberDecimal);\n    }\n}\nexports.Decimal128 = Decimal128;\nObject.defineProperty(Decimal128.prototype, '_bsontype', { value: 'Decimal128' });\n\n});\n\nunwrapExports(decimal128);\nvar decimal128_1 = decimal128.Decimal128;\n\nvar double_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Double = void 0;\n/**\n * A class representation of the BSON Double type.\n * @public\n */\nclass Double {\n    /**\n     * Create a Double type\n     *\n     * @param value - the number we want to represent as a double.\n     */\n    constructor(value) {\n        if (value instanceof Number) {\n            value = value.valueOf();\n        }\n        this.value = +value;\n    }\n    /**\n     * Access the number value.\n     *\n     * @returns returns the wrapped double number.\n     */\n    valueOf() {\n        return this.value;\n    }\n    /** @internal */\n    toJSON() {\n        return this.value;\n    }\n    /** @internal */\n    toExtendedJSON(options) {\n        if (options && (options.legacy || (options.relaxed && isFinite(this.value)))) {\n            return this.value;\n        }\n        // NOTE: JavaScript has +0 and -0, apparently to model limit calculations. If a user\n        // explicitly provided `-0` then we need to ensure the sign makes it into the output\n        if (Object.is(Math.sign(this.value), -0)) {\n            return { $numberDouble: `-${this.value.toFixed(1)}` };\n        }\n        let $numberDouble;\n        if (Number.isInteger(this.value)) {\n            $numberDouble = this.value.toFixed(1);\n            if ($numberDouble.length >= 13) {\n                $numberDouble = this.value.toExponential(13).toUpperCase();\n            }\n        }\n        else {\n            $numberDouble = this.value.toString();\n        }\n        return { $numberDouble };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc, options) {\n        const doubleValue = parseFloat(doc.$numberDouble);\n        return options && options.relaxed ? doubleValue : new Double(doubleValue);\n    }\n}\nexports.Double = Double;\nObject.defineProperty(Double.prototype, '_bsontype', { value: 'Double' });\n\n});\n\nunwrapExports(double_1);\nvar double_2 = double_1.Double;\n\nvar int_32 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Int32 = void 0;\n/**\n * A class representation of a BSON Int32 type.\n * @public\n */\nclass Int32 {\n    /**\n     * Create an Int32 type\n     *\n     * @param value - the number we want to represent as an int32.\n     */\n    constructor(value) {\n        if (value instanceof Number) {\n            value = value.valueOf();\n        }\n        this.value = +value;\n    }\n    /**\n     * Access the number value.\n     *\n     * @returns returns the wrapped int32 number.\n     */\n    valueOf() {\n        return this.value;\n    }\n    /** @internal */\n    toJSON() {\n        return this.value;\n    }\n    /** @internal */\n    toExtendedJSON(options) {\n        if (options && (options.relaxed || options.legacy))\n            return this.value;\n        return { $numberInt: this.value.toString() };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc, options) {\n        return options && options.relaxed ? parseInt(doc.$numberInt, 10) : new Int32(doc.$numberInt);\n    }\n}\nexports.Int32 = Int32;\nObject.defineProperty(Int32.prototype, '_bsontype', { value: 'Int32' });\n\n});\n\nunwrapExports(int_32);\nvar int_32_1 = int_32.Int32;\n\nvar map = createCommonjsModule(function (module, exports) {\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// We have an ES6 Map available, return the native instance\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Map = void 0;\n/** @public */\nlet bsonMap;\nexports.Map = bsonMap;\nconst check = function (potentialGlobal) {\n    // eslint-disable-next-line eqeqeq\n    return potentialGlobal && potentialGlobal.Math == Math && potentialGlobal;\n};\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nfunction getGlobal() {\n    // eslint-disable-next-line no-undef\n    return (check(typeof globalThis === 'object' && globalThis) ||\n        check(typeof window === 'object' && window) ||\n        check(typeof self === 'object' && self) ||\n        check(typeof commonjsGlobal === 'object' && commonjsGlobal) ||\n        Function('return this')());\n}\nconst bsonGlobal = getGlobal();\nif (Object.prototype.hasOwnProperty.call(bsonGlobal, 'Map')) {\n    exports.Map = bsonMap = bsonGlobal.Map;\n}\nelse {\n    // We will return a polyfill\n    exports.Map = bsonMap = class Map {\n        constructor(array = []) {\n            this._keys = [];\n            this._values = {};\n            for (let i = 0; i < array.length; i++) {\n                if (array[i] == null)\n                    continue; // skip null and undefined\n                const entry = array[i];\n                const key = entry[0];\n                const value = entry[1];\n                // Add the key to the list of keys in order\n                this._keys.push(key);\n                // Add the key and value to the values dictionary with a point\n                // to the location in the ordered keys list\n                this._values[key] = { v: value, i: this._keys.length - 1 };\n            }\n        }\n        clear() {\n            this._keys = [];\n            this._values = {};\n        }\n        delete(key) {\n            const value = this._values[key];\n            if (value == null)\n                return false;\n            // Delete entry\n            delete this._values[key];\n            // Remove the key from the ordered keys list\n            this._keys.splice(value.i, 1);\n            return true;\n        }\n        entries() {\n            let index = 0;\n            return {\n                next: () => {\n                    const key = this._keys[index++];\n                    return {\n                        value: key !== undefined ? [key, this._values[key].v] : undefined,\n                        done: key !== undefined ? false : true\n                    };\n                }\n            };\n        }\n        forEach(callback, self) {\n            self = self || this;\n            for (let i = 0; i < this._keys.length; i++) {\n                const key = this._keys[i];\n                // Call the forEach callback\n                callback.call(self, this._values[key].v, key, self);\n            }\n        }\n        get(key) {\n            return this._values[key] ? this._values[key].v : undefined;\n        }\n        has(key) {\n            return this._values[key] != null;\n        }\n        keys() {\n            let index = 0;\n            return {\n                next: () => {\n                    const key = this._keys[index++];\n                    return {\n                        value: key !== undefined ? key : undefined,\n                        done: key !== undefined ? false : true\n                    };\n                }\n            };\n        }\n        set(key, value) {\n            if (this._values[key]) {\n                this._values[key].v = value;\n                return this;\n            }\n            // Add the key to the list of keys in order\n            this._keys.push(key);\n            // Add the key and value to the values dictionary with a point\n            // to the location in the ordered keys list\n            this._values[key] = { v: value, i: this._keys.length - 1 };\n            return this;\n        }\n        values() {\n            let index = 0;\n            return {\n                next: () => {\n                    const key = this._keys[index++];\n                    return {\n                        value: key !== undefined ? this._values[key].v : undefined,\n                        done: key !== undefined ? false : true\n                    };\n                }\n            };\n        }\n        get size() {\n            return this._keys.length;\n        }\n    };\n}\n\n});\n\nunwrapExports(map);\nvar map_1 = map.Map;\n\nvar max_key = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MaxKey = void 0;\n/**\n * A class representation of the BSON MaxKey type.\n * @public\n */\nclass MaxKey {\n    /** @internal */\n    toExtendedJSON() {\n        return { $maxKey: 1 };\n    }\n    /** @internal */\n    static fromExtendedJSON() {\n        return new MaxKey();\n    }\n}\nexports.MaxKey = MaxKey;\nObject.defineProperty(MaxKey.prototype, '_bsontype', { value: 'MaxKey' });\n\n});\n\nunwrapExports(max_key);\nvar max_key_1 = max_key.MaxKey;\n\nvar min_key = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MinKey = void 0;\n/**\n * A class representation of the BSON MinKey type.\n * @public\n */\nclass MinKey {\n    /** @internal */\n    toExtendedJSON() {\n        return { $minKey: 1 };\n    }\n    /** @internal */\n    static fromExtendedJSON() {\n        return new MinKey();\n    }\n}\nexports.MinKey = MinKey;\nObject.defineProperty(MinKey.prototype, '_bsontype', { value: 'MinKey' });\n\n});\n\nunwrapExports(min_key);\nvar min_key_1 = min_key.MinKey;\n\nvar objectid = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectId = void 0;\n\n\n\n// constants\nconst PROCESS_UNIQUE = utils.randomBytes(5);\n// Regular expression that checks for hex value\nconst checkForHexRegExp = new RegExp('^[0-9a-fA-F]{24}$');\n// Precomputed hex table enables speedy hex string conversion\nconst hexTable = [];\nfor (let i = 0; i < 256; i++) {\n    hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n}\n// Lookup tables\nconst decodeLookup = [];\nlet i = 0;\nwhile (i < 10)\n    decodeLookup[0x30 + i] = i++;\nwhile (i < 16)\n    decodeLookup[0x41 - 10 + i] = decodeLookup[0x61 - 10 + i] = i++;\nconst kId = Symbol('id');\n/**\n * A class representation of the BSON ObjectId type.\n * @public\n */\nclass ObjectId {\n    /**\n     * Create an ObjectId type\n     *\n     * @param id - Can be a 24 character hex string, 12 byte binary Buffer, or a number.\n     */\n    constructor(id) {\n        // Duck-typing to support ObjectId from different npm packages\n        if (id instanceof ObjectId) {\n            this[kId] = id.id;\n            this.__id = id.__id;\n        }\n        if (typeof id === 'object' && id && 'id' in id) {\n            if ('toHexString' in id && typeof id.toHexString === 'function') {\n                this[kId] = buffer.Buffer.from(id.toHexString(), 'hex');\n            }\n            else {\n                this[kId] = typeof id.id === 'string' ? buffer.Buffer.from(id.id) : id.id;\n            }\n        }\n        // The most common use case (blank id, new objectId instance)\n        if (id == null || typeof id === 'number') {\n            // Generate a new id\n            this[kId] = ObjectId.generate(typeof id === 'number' ? id : undefined);\n            // If we are caching the hex string\n            if (ObjectId.cacheHexString) {\n                this.__id = this.id.toString('hex');\n            }\n        }\n        if (ArrayBuffer.isView(id) && id.byteLength === 12) {\n            this[kId] = ensure_buffer.ensureBuffer(id);\n        }\n        if (typeof id === 'string') {\n            if (id.length === 12) {\n                const bytes = buffer.Buffer.from(id);\n                if (bytes.byteLength === 12) {\n                    this[kId] = bytes;\n                }\n            }\n            else if (id.length === 24 && checkForHexRegExp.test(id)) {\n                this[kId] = buffer.Buffer.from(id, 'hex');\n            }\n            else {\n                throw new TypeError('Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters');\n            }\n        }\n        if (ObjectId.cacheHexString) {\n            this.__id = this.id.toString('hex');\n        }\n    }\n    /**\n     * The ObjectId bytes\n     * @readonly\n     */\n    get id() {\n        return this[kId];\n    }\n    set id(value) {\n        this[kId] = value;\n        if (ObjectId.cacheHexString) {\n            this.__id = value.toString('hex');\n        }\n    }\n    /**\n     * The generation time of this ObjectId instance\n     * @deprecated Please use getTimestamp / createFromTime which returns an int32 epoch\n     */\n    get generationTime() {\n        return this.id.readInt32BE(0);\n    }\n    set generationTime(value) {\n        // Encode time into first 4 bytes\n        this.id.writeUInt32BE(value, 0);\n    }\n    /** Returns the ObjectId id as a 24 character hex string representation */\n    toHexString() {\n        if (ObjectId.cacheHexString && this.__id) {\n            return this.__id;\n        }\n        const hexString = this.id.toString('hex');\n        if (ObjectId.cacheHexString && !this.__id) {\n            this.__id = hexString;\n        }\n        return hexString;\n    }\n    /**\n     * Update the ObjectId index\n     * @privateRemarks\n     * Used in generating new ObjectId's on the driver\n     * @internal\n     */\n    static getInc() {\n        return (ObjectId.index = (ObjectId.index + 1) % 0xffffff);\n    }\n    /**\n     * Generate a 12 byte id buffer used in ObjectId's\n     *\n     * @param time - pass in a second based timestamp.\n     */\n    static generate(time) {\n        if ('number' !== typeof time) {\n            time = ~~(Date.now() / 1000);\n        }\n        const inc = ObjectId.getInc();\n        const buffer$1 = buffer.Buffer.alloc(12);\n        // 4-byte timestamp\n        buffer$1.writeUInt32BE(time, 0);\n        // 5-byte process unique\n        buffer$1[4] = PROCESS_UNIQUE[0];\n        buffer$1[5] = PROCESS_UNIQUE[1];\n        buffer$1[6] = PROCESS_UNIQUE[2];\n        buffer$1[7] = PROCESS_UNIQUE[3];\n        buffer$1[8] = PROCESS_UNIQUE[4];\n        // 3-byte counter\n        buffer$1[11] = inc & 0xff;\n        buffer$1[10] = (inc >> 8) & 0xff;\n        buffer$1[9] = (inc >> 16) & 0xff;\n        return buffer$1;\n    }\n    /**\n     * Converts the id into a 24 character hex string for printing\n     *\n     * @param format - The Buffer toString format parameter.\n     * @internal\n     */\n    toString(format) {\n        // Is the id a buffer then use the buffer toString method to return the format\n        if (format)\n            return this.id.toString(format);\n        return this.toHexString();\n    }\n    /**\n     * Converts to its JSON the 24 character hex string representation.\n     * @internal\n     */\n    toJSON() {\n        return this.toHexString();\n    }\n    /**\n     * Compares the equality of this ObjectId with `otherID`.\n     *\n     * @param otherId - ObjectId instance to compare against.\n     */\n    equals(otherId) {\n        if (otherId === undefined || otherId === null) {\n            return false;\n        }\n        if (otherId instanceof ObjectId) {\n            return this.toString() === otherId.toString();\n        }\n        if (typeof otherId === 'string' &&\n            ObjectId.isValid(otherId) &&\n            otherId.length === 12 &&\n            this.id instanceof buffer.Buffer) {\n            return otherId === this.id.toString('binary');\n        }\n        if (typeof otherId === 'string' && ObjectId.isValid(otherId) && otherId.length === 24) {\n            return otherId.toLowerCase() === this.toHexString();\n        }\n        if (typeof otherId === 'string' && ObjectId.isValid(otherId) && otherId.length === 12) {\n            return buffer.Buffer.from(otherId).equals(this.id);\n        }\n        if (typeof otherId === 'object' &&\n            'toHexString' in otherId &&\n            typeof otherId.toHexString === 'function') {\n            return otherId.toHexString() === this.toHexString();\n        }\n        return false;\n    }\n    /** Returns the generation date (accurate up to the second) that this ID was generated. */\n    getTimestamp() {\n        const timestamp = new Date();\n        const time = this.id.readUInt32BE(0);\n        timestamp.setTime(Math.floor(time) * 1000);\n        return timestamp;\n    }\n    /** @internal */\n    static createPk() {\n        return new ObjectId();\n    }\n    /**\n     * Creates an ObjectId from a second based number, with the rest of the ObjectId zeroed out. Used for comparisons or sorting the ObjectId.\n     *\n     * @param time - an integer number representing a number of seconds.\n     */\n    static createFromTime(time) {\n        const buffer$1 = buffer.Buffer.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n        // Encode time into first 4 bytes\n        buffer$1.writeUInt32BE(time, 0);\n        // Return the new objectId\n        return new ObjectId(buffer$1);\n    }\n    /**\n     * Creates an ObjectId from a hex string representation of an ObjectId.\n     *\n     * @param hexString - create a ObjectId from a passed in 24 character hexstring.\n     */\n    static createFromHexString(hexString) {\n        // Throw an error if it's not a valid setup\n        if (typeof hexString === 'undefined' || (hexString != null && hexString.length !== 24)) {\n            throw new TypeError('Argument passed in must be a single String of 12 bytes or a string of 24 hex characters');\n        }\n        return new ObjectId(buffer.Buffer.from(hexString, 'hex'));\n    }\n    /**\n     * Checks if a value is a valid bson ObjectId\n     *\n     * @param id - ObjectId instance to validate.\n     */\n    static isValid(id) {\n        if (id == null)\n            return false;\n        if (typeof id === 'number') {\n            return true;\n        }\n        if (typeof id === 'string') {\n            return id.length === 12 || (id.length === 24 && checkForHexRegExp.test(id));\n        }\n        if (id instanceof ObjectId) {\n            return true;\n        }\n        if (id instanceof buffer.Buffer && id.length === 12) {\n            return true;\n        }\n        // Duck-Typing detection of ObjectId like objects\n        if (typeof id === 'object' && 'toHexString' in id && typeof id.toHexString === 'function') {\n            if (typeof id.id === 'string') {\n                return id.id.length === 12;\n            }\n            return id.toHexString().length === 24 && checkForHexRegExp.test(id.id.toString('hex'));\n        }\n        return false;\n    }\n    /** @internal */\n    toExtendedJSON() {\n        if (this.toHexString)\n            return { $oid: this.toHexString() };\n        return { $oid: this.toString('hex') };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc) {\n        return new ObjectId(doc.$oid);\n    }\n}\nexports.ObjectId = ObjectId;\n/** @internal */\nObjectId.index = ~~(Math.random() * 0xffffff);\n// Deprecated methods\nObject.defineProperty(ObjectId.prototype, 'generate', {\n    value: utils.deprecate((time) => ObjectId.generate(time), 'Please use the static `ObjectId.generate(time)` instead')\n});\nObject.defineProperty(ObjectId.prototype, 'getInc', {\n    value: utils.deprecate(() => ObjectId.getInc(), 'Please use the static `ObjectId.getInc()` instead')\n});\nObject.defineProperty(ObjectId.prototype, 'get_inc', {\n    value: utils.deprecate(() => ObjectId.getInc(), 'Please use the static `ObjectId.getInc()` instead')\n});\nObject.defineProperty(ObjectId, 'get_inc', {\n    value: utils.deprecate(() => ObjectId.getInc(), 'Please use the static `ObjectId.getInc()` instead')\n});\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\n/**\n * Converts to a string representation of this Id.\n *\n * @returns return the 24 character hex string representation.\n * @internal\n */\nObject.defineProperty(ObjectId.prototype, inspect, ObjectId.prototype.toString);\nObject.defineProperty(ObjectId.prototype, 'inspect', ObjectId.prototype.toString);\nObject.defineProperty(ObjectId.prototype, '_bsontype', { value: 'ObjectID' });\n\n});\n\nunwrapExports(objectid);\nvar objectid_1 = objectid.ObjectId;\n\nvar constants = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BSON_BINARY_SUBTYPE_USER_DEFINED = exports.BSON_BINARY_SUBTYPE_MD5 = exports.BSON_BINARY_SUBTYPE_UUID_NEW = exports.BSON_BINARY_SUBTYPE_UUID = exports.BSON_BINARY_SUBTYPE_BYTE_ARRAY = exports.BSON_BINARY_SUBTYPE_FUNCTION = exports.BSON_BINARY_SUBTYPE_DEFAULT = exports.BSON_DATA_MAX_KEY = exports.BSON_DATA_MIN_KEY = exports.BSON_DATA_DECIMAL128 = exports.BSON_DATA_LONG = exports.BSON_DATA_TIMESTAMP = exports.BSON_DATA_INT = exports.BSON_DATA_CODE_W_SCOPE = exports.BSON_DATA_SYMBOL = exports.BSON_DATA_CODE = exports.BSON_DATA_DBPOINTER = exports.BSON_DATA_REGEXP = exports.BSON_DATA_NULL = exports.BSON_DATA_DATE = exports.BSON_DATA_BOOLEAN = exports.BSON_DATA_OID = exports.BSON_DATA_UNDEFINED = exports.BSON_DATA_BINARY = exports.BSON_DATA_ARRAY = exports.BSON_DATA_OBJECT = exports.BSON_DATA_STRING = exports.BSON_DATA_NUMBER = exports.JS_INT_MIN = exports.JS_INT_MAX = exports.BSON_INT64_MIN = exports.BSON_INT64_MAX = exports.BSON_INT32_MIN = exports.BSON_INT32_MAX = void 0;\n/** @internal */\nexports.BSON_INT32_MAX = 0x7fffffff;\n/** @internal */\nexports.BSON_INT32_MIN = -0x80000000;\n/** @internal */\nexports.BSON_INT64_MAX = Math.pow(2, 63) - 1;\n/** @internal */\nexports.BSON_INT64_MIN = -Math.pow(2, 63);\n/**\n * Any integer up to 2^53 can be precisely represented by a double.\n * @internal\n */\nexports.JS_INT_MAX = Math.pow(2, 53);\n/**\n * Any integer down to -2^53 can be precisely represented by a double.\n * @internal\n */\nexports.JS_INT_MIN = -Math.pow(2, 53);\n/** Number BSON Type @internal */\nexports.BSON_DATA_NUMBER = 1;\n/** String BSON Type @internal */\nexports.BSON_DATA_STRING = 2;\n/** Object BSON Type @internal */\nexports.BSON_DATA_OBJECT = 3;\n/** Array BSON Type @internal */\nexports.BSON_DATA_ARRAY = 4;\n/** Binary BSON Type @internal */\nexports.BSON_DATA_BINARY = 5;\n/** Binary BSON Type @internal */\nexports.BSON_DATA_UNDEFINED = 6;\n/** ObjectId BSON Type @internal */\nexports.BSON_DATA_OID = 7;\n/** Boolean BSON Type @internal */\nexports.BSON_DATA_BOOLEAN = 8;\n/** Date BSON Type @internal */\nexports.BSON_DATA_DATE = 9;\n/** null BSON Type @internal */\nexports.BSON_DATA_NULL = 10;\n/** RegExp BSON Type @internal */\nexports.BSON_DATA_REGEXP = 11;\n/** Code BSON Type @internal */\nexports.BSON_DATA_DBPOINTER = 12;\n/** Code BSON Type @internal */\nexports.BSON_DATA_CODE = 13;\n/** Symbol BSON Type @internal */\nexports.BSON_DATA_SYMBOL = 14;\n/** Code with Scope BSON Type @internal */\nexports.BSON_DATA_CODE_W_SCOPE = 15;\n/** 32 bit Integer BSON Type @internal */\nexports.BSON_DATA_INT = 16;\n/** Timestamp BSON Type @internal */\nexports.BSON_DATA_TIMESTAMP = 17;\n/** Long BSON Type @internal */\nexports.BSON_DATA_LONG = 18;\n/** Decimal128 BSON Type @internal */\nexports.BSON_DATA_DECIMAL128 = 19;\n/** MinKey BSON Type @internal */\nexports.BSON_DATA_MIN_KEY = 0xff;\n/** MaxKey BSON Type @internal */\nexports.BSON_DATA_MAX_KEY = 0x7f;\n/** Binary Default Type @internal */\nexports.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/** Binary Function Type @internal */\nexports.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/** Binary Byte Array Type @internal */\nexports.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/** Binary Deprecated UUID Type @deprecated Please use BSON_BINARY_SUBTYPE_UUID_NEW @internal */\nexports.BSON_BINARY_SUBTYPE_UUID = 3;\n/** Binary UUID Type @internal */\nexports.BSON_BINARY_SUBTYPE_UUID_NEW = 4;\n/** Binary MD5 Type @internal */\nexports.BSON_BINARY_SUBTYPE_MD5 = 5;\n/** Binary User Defined Type @internal */\nexports.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n});\n\nunwrapExports(constants);\nvar constants_1 = constants.BSON_BINARY_SUBTYPE_USER_DEFINED;\nvar constants_2 = constants.BSON_BINARY_SUBTYPE_MD5;\nvar constants_3 = constants.BSON_BINARY_SUBTYPE_UUID_NEW;\nvar constants_4 = constants.BSON_BINARY_SUBTYPE_UUID;\nvar constants_5 = constants.BSON_BINARY_SUBTYPE_BYTE_ARRAY;\nvar constants_6 = constants.BSON_BINARY_SUBTYPE_FUNCTION;\nvar constants_7 = constants.BSON_BINARY_SUBTYPE_DEFAULT;\nvar constants_8 = constants.BSON_DATA_MAX_KEY;\nvar constants_9 = constants.BSON_DATA_MIN_KEY;\nvar constants_10 = constants.BSON_DATA_DECIMAL128;\nvar constants_11 = constants.BSON_DATA_LONG;\nvar constants_12 = constants.BSON_DATA_TIMESTAMP;\nvar constants_13 = constants.BSON_DATA_INT;\nvar constants_14 = constants.BSON_DATA_CODE_W_SCOPE;\nvar constants_15 = constants.BSON_DATA_SYMBOL;\nvar constants_16 = constants.BSON_DATA_CODE;\nvar constants_17 = constants.BSON_DATA_DBPOINTER;\nvar constants_18 = constants.BSON_DATA_REGEXP;\nvar constants_19 = constants.BSON_DATA_NULL;\nvar constants_20 = constants.BSON_DATA_DATE;\nvar constants_21 = constants.BSON_DATA_BOOLEAN;\nvar constants_22 = constants.BSON_DATA_OID;\nvar constants_23 = constants.BSON_DATA_UNDEFINED;\nvar constants_24 = constants.BSON_DATA_BINARY;\nvar constants_25 = constants.BSON_DATA_ARRAY;\nvar constants_26 = constants.BSON_DATA_OBJECT;\nvar constants_27 = constants.BSON_DATA_STRING;\nvar constants_28 = constants.BSON_DATA_NUMBER;\nvar constants_29 = constants.JS_INT_MIN;\nvar constants_30 = constants.JS_INT_MAX;\nvar constants_31 = constants.BSON_INT64_MIN;\nvar constants_32 = constants.BSON_INT64_MAX;\nvar constants_33 = constants.BSON_INT32_MIN;\nvar constants_34 = constants.BSON_INT32_MAX;\n\nvar calculate_size = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateObjectSize = void 0;\n\n\n\n\nfunction calculateObjectSize(object, serializeFunctions, ignoreUndefined) {\n    let totalLength = 4 + 1;\n    if (Array.isArray(object)) {\n        for (let i = 0; i < object.length; i++) {\n            totalLength += calculateElement(i.toString(), object[i], serializeFunctions, true, ignoreUndefined);\n        }\n    }\n    else {\n        // If we have toBSON defined, override the current object\n        if (object.toBSON) {\n            object = object.toBSON();\n        }\n        // Calculate size\n        for (const key in object) {\n            totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n        }\n    }\n    return totalLength;\n}\nexports.calculateObjectSize = calculateObjectSize;\n/** @internal */\nfunction calculateElement(name, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvalue, serializeFunctions = false, isArray = false, ignoreUndefined = false) {\n    // If we have toBSON defined, override the current object\n    if (value && value.toBSON) {\n        value = value.toBSON();\n    }\n    switch (typeof value) {\n        case 'string':\n            return 1 + buffer.Buffer.byteLength(name, 'utf8') + 1 + 4 + buffer.Buffer.byteLength(value, 'utf8') + 1;\n        case 'number':\n            if (Math.floor(value) === value &&\n                value >= constants.JS_INT_MIN &&\n                value <= constants.JS_INT_MAX) {\n                if (value >= constants.BSON_INT32_MIN && value <= constants.BSON_INT32_MAX) {\n                    // 32 bit\n                    return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (4 + 1);\n                }\n                else {\n                    return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n                }\n            }\n            else {\n                // 64 bit\n                return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n            }\n        case 'undefined':\n            if (isArray || !ignoreUndefined)\n                return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n            return 0;\n        case 'boolean':\n            return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 1);\n        case 'object':\n            if (value == null || value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n                return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n            }\n            else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n                return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (12 + 1);\n            }\n            else if (value instanceof Date || utils.isDate(value)) {\n                return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n            }\n            else if (ArrayBuffer.isView(value) || value instanceof ArrayBuffer) {\n                return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 4 + 1) + value.byteLength);\n            }\n            else if (value['_bsontype'] === 'Long' ||\n                value['_bsontype'] === 'Double' ||\n                value['_bsontype'] === 'Timestamp') {\n                return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n            }\n            else if (value['_bsontype'] === 'Decimal128') {\n                return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (16 + 1);\n            }\n            else if (value['_bsontype'] === 'Code') {\n                // Calculate size depending on the availability of a scope\n                if (value.scope != null && Object.keys(value.scope).length > 0) {\n                    return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                        1 +\n                        4 +\n                        4 +\n                        buffer.Buffer.byteLength(value.code.toString(), 'utf8') +\n                        1 +\n                        calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined));\n                }\n                else {\n                    return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                        1 +\n                        4 +\n                        buffer.Buffer.byteLength(value.code.toString(), 'utf8') +\n                        1);\n                }\n            }\n            else if (value['_bsontype'] === 'Binary') {\n                // Check what kind of subtype we have\n                if (value.sub_type === binary.Binary.SUBTYPE_BYTE_ARRAY) {\n                    return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                        (value.position + 1 + 4 + 1 + 4));\n                }\n                else {\n                    return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (value.position + 1 + 4 + 1));\n                }\n            }\n            else if (value['_bsontype'] === 'Symbol') {\n                return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                    buffer.Buffer.byteLength(value.value, 'utf8') +\n                    4 +\n                    1 +\n                    1);\n            }\n            else if (value['_bsontype'] === 'DBRef') {\n                // Set up correct object for serialization\n                const ordered_values = Object.assign({\n                    $ref: value.collection,\n                    $id: value.oid\n                }, value.fields);\n                // Add db reference if it exists\n                if (value.db != null) {\n                    ordered_values['$db'] = value.db;\n                }\n                return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                    1 +\n                    calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined));\n            }\n            else if (value instanceof RegExp ||\n                Object.prototype.toString.call(value) === '[object RegExp]') {\n                return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                    1 +\n                    buffer.Buffer.byteLength(value.source, 'utf8') +\n                    1 +\n                    (value.global ? 1 : 0) +\n                    (value.ignoreCase ? 1 : 0) +\n                    (value.multiline ? 1 : 0) +\n                    1);\n            }\n            else if (value['_bsontype'] === 'BSONRegExp') {\n                return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                    1 +\n                    buffer.Buffer.byteLength(value.pattern, 'utf8') +\n                    1 +\n                    buffer.Buffer.byteLength(value.options, 'utf8') +\n                    1);\n            }\n            else {\n                return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                    calculateObjectSize(value, serializeFunctions, ignoreUndefined) +\n                    1);\n            }\n        case 'function':\n            // WTF for 0.4.X where typeof /someregexp/ === 'function'\n            if (value instanceof RegExp ||\n                Object.prototype.toString.call(value) === '[object RegExp]' ||\n                String.call(value) === '[object RegExp]') {\n                return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                    1 +\n                    buffer.Buffer.byteLength(value.source, 'utf8') +\n                    1 +\n                    (value.global ? 1 : 0) +\n                    (value.ignoreCase ? 1 : 0) +\n                    (value.multiline ? 1 : 0) +\n                    1);\n            }\n            else {\n                if (serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n                    return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                        1 +\n                        4 +\n                        4 +\n                        buffer.Buffer.byteLength(utils.normalizedFunctionString(value), 'utf8') +\n                        1 +\n                        calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined));\n                }\n                else if (serializeFunctions) {\n                    return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                        1 +\n                        4 +\n                        buffer.Buffer.byteLength(utils.normalizedFunctionString(value), 'utf8') +\n                        1);\n                }\n            }\n    }\n    return 0;\n}\n\n});\n\nunwrapExports(calculate_size);\nvar calculate_size_1 = calculate_size.calculateObjectSize;\n\nvar regexp = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BSONRegExp = void 0;\nfunction alphabetize(str) {\n    return str.split('').sort().join('');\n}\n/**\n * A class representation of the BSON RegExp type.\n * @public\n */\nclass BSONRegExp {\n    /**\n     * @param pattern - The regular expression pattern to match\n     * @param options - The regular expression options\n     */\n    constructor(pattern, options) {\n        this.pattern = pattern;\n        this.options = options !== null && options !== void 0 ? options : '';\n        // Execute\n        alphabetize(this.options);\n        // Validate options\n        for (let i = 0; i < this.options.length; i++) {\n            if (!(this.options[i] === 'i' ||\n                this.options[i] === 'm' ||\n                this.options[i] === 'x' ||\n                this.options[i] === 'l' ||\n                this.options[i] === 's' ||\n                this.options[i] === 'u')) {\n                throw new Error(`The regular expression option [${this.options[i]}] is not supported`);\n            }\n        }\n    }\n    static parseOptions(options) {\n        return options ? options.split('').sort().join('') : '';\n    }\n    /** @internal */\n    toExtendedJSON(options) {\n        options = options || {};\n        if (options.legacy) {\n            return { $regex: this.pattern, $options: this.options };\n        }\n        return { $regularExpression: { pattern: this.pattern, options: this.options } };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc) {\n        if ('$regex' in doc) {\n            if (typeof doc.$regex !== 'string') {\n                // This is for $regex query operators that have extended json values.\n                if (doc.$regex._bsontype === 'BSONRegExp') {\n                    return doc;\n                }\n            }\n            else {\n                return new BSONRegExp(doc.$regex, BSONRegExp.parseOptions(doc.$options));\n            }\n        }\n        if ('$regularExpression' in doc) {\n            return new BSONRegExp(doc.$regularExpression.pattern, BSONRegExp.parseOptions(doc.$regularExpression.options));\n        }\n        throw new TypeError(`Unexpected BSONRegExp EJSON object form: ${JSON.stringify(doc)}`);\n    }\n}\nexports.BSONRegExp = BSONRegExp;\nObject.defineProperty(BSONRegExp.prototype, '_bsontype', { value: 'BSONRegExp' });\n\n});\n\nunwrapExports(regexp);\nvar regexp_1 = regexp.BSONRegExp;\n\nvar symbol = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BSONSymbol = void 0;\n/**\n * A class representation of the BSON Symbol type.\n * @public\n */\nclass BSONSymbol {\n    /**\n     * @param value - the string representing the symbol.\n     */\n    constructor(value) {\n        this.value = value;\n    }\n    /** Access the wrapped string value. */\n    valueOf() {\n        return this.value;\n    }\n    /** @internal */\n    toString() {\n        return this.value;\n    }\n    /** @internal */\n    inspect() {\n        return this.value;\n    }\n    /** @internal */\n    toJSON() {\n        return this.value;\n    }\n    /** @internal */\n    toExtendedJSON() {\n        return { $symbol: this.value };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc) {\n        return new BSONSymbol(doc.$symbol);\n    }\n}\nexports.BSONSymbol = BSONSymbol;\nObject.defineProperty(BSONSymbol.prototype, '_bsontype', { value: 'Symbol' });\n\n});\n\nunwrapExports(symbol);\nvar symbol_1 = symbol.BSONSymbol;\n\nvar timestamp$1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Timestamp = exports.LongWithoutOverridesClass = void 0;\n\n/** @public */\nexports.LongWithoutOverridesClass = long_1.Long;\n/** @public */\nclass Timestamp extends exports.LongWithoutOverridesClass {\n    constructor(low, high) {\n        if (long_1.Long.isLong(low)) {\n            super(low.low, low.high, true);\n        }\n        else {\n            super(low, high, true);\n        }\n        Object.defineProperty(this, '_bsontype', {\n            value: 'Timestamp',\n            writable: false,\n            configurable: false,\n            enumerable: false\n        });\n    }\n    toJSON() {\n        return {\n            $timestamp: this.toString()\n        };\n    }\n    /** Returns a Timestamp represented by the given (32-bit) integer value. */\n    static fromInt(value) {\n        return new Timestamp(long_1.Long.fromInt(value, true));\n    }\n    /** Returns a Timestamp representing the given number value, provided that it is a finite number. Otherwise, zero is returned. */\n    static fromNumber(value) {\n        return new Timestamp(long_1.Long.fromNumber(value, true));\n    }\n    /**\n     * Returns a Timestamp for the given high and low bits. Each is assumed to use 32 bits.\n     *\n     * @param lowBits - the low 32-bits.\n     * @param highBits - the high 32-bits.\n     */\n    static fromBits(lowBits, highBits) {\n        return new Timestamp(lowBits, highBits);\n    }\n    /**\n     * Returns a Timestamp from the given string, optionally using the given radix.\n     *\n     * @param str - the textual representation of the Timestamp.\n     * @param optRadix - the radix in which the text is written.\n     */\n    static fromString(str, optRadix) {\n        return new Timestamp(long_1.Long.fromString(str, true, optRadix));\n    }\n    /** @internal */\n    toExtendedJSON() {\n        return { $timestamp: { t: this.high >>> 0, i: this.low >>> 0 } };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc) {\n        return new Timestamp(doc.$timestamp.i, doc.$timestamp.t);\n    }\n}\nexports.Timestamp = Timestamp;\nTimestamp.MAX_VALUE = long_1.Long.MAX_UNSIGNED_VALUE;\n\n});\n\nunwrapExports(timestamp$1);\nvar timestamp_1 = timestamp$1.Timestamp;\nvar timestamp_2 = timestamp$1.LongWithoutOverridesClass;\n\nvar validate_utf8 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateUtf8 = void 0;\nconst FIRST_BIT = 0x80;\nconst FIRST_TWO_BITS = 0xc0;\nconst FIRST_THREE_BITS = 0xe0;\nconst FIRST_FOUR_BITS = 0xf0;\nconst FIRST_FIVE_BITS = 0xf8;\nconst TWO_BIT_CHAR = 0xc0;\nconst THREE_BIT_CHAR = 0xe0;\nconst FOUR_BIT_CHAR = 0xf0;\nconst CONTINUING_CHAR = 0x80;\n/**\n * Determines if the passed in bytes are valid utf8\n * @param bytes - An array of 8-bit bytes. Must be indexable and have length property\n * @param start - The index to start validating\n * @param end - The index to end validating\n */\nfunction validateUtf8(bytes, start, end) {\n    let continuation = 0;\n    for (let i = start; i < end; i += 1) {\n        const byte = bytes[i];\n        if (continuation) {\n            if ((byte & FIRST_TWO_BITS) !== CONTINUING_CHAR) {\n                return false;\n            }\n            continuation -= 1;\n        }\n        else if (byte & FIRST_BIT) {\n            if ((byte & FIRST_THREE_BITS) === TWO_BIT_CHAR) {\n                continuation = 1;\n            }\n            else if ((byte & FIRST_FOUR_BITS) === THREE_BIT_CHAR) {\n                continuation = 2;\n            }\n            else if ((byte & FIRST_FIVE_BITS) === FOUR_BIT_CHAR) {\n                continuation = 3;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    return !continuation;\n}\nexports.validateUtf8 = validateUtf8;\n\n});\n\nunwrapExports(validate_utf8);\nvar validate_utf8_1 = validate_utf8.validateUtf8;\n\nvar deserializer = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserialize = void 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Internal long versions\nconst JS_INT_MAX_LONG = long_1.Long.fromNumber(constants.JS_INT_MAX);\nconst JS_INT_MIN_LONG = long_1.Long.fromNumber(constants.JS_INT_MIN);\nconst functionCache = {};\nfunction deserialize(buffer, options, isArray) {\n    options = options == null ? {} : options;\n    const index = options && options.index ? options.index : 0;\n    // Read the document size\n    const size = buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n    if (size < 5) {\n        throw new Error(`bson size must be >= 5, is ${size}`);\n    }\n    if (options.allowObjectSmallerThanBufferSize && buffer.length < size) {\n        throw new Error(`buffer length ${buffer.length} must be >= bson size ${size}`);\n    }\n    if (!options.allowObjectSmallerThanBufferSize && buffer.length !== size) {\n        throw new Error(`buffer length ${buffer.length} must === bson size ${size}`);\n    }\n    if (size + index > buffer.byteLength) {\n        throw new Error(`(bson size ${size} + options.index ${index} must be <= buffer length ${buffer.byteLength})`);\n    }\n    // Illegal end value\n    if (buffer[index + size - 1] !== 0) {\n        throw new Error(\"One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00\");\n    }\n    // Start deserializtion\n    return deserializeObject(buffer, index, options, isArray);\n}\nexports.deserialize = deserialize;\nfunction deserializeObject(buffer$1, index, options, isArray = false) {\n    const evalFunctions = options['evalFunctions'] == null ? false : options['evalFunctions'];\n    const cacheFunctions = options['cacheFunctions'] == null ? false : options['cacheFunctions'];\n    const fieldsAsRaw = options['fieldsAsRaw'] == null ? null : options['fieldsAsRaw'];\n    // Return raw bson buffer instead of parsing it\n    const raw = options['raw'] == null ? false : options['raw'];\n    // Return BSONRegExp objects instead of native regular expressions\n    const bsonRegExp = typeof options['bsonRegExp'] === 'boolean' ? options['bsonRegExp'] : false;\n    // Controls the promotion of values vs wrapper classes\n    const promoteBuffers = options['promoteBuffers'] == null ? false : options['promoteBuffers'];\n    const promoteLongs = options['promoteLongs'] == null ? true : options['promoteLongs'];\n    const promoteValues = options['promoteValues'] == null ? true : options['promoteValues'];\n    // Set the start index\n    const startIndex = index;\n    // Validate that we have at least 4 bytes of buffer\n    if (buffer$1.length < 5)\n        throw new Error('corrupt bson message < 5 bytes long');\n    // Read the document size\n    const size = buffer$1[index++] | (buffer$1[index++] << 8) | (buffer$1[index++] << 16) | (buffer$1[index++] << 24);\n    // Ensure buffer is valid size\n    if (size < 5 || size > buffer$1.length)\n        throw new Error('corrupt bson message');\n    // Create holding object\n    const object = isArray ? [] : {};\n    // Used for arrays to skip having to perform utf8 decoding\n    let arrayIndex = 0;\n    const done = false;\n    // While we have more left data left keep parsing\n    while (!done) {\n        // Read the type\n        const elementType = buffer$1[index++];\n        // If we get a zero it's the last byte, exit\n        if (elementType === 0)\n            break;\n        // Get the start search index\n        let i = index;\n        // Locate the end of the c string\n        while (buffer$1[i] !== 0x00 && i < buffer$1.length) {\n            i++;\n        }\n        // If are at the end of the buffer there is a problem with the document\n        if (i >= buffer$1.byteLength)\n            throw new Error('Bad BSON Document: illegal CString');\n        const name = isArray ? arrayIndex++ : buffer$1.toString('utf8', index, i);\n        index = i + 1;\n        if (elementType === constants.BSON_DATA_STRING) {\n            const stringSize = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer$1.length - index ||\n                buffer$1[index + stringSize - 1] !== 0)\n                throw new Error('bad string length in bson');\n            if (!validate_utf8.validateUtf8(buffer$1, index, index + stringSize - 1)) {\n                throw new Error('Invalid UTF-8 string in BSON document');\n            }\n            const s = buffer$1.toString('utf8', index, index + stringSize - 1);\n            object[name] = s;\n            index = index + stringSize;\n        }\n        else if (elementType === constants.BSON_DATA_OID) {\n            const oid = buffer.Buffer.alloc(12);\n            buffer$1.copy(oid, 0, index, index + 12);\n            object[name] = new objectid.ObjectId(oid);\n            index = index + 12;\n        }\n        else if (elementType === constants.BSON_DATA_INT && promoteValues === false) {\n            object[name] = new int_32.Int32(buffer$1[index++] | (buffer$1[index++] << 8) | (buffer$1[index++] << 16) | (buffer$1[index++] << 24));\n        }\n        else if (elementType === constants.BSON_DATA_INT) {\n            object[name] =\n                buffer$1[index++] |\n                    (buffer$1[index++] << 8) |\n                    (buffer$1[index++] << 16) |\n                    (buffer$1[index++] << 24);\n        }\n        else if (elementType === constants.BSON_DATA_NUMBER && promoteValues === false) {\n            object[name] = new double_1.Double(buffer$1.readDoubleLE(index));\n            index = index + 8;\n        }\n        else if (elementType === constants.BSON_DATA_NUMBER) {\n            object[name] = buffer$1.readDoubleLE(index);\n            index = index + 8;\n        }\n        else if (elementType === constants.BSON_DATA_DATE) {\n            const lowBits = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            const highBits = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            object[name] = new Date(new long_1.Long(lowBits, highBits).toNumber());\n        }\n        else if (elementType === constants.BSON_DATA_BOOLEAN) {\n            if (buffer$1[index] !== 0 && buffer$1[index] !== 1)\n                throw new Error('illegal boolean type value');\n            object[name] = buffer$1[index++] === 1;\n        }\n        else if (elementType === constants.BSON_DATA_OBJECT) {\n            const _index = index;\n            const objectSize = buffer$1[index] |\n                (buffer$1[index + 1] << 8) |\n                (buffer$1[index + 2] << 16) |\n                (buffer$1[index + 3] << 24);\n            if (objectSize <= 0 || objectSize > buffer$1.length - index)\n                throw new Error('bad embedded document length in bson');\n            // We have a raw value\n            if (raw) {\n                object[name] = buffer$1.slice(index, index + objectSize);\n            }\n            else {\n                object[name] = deserializeObject(buffer$1, _index, options, false);\n            }\n            index = index + objectSize;\n        }\n        else if (elementType === constants.BSON_DATA_ARRAY) {\n            const _index = index;\n            const objectSize = buffer$1[index] |\n                (buffer$1[index + 1] << 8) |\n                (buffer$1[index + 2] << 16) |\n                (buffer$1[index + 3] << 24);\n            let arrayOptions = options;\n            // Stop index\n            const stopIndex = index + objectSize;\n            // All elements of array to be returned as raw bson\n            if (fieldsAsRaw && fieldsAsRaw[name]) {\n                arrayOptions = {};\n                for (const n in options) {\n                    arrayOptions[n] = options[n];\n                }\n                arrayOptions['raw'] = true;\n            }\n            object[name] = deserializeObject(buffer$1, _index, arrayOptions, true);\n            index = index + objectSize;\n            if (buffer$1[index - 1] !== 0)\n                throw new Error('invalid array terminator byte');\n            if (index !== stopIndex)\n                throw new Error('corrupted array bson');\n        }\n        else if (elementType === constants.BSON_DATA_UNDEFINED) {\n            object[name] = undefined;\n        }\n        else if (elementType === constants.BSON_DATA_NULL) {\n            object[name] = null;\n        }\n        else if (elementType === constants.BSON_DATA_LONG) {\n            // Unpack the low and high bits\n            const lowBits = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            const highBits = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            const long = new long_1.Long(lowBits, highBits);\n            // Promote the long if possible\n            if (promoteLongs && promoteValues === true) {\n                object[name] =\n                    long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG)\n                        ? long.toNumber()\n                        : long;\n            }\n            else {\n                object[name] = long;\n            }\n        }\n        else if (elementType === constants.BSON_DATA_DECIMAL128) {\n            // Buffer to contain the decimal bytes\n            const bytes = buffer.Buffer.alloc(16);\n            // Copy the next 16 bytes into the bytes buffer\n            buffer$1.copy(bytes, 0, index, index + 16);\n            // Update index\n            index = index + 16;\n            // Assign the new Decimal128 value\n            const decimal128$1 = new decimal128.Decimal128(bytes);\n            // If we have an alternative mapper use that\n            if ('toObject' in decimal128$1 && typeof decimal128$1.toObject === 'function') {\n                object[name] = decimal128$1.toObject();\n            }\n            else {\n                object[name] = decimal128$1;\n            }\n        }\n        else if (elementType === constants.BSON_DATA_BINARY) {\n            let binarySize = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            const totalBinarySize = binarySize;\n            const subType = buffer$1[index++];\n            // Did we have a negative binary size, throw\n            if (binarySize < 0)\n                throw new Error('Negative binary type element size found');\n            // Is the length longer than the document\n            if (binarySize > buffer$1.byteLength)\n                throw new Error('Binary type size larger than document size');\n            // Decode as raw Buffer object if options specifies it\n            if (buffer$1['slice'] != null) {\n                // If we have subtype 2 skip the 4 bytes for the size\n                if (subType === binary.Binary.SUBTYPE_BYTE_ARRAY) {\n                    binarySize =\n                        buffer$1[index++] |\n                            (buffer$1[index++] << 8) |\n                            (buffer$1[index++] << 16) |\n                            (buffer$1[index++] << 24);\n                    if (binarySize < 0)\n                        throw new Error('Negative binary type element size found for subtype 0x02');\n                    if (binarySize > totalBinarySize - 4)\n                        throw new Error('Binary type with subtype 0x02 contains too long binary size');\n                    if (binarySize < totalBinarySize - 4)\n                        throw new Error('Binary type with subtype 0x02 contains too short binary size');\n                }\n                if (promoteBuffers && promoteValues) {\n                    object[name] = buffer$1.slice(index, index + binarySize);\n                }\n                else {\n                    object[name] = new binary.Binary(buffer$1.slice(index, index + binarySize), subType);\n                }\n            }\n            else {\n                const _buffer = buffer.Buffer.alloc(binarySize);\n                // If we have subtype 2 skip the 4 bytes for the size\n                if (subType === binary.Binary.SUBTYPE_BYTE_ARRAY) {\n                    binarySize =\n                        buffer$1[index++] |\n                            (buffer$1[index++] << 8) |\n                            (buffer$1[index++] << 16) |\n                            (buffer$1[index++] << 24);\n                    if (binarySize < 0)\n                        throw new Error('Negative binary type element size found for subtype 0x02');\n                    if (binarySize > totalBinarySize - 4)\n                        throw new Error('Binary type with subtype 0x02 contains too long binary size');\n                    if (binarySize < totalBinarySize - 4)\n                        throw new Error('Binary type with subtype 0x02 contains too short binary size');\n                }\n                // Copy the data\n                for (i = 0; i < binarySize; i++) {\n                    _buffer[i] = buffer$1[index + i];\n                }\n                if (promoteBuffers && promoteValues) {\n                    object[name] = _buffer;\n                }\n                else {\n                    object[name] = new binary.Binary(_buffer, subType);\n                }\n            }\n            // Update the index\n            index = index + binarySize;\n        }\n        else if (elementType === constants.BSON_DATA_REGEXP && bsonRegExp === false) {\n            // Get the start search index\n            i = index;\n            // Locate the end of the c string\n            while (buffer$1[i] !== 0x00 && i < buffer$1.length) {\n                i++;\n            }\n            // If are at the end of the buffer there is a problem with the document\n            if (i >= buffer$1.length)\n                throw new Error('Bad BSON Document: illegal CString');\n            // Return the C string\n            const source = buffer$1.toString('utf8', index, i);\n            // Create the regexp\n            index = i + 1;\n            // Get the start search index\n            i = index;\n            // Locate the end of the c string\n            while (buffer$1[i] !== 0x00 && i < buffer$1.length) {\n                i++;\n            }\n            // If are at the end of the buffer there is a problem with the document\n            if (i >= buffer$1.length)\n                throw new Error('Bad BSON Document: illegal CString');\n            // Return the C string\n            const regExpOptions = buffer$1.toString('utf8', index, i);\n            index = i + 1;\n            // For each option add the corresponding one for javascript\n            const optionsArray = new Array(regExpOptions.length);\n            // Parse options\n            for (i = 0; i < regExpOptions.length; i++) {\n                switch (regExpOptions[i]) {\n                    case 'm':\n                        optionsArray[i] = 'm';\n                        break;\n                    case 's':\n                        optionsArray[i] = 'g';\n                        break;\n                    case 'i':\n                        optionsArray[i] = 'i';\n                        break;\n                }\n            }\n            object[name] = new RegExp(source, optionsArray.join(''));\n        }\n        else if (elementType === constants.BSON_DATA_REGEXP && bsonRegExp === true) {\n            // Get the start search index\n            i = index;\n            // Locate the end of the c string\n            while (buffer$1[i] !== 0x00 && i < buffer$1.length) {\n                i++;\n            }\n            // If are at the end of the buffer there is a problem with the document\n            if (i >= buffer$1.length)\n                throw new Error('Bad BSON Document: illegal CString');\n            // Return the C string\n            const source = buffer$1.toString('utf8', index, i);\n            index = i + 1;\n            // Get the start search index\n            i = index;\n            // Locate the end of the c string\n            while (buffer$1[i] !== 0x00 && i < buffer$1.length) {\n                i++;\n            }\n            // If are at the end of the buffer there is a problem with the document\n            if (i >= buffer$1.length)\n                throw new Error('Bad BSON Document: illegal CString');\n            // Return the C string\n            const regExpOptions = buffer$1.toString('utf8', index, i);\n            index = i + 1;\n            // Set the object\n            object[name] = new regexp.BSONRegExp(source, regExpOptions);\n        }\n        else if (elementType === constants.BSON_DATA_SYMBOL) {\n            const stringSize = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer$1.length - index ||\n                buffer$1[index + stringSize - 1] !== 0)\n                throw new Error('bad string length in bson');\n            const symbol$1 = buffer$1.toString('utf8', index, index + stringSize - 1);\n            object[name] = promoteValues ? symbol$1 : new symbol.BSONSymbol(symbol$1);\n            index = index + stringSize;\n        }\n        else if (elementType === constants.BSON_DATA_TIMESTAMP) {\n            const lowBits = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            const highBits = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            object[name] = new timestamp$1.Timestamp(lowBits, highBits);\n        }\n        else if (elementType === constants.BSON_DATA_MIN_KEY) {\n            object[name] = new min_key.MinKey();\n        }\n        else if (elementType === constants.BSON_DATA_MAX_KEY) {\n            object[name] = new max_key.MaxKey();\n        }\n        else if (elementType === constants.BSON_DATA_CODE) {\n            const stringSize = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer$1.length - index ||\n                buffer$1[index + stringSize - 1] !== 0)\n                throw new Error('bad string length in bson');\n            const functionString = buffer$1.toString('utf8', index, index + stringSize - 1);\n            // If we are evaluating the functions\n            if (evalFunctions) {\n                // If we have cache enabled let's look for the md5 of the function in the cache\n                if (cacheFunctions) {\n                    // Got to do this to avoid V8 deoptimizing the call due to finding eval\n                    object[name] = isolateEval(functionString, functionCache, object);\n                }\n                else {\n                    object[name] = isolateEval(functionString);\n                }\n            }\n            else {\n                object[name] = new code$1.Code(functionString);\n            }\n            // Update parse index position\n            index = index + stringSize;\n        }\n        else if (elementType === constants.BSON_DATA_CODE_W_SCOPE) {\n            const totalSize = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            // Element cannot be shorter than totalSize + stringSize + documentSize + terminator\n            if (totalSize < 4 + 4 + 4 + 1) {\n                throw new Error('code_w_scope total size shorter minimum expected length');\n            }\n            // Get the code string size\n            const stringSize = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            // Check if we have a valid string\n            if (stringSize <= 0 ||\n                stringSize > buffer$1.length - index ||\n                buffer$1[index + stringSize - 1] !== 0)\n                throw new Error('bad string length in bson');\n            // Javascript function\n            const functionString = buffer$1.toString('utf8', index, index + stringSize - 1);\n            // Update parse index position\n            index = index + stringSize;\n            // Parse the element\n            const _index = index;\n            // Decode the size of the object document\n            const objectSize = buffer$1[index] |\n                (buffer$1[index + 1] << 8) |\n                (buffer$1[index + 2] << 16) |\n                (buffer$1[index + 3] << 24);\n            // Decode the scope object\n            const scopeObject = deserializeObject(buffer$1, _index, options, false);\n            // Adjust the index\n            index = index + objectSize;\n            // Check if field length is too short\n            if (totalSize < 4 + 4 + objectSize + stringSize) {\n                throw new Error('code_w_scope total size is too short, truncating scope');\n            }\n            // Check if totalSize field is too long\n            if (totalSize > 4 + 4 + objectSize + stringSize) {\n                throw new Error('code_w_scope total size is too long, clips outer document');\n            }\n            // If we are evaluating the functions\n            if (evalFunctions) {\n                // If we have cache enabled let's look for the md5 of the function in the cache\n                if (cacheFunctions) {\n                    // Got to do this to avoid V8 deoptimizing the call due to finding eval\n                    object[name] = isolateEval(functionString, functionCache, object);\n                }\n                else {\n                    object[name] = isolateEval(functionString);\n                }\n                object[name].scope = scopeObject;\n            }\n            else {\n                object[name] = new code$1.Code(functionString, scopeObject);\n            }\n        }\n        else if (elementType === constants.BSON_DATA_DBPOINTER) {\n            // Get the code string size\n            const stringSize = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            // Check if we have a valid string\n            if (stringSize <= 0 ||\n                stringSize > buffer$1.length - index ||\n                buffer$1[index + stringSize - 1] !== 0)\n                throw new Error('bad string length in bson');\n            // Namespace\n            if (!validate_utf8.validateUtf8(buffer$1, index, index + stringSize - 1)) {\n                throw new Error('Invalid UTF-8 string in BSON document');\n            }\n            const namespace = buffer$1.toString('utf8', index, index + stringSize - 1);\n            // Update parse index position\n            index = index + stringSize;\n            // Read the oid\n            const oidBuffer = buffer.Buffer.alloc(12);\n            buffer$1.copy(oidBuffer, 0, index, index + 12);\n            const oid = new objectid.ObjectId(oidBuffer);\n            // Update the index\n            index = index + 12;\n            // Upgrade to DBRef type\n            object[name] = new db_ref.DBRef(namespace, oid);\n        }\n        else {\n            throw new Error('Detected unknown BSON type ' + elementType.toString(16) + ' for fieldname \"' + name + '\"');\n        }\n    }\n    // Check if the deserialization was against a valid array/object\n    if (size !== index - startIndex) {\n        if (isArray)\n            throw new Error('corrupt array bson');\n        throw new Error('corrupt object bson');\n    }\n    // check if object's $ keys are those of a DBRef\n    const dollarKeys = Object.keys(object).filter(k => k.startsWith('$'));\n    let valid = true;\n    dollarKeys.forEach(k => {\n        if (['$ref', '$id', '$db'].indexOf(k) === -1)\n            valid = false;\n    });\n    // if a $key not in \"$ref\", \"$id\", \"$db\", don't make a DBRef\n    if (!valid)\n        return object;\n    if (db_ref.isDBRefLike(object)) {\n        const copy = Object.assign({}, object);\n        delete copy.$ref;\n        delete copy.$id;\n        delete copy.$db;\n        return new db_ref.DBRef(object.$ref, object.$id, object.$db, copy);\n    }\n    return object;\n}\n/**\n * Ensure eval is isolated, store the result in functionCache.\n *\n * @internal\n */\nfunction isolateEval(functionString, functionCache, object) {\n    if (!functionCache)\n        return new Function(functionString);\n    // Check for cache hit, eval if missing and return cached function\n    if (functionCache[functionString] == null) {\n        functionCache[functionString] = new Function(functionString);\n    }\n    // Set the object\n    return functionCache[functionString].bind(object);\n}\n\n});\n\nunwrapExports(deserializer);\nvar deserializer_1 = deserializer.deserialize;\n\nvar extended_json = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EJSON = exports.isBSONType = void 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction isBSONType(value) {\n    return (utils.isObjectLike(value) && Reflect.has(value, '_bsontype') && typeof value._bsontype === 'string');\n}\nexports.isBSONType = isBSONType;\n// INT32 boundaries\nconst BSON_INT32_MAX = 0x7fffffff;\nconst BSON_INT32_MIN = -0x80000000;\n// INT64 boundaries\nconst BSON_INT64_MAX = 0x7fffffffffffffff;\nconst BSON_INT64_MIN = -0x8000000000000000;\n// all the types where we don't need to do any special processing and can just pass the EJSON\n//straight to type.fromExtendedJSON\nconst keysToCodecs = {\n    $oid: objectid.ObjectId,\n    $binary: binary.Binary,\n    $uuid: binary.Binary,\n    $symbol: symbol.BSONSymbol,\n    $numberInt: int_32.Int32,\n    $numberDecimal: decimal128.Decimal128,\n    $numberDouble: double_1.Double,\n    $numberLong: long_1.Long,\n    $minKey: min_key.MinKey,\n    $maxKey: max_key.MaxKey,\n    $regex: regexp.BSONRegExp,\n    $regularExpression: regexp.BSONRegExp,\n    $timestamp: timestamp$1.Timestamp\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction deserializeValue(value, options = {}) {\n    if (typeof value === 'number') {\n        if (options.relaxed || options.legacy) {\n            return value;\n        }\n        // if it's an integer, should interpret as smallest BSON integer\n        // that can represent it exactly. (if out of range, interpret as double.)\n        if (Math.floor(value) === value) {\n            if (value >= BSON_INT32_MIN && value <= BSON_INT32_MAX)\n                return new int_32.Int32(value);\n            if (value >= BSON_INT64_MIN && value <= BSON_INT64_MAX)\n                return long_1.Long.fromNumber(value);\n        }\n        // If the number is a non-integer or out of integer range, should interpret as BSON Double.\n        return new double_1.Double(value);\n    }\n    // from here on out we're looking for bson types, so bail if its not an object\n    if (value == null || typeof value !== 'object')\n        return value;\n    // upgrade deprecated undefined to null\n    if (value.$undefined)\n        return null;\n    const keys = Object.keys(value).filter(k => k.startsWith('$') && value[k] != null);\n    for (let i = 0; i < keys.length; i++) {\n        const c = keysToCodecs[keys[i]];\n        if (c)\n            return c.fromExtendedJSON(value, options);\n    }\n    if (value.$date != null) {\n        const d = value.$date;\n        const date = new Date();\n        if (options.legacy) {\n            if (typeof d === 'number')\n                date.setTime(d);\n            else if (typeof d === 'string')\n                date.setTime(Date.parse(d));\n        }\n        else {\n            if (typeof d === 'string')\n                date.setTime(Date.parse(d));\n            else if (long_1.Long.isLong(d))\n                date.setTime(d.toNumber());\n            else if (typeof d === 'number' && options.relaxed)\n                date.setTime(d);\n        }\n        return date;\n    }\n    if (value.$code != null) {\n        const copy = Object.assign({}, value);\n        if (value.$scope) {\n            copy.$scope = deserializeValue(value.$scope);\n        }\n        return code$1.Code.fromExtendedJSON(value);\n    }\n    if (value.$ref != null || value.$dbPointer != null) {\n        const v = value.$ref ? value : value.$dbPointer;\n        // we run into this in a \"degenerate EJSON\" case (with $id and $ref order flipped)\n        // because of the order JSON.parse goes through the document\n        if (v instanceof db_ref.DBRef)\n            return v;\n        const dollarKeys = Object.keys(v).filter(k => k.startsWith('$'));\n        let valid = true;\n        dollarKeys.forEach(k => {\n            if (['$ref', '$id', '$db'].indexOf(k) === -1)\n                valid = false;\n        });\n        // only make DBRef if $ keys are all valid\n        if (valid)\n            return db_ref.DBRef.fromExtendedJSON(v);\n    }\n    return value;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeArray(array, options) {\n    return array.map((v) => serializeValue(v, options));\n}\nfunction getISOString(date) {\n    const isoStr = date.toISOString();\n    // we should only show milliseconds in timestamp if they're non-zero\n    return date.getUTCMilliseconds() !== 0 ? isoStr : isoStr.slice(0, -5) + 'Z';\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeValue(value, options) {\n    if (Array.isArray(value))\n        return serializeArray(value, options);\n    if (value === undefined)\n        return null;\n    if (value instanceof Date) {\n        const dateNum = value.getTime(), \n        // is it in year range 1970-9999?\n        inRange = dateNum > -1 && dateNum < 253402318800000;\n        if (options.legacy) {\n            return options.relaxed && inRange\n                ? { $date: value.getTime() }\n                : { $date: getISOString(value) };\n        }\n        return options.relaxed && inRange\n            ? { $date: getISOString(value) }\n            : { $date: { $numberLong: value.getTime().toString() } };\n    }\n    if (typeof value === 'number' && !options.relaxed) {\n        // it's an integer\n        if (Math.floor(value) === value) {\n            const int32Range = value >= BSON_INT32_MIN && value <= BSON_INT32_MAX, int64Range = value >= BSON_INT64_MIN && value <= BSON_INT64_MAX;\n            // interpret as being of the smallest BSON integer type that can represent the number exactly\n            if (int32Range)\n                return { $numberInt: value.toString() };\n            if (int64Range)\n                return { $numberLong: value.toString() };\n        }\n        return { $numberDouble: value.toString() };\n    }\n    if (value instanceof RegExp) {\n        let flags = value.flags;\n        if (flags === undefined) {\n            const match = value.toString().match(/[gimuy]*$/);\n            if (match) {\n                flags = match[0];\n            }\n        }\n        const rx = new regexp.BSONRegExp(value.source, flags);\n        return rx.toExtendedJSON(options);\n    }\n    if (value != null && typeof value === 'object')\n        return serializeDocument(value, options);\n    return value;\n}\nconst BSON_TYPE_MAPPINGS = {\n    Binary: (o) => new binary.Binary(o.value(), o.sub_type),\n    Code: (o) => new code$1.Code(o.code, o.scope),\n    DBRef: (o) => new db_ref.DBRef(o.collection || o.namespace, o.oid, o.db, o.fields),\n    Decimal128: (o) => new decimal128.Decimal128(o.bytes),\n    Double: (o) => new double_1.Double(o.value),\n    Int32: (o) => new int_32.Int32(o.value),\n    Long: (o) => long_1.Long.fromBits(\n    // underscore variants for 1.x backwards compatibility\n    o.low != null ? o.low : o.low_, o.low != null ? o.high : o.high_, o.low != null ? o.unsigned : o.unsigned_),\n    MaxKey: () => new max_key.MaxKey(),\n    MinKey: () => new min_key.MinKey(),\n    ObjectID: (o) => new objectid.ObjectId(o),\n    ObjectId: (o) => new objectid.ObjectId(o),\n    BSONRegExp: (o) => new regexp.BSONRegExp(o.pattern, o.options),\n    Symbol: (o) => new symbol.BSONSymbol(o.value),\n    Timestamp: (o) => timestamp$1.Timestamp.fromBits(o.low, o.high)\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeDocument(doc, options) {\n    if (doc == null || typeof doc !== 'object')\n        throw new Error('not an object instance');\n    const bsontype = doc._bsontype;\n    if (typeof bsontype === 'undefined') {\n        // It's a regular object. Recursively serialize its property values.\n        const _doc = {};\n        for (const name in doc) {\n            _doc[name] = serializeValue(doc[name], options);\n        }\n        return _doc;\n    }\n    else if (isBSONType(doc)) {\n        // the \"document\" is really just a BSON type object\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let outDoc = doc;\n        if (typeof outDoc.toExtendedJSON !== 'function') {\n            // There's no EJSON serialization function on the object. It's probably an\n            // object created by a previous version of this library (or another library)\n            // that's duck-typing objects to look like they were generated by this library).\n            // Copy the object into this library's version of that type.\n            const mapper = BSON_TYPE_MAPPINGS[doc._bsontype];\n            if (!mapper) {\n                throw new TypeError('Unrecognized or invalid _bsontype: ' + doc._bsontype);\n            }\n            outDoc = mapper(outDoc);\n        }\n        // Two BSON types may have nested objects that may need to be serialized too\n        if (bsontype === 'Code' && outDoc.scope) {\n            outDoc = new code$1.Code(outDoc.code, serializeValue(outDoc.scope, options));\n        }\n        else if (bsontype === 'DBRef' && outDoc.oid) {\n            outDoc = new db_ref.DBRef(outDoc.collection, serializeValue(outDoc.oid, options), outDoc.db, outDoc.fields);\n        }\n        return outDoc.toExtendedJSON(options);\n    }\n    else {\n        throw new Error('_bsontype must be a string, but was: ' + typeof bsontype);\n    }\n}\n/**\n * EJSON parse / stringify API\n * @public\n */\n// the namespace here is used to emulate `export * as EJSON from '...'`\n// which as of now (sept 2020) api-extractor does not support\n// eslint-disable-next-line @typescript-eslint/no-namespace\nvar EJSON;\n(function (EJSON) {\n    /**\n     * Parse an Extended JSON string, constructing the JavaScript value or object described by that\n     * string.\n     *\n     * @example\n     * ```js\n     * const { EJSON } = require('bson');\n     * const text = '{ \"int32\": { \"$numberInt\": \"10\" } }';\n     *\n     * // prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } }\n     * console.log(EJSON.parse(text, { relaxed: false }));\n     *\n     * // prints { int32: 10 }\n     * console.log(EJSON.parse(text));\n     * ```\n     */\n    function parse(text, options) {\n        const finalOptions = Object.assign({}, { relaxed: true, legacy: false }, options);\n        // relaxed implies not strict\n        if (typeof finalOptions.relaxed === 'boolean')\n            finalOptions.strict = !finalOptions.relaxed;\n        if (typeof finalOptions.strict === 'boolean')\n            finalOptions.relaxed = !finalOptions.strict;\n        return JSON.parse(text, (_key, value) => deserializeValue(value, finalOptions));\n    }\n    EJSON.parse = parse;\n    function stringify(value, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    replacer, space, options) {\n        if (space != null && typeof space === 'object') {\n            options = space;\n            space = 0;\n        }\n        if (replacer != null && typeof replacer === 'object' && !Array.isArray(replacer)) {\n            options = replacer;\n            replacer = undefined;\n            space = 0;\n        }\n        options = Object.assign({}, { relaxed: true, legacy: false }, options);\n        const doc = serializeValue(value, options);\n        return JSON.stringify(doc, replacer, space);\n    }\n    EJSON.stringify = stringify;\n    /**\n     * Serializes an object to an Extended JSON string, and reparse it as a JavaScript object.\n     *\n     * @param value - The object to serialize\n     * @param options - Optional settings passed to the `stringify` function\n     */\n    function serialize(value, options) {\n        options = options || {};\n        return JSON.parse(stringify(value, options));\n    }\n    EJSON.serialize = serialize;\n    /**\n     * Deserializes an Extended JSON object into a plain JavaScript object with native/BSON types\n     *\n     * @param ejson - The Extended JSON object to deserialize\n     * @param options - Optional settings passed to the parse method\n     */\n    function deserialize(ejson, options) {\n        options = options || {};\n        return parse(JSON.stringify(ejson), options);\n    }\n    EJSON.deserialize = deserialize;\n})(EJSON = exports.EJSON || (exports.EJSON = {}));\n\n});\n\nunwrapExports(extended_json);\nvar extended_json_1 = extended_json.EJSON;\nvar extended_json_2 = extended_json.isBSONType;\n\nvar float_parser = createCommonjsModule(function (module, exports) {\n// Copyright (c) 2008, Fair Oaks Labs, Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//  * Redistributions of source code must retain the above copyright notice,\n//    this list of conditions and the following disclaimer.\n//\n//  * Redistributions in binary form must reproduce the above copyright notice,\n//    this list of conditions and the following disclaimer in the documentation\n//    and/or other materials provided with the distribution.\n//\n//  * Neither the name of Fair Oaks Labs, Inc. nor the names of its contributors\n//    may be used to endorse or promote products derived from this software\n//    without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n//\n//\n// Modifications to writeIEEE754 to support negative zeroes made by Brian White\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeIEEE754 = exports.readIEEE754 = void 0;\nfunction readIEEE754(buffer, offset, endian, mLen, nBytes) {\n    let e;\n    let m;\n    const bBE = endian === 'big';\n    const eLen = nBytes * 8 - mLen - 1;\n    const eMax = (1 << eLen) - 1;\n    const eBias = eMax >> 1;\n    let nBits = -7;\n    let i = bBE ? 0 : nBytes - 1;\n    const d = bBE ? 1 : -1;\n    let s = buffer[offset + i];\n    i += d;\n    e = s & ((1 << -nBits) - 1);\n    s >>= -nBits;\n    nBits += eLen;\n    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8)\n        ;\n    m = e & ((1 << -nBits) - 1);\n    e >>= -nBits;\n    nBits += mLen;\n    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8)\n        ;\n    if (e === 0) {\n        e = 1 - eBias;\n    }\n    else if (e === eMax) {\n        return m ? NaN : (s ? -1 : 1) * Infinity;\n    }\n    else {\n        m = m + Math.pow(2, mLen);\n        e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n}\nexports.readIEEE754 = readIEEE754;\nfunction writeIEEE754(buffer, value, offset, endian, mLen, nBytes) {\n    let e;\n    let m;\n    let c;\n    const bBE = endian === 'big';\n    let eLen = nBytes * 8 - mLen - 1;\n    const eMax = (1 << eLen) - 1;\n    const eBias = eMax >> 1;\n    const rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    let i = bBE ? nBytes - 1 : 0;\n    const d = bBE ? -1 : 1;\n    const s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n    value = Math.abs(value);\n    if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n    }\n    else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n        if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n        }\n        if (e + eBias >= 1) {\n            value += rt / c;\n        }\n        else {\n            value += rt * Math.pow(2, 1 - eBias);\n        }\n        if (value * c >= 2) {\n            e++;\n            c /= 2;\n        }\n        if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n        }\n        else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n        }\n        else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n        }\n    }\n    if (isNaN(value))\n        m = 0;\n    while (mLen >= 8) {\n        buffer[offset + i] = m & 0xff;\n        i += d;\n        m /= 256;\n        mLen -= 8;\n    }\n    e = (e << mLen) | m;\n    if (isNaN(value))\n        e += 8;\n    eLen += mLen;\n    while (eLen > 0) {\n        buffer[offset + i] = e & 0xff;\n        i += d;\n        e /= 256;\n        eLen -= 8;\n    }\n    buffer[offset + i - d] |= s * 128;\n}\nexports.writeIEEE754 = writeIEEE754;\n\n});\n\nunwrapExports(float_parser);\nvar float_parser_1 = float_parser.writeIEEE754;\nvar float_parser_2 = float_parser.readIEEE754;\n\nvar serializer = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeInto = void 0;\n\n\n\n\n\n\n\n\n\nconst regexp = /\\x00/; // eslint-disable-line no-control-regex\nconst ignoreKeys = new Set(['$db', '$ref', '$id', '$clusterTime']);\nfunction isRegExp(d) {\n    return Object.prototype.toString.call(d) === '[object RegExp]';\n}\n/*\n * isArray indicates if we are writing to a BSON array (type 0x04)\n * which forces the \"key\" which really an array index as a string to be written as ascii\n * This will catch any errors in index as a string generation\n */\nfunction serializeString(buffer, key, value, index, isArray) {\n    // Encode String type\n    buffer[index++] = constants.BSON_DATA_STRING;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes + 1;\n    buffer[index - 1] = 0;\n    // Write the string\n    const size = buffer.write(value, index + 4, undefined, 'utf8');\n    // Write the size of the string to buffer\n    buffer[index + 3] = ((size + 1) >> 24) & 0xff;\n    buffer[index + 2] = ((size + 1) >> 16) & 0xff;\n    buffer[index + 1] = ((size + 1) >> 8) & 0xff;\n    buffer[index] = (size + 1) & 0xff;\n    // Update index\n    index = index + 4 + size;\n    // Write zero\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeNumber(buffer, key, value, index, isArray) {\n    // We have an integer value\n    // TODO(NODE-2529): Add support for big int\n    if (Number.isInteger(value) &&\n        value >= constants.BSON_INT32_MIN &&\n        value <= constants.BSON_INT32_MAX) {\n        // If the value fits in 32 bits encode as int32\n        // Set int type 32 bits or less\n        buffer[index++] = constants.BSON_DATA_INT;\n        // Number of written bytes\n        const numberOfWrittenBytes = !isArray\n            ? buffer.write(key, index, undefined, 'utf8')\n            : buffer.write(key, index, undefined, 'ascii');\n        // Encode the name\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        // Write the int value\n        buffer[index++] = value & 0xff;\n        buffer[index++] = (value >> 8) & 0xff;\n        buffer[index++] = (value >> 16) & 0xff;\n        buffer[index++] = (value >> 24) & 0xff;\n    }\n    else {\n        // Encode as double\n        buffer[index++] = constants.BSON_DATA_NUMBER;\n        // Number of written bytes\n        const numberOfWrittenBytes = !isArray\n            ? buffer.write(key, index, undefined, 'utf8')\n            : buffer.write(key, index, undefined, 'ascii');\n        // Encode the name\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        // Write float\n        float_parser.writeIEEE754(buffer, value, index, 'little', 52, 8);\n        // Adjust index\n        index = index + 8;\n    }\n    return index;\n}\nfunction serializeNull(buffer, key, _, index, isArray) {\n    // Set long type\n    buffer[index++] = constants.BSON_DATA_NULL;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeBoolean(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_BOOLEAN;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Encode the boolean value\n    buffer[index++] = value ? 1 : 0;\n    return index;\n}\nfunction serializeDate(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_DATE;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the date\n    const dateInMilis = long_1.Long.fromNumber(value.getTime());\n    const lowBits = dateInMilis.getLowBits();\n    const highBits = dateInMilis.getHighBits();\n    // Encode low bits\n    buffer[index++] = lowBits & 0xff;\n    buffer[index++] = (lowBits >> 8) & 0xff;\n    buffer[index++] = (lowBits >> 16) & 0xff;\n    buffer[index++] = (lowBits >> 24) & 0xff;\n    // Encode high bits\n    buffer[index++] = highBits & 0xff;\n    buffer[index++] = (highBits >> 8) & 0xff;\n    buffer[index++] = (highBits >> 16) & 0xff;\n    buffer[index++] = (highBits >> 24) & 0xff;\n    return index;\n}\nfunction serializeRegExp(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_REGEXP;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    if (value.source && value.source.match(regexp) != null) {\n        throw Error('value ' + value.source + ' must not contain null bytes');\n    }\n    // Adjust the index\n    index = index + buffer.write(value.source, index, undefined, 'utf8');\n    // Write zero\n    buffer[index++] = 0x00;\n    // Write the parameters\n    if (value.ignoreCase)\n        buffer[index++] = 0x69; // i\n    if (value.global)\n        buffer[index++] = 0x73; // s\n    if (value.multiline)\n        buffer[index++] = 0x6d; // m\n    // Add ending zero\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeBSONRegExp(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_REGEXP;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Check the pattern for 0 bytes\n    if (value.pattern.match(regexp) != null) {\n        // The BSON spec doesn't allow keys with null bytes because keys are\n        // null-terminated.\n        throw Error('pattern ' + value.pattern + ' must not contain null bytes');\n    }\n    // Adjust the index\n    index = index + buffer.write(value.pattern, index, undefined, 'utf8');\n    // Write zero\n    buffer[index++] = 0x00;\n    // Write the options\n    index = index + buffer.write(value.options.split('').sort().join(''), index, undefined, 'utf8');\n    // Add ending zero\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeMinMax(buffer, key, value, index, isArray) {\n    // Write the type of either min or max key\n    if (value === null) {\n        buffer[index++] = constants.BSON_DATA_NULL;\n    }\n    else if (value._bsontype === 'MinKey') {\n        buffer[index++] = constants.BSON_DATA_MIN_KEY;\n    }\n    else {\n        buffer[index++] = constants.BSON_DATA_MAX_KEY;\n    }\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeObjectId(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_OID;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the objectId into the shared buffer\n    if (typeof value.id === 'string') {\n        buffer.write(value.id, index, undefined, 'binary');\n    }\n    else if (value.id && value.id.copy) {\n        value.id.copy(buffer, index, 0, 12);\n    }\n    else {\n        throw new TypeError('object [' + JSON.stringify(value) + '] is not a valid ObjectId');\n    }\n    // Adjust index\n    return index + 12;\n}\nfunction serializeBuffer(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_BINARY;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Get size of the buffer (current write point)\n    const size = value.length;\n    // Write the size of the string to buffer\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n    // Write the default subtype\n    buffer[index++] = constants.BSON_BINARY_SUBTYPE_DEFAULT;\n    // Copy the content form the binary field to the buffer\n    buffer.set(ensure_buffer.ensureBuffer(value), index);\n    // Adjust the index\n    index = index + size;\n    return index;\n}\nfunction serializeObject(buffer, key, value, index, checkKeys = false, depth = 0, serializeFunctions = false, ignoreUndefined = true, isArray = false, path = []) {\n    for (let i = 0; i < path.length; i++) {\n        if (path[i] === value)\n            throw new Error('cyclic dependency detected');\n    }\n    // Push value to stack\n    path.push(value);\n    // Write the type\n    buffer[index++] = Array.isArray(value) ? constants.BSON_DATA_ARRAY : constants.BSON_DATA_OBJECT;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const endIndex = serializeInto(buffer, value, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined, path);\n    // Pop stack\n    path.pop();\n    return endIndex;\n}\nfunction serializeDecimal128(buffer, key, value, index, isArray) {\n    buffer[index++] = constants.BSON_DATA_DECIMAL128;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the data from the value\n    value.bytes.copy(buffer, index, 0, 16);\n    return index + 16;\n}\nfunction serializeLong(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] =\n        value._bsontype === 'Long' ? constants.BSON_DATA_LONG : constants.BSON_DATA_TIMESTAMP;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the date\n    const lowBits = value.getLowBits();\n    const highBits = value.getHighBits();\n    // Encode low bits\n    buffer[index++] = lowBits & 0xff;\n    buffer[index++] = (lowBits >> 8) & 0xff;\n    buffer[index++] = (lowBits >> 16) & 0xff;\n    buffer[index++] = (lowBits >> 24) & 0xff;\n    // Encode high bits\n    buffer[index++] = highBits & 0xff;\n    buffer[index++] = (highBits >> 8) & 0xff;\n    buffer[index++] = (highBits >> 16) & 0xff;\n    buffer[index++] = (highBits >> 24) & 0xff;\n    return index;\n}\nfunction serializeInt32(buffer, key, value, index, isArray) {\n    value = value.valueOf();\n    // Set int type 32 bits or less\n    buffer[index++] = constants.BSON_DATA_INT;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the int value\n    buffer[index++] = value & 0xff;\n    buffer[index++] = (value >> 8) & 0xff;\n    buffer[index++] = (value >> 16) & 0xff;\n    buffer[index++] = (value >> 24) & 0xff;\n    return index;\n}\nfunction serializeDouble(buffer, key, value, index, isArray) {\n    // Encode as double\n    buffer[index++] = constants.BSON_DATA_NUMBER;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write float\n    float_parser.writeIEEE754(buffer, value.value, index, 'little', 52, 8);\n    // Adjust index\n    index = index + 8;\n    return index;\n}\nfunction serializeFunction(buffer, key, value, index, _checkKeys = false, _depth = 0, isArray) {\n    buffer[index++] = constants.BSON_DATA_CODE;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Function string\n    const functionString = utils.normalizedFunctionString(value);\n    // Write the string\n    const size = buffer.write(functionString, index + 4, undefined, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    // Update index\n    index = index + 4 + size - 1;\n    // Write zero\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeCode(buffer, key, value, index, checkKeys = false, depth = 0, serializeFunctions = false, ignoreUndefined = true, isArray = false) {\n    if (value.scope && typeof value.scope === 'object') {\n        // Write the type\n        buffer[index++] = constants.BSON_DATA_CODE_W_SCOPE;\n        // Number of written bytes\n        const numberOfWrittenBytes = !isArray\n            ? buffer.write(key, index, undefined, 'utf8')\n            : buffer.write(key, index, undefined, 'ascii');\n        // Encode the name\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        // Starting index\n        let startIndex = index;\n        // Serialize the function\n        // Get the function string\n        const functionString = typeof value.code === 'string' ? value.code : value.code.toString();\n        // Index adjustment\n        index = index + 4;\n        // Write string into buffer\n        const codeSize = buffer.write(functionString, index + 4, undefined, 'utf8') + 1;\n        // Write the size of the string to buffer\n        buffer[index] = codeSize & 0xff;\n        buffer[index + 1] = (codeSize >> 8) & 0xff;\n        buffer[index + 2] = (codeSize >> 16) & 0xff;\n        buffer[index + 3] = (codeSize >> 24) & 0xff;\n        // Write end 0\n        buffer[index + 4 + codeSize - 1] = 0;\n        // Write the\n        index = index + codeSize + 4;\n        //\n        // Serialize the scope value\n        const endIndex = serializeInto(buffer, value.scope, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined);\n        index = endIndex - 1;\n        // Writ the total\n        const totalSize = endIndex - startIndex;\n        // Write the total size of the object\n        buffer[startIndex++] = totalSize & 0xff;\n        buffer[startIndex++] = (totalSize >> 8) & 0xff;\n        buffer[startIndex++] = (totalSize >> 16) & 0xff;\n        buffer[startIndex++] = (totalSize >> 24) & 0xff;\n        // Write trailing zero\n        buffer[index++] = 0;\n    }\n    else {\n        buffer[index++] = constants.BSON_DATA_CODE;\n        // Number of written bytes\n        const numberOfWrittenBytes = !isArray\n            ? buffer.write(key, index, undefined, 'utf8')\n            : buffer.write(key, index, undefined, 'ascii');\n        // Encode the name\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        // Function string\n        const functionString = value.code.toString();\n        // Write the string\n        const size = buffer.write(functionString, index + 4, undefined, 'utf8') + 1;\n        // Write the size of the string to buffer\n        buffer[index] = size & 0xff;\n        buffer[index + 1] = (size >> 8) & 0xff;\n        buffer[index + 2] = (size >> 16) & 0xff;\n        buffer[index + 3] = (size >> 24) & 0xff;\n        // Update index\n        index = index + 4 + size - 1;\n        // Write zero\n        buffer[index++] = 0;\n    }\n    return index;\n}\nfunction serializeBinary(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_BINARY;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Extract the buffer\n    const data = value.value(true);\n    // Calculate size\n    let size = value.position;\n    // Add the deprecated 02 type 4 bytes of size to total\n    if (value.sub_type === binary.Binary.SUBTYPE_BYTE_ARRAY)\n        size = size + 4;\n    // Write the size of the string to buffer\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n    // Write the subtype to the buffer\n    buffer[index++] = value.sub_type;\n    // If we have binary type 2 the 4 first bytes are the size\n    if (value.sub_type === binary.Binary.SUBTYPE_BYTE_ARRAY) {\n        size = size - 4;\n        buffer[index++] = size & 0xff;\n        buffer[index++] = (size >> 8) & 0xff;\n        buffer[index++] = (size >> 16) & 0xff;\n        buffer[index++] = (size >> 24) & 0xff;\n    }\n    // Write the data to the object\n    buffer.set(data, index);\n    // Adjust the index\n    index = index + value.position;\n    return index;\n}\nfunction serializeSymbol(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_SYMBOL;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the string\n    const size = buffer.write(value.value, index + 4, undefined, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    // Update index\n    index = index + 4 + size - 1;\n    // Write zero\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeDBRef(buffer, key, value, index, depth, serializeFunctions, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_OBJECT;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    let startIndex = index;\n    let output = {\n        $ref: value.collection || value.namespace,\n        $id: value.oid\n    };\n    if (value.db != null) {\n        output.$db = value.db;\n    }\n    output = Object.assign(output, value.fields);\n    const endIndex = serializeInto(buffer, output, false, index, depth + 1, serializeFunctions);\n    // Calculate object size\n    const size = endIndex - startIndex;\n    // Write the size\n    buffer[startIndex++] = size & 0xff;\n    buffer[startIndex++] = (size >> 8) & 0xff;\n    buffer[startIndex++] = (size >> 16) & 0xff;\n    buffer[startIndex++] = (size >> 24) & 0xff;\n    // Set index\n    return endIndex;\n}\nfunction serializeInto(buffer$1, object, checkKeys = false, startingIndex = 0, depth = 0, serializeFunctions = false, ignoreUndefined = true, path = []) {\n    startingIndex = startingIndex || 0;\n    path = path || [];\n    // Push the object to the path\n    path.push(object);\n    // Start place to serialize into\n    let index = startingIndex + 4;\n    // Special case isArray\n    if (Array.isArray(object)) {\n        // Get object keys\n        for (let i = 0; i < object.length; i++) {\n            const key = '' + i;\n            let value = object[i];\n            // Is there an override value\n            if (value && value.toBSON) {\n                if (typeof value.toBSON !== 'function')\n                    throw new TypeError('toBSON is not a function');\n                value = value.toBSON();\n            }\n            if (typeof value === 'string') {\n                index = serializeString(buffer$1, key, value, index, true);\n            }\n            else if (typeof value === 'number') {\n                index = serializeNumber(buffer$1, key, value, index, true);\n            }\n            else if (typeof value === 'bigint') {\n                throw new TypeError('Unsupported type BigInt, please use Decimal128');\n            }\n            else if (typeof value === 'boolean') {\n                index = serializeBoolean(buffer$1, key, value, index, true);\n            }\n            else if (value instanceof Date || utils.isDate(value)) {\n                index = serializeDate(buffer$1, key, value, index, true);\n            }\n            else if (value === undefined) {\n                index = serializeNull(buffer$1, key, value, index, true);\n            }\n            else if (value === null) {\n                index = serializeNull(buffer$1, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n                index = serializeObjectId(buffer$1, key, value, index, true);\n            }\n            else if (buffer.Buffer.isBuffer(value) || utils.isUint8Array(value)) {\n                index = serializeBuffer(buffer$1, key, value, index, true);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer$1, key, value, index, true);\n            }\n            else if (typeof value === 'object' && value['_bsontype'] == null) {\n                index = serializeObject(buffer$1, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true, path);\n            }\n            else if (typeof value === 'object' &&\n                extended_json.isBSONType(value) &&\n                value._bsontype === 'Decimal128') {\n                index = serializeDecimal128(buffer$1, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n                index = serializeLong(buffer$1, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'Double') {\n                index = serializeDouble(buffer$1, key, value, index, true);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer$1, key, value, index, checkKeys, depth, true);\n            }\n            else if (value['_bsontype'] === 'Code') {\n                index = serializeCode(buffer$1, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true);\n            }\n            else if (value['_bsontype'] === 'Binary') {\n                index = serializeBinary(buffer$1, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'Symbol') {\n                index = serializeSymbol(buffer$1, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'DBRef') {\n                index = serializeDBRef(buffer$1, key, value, index, depth, serializeFunctions, true);\n            }\n            else if (value['_bsontype'] === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer$1, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'Int32') {\n                index = serializeInt32(buffer$1, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n                index = serializeMinMax(buffer$1, key, value, index, true);\n            }\n            else if (typeof value['_bsontype'] !== 'undefined') {\n                throw new TypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n            }\n        }\n    }\n    else if (object instanceof map.Map) {\n        const iterator = object.entries();\n        let done = false;\n        while (!done) {\n            // Unpack the next entry\n            const entry = iterator.next();\n            done = !!entry.done;\n            // Are we done, then skip and terminate\n            if (done)\n                continue;\n            // Get the entry values\n            const key = entry.value[0];\n            const value = entry.value[1];\n            // Check the type of the value\n            const type = typeof value;\n            // Check the key and throw error if it's illegal\n            if (typeof key === 'string' && !ignoreKeys.has(key)) {\n                if (key.match(regexp) != null) {\n                    // The BSON spec doesn't allow keys with null bytes because keys are\n                    // null-terminated.\n                    throw Error('key ' + key + ' must not contain null bytes');\n                }\n                if (checkKeys) {\n                    if ('$' === key[0]) {\n                        throw Error('key ' + key + \" must not start with '$'\");\n                    }\n                    else if (~key.indexOf('.')) {\n                        throw Error('key ' + key + \" must not contain '.'\");\n                    }\n                }\n            }\n            if (type === 'string') {\n                index = serializeString(buffer$1, key, value, index);\n            }\n            else if (type === 'number') {\n                index = serializeNumber(buffer$1, key, value, index);\n            }\n            else if (type === 'bigint' || utils.isBigInt64Array(value) || utils.isBigUInt64Array(value)) {\n                throw new TypeError('Unsupported type BigInt, please use Decimal128');\n            }\n            else if (type === 'boolean') {\n                index = serializeBoolean(buffer$1, key, value, index);\n            }\n            else if (value instanceof Date || utils.isDate(value)) {\n                index = serializeDate(buffer$1, key, value, index);\n            }\n            else if (value === null || (value === undefined && ignoreUndefined === false)) {\n                index = serializeNull(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n                index = serializeObjectId(buffer$1, key, value, index);\n            }\n            else if (buffer.Buffer.isBuffer(value) || utils.isUint8Array(value)) {\n                index = serializeBuffer(buffer$1, key, value, index);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer$1, key, value, index);\n            }\n            else if (type === 'object' && value['_bsontype'] == null) {\n                index = serializeObject(buffer$1, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path);\n            }\n            else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n                index = serializeDecimal128(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n                index = serializeLong(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Double') {\n                index = serializeDouble(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Code') {\n                index = serializeCode(buffer$1, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer$1, key, value, index, checkKeys, depth, serializeFunctions);\n            }\n            else if (value['_bsontype'] === 'Binary') {\n                index = serializeBinary(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Symbol') {\n                index = serializeSymbol(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'DBRef') {\n                index = serializeDBRef(buffer$1, key, value, index, depth, serializeFunctions);\n            }\n            else if (value['_bsontype'] === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Int32') {\n                index = serializeInt32(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n                index = serializeMinMax(buffer$1, key, value, index);\n            }\n            else if (typeof value['_bsontype'] !== 'undefined') {\n                throw new TypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n            }\n        }\n    }\n    else {\n        // Did we provide a custom serialization method\n        if (object.toBSON) {\n            if (typeof object.toBSON !== 'function')\n                throw new TypeError('toBSON is not a function');\n            object = object.toBSON();\n            if (object != null && typeof object !== 'object')\n                throw new TypeError('toBSON function did not return an object');\n        }\n        // Iterate over all the keys\n        for (const key in object) {\n            let value = object[key];\n            // Is there an override value\n            if (value && value.toBSON) {\n                if (typeof value.toBSON !== 'function')\n                    throw new TypeError('toBSON is not a function');\n                value = value.toBSON();\n            }\n            // Check the type of the value\n            const type = typeof value;\n            // Check the key and throw error if it's illegal\n            if (typeof key === 'string' && !ignoreKeys.has(key)) {\n                if (key.match(regexp) != null) {\n                    // The BSON spec doesn't allow keys with null bytes because keys are\n                    // null-terminated.\n                    throw Error('key ' + key + ' must not contain null bytes');\n                }\n                if (checkKeys) {\n                    if ('$' === key[0]) {\n                        throw Error('key ' + key + \" must not start with '$'\");\n                    }\n                    else if (~key.indexOf('.')) {\n                        throw Error('key ' + key + \" must not contain '.'\");\n                    }\n                }\n            }\n            if (type === 'string') {\n                index = serializeString(buffer$1, key, value, index);\n            }\n            else if (type === 'number') {\n                index = serializeNumber(buffer$1, key, value, index);\n            }\n            else if (type === 'bigint') {\n                throw new TypeError('Unsupported type BigInt, please use Decimal128');\n            }\n            else if (type === 'boolean') {\n                index = serializeBoolean(buffer$1, key, value, index);\n            }\n            else if (value instanceof Date || utils.isDate(value)) {\n                index = serializeDate(buffer$1, key, value, index);\n            }\n            else if (value === undefined) {\n                if (ignoreUndefined === false)\n                    index = serializeNull(buffer$1, key, value, index);\n            }\n            else if (value === null) {\n                index = serializeNull(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n                index = serializeObjectId(buffer$1, key, value, index);\n            }\n            else if (buffer.Buffer.isBuffer(value) || utils.isUint8Array(value)) {\n                index = serializeBuffer(buffer$1, key, value, index);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer$1, key, value, index);\n            }\n            else if (type === 'object' && value['_bsontype'] == null) {\n                index = serializeObject(buffer$1, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path);\n            }\n            else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n                index = serializeDecimal128(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n                index = serializeLong(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Double') {\n                index = serializeDouble(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Code') {\n                index = serializeCode(buffer$1, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer$1, key, value, index, checkKeys, depth, serializeFunctions);\n            }\n            else if (value['_bsontype'] === 'Binary') {\n                index = serializeBinary(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Symbol') {\n                index = serializeSymbol(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'DBRef') {\n                index = serializeDBRef(buffer$1, key, value, index, depth, serializeFunctions);\n            }\n            else if (value['_bsontype'] === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Int32') {\n                index = serializeInt32(buffer$1, key, value, index);\n            }\n            else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n                index = serializeMinMax(buffer$1, key, value, index);\n            }\n            else if (typeof value['_bsontype'] !== 'undefined') {\n                throw new TypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n            }\n        }\n    }\n    // Remove the path\n    path.pop();\n    // Final padding byte for object\n    buffer$1[index++] = 0x00;\n    // Final size\n    const size = index - startingIndex;\n    // Write the size of the object\n    buffer$1[startingIndex++] = size & 0xff;\n    buffer$1[startingIndex++] = (size >> 8) & 0xff;\n    buffer$1[startingIndex++] = (size >> 16) & 0xff;\n    buffer$1[startingIndex++] = (size >> 24) & 0xff;\n    return index;\n}\nexports.serializeInto = serializeInto;\n\n});\n\nunwrapExports(serializer);\nvar serializer_1 = serializer.serializeInto;\n\nvar bson = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeStream = exports.calculateObjectSize = exports.deserialize = exports.serializeWithBufferAndIndex = exports.serialize = exports.setInternalBufferSize = exports.ObjectID = exports.Decimal128 = exports.BSONRegExp = exports.MaxKey = exports.MinKey = exports.Int32 = exports.Double = exports.Timestamp = exports.Long = exports.ObjectId = exports.Binary = exports.DBRef = exports.BSONSymbol = exports.Map = exports.Code = exports.LongWithoutOverridesClass = exports.EJSON = exports.JS_INT_MIN = exports.JS_INT_MAX = exports.BSON_INT64_MIN = exports.BSON_INT64_MAX = exports.BSON_INT32_MIN = exports.BSON_INT32_MAX = exports.BSON_DATA_UNDEFINED = exports.BSON_DATA_TIMESTAMP = exports.BSON_DATA_SYMBOL = exports.BSON_DATA_STRING = exports.BSON_DATA_REGEXP = exports.BSON_DATA_OID = exports.BSON_DATA_OBJECT = exports.BSON_DATA_NUMBER = exports.BSON_DATA_NULL = exports.BSON_DATA_MIN_KEY = exports.BSON_DATA_MAX_KEY = exports.BSON_DATA_LONG = exports.BSON_DATA_INT = exports.BSON_DATA_DECIMAL128 = exports.BSON_DATA_DBPOINTER = exports.BSON_DATA_DATE = exports.BSON_DATA_CODE_W_SCOPE = exports.BSON_DATA_CODE = exports.BSON_DATA_BOOLEAN = exports.BSON_DATA_BINARY = exports.BSON_DATA_ARRAY = exports.BSON_BINARY_SUBTYPE_UUID_NEW = exports.BSON_BINARY_SUBTYPE_UUID = exports.BSON_BINARY_SUBTYPE_USER_DEFINED = exports.BSON_BINARY_SUBTYPE_MD5 = exports.BSON_BINARY_SUBTYPE_FUNCTION = exports.BSON_BINARY_SUBTYPE_DEFAULT = exports.BSON_BINARY_SUBTYPE_BYTE_ARRAY = void 0;\n\n\nObject.defineProperty(exports, \"Binary\", { enumerable: true, get: function () { return binary.Binary; } });\n\nObject.defineProperty(exports, \"Code\", { enumerable: true, get: function () { return code$1.Code; } });\n\nObject.defineProperty(exports, \"DBRef\", { enumerable: true, get: function () { return db_ref.DBRef; } });\n\nObject.defineProperty(exports, \"Decimal128\", { enumerable: true, get: function () { return decimal128.Decimal128; } });\n\nObject.defineProperty(exports, \"Double\", { enumerable: true, get: function () { return double_1.Double; } });\n\n\nObject.defineProperty(exports, \"Int32\", { enumerable: true, get: function () { return int_32.Int32; } });\n\nObject.defineProperty(exports, \"Long\", { enumerable: true, get: function () { return long_1.Long; } });\n\nObject.defineProperty(exports, \"Map\", { enumerable: true, get: function () { return map.Map; } });\n\nObject.defineProperty(exports, \"MaxKey\", { enumerable: true, get: function () { return max_key.MaxKey; } });\n\nObject.defineProperty(exports, \"MinKey\", { enumerable: true, get: function () { return min_key.MinKey; } });\n\nObject.defineProperty(exports, \"ObjectId\", { enumerable: true, get: function () { return objectid.ObjectId; } });\nObject.defineProperty(exports, \"ObjectID\", { enumerable: true, get: function () { return objectid.ObjectId; } });\n\n// Parts of the parser\n\n\n\nObject.defineProperty(exports, \"BSONRegExp\", { enumerable: true, get: function () { return regexp.BSONRegExp; } });\n\nObject.defineProperty(exports, \"BSONSymbol\", { enumerable: true, get: function () { return symbol.BSONSymbol; } });\n\nObject.defineProperty(exports, \"Timestamp\", { enumerable: true, get: function () { return timestamp$1.Timestamp; } });\n\nObject.defineProperty(exports, \"BSON_BINARY_SUBTYPE_BYTE_ARRAY\", { enumerable: true, get: function () { return constants.BSON_BINARY_SUBTYPE_BYTE_ARRAY; } });\nObject.defineProperty(exports, \"BSON_BINARY_SUBTYPE_DEFAULT\", { enumerable: true, get: function () { return constants.BSON_BINARY_SUBTYPE_DEFAULT; } });\nObject.defineProperty(exports, \"BSON_BINARY_SUBTYPE_FUNCTION\", { enumerable: true, get: function () { return constants.BSON_BINARY_SUBTYPE_FUNCTION; } });\nObject.defineProperty(exports, \"BSON_BINARY_SUBTYPE_MD5\", { enumerable: true, get: function () { return constants.BSON_BINARY_SUBTYPE_MD5; } });\nObject.defineProperty(exports, \"BSON_BINARY_SUBTYPE_USER_DEFINED\", { enumerable: true, get: function () { return constants.BSON_BINARY_SUBTYPE_USER_DEFINED; } });\nObject.defineProperty(exports, \"BSON_BINARY_SUBTYPE_UUID\", { enumerable: true, get: function () { return constants.BSON_BINARY_SUBTYPE_UUID; } });\nObject.defineProperty(exports, \"BSON_BINARY_SUBTYPE_UUID_NEW\", { enumerable: true, get: function () { return constants.BSON_BINARY_SUBTYPE_UUID_NEW; } });\nObject.defineProperty(exports, \"BSON_DATA_ARRAY\", { enumerable: true, get: function () { return constants.BSON_DATA_ARRAY; } });\nObject.defineProperty(exports, \"BSON_DATA_BINARY\", { enumerable: true, get: function () { return constants.BSON_DATA_BINARY; } });\nObject.defineProperty(exports, \"BSON_DATA_BOOLEAN\", { enumerable: true, get: function () { return constants.BSON_DATA_BOOLEAN; } });\nObject.defineProperty(exports, \"BSON_DATA_CODE\", { enumerable: true, get: function () { return constants.BSON_DATA_CODE; } });\nObject.defineProperty(exports, \"BSON_DATA_CODE_W_SCOPE\", { enumerable: true, get: function () { return constants.BSON_DATA_CODE_W_SCOPE; } });\nObject.defineProperty(exports, \"BSON_DATA_DATE\", { enumerable: true, get: function () { return constants.BSON_DATA_DATE; } });\nObject.defineProperty(exports, \"BSON_DATA_DBPOINTER\", { enumerable: true, get: function () { return constants.BSON_DATA_DBPOINTER; } });\nObject.defineProperty(exports, \"BSON_DATA_DECIMAL128\", { enumerable: true, get: function () { return constants.BSON_DATA_DECIMAL128; } });\nObject.defineProperty(exports, \"BSON_DATA_INT\", { enumerable: true, get: function () { return constants.BSON_DATA_INT; } });\nObject.defineProperty(exports, \"BSON_DATA_LONG\", { enumerable: true, get: function () { return constants.BSON_DATA_LONG; } });\nObject.defineProperty(exports, \"BSON_DATA_MAX_KEY\", { enumerable: true, get: function () { return constants.BSON_DATA_MAX_KEY; } });\nObject.defineProperty(exports, \"BSON_DATA_MIN_KEY\", { enumerable: true, get: function () { return constants.BSON_DATA_MIN_KEY; } });\nObject.defineProperty(exports, \"BSON_DATA_NULL\", { enumerable: true, get: function () { return constants.BSON_DATA_NULL; } });\nObject.defineProperty(exports, \"BSON_DATA_NUMBER\", { enumerable: true, get: function () { return constants.BSON_DATA_NUMBER; } });\nObject.defineProperty(exports, \"BSON_DATA_OBJECT\", { enumerable: true, get: function () { return constants.BSON_DATA_OBJECT; } });\nObject.defineProperty(exports, \"BSON_DATA_OID\", { enumerable: true, get: function () { return constants.BSON_DATA_OID; } });\nObject.defineProperty(exports, \"BSON_DATA_REGEXP\", { enumerable: true, get: function () { return constants.BSON_DATA_REGEXP; } });\nObject.defineProperty(exports, \"BSON_DATA_STRING\", { enumerable: true, get: function () { return constants.BSON_DATA_STRING; } });\nObject.defineProperty(exports, \"BSON_DATA_SYMBOL\", { enumerable: true, get: function () { return constants.BSON_DATA_SYMBOL; } });\nObject.defineProperty(exports, \"BSON_DATA_TIMESTAMP\", { enumerable: true, get: function () { return constants.BSON_DATA_TIMESTAMP; } });\nObject.defineProperty(exports, \"BSON_DATA_UNDEFINED\", { enumerable: true, get: function () { return constants.BSON_DATA_UNDEFINED; } });\nObject.defineProperty(exports, \"BSON_INT32_MAX\", { enumerable: true, get: function () { return constants.BSON_INT32_MAX; } });\nObject.defineProperty(exports, \"BSON_INT32_MIN\", { enumerable: true, get: function () { return constants.BSON_INT32_MIN; } });\nObject.defineProperty(exports, \"BSON_INT64_MAX\", { enumerable: true, get: function () { return constants.BSON_INT64_MAX; } });\nObject.defineProperty(exports, \"BSON_INT64_MIN\", { enumerable: true, get: function () { return constants.BSON_INT64_MIN; } });\nObject.defineProperty(exports, \"JS_INT_MAX\", { enumerable: true, get: function () { return constants.JS_INT_MAX; } });\nObject.defineProperty(exports, \"JS_INT_MIN\", { enumerable: true, get: function () { return constants.JS_INT_MIN; } });\n\nObject.defineProperty(exports, \"EJSON\", { enumerable: true, get: function () { return extended_json.EJSON; } });\nvar timestamp_2 = timestamp$1;\nObject.defineProperty(exports, \"LongWithoutOverridesClass\", { enumerable: true, get: function () { return timestamp_2.LongWithoutOverridesClass; } });\n/** @internal */\n// Default Max Size\nconst MAXSIZE = 1024 * 1024 * 17;\n// Current Internal Temporary Serialization Buffer\nlet buffer$1 = buffer.Buffer.alloc(MAXSIZE);\n/**\n * Sets the size of the internal serialization buffer.\n *\n * @param size - The desired size for the internal serialization buffer\n * @public\n */\nfunction setInternalBufferSize(size) {\n    // Resize the internal serialization buffer if needed\n    if (buffer$1.length < size) {\n        buffer$1 = buffer.Buffer.alloc(size);\n    }\n}\nexports.setInternalBufferSize = setInternalBufferSize;\n/**\n * Serialize a Javascript object.\n *\n * @param object - the Javascript object to serialize.\n * @returns Buffer object containing the serialized object.\n * @public\n */\nfunction serialize(object, options = {}) {\n    // Unpack the options\n    const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    const minInternalBufferSize = typeof options.minInternalBufferSize === 'number' ? options.minInternalBufferSize : MAXSIZE;\n    // Resize the internal serialization buffer if needed\n    if (buffer$1.length < minInternalBufferSize) {\n        buffer$1 = buffer.Buffer.alloc(minInternalBufferSize);\n    }\n    // Attempt to serialize\n    const serializationIndex = serializer.serializeInto(buffer$1, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined, []);\n    // Create the final buffer\n    const finishedBuffer = buffer.Buffer.alloc(serializationIndex);\n    // Copy into the finished buffer\n    buffer$1.copy(finishedBuffer, 0, 0, finishedBuffer.length);\n    // Return the buffer\n    return finishedBuffer;\n}\nexports.serialize = serialize;\n/**\n * Serialize a Javascript object using a predefined Buffer and index into the buffer,\n * useful when pre-allocating the space for serialization.\n *\n * @param object - the Javascript object to serialize.\n * @param finalBuffer - the Buffer you pre-allocated to store the serialized BSON object.\n * @returns the index pointing to the last written byte in the buffer.\n * @public\n */\nfunction serializeWithBufferAndIndex(object, finalBuffer, options = {}) {\n    // Unpack the options\n    const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    const startIndex = typeof options.index === 'number' ? options.index : 0;\n    // Attempt to serialize\n    const serializationIndex = serializer.serializeInto(buffer$1, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined);\n    buffer$1.copy(finalBuffer, startIndex, 0, serializationIndex);\n    // Return the index\n    return startIndex + serializationIndex - 1;\n}\nexports.serializeWithBufferAndIndex = serializeWithBufferAndIndex;\n/**\n * Deserialize data as BSON.\n *\n * @param buffer - the buffer containing the serialized set of BSON documents.\n * @returns returns the deserialized Javascript Object.\n * @public\n */\nfunction deserialize(buffer, options = {}) {\n    return deserializer.deserialize(ensure_buffer.ensureBuffer(buffer), options);\n}\nexports.deserialize = deserialize;\n/**\n * Calculate the bson size for a passed in Javascript object.\n *\n * @param object - the Javascript object to calculate the BSON byte size for\n * @returns size of BSON object in bytes\n * @public\n */\nfunction calculateObjectSize(object, options = {}) {\n    options = options || {};\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    return calculate_size.calculateObjectSize(object, serializeFunctions, ignoreUndefined);\n}\nexports.calculateObjectSize = calculateObjectSize;\n/**\n * Deserialize stream data as BSON documents.\n *\n * @param data - the buffer containing the serialized set of BSON documents.\n * @param startIndex - the start index in the data Buffer where the deserialization is to start.\n * @param numberOfDocuments - number of documents to deserialize.\n * @param documents - an array where to store the deserialized documents.\n * @param docStartIndex - the index in the documents array from where to start inserting documents.\n * @param options - additional options used for the deserialization.\n * @returns next index in the buffer after deserialization **x** numbers of documents.\n * @public\n */\nfunction deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {\n    const internalOptions = Object.assign({ allowObjectSmallerThanBufferSize: true, index: 0 }, options);\n    const bufferData = ensure_buffer.ensureBuffer(data);\n    let index = startIndex;\n    // Loop over all documents\n    for (let i = 0; i < numberOfDocuments; i++) {\n        // Find size of the document\n        const size = bufferData[index] |\n            (bufferData[index + 1] << 8) |\n            (bufferData[index + 2] << 16) |\n            (bufferData[index + 3] << 24);\n        // Update options with index\n        internalOptions.index = index;\n        // Parse the document at this point\n        documents[docStartIndex + i] = deserializer.deserialize(bufferData, internalOptions);\n        // Adjust index by the document size\n        index = index + size;\n    }\n    // Return object containing end index of parsing and list of documents\n    return index;\n}\nexports.deserializeStream = deserializeStream;\n\n});\n\nvar bson$1 = unwrapExports(bson);\nvar bson_1 = bson.deserializeStream;\nvar bson_2 = bson.calculateObjectSize;\nvar bson_3 = bson.deserialize;\nvar bson_4 = bson.serializeWithBufferAndIndex;\nvar bson_5 = bson.serialize;\nvar bson_6 = bson.setInternalBufferSize;\nvar bson_7 = bson.ObjectID;\nvar bson_8 = bson.Decimal128;\nvar bson_9 = bson.BSONRegExp;\nvar bson_10 = bson.MaxKey;\nvar bson_11 = bson.MinKey;\nvar bson_12 = bson.Int32;\nvar bson_13 = bson.Double;\nvar bson_14 = bson.Timestamp;\nvar bson_15 = bson.Long;\nvar bson_16 = bson.ObjectId;\nvar bson_17 = bson.Binary;\nvar bson_18 = bson.DBRef;\nvar bson_19 = bson.BSONSymbol;\nvar bson_20 = bson.Map;\nvar bson_21 = bson.Code;\nvar bson_22 = bson.LongWithoutOverridesClass;\nvar bson_23 = bson.EJSON;\nvar bson_24 = bson.JS_INT_MIN;\nvar bson_25 = bson.JS_INT_MAX;\nvar bson_26 = bson.BSON_INT64_MIN;\nvar bson_27 = bson.BSON_INT64_MAX;\nvar bson_28 = bson.BSON_INT32_MIN;\nvar bson_29 = bson.BSON_INT32_MAX;\nvar bson_30 = bson.BSON_DATA_UNDEFINED;\nvar bson_31 = bson.BSON_DATA_TIMESTAMP;\nvar bson_32 = bson.BSON_DATA_SYMBOL;\nvar bson_33 = bson.BSON_DATA_STRING;\nvar bson_34 = bson.BSON_DATA_REGEXP;\nvar bson_35 = bson.BSON_DATA_OID;\nvar bson_36 = bson.BSON_DATA_OBJECT;\nvar bson_37 = bson.BSON_DATA_NUMBER;\nvar bson_38 = bson.BSON_DATA_NULL;\nvar bson_39 = bson.BSON_DATA_MIN_KEY;\nvar bson_40 = bson.BSON_DATA_MAX_KEY;\nvar bson_41 = bson.BSON_DATA_LONG;\nvar bson_42 = bson.BSON_DATA_INT;\nvar bson_43 = bson.BSON_DATA_DECIMAL128;\nvar bson_44 = bson.BSON_DATA_DBPOINTER;\nvar bson_45 = bson.BSON_DATA_DATE;\nvar bson_46 = bson.BSON_DATA_CODE_W_SCOPE;\nvar bson_47 = bson.BSON_DATA_CODE;\nvar bson_48 = bson.BSON_DATA_BOOLEAN;\nvar bson_49 = bson.BSON_DATA_BINARY;\nvar bson_50 = bson.BSON_DATA_ARRAY;\nvar bson_51 = bson.BSON_BINARY_SUBTYPE_UUID_NEW;\nvar bson_52 = bson.BSON_BINARY_SUBTYPE_UUID;\nvar bson_53 = bson.BSON_BINARY_SUBTYPE_USER_DEFINED;\nvar bson_54 = bson.BSON_BINARY_SUBTYPE_MD5;\nvar bson_55 = bson.BSON_BINARY_SUBTYPE_FUNCTION;\nvar bson_56 = bson.BSON_BINARY_SUBTYPE_DEFAULT;\nvar bson_57 = bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (bson$1);\n\n//# sourceMappingURL=bson.browser.esm.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"../../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/bson/dist/bson.browser.esm.js?")},"../../node_modules/chalk/source/index.js":function(module,exports,__webpack_require__){"use strict";eval("\nconst ansiStyles = __webpack_require__(/*! ansi-styles */ \"../../node_modules/ansi-styles/index.js\");\nconst {stdout: stdoutColor, stderr: stderrColor} = __webpack_require__(/*! supports-color */ \"../../node_modules/supports-color/browser.js\");\nconst {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n} = __webpack_require__(/*! ./util */ \"../../node_modules/chalk/source/util.js\");\n\nconst {isArray} = Array;\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m'\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass ChalkClass {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = {};\n\tapplyOptions(chalk, options);\n\n\tchalk.template = (...arguments_) => chalkTag(chalk.template, ...arguments_);\n\n\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\tObject.setPrototypeOf(chalk.template, chalk);\n\n\tchalk.template.constructor = () => {\n\t\tthrow new Error('`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.');\n\t};\n\n\tchalk.template.Instance = ChalkClass;\n\n\treturn chalk.template;\n};\n\nfunction Chalk(options) {\n\treturn chalkFactory(options);\n}\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this._styler, true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t}\n};\n\nconst usedModels = ['rgb', 'hex', 'keyword', 'hsl', 'hsv', 'hwb', 'ansi', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_), ansiStyles.color.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nfor (const model of usedModels) {\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_), ansiStyles.bgColor.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this._generator.level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis._generator.level = level;\n\t\t}\n\t}\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\tconst builder = (...arguments_) => {\n\t\tif (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {\n\t\t\t// Called as a template literal, for example: chalk.red`2 + 3 = {bold ${2+3}}`\n\t\t\treturn applyStyle(builder, chalkTag(builder, ...arguments_));\n\t\t}\n\n\t\t// Single argument is hot path, implicit coercion is faster than anything\n\t\t// eslint-disable-next-line no-implicit-coercion\n\t\treturn applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\t};\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder._generator = self;\n\tbuilder._styler = _styler;\n\tbuilder._isEmpty = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self._isEmpty ? '' : string;\n\t}\n\n\tlet styler = self._styler;\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.indexOf('\\u001B') !== -1) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nlet template;\nconst chalkTag = (chalk, ...strings) => {\n\tconst [firstString] = strings;\n\n\tif (!isArray(firstString) || !isArray(firstString.raw)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn strings.join(' ');\n\t}\n\n\tconst arguments_ = strings.slice(1);\n\tconst parts = [firstString.raw[0]];\n\n\tfor (let i = 1; i < firstString.length; i++) {\n\t\tparts.push(\n\t\t\tString(arguments_[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'),\n\t\t\tString(firstString.raw[i])\n\t\t);\n\t}\n\n\tif (template === undefined) {\n\t\ttemplate = __webpack_require__(/*! ./templates */ \"../../node_modules/chalk/source/templates.js\");\n\t}\n\n\treturn template(chalk, parts.join(''));\n};\n\nObject.defineProperties(Chalk.prototype, styles);\n\nconst chalk = Chalk(); // eslint-disable-line new-cap\nchalk.supportsColor = stdoutColor;\nchalk.stderr = Chalk({level: stderrColor ? stderrColor.level : 0}); // eslint-disable-line new-cap\nchalk.stderr.supportsColor = stderrColor;\n\nmodule.exports = chalk;\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/chalk/source/index.js?")},"../../node_modules/chalk/source/templates.js":function(module,exports,__webpack_require__){"use strict";eval("\nconst TEMPLATE_REGEX = /(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tconst u = c[0] === 'u';\n\tconst bracket = c[1] === '{';\n\n\tif ((u && !bracket && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\tif (u && bracket) {\n\t\treturn String.fromCodePoint(parseInt(c.slice(2, -1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, arguments_) {\n\tconst results = [];\n\tconst chunks = arguments_.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tconst number = Number(chunk);\n\t\tif (!Number.isNaN(number)) {\n\t\t\tresults.push(number);\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const [styleName, styles] of Object.entries(enabled)) {\n\t\tif (!Array.isArray(styles)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!(styleName in current)) {\n\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t}\n\n\t\tcurrent = styles.length > 0 ? current[styleName](...styles) : current[styleName];\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, temporary) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttemporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {\n\t\tif (escapeCharacter) {\n\t\t\tchunk.push(unescape(escapeCharacter));\n\t\t} else if (style) {\n\t\t\tconst string = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(character);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMessage = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMessage);\n\t}\n\n\treturn chunks.join('');\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/chalk/source/templates.js?")},"../../node_modules/chalk/source/util.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nconst stringReplaceAll = (string, substring, replacer) => {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nmodule.exports = {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/chalk/source/util.js?")},"../../node_modules/cipher-base/index.js":function(module,exports,__webpack_require__){eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer\nvar Transform = __webpack_require__(/*! stream */ \"../../node_modules/stream-browserify/index.js\").Transform\nvar StringDecoder = __webpack_require__(/*! string_decoder */ \"../../node_modules/string_decoder/lib/string_decoder.js\").StringDecoder\nvar inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/cipher-base/index.js?")},"../../node_modules/color-convert/conversions.js":function(module,exports,__webpack_require__){eval("/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = __webpack_require__(/*! color-name */ \"../../node_modules/color-name/index.js\");\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/color-convert/conversions.js?")},"../../node_modules/color-convert/index.js":function(module,exports,__webpack_require__){eval("const conversions = __webpack_require__(/*! ./conversions */ \"../../node_modules/color-convert/conversions.js\");\nconst route = __webpack_require__(/*! ./route */ \"../../node_modules/color-convert/route.js\");\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/color-convert/index.js?")},"../../node_modules/color-convert/route.js":function(module,exports,__webpack_require__){eval("const conversions = __webpack_require__(/*! ./conversions */ \"../../node_modules/color-convert/conversions.js\");\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/color-convert/route.js?")},"../../node_modules/color-name/index.js":function(module,exports,__webpack_require__){"use strict";eval('\r\n\r\nmodule.exports = {\r\n\t"aliceblue": [240, 248, 255],\r\n\t"antiquewhite": [250, 235, 215],\r\n\t"aqua": [0, 255, 255],\r\n\t"aquamarine": [127, 255, 212],\r\n\t"azure": [240, 255, 255],\r\n\t"beige": [245, 245, 220],\r\n\t"bisque": [255, 228, 196],\r\n\t"black": [0, 0, 0],\r\n\t"blanchedalmond": [255, 235, 205],\r\n\t"blue": [0, 0, 255],\r\n\t"blueviolet": [138, 43, 226],\r\n\t"brown": [165, 42, 42],\r\n\t"burlywood": [222, 184, 135],\r\n\t"cadetblue": [95, 158, 160],\r\n\t"chartreuse": [127, 255, 0],\r\n\t"chocolate": [210, 105, 30],\r\n\t"coral": [255, 127, 80],\r\n\t"cornflowerblue": [100, 149, 237],\r\n\t"cornsilk": [255, 248, 220],\r\n\t"crimson": [220, 20, 60],\r\n\t"cyan": [0, 255, 255],\r\n\t"darkblue": [0, 0, 139],\r\n\t"darkcyan": [0, 139, 139],\r\n\t"darkgoldenrod": [184, 134, 11],\r\n\t"darkgray": [169, 169, 169],\r\n\t"darkgreen": [0, 100, 0],\r\n\t"darkgrey": [169, 169, 169],\r\n\t"darkkhaki": [189, 183, 107],\r\n\t"darkmagenta": [139, 0, 139],\r\n\t"darkolivegreen": [85, 107, 47],\r\n\t"darkorange": [255, 140, 0],\r\n\t"darkorchid": [153, 50, 204],\r\n\t"darkred": [139, 0, 0],\r\n\t"darksalmon": [233, 150, 122],\r\n\t"darkseagreen": [143, 188, 143],\r\n\t"darkslateblue": [72, 61, 139],\r\n\t"darkslategray": [47, 79, 79],\r\n\t"darkslategrey": [47, 79, 79],\r\n\t"darkturquoise": [0, 206, 209],\r\n\t"darkviolet": [148, 0, 211],\r\n\t"deeppink": [255, 20, 147],\r\n\t"deepskyblue": [0, 191, 255],\r\n\t"dimgray": [105, 105, 105],\r\n\t"dimgrey": [105, 105, 105],\r\n\t"dodgerblue": [30, 144, 255],\r\n\t"firebrick": [178, 34, 34],\r\n\t"floralwhite": [255, 250, 240],\r\n\t"forestgreen": [34, 139, 34],\r\n\t"fuchsia": [255, 0, 255],\r\n\t"gainsboro": [220, 220, 220],\r\n\t"ghostwhite": [248, 248, 255],\r\n\t"gold": [255, 215, 0],\r\n\t"goldenrod": [218, 165, 32],\r\n\t"gray": [128, 128, 128],\r\n\t"green": [0, 128, 0],\r\n\t"greenyellow": [173, 255, 47],\r\n\t"grey": [128, 128, 128],\r\n\t"honeydew": [240, 255, 240],\r\n\t"hotpink": [255, 105, 180],\r\n\t"indianred": [205, 92, 92],\r\n\t"indigo": [75, 0, 130],\r\n\t"ivory": [255, 255, 240],\r\n\t"khaki": [240, 230, 140],\r\n\t"lavender": [230, 230, 250],\r\n\t"lavenderblush": [255, 240, 245],\r\n\t"lawngreen": [124, 252, 0],\r\n\t"lemonchiffon": [255, 250, 205],\r\n\t"lightblue": [173, 216, 230],\r\n\t"lightcoral": [240, 128, 128],\r\n\t"lightcyan": [224, 255, 255],\r\n\t"lightgoldenrodyellow": [250, 250, 210],\r\n\t"lightgray": [211, 211, 211],\r\n\t"lightgreen": [144, 238, 144],\r\n\t"lightgrey": [211, 211, 211],\r\n\t"lightpink": [255, 182, 193],\r\n\t"lightsalmon": [255, 160, 122],\r\n\t"lightseagreen": [32, 178, 170],\r\n\t"lightskyblue": [135, 206, 250],\r\n\t"lightslategray": [119, 136, 153],\r\n\t"lightslategrey": [119, 136, 153],\r\n\t"lightsteelblue": [176, 196, 222],\r\n\t"lightyellow": [255, 255, 224],\r\n\t"lime": [0, 255, 0],\r\n\t"limegreen": [50, 205, 50],\r\n\t"linen": [250, 240, 230],\r\n\t"magenta": [255, 0, 255],\r\n\t"maroon": [128, 0, 0],\r\n\t"mediumaquamarine": [102, 205, 170],\r\n\t"mediumblue": [0, 0, 205],\r\n\t"mediumorchid": [186, 85, 211],\r\n\t"mediumpurple": [147, 112, 219],\r\n\t"mediumseagreen": [60, 179, 113],\r\n\t"mediumslateblue": [123, 104, 238],\r\n\t"mediumspringgreen": [0, 250, 154],\r\n\t"mediumturquoise": [72, 209, 204],\r\n\t"mediumvioletred": [199, 21, 133],\r\n\t"midnightblue": [25, 25, 112],\r\n\t"mintcream": [245, 255, 250],\r\n\t"mistyrose": [255, 228, 225],\r\n\t"moccasin": [255, 228, 181],\r\n\t"navajowhite": [255, 222, 173],\r\n\t"navy": [0, 0, 128],\r\n\t"oldlace": [253, 245, 230],\r\n\t"olive": [128, 128, 0],\r\n\t"olivedrab": [107, 142, 35],\r\n\t"orange": [255, 165, 0],\r\n\t"orangered": [255, 69, 0],\r\n\t"orchid": [218, 112, 214],\r\n\t"palegoldenrod": [238, 232, 170],\r\n\t"palegreen": [152, 251, 152],\r\n\t"paleturquoise": [175, 238, 238],\r\n\t"palevioletred": [219, 112, 147],\r\n\t"papayawhip": [255, 239, 213],\r\n\t"peachpuff": [255, 218, 185],\r\n\t"peru": [205, 133, 63],\r\n\t"pink": [255, 192, 203],\r\n\t"plum": [221, 160, 221],\r\n\t"powderblue": [176, 224, 230],\r\n\t"purple": [128, 0, 128],\r\n\t"rebeccapurple": [102, 51, 153],\r\n\t"red": [255, 0, 0],\r\n\t"rosybrown": [188, 143, 143],\r\n\t"royalblue": [65, 105, 225],\r\n\t"saddlebrown": [139, 69, 19],\r\n\t"salmon": [250, 128, 114],\r\n\t"sandybrown": [244, 164, 96],\r\n\t"seagreen": [46, 139, 87],\r\n\t"seashell": [255, 245, 238],\r\n\t"sienna": [160, 82, 45],\r\n\t"silver": [192, 192, 192],\r\n\t"skyblue": [135, 206, 235],\r\n\t"slateblue": [106, 90, 205],\r\n\t"slategray": [112, 128, 144],\r\n\t"slategrey": [112, 128, 144],\r\n\t"snow": [255, 250, 250],\r\n\t"springgreen": [0, 255, 127],\r\n\t"steelblue": [70, 130, 180],\r\n\t"tan": [210, 180, 140],\r\n\t"teal": [0, 128, 128],\r\n\t"thistle": [216, 191, 216],\r\n\t"tomato": [255, 99, 71],\r\n\t"turquoise": [64, 224, 208],\r\n\t"violet": [238, 130, 238],\r\n\t"wheat": [245, 222, 179],\r\n\t"white": [255, 255, 255],\r\n\t"whitesmoke": [245, 245, 245],\r\n\t"yellow": [255, 255, 0],\r\n\t"yellowgreen": [154, 205, 50]\r\n};\r\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/color-name/index.js?')},"../../node_modules/core-util-is/lib/util.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/core-util-is/lib/util.js?")},"../../node_modules/create-hash/browser.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar inherits = __webpack_require__(/*! inherits */ "../../node_modules/inherits/inherits_browser.js")\nvar MD5 = __webpack_require__(/*! md5.js */ "../../node_modules/md5.js/index.js")\nvar RIPEMD160 = __webpack_require__(/*! ripemd160 */ "../../node_modules/ripemd160/index.js")\nvar sha = __webpack_require__(/*! sha.js */ "../../node_modules/sha.js/index.js")\nvar Base = __webpack_require__(/*! cipher-base */ "../../node_modules/cipher-base/index.js")\n\nfunction Hash (hash) {\n  Base.call(this, \'digest\')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === \'md5\') return new MD5()\n  if (alg === \'rmd160\' || alg === \'ripemd160\') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/create-hash/browser.js?')},"../../node_modules/debug/src/browser.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"../../node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"../../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/debug/src/browser.js?")},"../../node_modules/debug/src/common.js":function(module,exports,__webpack_require__){eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"../../node_modules/ms/index.js\");\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/debug/src/common.js?")},"../../node_modules/events/events.js":function(module,exports,__webpack_require__){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/events/events.js?")},"../../node_modules/form-data/lib/browser.js":function(module,exports){eval("/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/form-data/lib/browser.js?")},"../../node_modules/hash-base/index.js":function(module,exports,__webpack_require__){"use strict";eval("\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer\nvar Transform = __webpack_require__(/*! readable-stream */ \"../../node_modules/hash-base/node_modules/readable-stream/readable-browser.js\").Transform\nvar inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/index.js?")},"../../node_modules/hash-base/node_modules/readable-stream/errors-browser.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/node_modules/readable-stream/errors-browser.js?")},"../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = __webpack_require__(/*! ./_stream_readable */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js\");\n\nvar Writable = __webpack_require__(/*! ./_stream_writable */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js\");\n\n__webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"../../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js?")},"../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js":function(module,exports,__webpack_require__){"use strict";eval('// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(/*! ./_stream_transform */ "../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js");\n\n__webpack_require__(/*! inherits */ "../../node_modules/inherits/inherits_browser.js")(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js?')},"../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = __webpack_require__(/*! events */ \"../../node_modules/events/events.js\").EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n\nvar Buffer = __webpack_require__(/*! buffer */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = __webpack_require__(/*! util */ 1);\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = __webpack_require__(/*! ./internal/streams/buffer_list */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js\");\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nvar _require = __webpack_require__(/*! ./internal/streams/state */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js\"),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = __webpack_require__(/*! ../errors */ \"../../node_modules/hash-base/node_modules/readable-stream/errors-browser.js\").codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\n__webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js\");\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"../../node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js\");\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"../../node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = __webpack_require__(/*! ./internal/streams/async_iterator */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js\");\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = __webpack_require__(/*! ./internal/streams/from */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js\");\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \"../../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../../../process/browser.js */ \"../../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js?")},"../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js":function(module,exports,__webpack_require__){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\nmodule.exports = Transform;\n\nvar _require$codes = __webpack_require__(/*! ../errors */ \"../../node_modules/hash-base/node_modules/readable-stream/errors-browser.js\").codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = __webpack_require__(/*! ./_stream_duplex */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js\");\n\n__webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js?")},"../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: __webpack_require__(/*! util-deprecate */ \"../../node_modules/util-deprecate/browser.js\")\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n\nvar Buffer = __webpack_require__(/*! buffer */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nvar _require = __webpack_require__(/*! ./internal/streams/state */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js\"),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = __webpack_require__(/*! ../errors */ \"../../node_modules/hash-base/node_modules/readable-stream/errors-browser.js\").codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\n__webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\")(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js\");\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js\"); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \"../../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../../../process/browser.js */ \"../../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js?")},"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = __webpack_require__(/*! ./end-of-stream */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../process/browser.js */ \"../../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js?")},"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = __webpack_require__(/*! buffer */ "../../node_modules/node-libs-browser/node_modules/buffer/index.js"),\n    Buffer = _require.Buffer;\n\nvar _require2 = __webpack_require__(/*! util */ 2),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || \'inspect\';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: "push",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: "unshift",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: "shift",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: "clear",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: "join",\n    value: function join(s) {\n      if (this.length === 0) return \'\';\n      var p = this.head;\n      var ret = \'\' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: "concat",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: "consume",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: "first",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: "_getString",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: "_getBuffer",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js?')},"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(process) { // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../process/browser.js */ \"../../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js?")},"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js":function(module,exports,__webpack_require__){"use strict";eval("// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n\nvar ERR_STREAM_PREMATURE_CLOSE = __webpack_require__(/*! ../../../errors */ \"../../node_modules/hash-base/node_modules/readable-stream/errors-browser.js\").codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js?")},"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js":function(module,exports){eval("module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js?")},"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js":function(module,exports,__webpack_require__){"use strict";eval("// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = __webpack_require__(/*! ../../../errors */ \"../../node_modules/hash-base/node_modules/readable-stream/errors-browser.js\").codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = __webpack_require__(/*! ./end-of-stream */ \"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js?")},"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar ERR_INVALID_OPT_VALUE = __webpack_require__(/*! ../../../errors */ \"../../node_modules/hash-base/node_modules/readable-stream/errors-browser.js\").codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js?")},"../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js":function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__(/*! events */ "../../node_modules/events/events.js").EventEmitter;\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js?')},"../../node_modules/hash-base/node_modules/readable-stream/readable-browser.js":function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ "../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js");\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ "../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js");\nexports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ "../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js");\nexports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ "../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js");\nexports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ "../../node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js");\nexports.finished = __webpack_require__(/*! ./lib/internal/streams/end-of-stream.js */ "../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js");\nexports.pipeline = __webpack_require__(/*! ./lib/internal/streams/pipeline.js */ "../../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js");\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/hash-base/node_modules/readable-stream/readable-browser.js?')},"../../node_modules/ieee754/index.js":function(module,exports){eval("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/ieee754/index.js?")},"../../node_modules/inherits/inherits_browser.js":function(module,exports){eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/inherits/inherits_browser.js?")},"../../node_modules/isarray/index.js":function(module,exports){eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/isarray/index.js?")},"../../node_modules/jsrp/jsrp.js":function(module,exports,__webpack_require__){eval('module.exports.client = __webpack_require__(/*! ./lib/client */ "../../node_modules/jsrp/lib/client.js");\nmodule.exports.server = __webpack_require__(/*! ./lib/server */ "../../node_modules/jsrp/lib/server.js");\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/jsrp/jsrp.js?')},"../../node_modules/jsrp/lib/client.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// Generated by CoffeeScript 2.3.2\n(function() {\n  var Client, SRP, transform;\n\n  transform = __webpack_require__(/*! ./transform */ \"../../node_modules/jsrp/lib/transform.js\");\n\n  SRP = __webpack_require__(/*! ./srp */ \"../../node_modules/jsrp/lib/srp.js\");\n\n  // This is a high-level client interface for the SRP protocol.\n  Client = class Client {\n    // Init generates the \"a\" value and stores it.\n    init(options, callback) {\n      var length;\n      this.IBuf = Buffer.from(options.username);\n      this.PBuf = Buffer.from(options.password);\n      length = options.length || 4096;\n      this.srp = new SRP(length);\n      return this.srp.a((err, a) => {\n        this.aInt = a;\n        this.ABuf = this.srp.A({\n          a: this.aInt\n        });\n        return callback();\n      });\n    }\n\n    // Over-ride random \"a\" selection\n    debugInit(options, callback) {\n      var length;\n      this.IBuf = Buffer.from(options.username);\n      this.PBuf = Buffer.from(options.password);\n      length = options.length || 4096;\n      this.srp = new SRP(length);\n      this.aInt = transform.buffer.toBigInteger(options.a);\n      this.ABuf = this.srp.A({\n        a: this.aInt\n      });\n      return callback();\n    }\n\n    getPublicKey() {\n      return this.ABuf.toString('hex');\n    }\n\n    // Set the salt value. Salt should be provided in HEX format.\n    setSalt(hexSalt) {\n      this.saltBuf = Buffer.from(hexSalt, 'hex');\n      // Now that we have the salt, we can also calulate x.\n      return this.xInt = this.srp.x({\n        I: this.IBuf,\n        P: this.PBuf,\n        salt: this.saltBuf\n      });\n    }\n\n    // Set the server B value, B should be provided in hex as well.\n    // RFC 2945 states that we must abort authentication if B % N is zero.\n    setServerPublicKey(hexB) {\n      var BBigInt;\n      this.BBuf = Buffer.from(hexB, 'hex');\n      BBigInt = transform.buffer.toBigInteger(this.BBuf);\n      if (this.srp.isZeroWhenModN(BBigInt)) {\n        throw Error('Invalid B value, abort');\n      }\n      // We have been given B, which means we can calculate u.\n      this.uInt = this.srp.u({\n        A: this.ABuf,\n        B: this.BBuf\n      });\n      // We can also calculate our secret.\n      this.SBuf = this.srp.clientS({\n        B: transform.buffer.toBigInteger(this.BBuf),\n        a: this.aInt,\n        u: this.uInt,\n        x: this.xInt\n      });\n      // Once we have the secret, we can calculate K.\n      return this.KBuf = this.srp.K({\n        S: this.SBuf\n      });\n    }\n\n    // Get our M1 in Hex value to send to the server for verification.\n    getProof() {\n      this.M1Buf = this.srp.M1({\n        A: this.ABuf,\n        B: this.BBuf,\n        K: this.KBuf\n      });\n      return this.M1Buf.toString('hex');\n    }\n\n    // Allow us to verify the server's M2 response.\n    checkServerProof(hexM2) {\n      var ServerM2Buf, result;\n      ServerM2Buf = Buffer.from(hexM2, 'hex');\n      this.M2Buf = this.srp.M2({\n        A: this.ABuf,\n        M: this.M1Buf,\n        K: this.KBuf\n      });\n      result = this.M2Buf.toString('hex') === ServerM2Buf.toString('hex');\n      return result;\n    }\n\n    // Return the shared key K in hex format so that it can be used with other\n    // libraries.\n    getSharedKey() {\n      return this.KBuf.toString('hex');\n    }\n\n    createVerifier(callback) {\n      return this.srp.generateSalt((err, salt) => {\n        var result;\n        this.saltBuf = salt;\n        result = this.srp.v({\n          I: this.IBuf,\n          P: this.PBuf,\n          salt: this.saltBuf\n        });\n        result = result.toString('hex');\n        return callback(null, {\n          verifier: result,\n          salt: this.getSalt()\n        });\n      });\n    }\n\n    getSalt() {\n      return this.saltBuf.toString('hex');\n    }\n\n  };\n\n  module.exports = Client;\n\n}).call(this);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/jsrp/lib/client.js?")},"../../node_modules/jsrp/lib/parameters.js":function(module,exports,__webpack_require__){eval("// Generated by CoffeeScript 2.3.2\n(function() {\n  var Parameters, transform;\n\n  transform = __webpack_require__(/*! ./transform */ \"../../node_modules/jsrp/lib/transform.js\");\n\n  // These parameters are pulled directly from RFC 5054 at:\n  // http://tools.ietf.org/html/rfc5054#appendix-A\n  Parameters = class Parameters {\n    constructor() {\n      this.params = {};\n      this.params['1024'] = {\n        length: 1024,\n        hash: 'sha1',\n        g: '02',\n        N: 'EEAF0AB9 ADB38DD6 9C33F80A FA8FC5E8 60726187 75FF3C0B 9EA2314C 9C256576 D674DF74 96EA81D3 383B4813 D692C6E0 E0D5D8E2 50B98BE4 8E495C1D 6089DAD1 5DC7D7B4 6154D6B6 CE8EF4AD 69B15D49 82559B29 7BCF1885 C529F566 660E57EC 68EDBC3C 05726CC0 2FD4CBF4 976EAA9A FD5138FE 8376435B 9FC61D2F C0EB06E3'\n      };\n      this.params['1536'] = {\n        length: 1536,\n        hash: 'sha1',\n        g: '02',\n        N: '9DEF3CAF B939277A B1F12A86 17A47BBB DBA51DF4 99AC4C80 BEEEA961 4B19CC4D 5F4F5F55 6E27CBDE 51C6A94B E4607A29 1558903B A0D0F843 80B655BB 9A22E8DC DF028A7C EC67F0D0 8134B1C8 B9798914 9B609E0B E3BAB63D 47548381 DBC5B1FC 764E3F4B 53DD9DA1 158BFD3E 2B9C8CF5 6EDF0195 39349627 DB2FD53D 24B7C486 65772E43 7D6C7F8C E442734A F7CCB7AE 837C264A E3A9BEB8 7F8A2FE9 B8B5292E 5A021FFF 5E91479E 8CE7A28C 2442C6F3 15180F93 499A234D CF76E3FE D135F9BB'\n      };\n      this.params['2048'] = {\n        length: 2048,\n        hash: 'sha256',\n        g: '02',\n        N: 'AC6BDB41 324A9A9B F166DE5E 1389582F AF72B665 1987EE07 FC319294 3DB56050 A37329CB B4A099ED 8193E075 7767A13D D52312AB 4B03310D CD7F48A9 DA04FD50 E8083969 EDB767B0 CF609517 9A163AB3 661A05FB D5FAAAE8 2918A996 2F0B93B8 55F97993 EC975EEA A80D740A DBF4FF74 7359D041 D5C33EA7 1D281E44 6B14773B CA97B43A 23FB8016 76BD207A 436C6481 F1D2B907 8717461A 5B9D32E6 88F87748 544523B5 24B0D57D 5EA77A27 75D2ECFA 032CFBDB F52FB378 61602790 04E57AE6 AF874E73 03CE5329 9CCC041C 7BC308D8 2A5698F3 A8D0C382 71AE35F8 E9DBFBB6 94B5C803 D89F7AE4 35DE236D 525F5475 9B65E372 FCD68EF2 0FA7111F 9E4AFF73'\n      };\n      this.params['3072'] = {\n        length: 3072,\n        hash: 'sha256',\n        g: '05',\n        N: 'FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1 29024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DD EF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245 E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7ED EE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3D C2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8 FD24CF5F 83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D 670C354E 4ABC9804 F1746C08 CA18217C 32905E46 2E36CE3B E39E772C 180E8603 9B2783A2 EC07A28F B5C55DF0 6F4C52C9 DE2BCBF6 95581718 3995497C EA956AE5 15D22618 98FA0510 15728E5A 8AAAC42D AD33170D 04507A33 A85521AB DF1CBA64 ECFB8504 58DBEF0A 8AEA7157 5D060C7D B3970F85 A6E1E4C7 ABF5AE8C DB0933D7 1E8C94E0 4A25619D CEE3D226 1AD2EE6B F12FFA06 D98A0864 D8760273 3EC86A64 521F2B18 177B200C BBE11757 7A615D6C 770988C0 BAD946E2 08E24FA0 74E5AB31 43DB5BFC E0FD108E 4B82D120 A93AD2CA FFFFFFFF FFFFFFFF'\n      };\n      this.params['4096'] = {\n        length: 4096,\n        hash: 'sha256',\n        g: '05',\n        N: 'FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1 29024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DD EF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245 E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7ED EE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3D C2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8 FD24CF5F 83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D 670C354E 4ABC9804 F1746C08 CA18217C 32905E46 2E36CE3B E39E772C 180E8603 9B2783A2 EC07A28F B5C55DF0 6F4C52C9 DE2BCBF6 95581718 3995497C EA956AE5 15D22618 98FA0510 15728E5A 8AAAC42D AD33170D 04507A33 A85521AB DF1CBA64 ECFB8504 58DBEF0A 8AEA7157 5D060C7D B3970F85 A6E1E4C7 ABF5AE8C DB0933D7 1E8C94E0 4A25619D CEE3D226 1AD2EE6B F12FFA06 D98A0864 D8760273 3EC86A64 521F2B18 177B200C BBE11757 7A615D6C 770988C0 BAD946E2 08E24FA0 74E5AB31 43DB5BFC E0FD108E 4B82D120 A9210801 1A723C12 A787E6D7 88719A10 BDBA5B26 99C32718 6AF4E23C 1A946834 B6150BDA 2583E9CA 2AD44CE8 DBBBC2DB 04DE8EF9 2E8EFC14 1FBECAA6 287C5947 4E6BC05D 99B2964F A090C3A2 233BA186 515BE7ED 1F612970 CEE2D7AF B81BDD76 2170481C D0069127 D5B05AA9 93B4EA98 8D8FDDC1 86FFB7DC 90A6C08F 4DF435C9 34063199 FFFFFFFF FFFFFFFF'\n      };\n      this.params['6144'] = {\n        length: 6144,\n        hash: 'sha256',\n        g: '05',\n        N: 'FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1 29024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DD EF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245 E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7ED EE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3D C2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8 FD24CF5F 83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D 670C354E 4ABC9804 F1746C08 CA18217C 32905E46 2E36CE3B E39E772C 180E8603 9B2783A2 EC07A28F B5C55DF0 6F4C52C9 DE2BCBF6 95581718 3995497C EA956AE5 15D22618 98FA0510 15728E5A 8AAAC42D AD33170D 04507A33 A85521AB DF1CBA64 ECFB8504 58DBEF0A 8AEA7157 5D060C7D B3970F85 A6E1E4C7 ABF5AE8C DB0933D7 1E8C94E0 4A25619D CEE3D226 1AD2EE6B F12FFA06 D98A0864 D8760273 3EC86A64 521F2B18 177B200C BBE11757 7A615D6C 770988C0 BAD946E2 08E24FA0 74E5AB31 43DB5BFC E0FD108E 4B82D120 A9210801 1A723C12 A787E6D7 88719A10 BDBA5B26 99C32718 6AF4E23C 1A946834 B6150BDA 2583E9CA 2AD44CE8 DBBBC2DB 04DE8EF9 2E8EFC14 1FBECAA6 287C5947 4E6BC05D 99B2964F A090C3A2 233BA186 515BE7ED 1F612970 CEE2D7AF B81BDD76 2170481C D0069127 D5B05AA9 93B4EA98 8D8FDDC1 86FFB7DC 90A6C08F 4DF435C9 34028492 36C3FAB4 D27C7026 C1D4DCB2 602646DE C9751E76 3DBA37BD F8FF9406 AD9E530E E5DB382F 413001AE B06A53ED 9027D831 179727B0 865A8918 DA3EDBEB CF9B14ED 44CE6CBA CED4BB1B DB7F1447 E6CC254B 33205151 2BD7AF42 6FB8F401 378CD2BF 5983CA01 C64B92EC F032EA15 D1721D03 F482D7CE 6E74FEF6 D55E702F 46980C82 B5A84031 900B1C9E 59E7C97F BEC7E8F3 23A97A7E 36CC88BE 0F1D45B7 FF585AC5 4BD407B2 2B4154AA CC8F6D7E BF48E1D8 14CC5ED2 0F8037E0 A79715EE F29BE328 06A1D58B B7C5DA76 F550AA3D 8A1FBFF0 EB19CCB1 A313D55C DA56C9EC 2EF29632 387FE8D7 6E3C0468 043E8F66 3F4860EE 12BF2D5B 0B7474D6 E694F91E 6DCC4024 FFFFFFFF FFFFFFFF'\n      };\n      this.params['8192'] = {\n        length: 8192,\n        hash: 'sha256',\n        g: '13',\n        N: 'FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1 29024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DD EF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245 E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7ED EE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3D C2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8 FD24CF5F 83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D 670C354E 4ABC9804 F1746C08 CA18217C 32905E46 2E36CE3B E39E772C 180E8603 9B2783A2 EC07A28F B5C55DF0 6F4C52C9 DE2BCBF6 95581718 3995497C EA956AE5 15D22618 98FA0510 15728E5A 8AAAC42D AD33170D 04507A33 A85521AB DF1CBA64 ECFB8504 58DBEF0A 8AEA7157 5D060C7D B3970F85 A6E1E4C7 ABF5AE8C DB0933D7 1E8C94E0 4A25619D CEE3D226 1AD2EE6B F12FFA06 D98A0864 D8760273 3EC86A64 521F2B18 177B200C BBE11757 7A615D6C 770988C0 BAD946E2 08E24FA0 74E5AB31 43DB5BFC E0FD108E 4B82D120 A9210801 1A723C12 A787E6D7 88719A10 BDBA5B26 99C32718 6AF4E23C 1A946834 B6150BDA 2583E9CA 2AD44CE8 DBBBC2DB 04DE8EF9 2E8EFC14 1FBECAA6 287C5947 4E6BC05D 99B2964F A090C3A2 233BA186 515BE7ED 1F612970 CEE2D7AF B81BDD76 2170481C D0069127 D5B05AA9 93B4EA98 8D8FDDC1 86FFB7DC 90A6C08F 4DF435C9 34028492 36C3FAB4 D27C7026 C1D4DCB2 602646DE C9751E76 3DBA37BD F8FF9406 AD9E530E E5DB382F 413001AE B06A53ED 9027D831 179727B0 865A8918 DA3EDBEB CF9B14ED 44CE6CBA CED4BB1B DB7F1447 E6CC254B 33205151 2BD7AF42 6FB8F401 378CD2BF 5983CA01 C64B92EC F032EA15 D1721D03 F482D7CE 6E74FEF6 D55E702F 46980C82 B5A84031 900B1C9E 59E7C97F BEC7E8F3 23A97A7E 36CC88BE 0F1D45B7 FF585AC5 4BD407B2 2B4154AA CC8F6D7E BF48E1D8 14CC5ED2 0F8037E0 A79715EE F29BE328 06A1D58B B7C5DA76 F550AA3D 8A1FBFF0 EB19CCB1 A313D55C DA56C9EC 2EF29632 387FE8D7 6E3C0468 043E8F66 3F4860EE 12BF2D5B 0B7474D6 E694F91E 6DBE1159 74A3926F 12FEE5E4 38777CB6 A932DF8C D8BEC4D0 73B931BA 3BC832B6 8D9DD300 741FA7BF 8AFC47ED 2576F693 6BA42466 3AAB639C 5AE4F568 3423B474 2BF1C978 238F16CB E39D652D E3FDB8BE FC848AD9 22222E04 A4037C07 13EB57A8 1A23F0C7 3473FC64 6CEA306B 4BCBC886 2F8385DD FA9D4B7F A2C087E8 79683303 ED5BDD3A 062B3CF5 B3A278A6 6D2A13F8 3F44F82D DF310EE0 74AB6A36 4597E899 A0255DC1 64F31CC5 0846851D F9AB4819 5DED7EA1 B1D510BD 7EE74D73 FAF36BC3 1ECFA268 359046F4 EB879F92 4009438B 481C6CD7 889A002E D5EE382B C9190DA6 FC026E47 9558E447 5677E9AA 9E3050E2 765694DF C81F56E8 80B96E71 60C980DD 98EDD3DF FFFFFFFF FFFFFFFF'\n      };\n      Object.keys(this.params).forEach((key) => {\n        this.params[key].N = transform.bigInt.fromHex(transform.cleanHex(this.params[key].N));\n        return this.params[key].g = transform.bigInt.fromHex(this.params[key].g);\n      });\n    }\n\n    get(length) {\n      return this.params[length];\n    }\n\n  };\n\n  module.exports = new Parameters;\n\n}).call(this);\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/jsrp/lib/parameters.js?")},"../../node_modules/jsrp/lib/server.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// Generated by CoffeeScript 2.3.2\n(function() {\n  var SRP, Server, transform;\n\n  transform = __webpack_require__(/*! ./transform */ \"../../node_modules/jsrp/lib/transform.js\");\n\n  SRP = __webpack_require__(/*! ./srp */ \"../../node_modules/jsrp/lib/srp.js\");\n\n  // This is a high-level client interface for the SRP protocol.\n  Server = class Server {\n    init(options, callback) {\n      var bBuf, length;\n      this.vBuf = Buffer.from(options.verifier, 'hex');\n      this.saltBuf = Buffer.from(options.salt, 'hex');\n      length = options.length || 4096;\n      this.srp = new SRP(length);\n      if (options.b) {\n        bBuf = Buffer.from(options.b, 'hex');\n        this.bInt = transform.buffer.toBigInteger(bBuf);\n        this.BBuf = this.srp.B({\n          b: this.bInt,\n          v: transform.buffer.toBigInteger(this.vBuf)\n        });\n        return callback();\n      } else {\n        return this.srp.b((err, b) => {\n          this.bInt = b;\n          this.BBuf = this.srp.B({\n            b: this.bInt,\n            v: transform.buffer.toBigInteger(this.vBuf)\n          });\n          return callback();\n        });\n      }\n    }\n\n    getPublicKey() {\n      return this.BBuf.toString('hex');\n    }\n\n    getPrivateKey() {\n      var bBuf;\n      bBuf = transform.bigInt.toBuffer(this.bInt);\n      return bBuf.toString('hex');\n    }\n\n    getSalt() {\n      return this.saltBuf.toString('hex');\n    }\n\n    setClientPublicKey(hexA) {\n      var ABigInt;\n      this.ABuf = Buffer.from(hexA, 'hex');\n      ABigInt = transform.buffer.toBigInteger(this.ABuf);\n      if (this.srp.isZeroWhenModN(ABigInt)) {\n        throw Error('Invalid A value, abort');\n      }\n      // We have been given B, which means we can calculate u.\n      this.uInt = this.srp.u({\n        A: this.ABuf,\n        B: this.BBuf\n      });\n      // We can also calculate our secret.\n      this.SBuf = this.srp.serverS({\n        A: transform.buffer.toBigInteger(this.ABuf),\n        v: transform.buffer.toBigInteger(this.vBuf),\n        u: this.uInt,\n        b: this.bInt\n      });\n      // Once we have the secret, we can calculate K.\n      return this.KBuf = this.srp.K({\n        S: this.SBuf\n      });\n    }\n\n    getSharedKey() {\n      return this.KBuf.toString('hex');\n    }\n\n    checkClientProof(M1hex) {\n      var clientM1Buf, result;\n      clientM1Buf = Buffer.from(M1hex, 'hex');\n      this.M1Buf = this.srp.M1({\n        A: this.ABuf,\n        B: this.BBuf,\n        K: this.KBuf\n      });\n      result = this.M1Buf.toString('hex') === clientM1Buf.toString('hex');\n      return result;\n    }\n\n    getProof() {\n      var result;\n      this.M2Buf = this.srp.M2({\n        A: this.ABuf,\n        M: this.M1Buf,\n        K: this.KBuf\n      });\n      result = this.M2Buf.toString('hex');\n      return result;\n    }\n\n  };\n\n  module.exports = Server;\n\n}).call(this);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/jsrp/lib/server.js?")},"../../node_modules/jsrp/lib/srp.js":function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(Buffer) {// Generated by CoffeeScript 2.3.2\n(function() {\n  var BigInteger, SRP, createHash, parameters, randomBytes, transform;\n\n  BigInteger = __webpack_require__(/*! jsbn */ "../../node_modules/jsrp/node_modules/jsbn/index.js").BigInteger;\n\n  createHash = __webpack_require__(/*! create-hash */ "../../node_modules/create-hash/browser.js");\n\n  randomBytes = __webpack_require__(/*! randombytes */ "../../node_modules/randombytes/browser.js");\n\n  transform = __webpack_require__(/*! ./transform */ "../../node_modules/jsrp/lib/transform.js");\n\n  parameters = __webpack_require__(/*! ./parameters */ "../../node_modules/jsrp/lib/parameters.js");\n\n  SRP = class SRP {\n    constructor(length) {\n      this.params = parameters.get(length);\n    }\n\n    // x = H(s | H(I | ":" | P))\n    // Returns bigInteger\n    x(options) {\n      var I, P, identifierPasswordHash, result, salt, xHash;\n      // Options expects I, P, and salt property, where I is the identifier\n      // and P is the password. All of these should be buffers.\n      I = options.I;\n      P = options.P;\n      salt = options.salt;\n      identifierPasswordHash = createHash(this.params.hash).update(I).update(Buffer.from(\':\')).update(P).digest();\n      xHash = createHash(this.params.hash).update(salt).update(identifierPasswordHash).digest();\n      result = transform.buffer.toBigInteger(xHash);\n      return result;\n    }\n\n    // v = g^x % N\n    // Returns Buffer\n    v(options) {\n      var I, P, result, salt;\n      // Expects salt, I, P\n      I = options.I;\n      P = options.P;\n      salt = options.salt;\n      result = this.params.g.modPow(this.x(options), this.params.N);\n      result = transform.pad.toN(result, this.params);\n      return result;\n    }\n\n    // Returns a random BigInteger\n    a(callback) {\n      return randomBytes(32, function(err, resultBuf) {\n        var result;\n        result = transform.buffer.toBigInteger(resultBuf);\n        return callback(err, result);\n      });\n    }\n\n    // Returns a random BigInteger\n    b(callback) {\n      return randomBytes(32, function(err, resultBuf) {\n        var result;\n        result = transform.buffer.toBigInteger(resultBuf);\n        return callback(err, result);\n      });\n    }\n\n    // A = g^a % N\n    A(options) {\n      var a, result;\n      // Expects a, which should be a random BigInteger\n      a = options.a;\n      // Check here to ensure that a.length is not smaller than 256\n      result = this.params.g.modPow(a, this.params.N);\n      result = transform.pad.toN(result, this.params);\n      return result;\n    }\n\n    // B = (kv + g^b) % N\n    B(options) {\n      var b, result, v;\n      // Expects v, which should be the client verifier BigInteger, and b,\n      // which should be a random BigInteger\n      v = options.v; // BigInteger\n      b = options.b; // BigInteger\n      \n      // This actually ends up being (v + (g^b % N)) % N, this is the way\n      // everyone else is doing it, so it\'s the way we\'re gonna do it.\n      result = this.k().multiply(v).add(this.params.g.modPow(b, this.params.N)).mod(this.params.N);\n      result = transform.pad.toN(result, this.params);\n      return result;\n    }\n\n    // u = H(A | B)\n    // Returns BigInteger\n    u(options) {\n      var A, B, result;\n      // We want A and B, both in buffer format.\n      A = options.A; // Buffer\n      B = options.B; // Buffer\n      result = createHash(this.params.hash).update(A).update(B).digest();\n      result = transform.buffer.toBigInteger(result);\n      return result;\n    }\n\n    // Client S calculation, where S = (B - g^x) ^ (a + u * x) % N\n    // Returns Buffer\n    clientS(options) {\n      var B, a, result, u, x;\n      B = options.B; // BigInteger\n      a = options.a; // BigInteger\n      u = options.u; // BigInteger\n      x = options.x; // BigInteger\n      result = B.subtract(this.k().multiply(this.params.g.modPow(x, this.params.N))).modPow(a.add(u.multiply(x)), this.params.N);\n      result = transform.pad.toN(result, this.params);\n      return result;\n    }\n\n    // S = (A * v^u) ^ b % N\n    serverS(options) {\n      var A, b, result, u, v;\n      A = options.A; // BigInteger\n      v = options.v; // BigInteger\n      u = options.u; // BigInteger\n      b = options.b; // BigInteger\n      result = A.multiply(v.modPow(u, this.params.N)).modPow(b, this.params.N);\n      result = transform.pad.toN(result, this.params);\n      return result;\n    }\n\n    // SRP-6 multiplier\n    // Returns BigInteger\n    k() {\n      var result;\n      result = createHash(this.params.hash).update(transform.pad.toN(this.params.N, this.params)).update(transform.pad.toN(this.params.g, this.params)).digest();\n      result = transform.buffer.toBigInteger(result);\n      return result;\n    }\n\n    K(options) {\n      var S, result;\n      S = options.S; // Buffer\n      result = createHash(this.params.hash).update(S).digest();\n      return result;\n    }\n\n    M1(options) {\n      var A, B, K, result;\n      A = options.A; // Buffer\n      B = options.B; // Buffer\n      K = options.K; // Buffer\n      result = createHash(this.params.hash).update(A).update(B).update(K).digest();\n      return result;\n    }\n\n    M2(options) {\n      var A, K, M, result;\n      A = options.A; // Buffer\n      M = options.M; // Buffer\n      K = options.K; // Buffer\n      result = createHash(this.params.hash).update(A).update(M).update(K).digest();\n      return result;\n    }\n\n    generateSalt(callback) {\n      return randomBytes(32, function(err, resultBuf) {\n        return callback(err, resultBuf);\n      });\n    }\n\n    // This is used to ensure that values are not zero when mod N.\n    isZeroWhenModN(thisBigInt) {\n      return thisBigInt.mod(this.params.N).equals(BigInteger.ZERO);\n    }\n\n  };\n\n  module.exports = SRP;\n\n}).call(this);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ "../../node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/jsrp/lib/srp.js?')},"../../node_modules/jsrp/lib/transform.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// Generated by CoffeeScript 2.3.2\n(function() {\n  var BigInteger, Transform;\n\n  BigInteger = __webpack_require__(/*! jsbn */ \"../../node_modules/jsrp/node_modules/jsbn/index.js\").BigInteger;\n\n  Transform = (function() {\n    var TransBigInt, TransBuffer, TransPad;\n\n    class Transform {\n      cleanHex(hexStr) {\n        return hexStr.split(/\\s/).join('');\n      }\n\n      constructor() {\n        this.bigInt = new TransBigInt;\n        this.buffer = new TransBuffer;\n        this.pad = new TransPad;\n      }\n\n    };\n\n    TransBigInt = class TransBigInt {\n      // Specify the toHex method in case we decide to change BigInteger \n      // libraries.\n      toHex(bigIntegerObj) {\n        var thisHexString;\n        thisHexString = bigIntegerObj.toString(16);\n        // If the length of the hex string is odd, JSBN left off a leading\n        // zero.\n        if (thisHexString.length % 2 === 1) {\n          thisHexString = \"0\" + thisHexString;\n        }\n        return thisHexString;\n      }\n\n      fromHex(hexStr) {\n        return new BigInteger(hexStr, 16);\n      }\n\n      // Convert a BigInteger to a buffer. This works by converting the\n      // BigInteger to a hex string, then loading the hex string into a buffer.\n      // Definitely not the best way to do it, but it works well.\n      toBuffer(bigIntegerObj) {\n        var thisHexString;\n        thisHexString = this.toHex(bigIntegerObj);\n        return Buffer.from(thisHexString, 'hex');\n      }\n\n    };\n\n    TransBuffer = class TransBuffer {\n      toHex(bufferObj) {\n        return bufferObj.toString('hex');\n      }\n\n      // Convert a buffer to a BigInteger. This works the same way TransBigInt.\n      // toBuffer works, by first converting to hex and then loading back.\n      toBigInteger(bufferObj) {\n        var thisHexString;\n        thisHexString = this.toHex(bufferObj);\n        return new BigInteger(thisHexString, 16);\n      }\n\n    };\n\n    TransPad = class TransPad extends TransBigInt {\n      to(n, length) {\n        var padding, result;\n        padding = length - n.length;\n        // Check for negative padding here.\n        result = Buffer.alloc(length);\n        result.fill(0, 0, padding);\n        n.copy(result, padding);\n        return result;\n      }\n\n      toN(number, params) {\n        return this.to(this.toBuffer(number), params.length / 8);\n      }\n\n      toH(number, params) {\n        var hashBits;\n        hashBits = null;\n        switch (params.hash) {\n          case 'sha1':\n            hashBits = 160;\n            break;\n          case 'sha256':\n            hashBits = 256;\n            break;\n          case 'sha512':\n            hashBits = 512;\n            break;\n          default:\n            throw Error('Unable to determine hash length!');\n        }\n        return this.to(this.toBuffer(number), hashBits / 8);\n      }\n\n    };\n\n    return Transform;\n\n  }).call(this);\n\n  module.exports = new Transform;\n\n}).call(this);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/jsrp/lib/transform.js?")},"../../node_modules/jsrp/node_modules/jsbn/index.js":function(module,exports,__webpack_require__){eval('(function(){\n\n    // Copyright (c) 2005  Tom Wu\n    // All Rights Reserved.\n    // See "LICENSE" for details.\n\n    // Basic JavaScript BN library - subset useful for RSA encryption.\n\n    // Bits per digit\n    var dbits;\n\n    // JavaScript engine analysis\n    var canary = 0xdeadbeefcafe;\n    var j_lm = ((canary&0xffffff)==0xefcafe);\n\n    // (public) Constructor\n    function BigInteger(a,b,c) {\n      if(a != null)\n        if("number" == typeof a) this.fromNumber(a,b,c);\n        else if(b == null && "string" != typeof a) this.fromString(a,256);\n        else this.fromString(a,b);\n    }\n\n    // return new, unset BigInteger\n    function nbi() { return new BigInteger(null); }\n\n    // am: Compute w_j += (x*this_i), propagate carries,\n    // c is initial carry, returns final carry.\n    // c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n    // We need to select the fastest one that works in this environment.\n\n    // am1: use a single mult and divide to get the high bits,\n    // max digit bits should be 26 because\n    // max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n    function am1(i,x,w,j,c,n) {\n      while(--n >= 0) {\n        var v = x*this[i++]+w[j]+c;\n        c = Math.floor(v/0x4000000);\n        w[j++] = v&0x3ffffff;\n      }\n      return c;\n    }\n    // am2 avoids a big mult-and-extract completely.\n    // Max digit bits should be <= 30 because we do bitwise ops\n    // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n    function am2(i,x,w,j,c,n) {\n      var xl = x&0x7fff, xh = x>>15;\n      while(--n >= 0) {\n        var l = this[i]&0x7fff;\n        var h = this[i++]>>15;\n        var m = xh*l+h*xl;\n        l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);\n        c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n        w[j++] = l&0x3fffffff;\n      }\n      return c;\n    }\n    // Alternately, set max digit bits to 28 since some\n    // browsers slow down when dealing with 32-bit numbers.\n    function am3(i,x,w,j,c,n) {\n      var xl = x&0x3fff, xh = x>>14;\n      while(--n >= 0) {\n        var l = this[i]&0x3fff;\n        var h = this[i++]>>14;\n        var m = xh*l+h*xl;\n        l = xl*l+((m&0x3fff)<<14)+w[j]+c;\n        c = (l>>28)+(m>>14)+xh*h;\n        w[j++] = l&0xfffffff;\n      }\n      return c;\n    }\n    var inBrowser = typeof navigator !== "undefined";\n    if(inBrowser && j_lm && (navigator.appName == "Microsoft Internet Explorer")) {\n      BigInteger.prototype.am = am2;\n      dbits = 30;\n    }\n    else if(inBrowser && j_lm && (navigator.appName != "Netscape")) {\n      BigInteger.prototype.am = am1;\n      dbits = 26;\n    }\n    else { // Mozilla/Netscape seems to prefer am3\n      BigInteger.prototype.am = am3;\n      dbits = 28;\n    }\n\n    BigInteger.prototype.DB = dbits;\n    BigInteger.prototype.DM = ((1<<dbits)-1);\n    BigInteger.prototype.DV = (1<<dbits);\n\n    var BI_FP = 52;\n    BigInteger.prototype.FV = Math.pow(2,BI_FP);\n    BigInteger.prototype.F1 = BI_FP-dbits;\n    BigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n    // Digit conversions\n    var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";\n    var BI_RC = new Array();\n    var rr,vv;\n    rr = "0".charCodeAt(0);\n    for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\n    rr = "a".charCodeAt(0);\n    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n    rr = "A".charCodeAt(0);\n    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\n    function int2char(n) { return BI_RM.charAt(n); }\n    function intAt(s,i) {\n      var c = BI_RC[s.charCodeAt(i)];\n      return (c==null)?-1:c;\n    }\n\n    // (protected) copy this to r\n    function bnpCopyTo(r) {\n      for(var i = this.t-1; i >= 0; --i) r[i] = this[i];\n      r.t = this.t;\n      r.s = this.s;\n    }\n\n    // (protected) set from integer value x, -DV <= x < DV\n    function bnpFromInt(x) {\n      this.t = 1;\n      this.s = (x<0)?-1:0;\n      if(x > 0) this[0] = x;\n      else if(x < -1) this[0] = x+this.DV;\n      else this.t = 0;\n    }\n\n    // return bigint initialized to value\n    function nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n    // (protected) set from string and radix\n    function bnpFromString(s,b) {\n      var k;\n      if(b == 16) k = 4;\n      else if(b == 8) k = 3;\n      else if(b == 256) k = 8; // byte array\n      else if(b == 2) k = 1;\n      else if(b == 32) k = 5;\n      else if(b == 4) k = 2;\n      else { this.fromRadix(s,b); return; }\n      this.t = 0;\n      this.s = 0;\n      var i = s.length, mi = false, sh = 0;\n      while(--i >= 0) {\n        var x = (k==8)?s[i]&0xff:intAt(s,i);\n        if(x < 0) {\n          if(s.charAt(i) == "-") mi = true;\n          continue;\n        }\n        mi = false;\n        if(sh == 0)\n          this[this.t++] = x;\n        else if(sh+k > this.DB) {\n          this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n          this[this.t++] = (x>>(this.DB-sh));\n        }\n        else\n          this[this.t-1] |= x<<sh;\n        sh += k;\n        if(sh >= this.DB) sh -= this.DB;\n      }\n      if(k == 8 && (s[0]&0x80) != 0) {\n        this.s = -1;\n        if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n      }\n      this.clamp();\n      if(mi) BigInteger.ZERO.subTo(this,this);\n    }\n\n    // (protected) clamp off excess high words\n    function bnpClamp() {\n      var c = this.s&this.DM;\n      while(this.t > 0 && this[this.t-1] == c) --this.t;\n    }\n\n    // (public) return string representation in given radix\n    function bnToString(b) {\n      if(this.s < 0) return "-"+this.negate().toString(b);\n      var k;\n      if(b == 16) k = 4;\n      else if(b == 8) k = 3;\n      else if(b == 2) k = 1;\n      else if(b == 32) k = 5;\n      else if(b == 4) k = 2;\n      else return this.toRadix(b);\n      var km = (1<<k)-1, d, m = false, r = "", i = this.t;\n      var p = this.DB-(i*this.DB)%k;\n      if(i-- > 0) {\n        if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }\n        while(i >= 0) {\n          if(p < k) {\n            d = (this[i]&((1<<p)-1))<<(k-p);\n            d |= this[--i]>>(p+=this.DB-k);\n          }\n          else {\n            d = (this[i]>>(p-=k))&km;\n            if(p <= 0) { p += this.DB; --i; }\n          }\n          if(d > 0) m = true;\n          if(m) r += int2char(d);\n        }\n      }\n      return m?r:"0";\n    }\n\n    // (public) -this\n    function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n    // (public) |this|\n    function bnAbs() { return (this.s<0)?this.negate():this; }\n\n    // (public) return + if this > a, - if this < a, 0 if equal\n    function bnCompareTo(a) {\n      var r = this.s-a.s;\n      if(r != 0) return r;\n      var i = this.t;\n      r = i-a.t;\n      if(r != 0) return (this.s<0)?-r:r;\n      while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;\n      return 0;\n    }\n\n    // returns bit length of the integer x\n    function nbits(x) {\n      var r = 1, t;\n      if((t=x>>>16) != 0) { x = t; r += 16; }\n      if((t=x>>8) != 0) { x = t; r += 8; }\n      if((t=x>>4) != 0) { x = t; r += 4; }\n      if((t=x>>2) != 0) { x = t; r += 2; }\n      if((t=x>>1) != 0) { x = t; r += 1; }\n      return r;\n    }\n\n    // (public) return the number of bits in "this"\n    function bnBitLength() {\n      if(this.t <= 0) return 0;\n      return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));\n    }\n\n    // (protected) r = this << n*DB\n    function bnpDLShiftTo(n,r) {\n      var i;\n      for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];\n      for(i = n-1; i >= 0; --i) r[i] = 0;\n      r.t = this.t+n;\n      r.s = this.s;\n    }\n\n    // (protected) r = this >> n*DB\n    function bnpDRShiftTo(n,r) {\n      for(var i = n; i < this.t; ++i) r[i-n] = this[i];\n      r.t = Math.max(this.t-n,0);\n      r.s = this.s;\n    }\n\n    // (protected) r = this << n\n    function bnpLShiftTo(n,r) {\n      var bs = n%this.DB;\n      var cbs = this.DB-bs;\n      var bm = (1<<cbs)-1;\n      var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n      for(i = this.t-1; i >= 0; --i) {\n        r[i+ds+1] = (this[i]>>cbs)|c;\n        c = (this[i]&bm)<<bs;\n      }\n      for(i = ds-1; i >= 0; --i) r[i] = 0;\n      r[ds] = c;\n      r.t = this.t+ds+1;\n      r.s = this.s;\n      r.clamp();\n    }\n\n    // (protected) r = this >> n\n    function bnpRShiftTo(n,r) {\n      r.s = this.s;\n      var ds = Math.floor(n/this.DB);\n      if(ds >= this.t) { r.t = 0; return; }\n      var bs = n%this.DB;\n      var cbs = this.DB-bs;\n      var bm = (1<<bs)-1;\n      r[0] = this[ds]>>bs;\n      for(var i = ds+1; i < this.t; ++i) {\n        r[i-ds-1] |= (this[i]&bm)<<cbs;\n        r[i-ds] = this[i]>>bs;\n      }\n      if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;\n      r.t = this.t-ds;\n      r.clamp();\n    }\n\n    // (protected) r = this - a\n    function bnpSubTo(a,r) {\n      var i = 0, c = 0, m = Math.min(a.t,this.t);\n      while(i < m) {\n        c += this[i]-a[i];\n        r[i++] = c&this.DM;\n        c >>= this.DB;\n      }\n      if(a.t < this.t) {\n        c -= a.s;\n        while(i < this.t) {\n          c += this[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += this.s;\n      }\n      else {\n        c += this.s;\n        while(i < a.t) {\n          c -= a[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c -= a.s;\n      }\n      r.s = (c<0)?-1:0;\n      if(c < -1) r[i++] = this.DV+c;\n      else if(c > 0) r[i++] = c;\n      r.t = i;\n      r.clamp();\n    }\n\n    // (protected) r = this * a, r != this,a (HAC 14.12)\n    // "this" should be the larger one if appropriate.\n    function bnpMultiplyTo(a,r) {\n      var x = this.abs(), y = a.abs();\n      var i = x.t;\n      r.t = i+y.t;\n      while(--i >= 0) r[i] = 0;\n      for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);\n      r.s = 0;\n      r.clamp();\n      if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n    }\n\n    // (protected) r = this^2, r != this (HAC 14.16)\n    function bnpSquareTo(r) {\n      var x = this.abs();\n      var i = r.t = 2*x.t;\n      while(--i >= 0) r[i] = 0;\n      for(i = 0; i < x.t-1; ++i) {\n        var c = x.am(i,x[i],r,2*i,0,1);\n        if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n          r[i+x.t] -= x.DV;\n          r[i+x.t+1] = 1;\n        }\n      }\n      if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);\n      r.s = 0;\n      r.clamp();\n    }\n\n    // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n    // r != q, this != m.  q or r may be null.\n    function bnpDivRemTo(m,q,r) {\n      var pm = m.abs();\n      if(pm.t <= 0) return;\n      var pt = this.abs();\n      if(pt.t < pm.t) {\n        if(q != null) q.fromInt(0);\n        if(r != null) this.copyTo(r);\n        return;\n      }\n      if(r == null) r = nbi();\n      var y = nbi(), ts = this.s, ms = m.s;\n      var nsh = this.DB-nbits(pm[pm.t-1]);   // normalize modulus\n      if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }\n      else { pm.copyTo(y); pt.copyTo(r); }\n      var ys = y.t;\n      var y0 = y[ys-1];\n      if(y0 == 0) return;\n      var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);\n      var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n      var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n      y.dlShiftTo(j,t);\n      if(r.compareTo(t) >= 0) {\n        r[r.t++] = 1;\n        r.subTo(t,r);\n      }\n      BigInteger.ONE.dlShiftTo(ys,t);\n      t.subTo(y,y);  // "negative" y so we can replace sub with am later\n      while(y.t < ys) y[y.t++] = 0;\n      while(--j >= 0) {\n        // Estimate quotient digit\n        var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);\n        if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {   // Try it out\n          y.dlShiftTo(j,t);\n          r.subTo(t,r);\n          while(r[i] < --qd) r.subTo(t,r);\n        }\n      }\n      if(q != null) {\n        r.drShiftTo(ys,q);\n        if(ts != ms) BigInteger.ZERO.subTo(q,q);\n      }\n      r.t = ys;\n      r.clamp();\n      if(nsh > 0) r.rShiftTo(nsh,r); // Denormalize remainder\n      if(ts < 0) BigInteger.ZERO.subTo(r,r);\n    }\n\n    // (public) this mod a\n    function bnMod(a) {\n      var r = nbi();\n      this.abs().divRemTo(a,null,r);\n      if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n      return r;\n    }\n\n    // Modular reduction using "classic" algorithm\n    function Classic(m) { this.m = m; }\n    function cConvert(x) {\n      if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n      else return x;\n    }\n    function cRevert(x) { return x; }\n    function cReduce(x) { x.divRemTo(this.m,null,x); }\n    function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n    function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    Classic.prototype.convert = cConvert;\n    Classic.prototype.revert = cRevert;\n    Classic.prototype.reduce = cReduce;\n    Classic.prototype.mulTo = cMulTo;\n    Classic.prototype.sqrTo = cSqrTo;\n\n    // (protected) return "-1/this % 2^DB"; useful for Mont. reduction\n    // justification:\n    //         xy == 1 (mod m)\n    //         xy =  1+km\n    //   xy(2-xy) = (1+km)(1-km)\n    // x[y(2-xy)] = 1-k^2m^2\n    // x[y(2-xy)] == 1 (mod m^2)\n    // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n    // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n    // JS multiply "overflows" differently from C/C++, so care is needed here.\n    function bnpInvDigit() {\n      if(this.t < 1) return 0;\n      var x = this[0];\n      if((x&1) == 0) return 0;\n      var y = x&3;       // y == 1/x mod 2^2\n      y = (y*(2-(x&0xf)*y))&0xf; // y == 1/x mod 2^4\n      y = (y*(2-(x&0xff)*y))&0xff;   // y == 1/x mod 2^8\n      y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;    // y == 1/x mod 2^16\n      // last step - calculate inverse mod DV directly;\n      // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n      y = (y*(2-x*y%this.DV))%this.DV;       // y == 1/x mod 2^dbits\n      // we really want the negative inverse, and -DV < y < DV\n      return (y>0)?this.DV-y:-y;\n    }\n\n    // Montgomery reduction\n    function Montgomery(m) {\n      this.m = m;\n      this.mp = m.invDigit();\n      this.mpl = this.mp&0x7fff;\n      this.mph = this.mp>>15;\n      this.um = (1<<(m.DB-15))-1;\n      this.mt2 = 2*m.t;\n    }\n\n    // xR mod m\n    function montConvert(x) {\n      var r = nbi();\n      x.abs().dlShiftTo(this.m.t,r);\n      r.divRemTo(this.m,null,r);\n      if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n      return r;\n    }\n\n    // x/R mod m\n    function montRevert(x) {\n      var r = nbi();\n      x.copyTo(r);\n      this.reduce(r);\n      return r;\n    }\n\n    // x = x/R mod m (HAC 14.32)\n    function montReduce(x) {\n      while(x.t <= this.mt2) // pad x so am has enough room later\n        x[x.t++] = 0;\n      for(var i = 0; i < this.m.t; ++i) {\n        // faster way of calculating u0 = x[i]*mp mod DV\n        var j = x[i]&0x7fff;\n        var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n        // use am to combine the multiply-shift-add into one call\n        j = i+this.m.t;\n        x[j] += this.m.am(0,u0,x,i,0,this.m.t);\n        // propagate carry\n        while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }\n      }\n      x.clamp();\n      x.drShiftTo(this.m.t,x);\n      if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n    }\n\n    // r = "x^2/R mod m"; x != r\n    function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    // r = "xy/R mod m"; x,y != r\n    function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\n    Montgomery.prototype.convert = montConvert;\n    Montgomery.prototype.revert = montRevert;\n    Montgomery.prototype.reduce = montReduce;\n    Montgomery.prototype.mulTo = montMulTo;\n    Montgomery.prototype.sqrTo = montSqrTo;\n\n    // (protected) true iff this is even\n    function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }\n\n    // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)\n    function bnpExp(e,z) {\n      if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n      var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n      g.copyTo(r);\n      while(--i >= 0) {\n        z.sqrTo(r,r2);\n        if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n        else { var t = r; r = r2; r2 = t; }\n      }\n      return z.revert(r);\n    }\n\n    // (public) this^e % m, 0 <= e < 2^32\n    function bnModPowInt(e,m) {\n      var z;\n      if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n      return this.exp(e,z);\n    }\n\n    // protected\n    BigInteger.prototype.copyTo = bnpCopyTo;\n    BigInteger.prototype.fromInt = bnpFromInt;\n    BigInteger.prototype.fromString = bnpFromString;\n    BigInteger.prototype.clamp = bnpClamp;\n    BigInteger.prototype.dlShiftTo = bnpDLShiftTo;\n    BigInteger.prototype.drShiftTo = bnpDRShiftTo;\n    BigInteger.prototype.lShiftTo = bnpLShiftTo;\n    BigInteger.prototype.rShiftTo = bnpRShiftTo;\n    BigInteger.prototype.subTo = bnpSubTo;\n    BigInteger.prototype.multiplyTo = bnpMultiplyTo;\n    BigInteger.prototype.squareTo = bnpSquareTo;\n    BigInteger.prototype.divRemTo = bnpDivRemTo;\n    BigInteger.prototype.invDigit = bnpInvDigit;\n    BigInteger.prototype.isEven = bnpIsEven;\n    BigInteger.prototype.exp = bnpExp;\n\n    // public\n    BigInteger.prototype.toString = bnToString;\n    BigInteger.prototype.negate = bnNegate;\n    BigInteger.prototype.abs = bnAbs;\n    BigInteger.prototype.compareTo = bnCompareTo;\n    BigInteger.prototype.bitLength = bnBitLength;\n    BigInteger.prototype.mod = bnMod;\n    BigInteger.prototype.modPowInt = bnModPowInt;\n\n    // "constants"\n    BigInteger.ZERO = nbv(0);\n    BigInteger.ONE = nbv(1);\n\n    // Copyright (c) 2005-2009  Tom Wu\n    // All Rights Reserved.\n    // See "LICENSE" for details.\n\n    // Extended JavaScript BN functions, required for RSA private ops.\n\n    // Version 1.1: new BigInteger("0", 10) returns "proper" zero\n    // Version 1.2: square() API, isProbablePrime fix\n\n    // (public)\n    function bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n    // (public) return value as integer\n    function bnIntValue() {\n      if(this.s < 0) {\n        if(this.t == 1) return this[0]-this.DV;\n        else if(this.t == 0) return -1;\n      }\n      else if(this.t == 1) return this[0];\n      else if(this.t == 0) return 0;\n      // assumes 16 < DB < 32\n      return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];\n    }\n\n    // (public) return value as byte\n    function bnByteValue() { return (this.t==0)?this.s:(this[0]<<24)>>24; }\n\n    // (public) return value as short (assumes DB>=16)\n    function bnShortValue() { return (this.t==0)?this.s:(this[0]<<16)>>16; }\n\n    // (protected) return x s.t. r^x < DV\n    function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n    // (public) 0 if this == 0, 1 if this > 0\n    function bnSigNum() {\n      if(this.s < 0) return -1;\n      else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\n      else return 1;\n    }\n\n    // (protected) convert to radix string\n    function bnpToRadix(b) {\n      if(b == null) b = 10;\n      if(this.signum() == 0 || b < 2 || b > 36) return "0";\n      var cs = this.chunkSize(b);\n      var a = Math.pow(b,cs);\n      var d = nbv(a), y = nbi(), z = nbi(), r = "";\n      this.divRemTo(d,y,z);\n      while(y.signum() > 0) {\n        r = (a+z.intValue()).toString(b).substr(1) + r;\n        y.divRemTo(d,y,z);\n      }\n      return z.intValue().toString(b) + r;\n    }\n\n    // (protected) convert from radix string\n    function bnpFromRadix(s,b) {\n      this.fromInt(0);\n      if(b == null) b = 10;\n      var cs = this.chunkSize(b);\n      var d = Math.pow(b,cs), mi = false, j = 0, w = 0;\n      for(var i = 0; i < s.length; ++i) {\n        var x = intAt(s,i);\n        if(x < 0) {\n          if(s.charAt(i) == "-" && this.signum() == 0) mi = true;\n          continue;\n        }\n        w = b*w+x;\n        if(++j >= cs) {\n          this.dMultiply(d);\n          this.dAddOffset(w,0);\n          j = 0;\n          w = 0;\n        }\n      }\n      if(j > 0) {\n        this.dMultiply(Math.pow(b,j));\n        this.dAddOffset(w,0);\n      }\n      if(mi) BigInteger.ZERO.subTo(this,this);\n    }\n\n    // (protected) alternate constructor\n    function bnpFromNumber(a,b,c) {\n      if("number" == typeof b) {\n        // new BigInteger(int,int,RNG)\n        if(a < 2) this.fromInt(1);\n        else {\n          this.fromNumber(a,c);\n          if(!this.testBit(a-1))    // force MSB set\n            this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n          if(this.isEven()) this.dAddOffset(1,0); // force odd\n          while(!this.isProbablePrime(b)) {\n            this.dAddOffset(2,0);\n            if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n          }\n        }\n      }\n      else {\n        // new BigInteger(int,RNG)\n        var x = new Array(), t = a&7;\n        x.length = (a>>3)+1;\n        b.nextBytes(x);\n        if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n        this.fromString(x,256);\n      }\n    }\n\n    // (public) convert to bigendian byte array\n    function bnToByteArray() {\n      var i = this.t, r = new Array();\n      r[0] = this.s;\n      var p = this.DB-(i*this.DB)%8, d, k = 0;\n      if(i-- > 0) {\n        if(p < this.DB && (d = this[i]>>p) != (this.s&this.DM)>>p)\n          r[k++] = d|(this.s<<(this.DB-p));\n        while(i >= 0) {\n          if(p < 8) {\n            d = (this[i]&((1<<p)-1))<<(8-p);\n            d |= this[--i]>>(p+=this.DB-8);\n          }\n          else {\n            d = (this[i]>>(p-=8))&0xff;\n            if(p <= 0) { p += this.DB; --i; }\n          }\n          if((d&0x80) != 0) d |= -256;\n          if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n          if(k > 0 || d != this.s) r[k++] = d;\n        }\n      }\n      return r;\n    }\n\n    function bnEquals(a) { return(this.compareTo(a)==0); }\n    function bnMin(a) { return(this.compareTo(a)<0)?this:a; }\n    function bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n    // (protected) r = this op a (bitwise)\n    function bnpBitwiseTo(a,op,r) {\n      var i, f, m = Math.min(a.t,this.t);\n      for(i = 0; i < m; ++i) r[i] = op(this[i],a[i]);\n      if(a.t < this.t) {\n        f = a.s&this.DM;\n        for(i = m; i < this.t; ++i) r[i] = op(this[i],f);\n        r.t = this.t;\n      }\n      else {\n        f = this.s&this.DM;\n        for(i = m; i < a.t; ++i) r[i] = op(f,a[i]);\n        r.t = a.t;\n      }\n      r.s = op(this.s,a.s);\n      r.clamp();\n    }\n\n    // (public) this & a\n    function op_and(x,y) { return x&y; }\n    function bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n    // (public) this | a\n    function op_or(x,y) { return x|y; }\n    function bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n    // (public) this ^ a\n    function op_xor(x,y) { return x^y; }\n    function bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n    // (public) this & ~a\n    function op_andnot(x,y) { return x&~y; }\n    function bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n    // (public) ~this\n    function bnNot() {\n      var r = nbi();\n      for(var i = 0; i < this.t; ++i) r[i] = this.DM&~this[i];\n      r.t = this.t;\n      r.s = ~this.s;\n      return r;\n    }\n\n    // (public) this << n\n    function bnShiftLeft(n) {\n      var r = nbi();\n      if(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\n      return r;\n    }\n\n    // (public) this >> n\n    function bnShiftRight(n) {\n      var r = nbi();\n      if(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\n      return r;\n    }\n\n    // return index of lowest 1-bit in x, x < 2^31\n    function lbit(x) {\n      if(x == 0) return -1;\n      var r = 0;\n      if((x&0xffff) == 0) { x >>= 16; r += 16; }\n      if((x&0xff) == 0) { x >>= 8; r += 8; }\n      if((x&0xf) == 0) { x >>= 4; r += 4; }\n      if((x&3) == 0) { x >>= 2; r += 2; }\n      if((x&1) == 0) ++r;\n      return r;\n    }\n\n    // (public) returns index of lowest 1-bit (or -1 if none)\n    function bnGetLowestSetBit() {\n      for(var i = 0; i < this.t; ++i)\n        if(this[i] != 0) return i*this.DB+lbit(this[i]);\n      if(this.s < 0) return this.t*this.DB;\n      return -1;\n    }\n\n    // return number of 1 bits in x\n    function cbit(x) {\n      var r = 0;\n      while(x != 0) { x &= x-1; ++r; }\n      return r;\n    }\n\n    // (public) return number of set bits\n    function bnBitCount() {\n      var r = 0, x = this.s&this.DM;\n      for(var i = 0; i < this.t; ++i) r += cbit(this[i]^x);\n      return r;\n    }\n\n    // (public) true iff nth bit is set\n    function bnTestBit(n) {\n      var j = Math.floor(n/this.DB);\n      if(j >= this.t) return(this.s!=0);\n      return((this[j]&(1<<(n%this.DB)))!=0);\n    }\n\n    // (protected) this op (1<<n)\n    function bnpChangeBit(n,op) {\n      var r = BigInteger.ONE.shiftLeft(n);\n      this.bitwiseTo(r,op,r);\n      return r;\n    }\n\n    // (public) this | (1<<n)\n    function bnSetBit(n) { return this.changeBit(n,op_or); }\n\n    // (public) this & ~(1<<n)\n    function bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n    // (public) this ^ (1<<n)\n    function bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n    // (protected) r = this + a\n    function bnpAddTo(a,r) {\n      var i = 0, c = 0, m = Math.min(a.t,this.t);\n      while(i < m) {\n        c += this[i]+a[i];\n        r[i++] = c&this.DM;\n        c >>= this.DB;\n      }\n      if(a.t < this.t) {\n        c += a.s;\n        while(i < this.t) {\n          c += this[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += this.s;\n      }\n      else {\n        c += this.s;\n        while(i < a.t) {\n          c += a[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += a.s;\n      }\n      r.s = (c<0)?-1:0;\n      if(c > 0) r[i++] = c;\n      else if(c < -1) r[i++] = this.DV+c;\n      r.t = i;\n      r.clamp();\n    }\n\n    // (public) this + a\n    function bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n    // (public) this - a\n    function bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n    // (public) this * a\n    function bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n    // (public) this^2\n    function bnSquare() { var r = nbi(); this.squareTo(r); return r; }\n\n    // (public) this / a\n    function bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n    // (public) this % a\n    function bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n    // (public) [this/a,this%a]\n    function bnDivideAndRemainder(a) {\n      var q = nbi(), r = nbi();\n      this.divRemTo(a,q,r);\n      return new Array(q,r);\n    }\n\n    // (protected) this *= n, this >= 0, 1 < n < DV\n    function bnpDMultiply(n) {\n      this[this.t] = this.am(0,n-1,this,0,0,this.t);\n      ++this.t;\n      this.clamp();\n    }\n\n    // (protected) this += n << w words, this >= 0\n    function bnpDAddOffset(n,w) {\n      if(n == 0) return;\n      while(this.t <= w) this[this.t++] = 0;\n      this[w] += n;\n      while(this[w] >= this.DV) {\n        this[w] -= this.DV;\n        if(++w >= this.t) this[this.t++] = 0;\n        ++this[w];\n      }\n    }\n\n    // A "null" reducer\n    function NullExp() {}\n    function nNop(x) { return x; }\n    function nMulTo(x,y,r) { x.multiplyTo(y,r); }\n    function nSqrTo(x,r) { x.squareTo(r); }\n\n    NullExp.prototype.convert = nNop;\n    NullExp.prototype.revert = nNop;\n    NullExp.prototype.mulTo = nMulTo;\n    NullExp.prototype.sqrTo = nSqrTo;\n\n    // (public) this^e\n    function bnPow(e) { return this.exp(e,new NullExp()); }\n\n    // (protected) r = lower n words of "this * a", a.t <= n\n    // "this" should be the larger one if appropriate.\n    function bnpMultiplyLowerTo(a,n,r) {\n      var i = Math.min(this.t+a.t,n);\n      r.s = 0; // assumes a,this >= 0\n      r.t = i;\n      while(i > 0) r[--i] = 0;\n      var j;\n      for(j = r.t-this.t; i < j; ++i) r[i+this.t] = this.am(0,a[i],r,i,0,this.t);\n      for(j = Math.min(a.t,n); i < j; ++i) this.am(0,a[i],r,i,0,n-i);\n      r.clamp();\n    }\n\n    // (protected) r = "this * a" without lower n words, n > 0\n    // "this" should be the larger one if appropriate.\n    function bnpMultiplyUpperTo(a,n,r) {\n      --n;\n      var i = r.t = this.t+a.t-n;\n      r.s = 0; // assumes a,this >= 0\n      while(--i >= 0) r[i] = 0;\n      for(i = Math.max(n-this.t,0); i < a.t; ++i)\n        r[this.t+i-n] = this.am(n-i,a[i],r,0,0,this.t+i-n);\n      r.clamp();\n      r.drShiftTo(1,r);\n    }\n\n    // Barrett modular reduction\n    function Barrett(m) {\n      // setup Barrett\n      this.r2 = nbi();\n      this.q3 = nbi();\n      BigInteger.ONE.dlShiftTo(2*m.t,this.r2);\n      this.mu = this.r2.divide(m);\n      this.m = m;\n    }\n\n    function barrettConvert(x) {\n      if(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\n      else if(x.compareTo(this.m) < 0) return x;\n      else { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n    }\n\n    function barrettRevert(x) { return x; }\n\n    // x = x mod m (HAC 14.42)\n    function barrettReduce(x) {\n      x.drShiftTo(this.m.t-1,this.r2);\n      if(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\n      this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\n      this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\n      while(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\n      x.subTo(this.r2,x);\n      while(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n    }\n\n    // r = x^2 mod m; x != r\n    function barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    // r = x*y mod m; x,y != r\n    function barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\n    Barrett.prototype.convert = barrettConvert;\n    Barrett.prototype.revert = barrettRevert;\n    Barrett.prototype.reduce = barrettReduce;\n    Barrett.prototype.mulTo = barrettMulTo;\n    Barrett.prototype.sqrTo = barrettSqrTo;\n\n    // (public) this^e % m (HAC 14.85)\n    function bnModPow(e,m) {\n      var i = e.bitLength(), k, r = nbv(1), z;\n      if(i <= 0) return r;\n      else if(i < 18) k = 1;\n      else if(i < 48) k = 3;\n      else if(i < 144) k = 4;\n      else if(i < 768) k = 5;\n      else k = 6;\n      if(i < 8)\n        z = new Classic(m);\n      else if(m.isEven())\n        z = new Barrett(m);\n      else\n        z = new Montgomery(m);\n\n      // precomputation\n      var g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\n      g[1] = z.convert(this);\n      if(k > 1) {\n        var g2 = nbi();\n        z.sqrTo(g[1],g2);\n        while(n <= km) {\n          g[n] = nbi();\n          z.mulTo(g2,g[n-2],g[n]);\n          n += 2;\n        }\n      }\n\n      var j = e.t-1, w, is1 = true, r2 = nbi(), t;\n      i = nbits(e[j])-1;\n      while(j >= 0) {\n        if(i >= k1) w = (e[j]>>(i-k1))&km;\n        else {\n          w = (e[j]&((1<<(i+1))-1))<<(k1-i);\n          if(j > 0) w |= e[j-1]>>(this.DB+i-k1);\n        }\n\n        n = k;\n        while((w&1) == 0) { w >>= 1; --n; }\n        if((i -= n) < 0) { i += this.DB; --j; }\n        if(is1) {    // ret == 1, don\'t bother squaring or multiplying it\n          g[w].copyTo(r);\n          is1 = false;\n        }\n        else {\n          while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n          if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n          z.mulTo(r2,g[w],r);\n        }\n\n        while(j >= 0 && (e[j]&(1<<i)) == 0) {\n          z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n          if(--i < 0) { i = this.DB-1; --j; }\n        }\n      }\n      return z.revert(r);\n    }\n\n    // (public) gcd(this,a) (HAC 14.54)\n    function bnGCD(a) {\n      var x = (this.s<0)?this.negate():this.clone();\n      var y = (a.s<0)?a.negate():a.clone();\n      if(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\n      var i = x.getLowestSetBit(), g = y.getLowestSetBit();\n      if(g < 0) return x;\n      if(i < g) g = i;\n      if(g > 0) {\n        x.rShiftTo(g,x);\n        y.rShiftTo(g,y);\n      }\n      while(x.signum() > 0) {\n        if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n        if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n        if(x.compareTo(y) >= 0) {\n          x.subTo(y,x);\n          x.rShiftTo(1,x);\n        }\n        else {\n          y.subTo(x,y);\n          y.rShiftTo(1,y);\n        }\n      }\n      if(g > 0) y.lShiftTo(g,y);\n      return y;\n    }\n\n    // (protected) this % n, n < 2^26\n    function bnpModInt(n) {\n      if(n <= 0) return 0;\n      var d = this.DV%n, r = (this.s<0)?n-1:0;\n      if(this.t > 0)\n        if(d == 0) r = this[0]%n;\n        else for(var i = this.t-1; i >= 0; --i) r = (d*r+this[i])%n;\n      return r;\n    }\n\n    // (public) 1/this % m (HAC 14.61)\n    function bnModInverse(m) {\n      var ac = m.isEven();\n      if((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\n      var u = m.clone(), v = this.clone();\n      var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\n      while(u.signum() != 0) {\n        while(u.isEven()) {\n          u.rShiftTo(1,u);\n          if(ac) {\n            if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n            a.rShiftTo(1,a);\n          }\n          else if(!b.isEven()) b.subTo(m,b);\n          b.rShiftTo(1,b);\n        }\n        while(v.isEven()) {\n          v.rShiftTo(1,v);\n          if(ac) {\n            if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n            c.rShiftTo(1,c);\n          }\n          else if(!d.isEven()) d.subTo(m,d);\n          d.rShiftTo(1,d);\n        }\n        if(u.compareTo(v) >= 0) {\n          u.subTo(v,u);\n          if(ac) a.subTo(c,a);\n          b.subTo(d,b);\n        }\n        else {\n          v.subTo(u,v);\n          if(ac) c.subTo(a,c);\n          d.subTo(b,d);\n        }\n      }\n      if(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n      if(d.compareTo(m) >= 0) return d.subtract(m);\n      if(d.signum() < 0) d.addTo(m,d); else return d;\n      if(d.signum() < 0) return d.add(m); else return d;\n    }\n\n    var lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];\n    var lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n    // (public) test primality with certainty >= 1-.5^t\n    function bnIsProbablePrime(t) {\n      var i, x = this.abs();\n      if(x.t == 1 && x[0] <= lowprimes[lowprimes.length-1]) {\n        for(i = 0; i < lowprimes.length; ++i)\n          if(x[0] == lowprimes[i]) return true;\n        return false;\n      }\n      if(x.isEven()) return false;\n      i = 1;\n      while(i < lowprimes.length) {\n        var m = lowprimes[i], j = i+1;\n        while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n        m = x.modInt(m);\n        while(i < j) if(m%lowprimes[i++] == 0) return false;\n      }\n      return x.millerRabin(t);\n    }\n\n    // (protected) true if probably prime (HAC 4.24, Miller-Rabin)\n    function bnpMillerRabin(t) {\n      var n1 = this.subtract(BigInteger.ONE);\n      var k = n1.getLowestSetBit();\n      if(k <= 0) return false;\n      var r = n1.shiftRight(k);\n      t = (t+1)>>1;\n      if(t > lowprimes.length) t = lowprimes.length;\n      var a = nbi();\n      for(var i = 0; i < t; ++i) {\n        //Pick bases at random, instead of starting at 2\n        a.fromInt(lowprimes[Math.floor(Math.random()*lowprimes.length)]);\n        var y = a.modPow(r,this);\n        if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n          var j = 1;\n          while(j++ < k && y.compareTo(n1) != 0) {\n            y = y.modPowInt(2,this);\n            if(y.compareTo(BigInteger.ONE) == 0) return false;\n          }\n          if(y.compareTo(n1) != 0) return false;\n        }\n      }\n      return true;\n    }\n\n    // protected\n    BigInteger.prototype.chunkSize = bnpChunkSize;\n    BigInteger.prototype.toRadix = bnpToRadix;\n    BigInteger.prototype.fromRadix = bnpFromRadix;\n    BigInteger.prototype.fromNumber = bnpFromNumber;\n    BigInteger.prototype.bitwiseTo = bnpBitwiseTo;\n    BigInteger.prototype.changeBit = bnpChangeBit;\n    BigInteger.prototype.addTo = bnpAddTo;\n    BigInteger.prototype.dMultiply = bnpDMultiply;\n    BigInteger.prototype.dAddOffset = bnpDAddOffset;\n    BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\n    BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\n    BigInteger.prototype.modInt = bnpModInt;\n    BigInteger.prototype.millerRabin = bnpMillerRabin;\n\n    // public\n    BigInteger.prototype.clone = bnClone;\n    BigInteger.prototype.intValue = bnIntValue;\n    BigInteger.prototype.byteValue = bnByteValue;\n    BigInteger.prototype.shortValue = bnShortValue;\n    BigInteger.prototype.signum = bnSigNum;\n    BigInteger.prototype.toByteArray = bnToByteArray;\n    BigInteger.prototype.equals = bnEquals;\n    BigInteger.prototype.min = bnMin;\n    BigInteger.prototype.max = bnMax;\n    BigInteger.prototype.and = bnAnd;\n    BigInteger.prototype.or = bnOr;\n    BigInteger.prototype.xor = bnXor;\n    BigInteger.prototype.andNot = bnAndNot;\n    BigInteger.prototype.not = bnNot;\n    BigInteger.prototype.shiftLeft = bnShiftLeft;\n    BigInteger.prototype.shiftRight = bnShiftRight;\n    BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\n    BigInteger.prototype.bitCount = bnBitCount;\n    BigInteger.prototype.testBit = bnTestBit;\n    BigInteger.prototype.setBit = bnSetBit;\n    BigInteger.prototype.clearBit = bnClearBit;\n    BigInteger.prototype.flipBit = bnFlipBit;\n    BigInteger.prototype.add = bnAdd;\n    BigInteger.prototype.subtract = bnSubtract;\n    BigInteger.prototype.multiply = bnMultiply;\n    BigInteger.prototype.divide = bnDivide;\n    BigInteger.prototype.remainder = bnRemainder;\n    BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\n    BigInteger.prototype.modPow = bnModPow;\n    BigInteger.prototype.modInverse = bnModInverse;\n    BigInteger.prototype.pow = bnPow;\n    BigInteger.prototype.gcd = bnGCD;\n    BigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n    // JSBN-specific extension\n    BigInteger.prototype.square = bnSquare;\n\n    // Expose the Barrett function\n    BigInteger.prototype.Barrett = Barrett\n\n    // BigInteger interfaces not implemented in jsbn:\n\n    // BigInteger(int signum, byte[] magnitude)\n    // double doubleValue()\n    // float floatValue()\n    // int hashCode()\n    // long longValue()\n    // static BigInteger valueOf(long val)\n\n    // Random number generator - requires a PRNG backend, e.g. prng4.js\n\n    // For best results, put code like\n    // <body onClick=\'rng_seed_time();\' onKeyPress=\'rng_seed_time();\'>\n    // in your main HTML document.\n\n    var rng_state;\n    var rng_pool;\n    var rng_pptr;\n\n    // Mix in a 32-bit integer into the pool\n    function rng_seed_int(x) {\n      rng_pool[rng_pptr++] ^= x & 255;\n      rng_pool[rng_pptr++] ^= (x >> 8) & 255;\n      rng_pool[rng_pptr++] ^= (x >> 16) & 255;\n      rng_pool[rng_pptr++] ^= (x >> 24) & 255;\n      if(rng_pptr >= rng_psize) rng_pptr -= rng_psize;\n    }\n\n    // Mix in the current time (w/milliseconds) into the pool\n    function rng_seed_time() {\n      rng_seed_int(new Date().getTime());\n    }\n\n    // Initialize the pool with junk if needed.\n    if(rng_pool == null) {\n      rng_pool = new Array();\n      rng_pptr = 0;\n      var t;\n      if(typeof window !== "undefined" && window.crypto) {\n        if (window.crypto.getRandomValues) {\n          // Use webcrypto if available\n          var ua = new Uint8Array(32);\n          window.crypto.getRandomValues(ua);\n          for(t = 0; t < 32; ++t)\n            rng_pool[rng_pptr++] = ua[t];\n        }\n        else if(navigator.appName == "Netscape" && navigator.appVersion < "5") {\n          // Extract entropy (256 bits) from NS4 RNG if available\n          var z = window.crypto.random(32);\n          for(t = 0; t < z.length; ++t)\n            rng_pool[rng_pptr++] = z.charCodeAt(t) & 255;\n        }\n      }\n      while(rng_pptr < rng_psize) {  // extract some randomness from Math.random()\n        t = Math.floor(65536 * Math.random());\n        rng_pool[rng_pptr++] = t >>> 8;\n        rng_pool[rng_pptr++] = t & 255;\n      }\n      rng_pptr = 0;\n      rng_seed_time();\n      //rng_seed_int(window.screenX);\n      //rng_seed_int(window.screenY);\n    }\n\n    function rng_get_byte() {\n      if(rng_state == null) {\n        rng_seed_time();\n        rng_state = prng_newstate();\n        rng_state.init(rng_pool);\n        for(rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr)\n          rng_pool[rng_pptr] = 0;\n        rng_pptr = 0;\n        //rng_pool = null;\n      }\n      // TODO: allow reseeding after first request\n      return rng_state.next();\n    }\n\n    function rng_get_bytes(ba) {\n      var i;\n      for(i = 0; i < ba.length; ++i) ba[i] = rng_get_byte();\n    }\n\n    function SecureRandom() {}\n\n    SecureRandom.prototype.nextBytes = rng_get_bytes;\n\n    // prng4.js - uses Arcfour as a PRNG\n\n    function Arcfour() {\n      this.i = 0;\n      this.j = 0;\n      this.S = new Array();\n    }\n\n    // Initialize arcfour context from key, an array of ints, each from [0..255]\n    function ARC4init(key) {\n      var i, j, t;\n      for(i = 0; i < 256; ++i)\n        this.S[i] = i;\n      j = 0;\n      for(i = 0; i < 256; ++i) {\n        j = (j + this.S[i] + key[i % key.length]) & 255;\n        t = this.S[i];\n        this.S[i] = this.S[j];\n        this.S[j] = t;\n      }\n      this.i = 0;\n      this.j = 0;\n    }\n\n    function ARC4next() {\n      var t;\n      this.i = (this.i + 1) & 255;\n      this.j = (this.j + this.S[this.i]) & 255;\n      t = this.S[this.i];\n      this.S[this.i] = this.S[this.j];\n      this.S[this.j] = t;\n      return this.S[(t + this.S[this.i]) & 255];\n    }\n\n    Arcfour.prototype.init = ARC4init;\n    Arcfour.prototype.next = ARC4next;\n\n    // Plug in your RNG constructor here\n    function prng_newstate() {\n      return new Arcfour();\n    }\n\n    // Pool size must be a multiple of 4 and greater than 32.\n    // An array of bytes the size of the pool will be passed to init()\n    var rng_psize = 256;\n\n    if (true) {\n        exports = module.exports = {\n            default: BigInteger,\n            BigInteger: BigInteger,\n            SecureRandom: SecureRandom,\n        };\n    } else {}\n\n}).call(this);\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/jsrp/node_modules/jsbn/index.js?')},"../../node_modules/md5.js/index.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar inherits = __webpack_require__(/*! inherits */ "../../node_modules/inherits/inherits_browser.js")\nvar HashBase = __webpack_require__(/*! hash-base */ "../../node_modules/hash-base/index.js")\nvar Buffer = __webpack_require__(/*! safe-buffer */ "../../node_modules/safe-buffer/index.js").Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/md5.js/index.js?')},"../../node_modules/ms/index.js":function(module,exports){eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/ms/index.js?")},"../../node_modules/node-libs-browser/node_modules/buffer/index.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"../../node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"../../node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"../../node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"../../node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js?")},"../../node_modules/node-libs-browser/node_modules/punycode/punycode.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports =  true && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule =  true && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\t\treturn punycode;\n\t\t}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ \"../../node_modules/webpack/buildin/module.js\")(module), __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"../../node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/node-libs-browser/node_modules/punycode/punycode.js?")},"../../node_modules/parameterize/parameterize.js":function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var LATIN_MAP = {\n    'À': 'A', 'Á': 'A', 'Â': 'A', 'Ã': 'A', 'Ä': 'A', 'Å': 'A', 'Æ': 'AE',\n    'Ç': 'C', 'È': 'E', 'É': 'E', 'Ê': 'E', 'Ë': 'E', 'Ì': 'I', 'Í': 'I',\n    'Î': 'I', 'Ï': 'I', 'Ð': 'D', 'Ñ': 'N', 'Ò': 'O', 'Ó': 'O', 'Ô': 'O',\n    'Õ': 'O', 'Ö': 'O', 'Ő': 'O', 'Ø': 'O', 'Ù': 'U', 'Ú': 'U', 'Û': 'U',\n    'Ü': 'U', 'Ű': 'U', 'Ý': 'Y', 'Þ': 'TH', 'Ÿ': 'Y', 'ß': 'ss', 'à': 'a',\n    'á': 'a', 'â': 'a', 'ã': 'a', 'ä': 'a', 'å': 'a', 'æ': 'ae', 'ç': 'c',\n    'è': 'e', 'é': 'e', 'ê': 'e', 'ë': 'e', 'ì': 'i', 'í': 'i', 'î': 'i',\n    'ï': 'i', 'ð': 'd', 'ñ': 'n', 'ò': 'o', 'ó': 'o', 'ô': 'o', 'õ': 'o',\n    'ö': 'o', 'ő': 'o', 'ø': 'o', 'ù': 'u', 'ú': 'u', 'û': 'u', 'ü': 'u',\n    'ű': 'u', 'ý': 'y', 'þ': 'th', 'ÿ': 'y'\n};\n\nvar LATIN_SYMBOLS_MAP = {\n    '©': '(c)'\n};\n\nvar GREEK_MAP = {\n    'α': 'a', 'β': 'b', 'γ': 'g', 'δ': 'd', 'ε': 'e', 'ζ': 'z', 'η': 'h',\n    'θ': '8', 'ι': 'i', 'κ': 'k', 'λ': 'l', 'μ': 'm', 'ν': 'n', 'ξ': '3',\n    'ο': 'o', 'π': 'p', 'ρ': 'r', 'σ': 's', 'τ': 't', 'υ': 'y', 'φ': 'f',\n    'χ': 'x', 'ψ': 'ps', 'ω': 'w', 'ά': 'a', 'έ': 'e', 'ί': 'i', 'ό': 'o',\n    'ύ': 'y', 'ή': 'h', 'ώ': 'w', 'ς': 's', 'ϊ': 'i', 'ΰ': 'y', 'ϋ': 'y',\n    'ΐ': 'i', 'Α': 'A', 'Β': 'B', 'Γ': 'G', 'Δ': 'D', 'Ε': 'E', 'Ζ': 'Z',\n    'Η': 'H', 'Θ': '8', 'Ι': 'I', 'Κ': 'K', 'Λ': 'L', 'Μ': 'M', 'Ν': 'N',\n    'Ξ': '3', 'Ο': 'O', 'Π': 'P', 'Ρ': 'R', 'Σ': 'S', 'Τ': 'T', 'Υ': 'Y',\n    'Φ': 'F', 'Χ': 'X', 'Ψ': 'PS', 'Ω': 'W', 'Ά': 'A', 'Έ': 'E', 'Ί': 'I',\n    'Ό': 'O', 'Ύ': 'Y', 'Ή': 'H', 'Ώ': 'W', 'Ϊ': 'I', 'Ϋ': 'Y'\n};\n\nvar TURKISH_MAP = {\n    'ş': 's', 'Ş': 'S', 'ı': 'i', 'İ': 'I', 'ç': 'c', 'Ç': 'C', 'ü': 'u',\n    'Ü': 'U', 'ö': 'o', 'Ö': 'O', 'ğ': 'g', 'Ğ': 'G'\n};\n\nvar ROMANIAN_MAP = {\n    'ă': 'a', 'î': 'i', 'ș': 's', 'ț': 't', 'â': 'a',\n    'Ă': 'A', 'Î': 'I', 'Ș': 'S', 'Ț': 'T', 'Â': 'A'\n};\n\nvar RUSSIAN_MAP = {\n    'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ё': 'yo',\n    'ж': 'zh', 'з': 'z', 'и': 'i', 'й': 'j', 'к': 'k', 'л': 'l', 'м': 'm',\n    'н': 'n', 'о': 'o', 'п': 'p', 'р': 'r', 'с': 's', 'т': 't', 'у': 'u',\n    'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh', 'щ': 'sh', 'ъ': '',\n    'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya',\n    'А': 'A', 'Б': 'B', 'В': 'V', 'Г': 'G', 'Д': 'D', 'Е': 'E', 'Ё': 'Yo',\n    'Ж': 'Zh', 'З': 'Z', 'И': 'I', 'Й': 'J', 'К': 'K', 'Л': 'L', 'М': 'M',\n    'Н': 'N', 'О': 'O', 'П': 'P', 'Р': 'R', 'С': 'S', 'Т': 'T', 'У': 'U',\n    'Ф': 'F', 'Х': 'H', 'Ц': 'C', 'Ч': 'Ch', 'Ш': 'Sh', 'Щ': 'Sh', 'Ъ': '',\n    'Ы': 'Y', 'Ь': '', 'Э': 'E', 'Ю': 'Yu', 'Я': 'Ya'\n};\n\nvar UKRAINIAN_MAP = {\n    'Є': 'Ye', 'І': 'I', 'Ї': 'Yi', 'Ґ': 'G', 'є': 'ye', 'і': 'i',\n    'ї': 'yi', 'ґ': 'g'\n};\n\nvar CZECH_MAP = {\n    'č': 'c', 'ď': 'd', 'ě': 'e', 'ň': 'n', 'ř': 'r', 'š': 's', 'ť': 't',\n    'ů': 'u', 'ž': 'z', 'Č': 'C', 'Ď': 'D', 'Ě': 'E', 'Ň': 'N', 'Ř': 'R',\n    'Š': 'S', 'Ť': 'T', 'Ů': 'U', 'Ž': 'Z'\n};\n\nvar POLISH_MAP = {\n    'ą': 'a', 'ć': 'c', 'ę': 'e', 'ł': 'l', 'ń': 'n', 'ó': 'o', 'ś': 's',\n    'ź': 'z', 'ż': 'z',\n    'Ą': 'A', 'Ć': 'C', 'Ę': 'E', 'Ł': 'L', 'Ń': 'N', 'Ó': 'O', 'Ś': 'S',\n    'Ź': 'Z', 'Ż': 'Z'\n};\n\nvar LATVIAN_MAP = {\n    'ā': 'a', 'č': 'c', 'ē': 'e', 'ģ': 'g', 'ī': 'i', 'ķ': 'k', 'ļ': 'l',\n    'ņ': 'n', 'š': 's', 'ū': 'u', 'ž': 'z',\n    'Ā': 'A', 'Č': 'C', 'Ē': 'E', 'Ģ': 'G', 'Ī': 'I', 'Ķ': 'K', 'Ļ': 'L',\n    'Ņ': 'N', 'Š': 'S', 'Ū': 'U', 'Ž': 'Z'\n};\n\nvar ARABIC_MAP = {\n    'أ': 'a', 'ب': 'b', 'ت': 't', 'ث': 'th', 'ج': 'g', 'ح': 'h', 'خ': 'kh', 'د': 'd',\n    'ذ': 'th', 'ر': 'r', 'ز': 'z', 'س': 's', 'ش': 'sh', 'ص': 's', 'ض': 'd', 'ط': 't',\n    'ظ': 'th', 'ع': 'aa', 'غ': 'gh', 'ف': 'f', 'ق': 'k', 'ك': 'k', 'ل': 'l', 'م': 'm',\n    'ن': 'n', 'ه': 'h', 'و': 'o', 'ي': 'y'\n};\nvar LITHUANIAN_MAP = {\n    'ą': 'a', 'č': 'c', 'ę': 'e', 'ė': 'e', 'į': 'i', 'š': 's', 'ų': 'u',\n    'ū': 'u', 'ž': 'z',\n    'Ą': 'A', 'Č': 'C', 'Ę': 'E', 'Ė': 'E', 'Į': 'I', 'Š': 'S', 'Ų': 'U',\n    'Ū': 'U', 'Ž': 'Z'\n};\nvar SERBIAN_MAP = {\n    'ђ': 'dj', 'ј': 'j', 'љ': 'lj', 'њ': 'nj', 'ћ': 'c', 'џ': 'dz',\n    'đ': 'dj', 'Ђ': 'Dj', 'Ј': 'j', 'Љ': 'Lj', 'Њ': 'Nj', 'Ћ': 'C',\n    'Џ': 'Dz', 'Đ': 'Dj'\n};\nvar AZERBAIJANI_MAP = {\n    'ç': 'c', 'ə': 'e', 'ğ': 'g', 'ı': 'i', 'ö': 'o', 'ş': 's', 'ü': 'u',\n    'Ç': 'C', 'Ə': 'E', 'Ğ': 'G', 'İ': 'I', 'Ö': 'O', 'Ş': 'S', 'Ü': 'U'\n};\nvar GEORGIAN_MAP = {\n    'ა': 'a', 'ბ': 'b', 'გ': 'g', 'დ': 'd', 'ე': 'e', 'ვ': 'v', 'ზ': 'z',\n    'თ': 't', 'ი': 'i', 'კ': 'k', 'ლ': 'l', 'მ': 'm', 'ნ': 'n', 'ო': 'o',\n    'პ': 'p', 'ჟ': 'j', 'რ': 'r', 'ს': 's', 'ტ': 't', 'უ': 'u', 'ფ': 'f',\n    'ქ': 'q', 'ღ': 'g', 'ყ': 'y', 'შ': 'sh', 'ჩ': 'ch', 'ც': 'c', 'ძ': 'dz',\n    'წ': 'w', 'ჭ': 'ch', 'ხ': 'x', 'ჯ': 'j', 'ჰ': 'h'\n};\n\nvar SLOVAK_MAP = {\n    'á': 'a', 'ä': 'a', 'č': 'c', 'ď': 'd', 'é': 'e', 'í': 'i', 'ľ': 'l',\n    'ĺ': 'l', 'ň': 'n', 'ó': 'o', 'ô': 'o', 'ŕ': 'r', 'š': 's', 'ť': 't',\n    'ú': 'u', 'ý': 'y', 'ž': 'z',\n    'Á': 'a', 'Ä': 'A', 'Č': 'C', 'Ď': 'D', 'É': 'E', 'Í': 'I', 'Ľ': 'L',\n    'Ĺ': 'L', 'Ň': 'N', 'Ó': 'O', 'Ô': 'O', 'Ŕ': 'R', 'Š': 'S', 'Ť': 'T',\n    'Ú': 'U', 'Ý': 'Y', 'Ž': 'Z'\n};\n\nvar ALL_DOWNCODE_MAPS = [\n    LATIN_MAP,\n    LATIN_SYMBOLS_MAP,\n    GREEK_MAP,\n    TURKISH_MAP,\n    ROMANIAN_MAP,\n    RUSSIAN_MAP,\n    UKRAINIAN_MAP,\n    CZECH_MAP,\n    POLISH_MAP,\n    LATVIAN_MAP,\n    ARABIC_MAP,\n    LITHUANIAN_MAP,\n    SERBIAN_MAP,\n    AZERBAIJANI_MAP,\n    GEORGIAN_MAP,\n    SLOVAK_MAP\n];\n\n\nvar Downcoder = new Object();\nDowncoder.Initialize = function()\n{\n    if (Downcoder.map) // already made\n        return ;\n    Downcoder.map ={}\n    Downcoder.chars = '' ;\n    for(var i in ALL_DOWNCODE_MAPS)\n    {\n        var lookup = ALL_DOWNCODE_MAPS[i]\n        for (var c in lookup)\n        {\n            Downcoder.map[c] = lookup[c] ;\n            Downcoder.chars += c ;\n        }\n     }\n    Downcoder.regex = new RegExp('[' + Downcoder.chars + ']|[^' + Downcoder.chars + ']+','g') ;\n}\n\nvar downcode = function(slug){\n    Downcoder.Initialize() ;\n    var downcoded =\"\"\n    var pieces = slug.match(Downcoder.regex);\n    if(pieces)\n    {\n        for (var i = 0 ; i < pieces.length ; i++)\n        {\n            if (pieces[i].length == 1)\n            {\n                var mapped = Downcoder.map[pieces[i]] ;\n                if (mapped != null)\n                {\n                    downcoded+=mapped;\n                    continue ;\n                }\n            }\n            downcoded+=pieces[i];\n        }\n    }\n    else\n    {\n        downcoded = slug;\n    }\n    return downcoded;\n}\n\nparameterize = function(s, num_chars, delimiter) {\n    delimiter = delimiter || '-'\n\n    // changes, e.g., \"Petty theft\" to \"petty_theft\"\n    // remove all these words from the string before urlifying\n    s = downcode(s);\n    //\n    // if downcode doesn't hit, the char will be stripped here\n    s = s.replace(/[^-\\w\\s\\u4E00-\\u9FA5]/g, '');  // remove unneeded chars\n    s = s.replace(/^\\s+|\\s+$/g, ''); // trim leading/trailing spaces\n    s = s.replace(/[-\\s]+/g, delimiter);   // convert spaces to hyphens\n    s = s.toLowerCase();             // convert to lowercase\n    return s.substring(0, num_chars);// trim to first num_chars chars\n}\n\n\nif ( true && module.exports) {\n    module.exports = parameterize;\n} else if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function(require, exports, module) {\n        return parameterize;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/parameterize/parameterize.js?")},"../../node_modules/portable-fetch/fetch-npm-browserify.js":function(module,exports,__webpack_require__){eval('// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\n__webpack_require__(/*! whatwg-fetch */ "../../node_modules/whatwg-fetch/fetch.js");\nmodule.exports = self.fetch.bind(self);\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/portable-fetch/fetch-npm-browserify.js?')},"../../node_modules/process-nextick-args/index.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"../../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/process-nextick-args/index.js?")},"../../node_modules/process/browser.js":function(module,exports){eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/process/browser.js?")},"../../node_modules/querystring-es3/decode.js":function(module,exports,__webpack_require__){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/querystring-es3/decode.js?")},"../../node_modules/querystring-es3/encode.js":function(module,exports,__webpack_require__){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/querystring-es3/encode.js?")},"../../node_modules/querystring-es3/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.decode = exports.parse = __webpack_require__(/*! ./decode */ "../../node_modules/querystring-es3/decode.js");\nexports.encode = exports.stringify = __webpack_require__(/*! ./encode */ "../../node_modules/querystring-es3/encode.js");\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/querystring-es3/index.js?')},"../../node_modules/randombytes/browser.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global, process) {\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"../../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/randombytes/browser.js?")},"../../node_modules/readable-stream/duplex-browser.js":function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__(/*! ./lib/_stream_duplex.js */ "../../node_modules/readable-stream/lib/_stream_duplex.js");\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/readable-stream/duplex-browser.js?')},"../../node_modules/readable-stream/lib/_stream_duplex.js":function(module,exports,__webpack_require__){"use strict";eval('// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn\'t have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ "../../node_modules/process-nextick-args/index.js");\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(__webpack_require__(/*! core-util-is */ "../../node_modules/core-util-is/lib/util.js"));\nutil.inherits = __webpack_require__(/*! inherits */ "../../node_modules/inherits/inherits_browser.js");\n/*</replacement>*/\n\nvar Readable = __webpack_require__(/*! ./_stream_readable */ "../../node_modules/readable-stream/lib/_stream_readable.js");\nvar Writable = __webpack_require__(/*! ./_stream_writable */ "../../node_modules/readable-stream/lib/_stream_writable.js");\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once(\'end\', onend);\n}\n\nObject.defineProperty(Duplex.prototype, \'writableHighWaterMark\', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we\'re ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, \'destroyed\', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/readable-stream/lib/_stream_duplex.js?')},"../../node_modules/readable-stream/lib/_stream_passthrough.js":function(module,exports,__webpack_require__){"use strict";eval('// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(/*! ./_stream_transform */ "../../node_modules/readable-stream/lib/_stream_transform.js");\n\n/*<replacement>*/\nvar util = Object.create(__webpack_require__(/*! core-util-is */ "../../node_modules/core-util-is/lib/util.js"));\nutil.inherits = __webpack_require__(/*! inherits */ "../../node_modules/inherits/inherits_browser.js");\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/readable-stream/lib/_stream_passthrough.js?')},"../../node_modules/readable-stream/lib/_stream_readable.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"../../node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = __webpack_require__(/*! isarray */ \"../../node_modules/isarray/index.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = __webpack_require__(/*! events */ \"../../node_modules/events/events.js\").EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"../../node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../../node_modules/readable-stream/node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(__webpack_require__(/*! core-util-is */ \"../../node_modules/core-util-is/lib/util.js\"));\nutil.inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = __webpack_require__(/*! util */ 3);\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = __webpack_require__(/*! ./internal/streams/BufferList */ \"../../node_modules/readable-stream/lib/internal/streams/BufferList.js\");\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"../../node_modules/readable-stream/lib/internal/streams/destroy.js\");\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"../../node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"../../node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"../../node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../process/browser.js */ \"../../node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/readable-stream/lib/_stream_readable.js?")},"../../node_modules/readable-stream/lib/_stream_transform.js":function(module,exports,__webpack_require__){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\n\nmodule.exports = Transform;\n\nvar Duplex = __webpack_require__(/*! ./_stream_duplex */ \"../../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n/*<replacement>*/\nvar util = Object.create(__webpack_require__(/*! core-util-is */ \"../../node_modules/core-util-is/lib/util.js\"));\nutil.inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/readable-stream/lib/_stream_transform.js?")},"../../node_modules/readable-stream/lib/_stream_writable.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"../../node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(__webpack_require__(/*! core-util-is */ \"../../node_modules/core-util-is/lib/util.js\"));\nutil.inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: __webpack_require__(/*! util-deprecate */ \"../../node_modules/util-deprecate/browser.js\")\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"../../node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../../node_modules/readable-stream/node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"../../node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"../../node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"../../node_modules/process/browser.js\"), __webpack_require__(/*! ./../../timers-browserify/main.js */ \"../../node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"../../node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/readable-stream/lib/_stream_writable.js?")},"../../node_modules/readable-stream/lib/internal/streams/BufferList.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../../node_modules/readable-stream/node_modules/safe-buffer/index.js\").Buffer;\nvar util = __webpack_require__(/*! util */ 4);\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/readable-stream/lib/internal/streams/BufferList.js?")},"../../node_modules/readable-stream/lib/internal/streams/destroy.js":function(module,exports,__webpack_require__){"use strict";eval("\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"../../node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/readable-stream/lib/internal/streams/destroy.js?")},"../../node_modules/readable-stream/lib/internal/streams/stream-browser.js":function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__(/*! events */ "../../node_modules/events/events.js").EventEmitter;\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/readable-stream/lib/internal/streams/stream-browser.js?')},"../../node_modules/readable-stream/node_modules/safe-buffer/index.js":function(module,exports,__webpack_require__){eval("/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/readable-stream/node_modules/safe-buffer/index.js?")},"../../node_modules/readable-stream/passthrough.js":function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__(/*! ./readable */ "../../node_modules/readable-stream/readable-browser.js").PassThrough\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/readable-stream/passthrough.js?')},"../../node_modules/readable-stream/readable-browser.js":function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ "../../node_modules/readable-stream/lib/_stream_readable.js");\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ "../../node_modules/readable-stream/lib/_stream_writable.js");\nexports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ "../../node_modules/readable-stream/lib/_stream_duplex.js");\nexports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ "../../node_modules/readable-stream/lib/_stream_transform.js");\nexports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ "../../node_modules/readable-stream/lib/_stream_passthrough.js");\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/readable-stream/readable-browser.js?')},"../../node_modules/readable-stream/transform.js":function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__(/*! ./readable */ "../../node_modules/readable-stream/readable-browser.js").Transform\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/readable-stream/transform.js?')},"../../node_modules/readable-stream/writable-browser.js":function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__(/*! ./lib/_stream_writable.js */ "../../node_modules/readable-stream/lib/_stream_writable.js");\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/readable-stream/writable-browser.js?')},"../../node_modules/ripemd160/index.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar Buffer = __webpack_require__(/*! buffer */ "../../node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer\nvar inherits = __webpack_require__(/*! inherits */ "../../node_modules/inherits/inherits_browser.js")\nvar HashBase = __webpack_require__(/*! hash-base */ "../../node_modules/hash-base/index.js")\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/ripemd160/index.js?')},"../../node_modules/safe-buffer/index.js":function(module,exports,__webpack_require__){eval("/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/safe-buffer/index.js?")},"../../node_modules/setimmediate/setImmediate.js":function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    "use strict";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== "function") {\n        callback = new Function("" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."\n        // So if we\'re currently running a task, we\'ll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // "too much recursion" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can\'t be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage("", "*");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = "setImmediate$" + Math.random() + "$";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === "string" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener("message", onGlobalMessage, false);\n        } else {\n            global.attachEvent("onmessage", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, "*");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it\'s been called.\n            var script = doc.createElement("script");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don\'t get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === "[object process]") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && "onreadystatechange" in doc.createElement("script")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "../../node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "../../node_modules/process/browser.js")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/setimmediate/setImmediate.js?')},"../../node_modules/sha.js/hash.js":function(module,exports,__webpack_require__){eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"../../node_modules/safe-buffer/index.js\").Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/sha.js/hash.js?")},"../../node_modules/sha.js/index.js":function(module,exports,__webpack_require__){eval('var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + \' is not supported (we accept pull requests)\')\n\n  return new Algorithm()\n}\n\nexports.sha = __webpack_require__(/*! ./sha */ "../../node_modules/sha.js/sha.js")\nexports.sha1 = __webpack_require__(/*! ./sha1 */ "../../node_modules/sha.js/sha1.js")\nexports.sha224 = __webpack_require__(/*! ./sha224 */ "../../node_modules/sha.js/sha224.js")\nexports.sha256 = __webpack_require__(/*! ./sha256 */ "../../node_modules/sha.js/sha256.js")\nexports.sha384 = __webpack_require__(/*! ./sha384 */ "../../node_modules/sha.js/sha384.js")\nexports.sha512 = __webpack_require__(/*! ./sha512 */ "../../node_modules/sha.js/sha512.js")\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/sha.js/index.js?')},"../../node_modules/sha.js/sha.js":function(module,exports,__webpack_require__){eval('/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = __webpack_require__(/*! inherits */ "../../node_modules/inherits/inherits_browser.js")\nvar Hash = __webpack_require__(/*! ./hash */ "../../node_modules/sha.js/hash.js")\nvar Buffer = __webpack_require__(/*! safe-buffer */ "../../node_modules/safe-buffer/index.js").Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/sha.js/sha.js?')},"../../node_modules/sha.js/sha1.js":function(module,exports,__webpack_require__){eval('/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = __webpack_require__(/*! inherits */ "../../node_modules/inherits/inherits_browser.js")\nvar Hash = __webpack_require__(/*! ./hash */ "../../node_modules/sha.js/hash.js")\nvar Buffer = __webpack_require__(/*! safe-buffer */ "../../node_modules/safe-buffer/index.js").Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/sha.js/sha1.js?')},"../../node_modules/sha.js/sha224.js":function(module,exports,__webpack_require__){eval('/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = __webpack_require__(/*! inherits */ "../../node_modules/inherits/inherits_browser.js")\nvar Sha256 = __webpack_require__(/*! ./sha256 */ "../../node_modules/sha.js/sha256.js")\nvar Hash = __webpack_require__(/*! ./hash */ "../../node_modules/sha.js/hash.js")\nvar Buffer = __webpack_require__(/*! safe-buffer */ "../../node_modules/safe-buffer/index.js").Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/sha.js/sha224.js?')},"../../node_modules/sha.js/sha256.js":function(module,exports,__webpack_require__){eval('/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = __webpack_require__(/*! inherits */ "../../node_modules/inherits/inherits_browser.js")\nvar Hash = __webpack_require__(/*! ./hash */ "../../node_modules/sha.js/hash.js")\nvar Buffer = __webpack_require__(/*! safe-buffer */ "../../node_modules/safe-buffer/index.js").Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/sha.js/sha256.js?')},"../../node_modules/sha.js/sha384.js":function(module,exports,__webpack_require__){eval('var inherits = __webpack_require__(/*! inherits */ "../../node_modules/inherits/inherits_browser.js")\nvar SHA512 = __webpack_require__(/*! ./sha512 */ "../../node_modules/sha.js/sha512.js")\nvar Hash = __webpack_require__(/*! ./hash */ "../../node_modules/sha.js/hash.js")\nvar Buffer = __webpack_require__(/*! safe-buffer */ "../../node_modules/safe-buffer/index.js").Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/sha.js/sha384.js?')},"../../node_modules/sha.js/sha512.js":function(module,exports,__webpack_require__){eval('var inherits = __webpack_require__(/*! inherits */ "../../node_modules/inherits/inherits_browser.js")\nvar Hash = __webpack_require__(/*! ./hash */ "../../node_modules/sha.js/hash.js")\nvar Buffer = __webpack_require__(/*! safe-buffer */ "../../node_modules/safe-buffer/index.js").Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/sha.js/sha512.js?')},"../../node_modules/stream-browserify/index.js":function(module,exports,__webpack_require__){eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = __webpack_require__(/*! events */ \"../../node_modules/events/events.js\").EventEmitter;\nvar inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits_browser.js\");\n\ninherits(Stream, EE);\nStream.Readable = __webpack_require__(/*! readable-stream/readable.js */ \"../../node_modules/readable-stream/readable-browser.js\");\nStream.Writable = __webpack_require__(/*! readable-stream/writable.js */ \"../../node_modules/readable-stream/writable-browser.js\");\nStream.Duplex = __webpack_require__(/*! readable-stream/duplex.js */ \"../../node_modules/readable-stream/duplex-browser.js\");\nStream.Transform = __webpack_require__(/*! readable-stream/transform.js */ \"../../node_modules/readable-stream/transform.js\");\nStream.PassThrough = __webpack_require__(/*! readable-stream/passthrough.js */ \"../../node_modules/readable-stream/passthrough.js\");\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/stream-browserify/index.js?")},"../../node_modules/string_decoder/lib/string_decoder.js":function(module,exports,__webpack_require__){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"../../node_modules/string_decoder/node_modules/safe-buffer/index.js\").Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/string_decoder/lib/string_decoder.js?")},"../../node_modules/string_decoder/node_modules/safe-buffer/index.js":function(module,exports,__webpack_require__){eval("/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/string_decoder/node_modules/safe-buffer/index.js?")},"../../node_modules/supports-color/browser.js":function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/supports-color/browser.js?")},"../../node_modules/timers-browserify/main.js":function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||\n            (typeof self !== "undefined" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ "../../node_modules/setimmediate/setImmediate.js");\n// On some exotic environments, it\'s not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||\n                       (typeof global !== "undefined" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||\n                         (typeof global !== "undefined" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "../../node_modules/webpack/buildin/global.js")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/timers-browserify/main.js?')},"../../node_modules/tslib/tslib.es6.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__createBinding", function() { return __createBinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function() { return __classPrivateFieldGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function() { return __classPrivateFieldSet; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === "function")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError("Generator is already executing.");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === "number") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === "function" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i["return"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume("next", value); }\r\n    function reject(value) { resume("throw", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError("attempted to get private field on non-instance");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError("attempted to set private field on non-instance");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/tslib/tslib.es6.js?')},"../../node_modules/url/url.js":function(module,exports,__webpack_require__){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar punycode = __webpack_require__(/*! punycode */ \"../../node_modules/node-libs-browser/node_modules/punycode/punycode.js\");\nvar util = __webpack_require__(/*! ./util */ \"../../node_modules/url/util.js\");\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = __webpack_require__(/*! querystring */ \"../../node_modules/querystring-es3/index.js\");\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/url/url.js?")},"../../node_modules/url/util.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/url/util.js?")},"../../node_modules/util-deprecate/browser.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"../../node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/util-deprecate/browser.js?")},"../../node_modules/webpack/buildin/global.js":function(module,exports){eval('var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function("return this")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === "object") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?')},"../../node_modules/webpack/buildin/module.js":function(module,exports){eval('module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, "loaded", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "id", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?')},"../../node_modules/whatwg-fetch/fetch.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Headers\", function() { return Headers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Request\", function() { return Request; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Response\", function() { return Response; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOMException\", function() { return DOMException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fetch\", function() { return fetch; });\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof self !== 'undefined' && self) ||\n  (typeof global !== 'undefined' && global)\n\nvar support = {\n  searchParams: 'URLSearchParams' in global,\n  iterable: 'Symbol' in global && 'iterator' in Symbol,\n  blob:\n    'FileReader' in global &&\n    'Blob' in global &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in global,\n  arrayBuffer: 'ArrayBuffer' in global\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nfunction Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    /*\n      fetch-mock wraps the Response object in an ES6 Proxy to\n      provide useful test harness features such as flush. However, on\n      ES5 browsers without fetch or Proxy support pollyfills must be used;\n      the proxy-pollyfill is unable to proxy an attribute unless it exists\n      on the object before the Proxy is created. This change ensures\n      Response.bodyUsed exists on the instance, while maintaining the\n      semantic of setting Request.bodyUsed in the constructor before\n      _initBody is called.\n    */\n    this.bodyUsed = this.bodyUsed\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        var isConsumed = consumed(this)\n        if (isConsumed) {\n          return isConsumed\n        }\n        if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n          return Promise.resolve(\n            this._bodyArrayBuffer.buffer.slice(\n              this._bodyArrayBuffer.byteOffset,\n              this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n            )\n          )\n        } else {\n          return Promise.resolve(this._bodyArrayBuffer)\n        }\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nfunction Request(input, options) {\n  if (!(this instanceof Request)) {\n    throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n  }\n\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n\n  if (this.method === 'GET' || this.method === 'HEAD') {\n    if (options.cache === 'no-store' || options.cache === 'no-cache') {\n      // Search for a '_' parameter in the query string\n      var reParamSearch = /([?&])_=[^&]*/\n      if (reParamSearch.test(this.url)) {\n        // If it already exists then set the value with the current time\n        this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime())\n      } else {\n        // Otherwise add a new '_' parameter to the end with the current time\n        var reQueryString = /\\?/\n        this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime()\n      }\n    }\n  }\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n  // https://github.com/github/fetch/issues/748\n  // https://github.com/zloirock/core-js/issues/751\n  preProcessedHeaders\n    .split('\\r')\n    .map(function(header) {\n      return header.indexOf('\\n') === 0 ? header.substr(1, header.length) : header\n    })\n    .forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nfunction Response(bodyInit, options) {\n  if (!(this instanceof Response)) {\n    throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n  }\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : ''\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nvar DOMException = global.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nfunction fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      setTimeout(function() {\n        resolve(new Response(body, options))\n      }, 0)\n    }\n\n    xhr.onerror = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request failed'))\n      }, 0)\n    }\n\n    xhr.ontimeout = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request failed'))\n      }, 0)\n    }\n\n    xhr.onabort = function() {\n      setTimeout(function() {\n        reject(new DOMException('Aborted', 'AbortError'))\n      }, 0)\n    }\n\n    function fixUrl(url) {\n      try {\n        return url === '' && global.location.href ? global.location.href : url\n      } catch (e) {\n        return url\n      }\n    }\n\n    xhr.open(request.method, fixUrl(request.url), true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr) {\n      if (support.blob) {\n        xhr.responseType = 'blob'\n      } else if (\n        support.arrayBuffer &&\n        request.headers.get('Content-Type') &&\n        request.headers.get('Content-Type').indexOf('application/octet-stream') !== -1\n      ) {\n        xhr.responseType = 'arraybuffer'\n      }\n    }\n\n    if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers)) {\n      Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n        xhr.setRequestHeader(name, normalizeValue(init.headers[name]))\n      })\n    } else {\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n    }\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!global.fetch) {\n  global.fetch = fetch\n  global.Headers = Headers\n  global.Request = Request\n  global.Response = Response\n}\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/whatwg-fetch/fetch.js?")},"../../node_modules/yaml/browser/dist/Anchors.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../../node_modules/@babel/runtime/helpers/defineProperty.js"));\n\nvar _Alias = _interopRequireDefault(__webpack_require__(/*! ./schema/Alias */ "../../node_modules/yaml/browser/dist/schema/Alias.js"));\n\nvar _Map = _interopRequireDefault(__webpack_require__(/*! ./schema/Map */ "../../node_modules/yaml/browser/dist/schema/Map.js"));\n\nvar _Merge = _interopRequireDefault(__webpack_require__(/*! ./schema/Merge */ "../../node_modules/yaml/browser/dist/schema/Merge.js"));\n\nvar _Scalar = _interopRequireDefault(__webpack_require__(/*! ./schema/Scalar */ "../../node_modules/yaml/browser/dist/schema/Scalar.js"));\n\nvar _Seq = _interopRequireDefault(__webpack_require__(/*! ./schema/Seq */ "../../node_modules/yaml/browser/dist/schema/Seq.js"));\n\nvar Anchors =\n/*#__PURE__*/\nfunction () {\n  (0, _createClass2.default)(Anchors, null, [{\n    key: "validAnchorNode",\n    value: function validAnchorNode(node) {\n      return node instanceof _Scalar.default || node instanceof _Seq.default || node instanceof _Map.default;\n    }\n  }]);\n\n  function Anchors(prefix) {\n    (0, _classCallCheck2.default)(this, Anchors);\n    (0, _defineProperty2.default)(this, "map", {});\n    this.prefix = prefix;\n  }\n\n  (0, _createClass2.default)(Anchors, [{\n    key: "createAlias",\n    value: function createAlias(node, name) {\n      this.setAnchor(node, name);\n      return new _Alias.default(node);\n    }\n  }, {\n    key: "createMergePair",\n    value: function createMergePair() {\n      var _this = this;\n\n      var merge = new _Merge.default();\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      merge.value.items = sources.map(function (s) {\n        if (s instanceof _Alias.default) {\n          if (s.source instanceof _Map.default) return s;\n        } else if (s instanceof _Map.default) {\n          return _this.createAlias(s);\n        }\n\n        throw new Error(\'Merge sources must be Map nodes or their Aliases\');\n      });\n      return merge;\n    }\n  }, {\n    key: "getName",\n    value: function getName(node) {\n      var map = this.map;\n      return Object.keys(map).find(function (a) {\n        return map[a] === node;\n      });\n    }\n  }, {\n    key: "getNode",\n    value: function getNode(name) {\n      return this.map[name];\n    }\n  }, {\n    key: "newName",\n    value: function newName(prefix) {\n      if (!prefix) prefix = this.prefix;\n      var names = Object.keys(this.map);\n\n      for (var i = 1; true; ++i) {\n        var name = "".concat(prefix).concat(i);\n        if (!names.includes(name)) return name;\n      }\n    } // During parsing, map & aliases contain CST nodes\n\n  }, {\n    key: "resolveNodes",\n    value: function resolveNodes() {\n      var map = this.map,\n          _cstAliases = this._cstAliases;\n      Object.keys(map).forEach(function (a) {\n        map[a] = map[a].resolved;\n      });\n\n      _cstAliases.forEach(function (a) {\n        a.source = a.source.resolved;\n      });\n\n      delete this._cstAliases;\n    }\n  }, {\n    key: "setAnchor",\n    value: function setAnchor(node, name) {\n      if (node != null && !Anchors.validAnchorNode(node)) {\n        throw new Error(\'Anchors may only be set for Scalar, Seq and Map nodes\');\n      }\n\n      if (name && /[\\x00-\\x19\\s,[\\]{}]/.test(name)) {\n        throw new Error(\'Anchor names must not contain whitespace or control characters\');\n      }\n\n      var map = this.map;\n      var prev = node && Object.keys(map).find(function (a) {\n        return map[a] === node;\n      });\n\n      if (prev) {\n        if (!name) {\n          return prev;\n        } else if (prev !== name) {\n          delete map[prev];\n          map[name] = node;\n        }\n      } else {\n        if (!name) {\n          if (!node) return null;\n          name = this.newName();\n        }\n\n        map[name] = node;\n      }\n\n      return name;\n    }\n  }]);\n  return Anchors;\n}();\n\nexports.default = Anchors;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/Anchors.js?')},"../../node_modules/yaml/browser/dist/Document.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ \"../../node_modules/@babel/runtime/helpers/interopRequireWildcard.js\");\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"../../node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"../../node_modules/@babel/runtime/helpers/slicedToArray.js\"));\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"../../node_modules/@babel/runtime/helpers/classCallCheck.js\"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"../../node_modules/@babel/runtime/helpers/createClass.js\"));\n\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"../../node_modules/@babel/runtime/helpers/defineProperty.js\"));\n\nvar _addComment = _interopRequireDefault(__webpack_require__(/*! ./addComment */ \"../../node_modules/yaml/browser/dist/addComment.js\"));\n\nvar _Anchors = _interopRequireDefault(__webpack_require__(/*! ./Anchors */ \"../../node_modules/yaml/browser/dist/Anchors.js\"));\n\nvar _constants = __webpack_require__(/*! ./constants */ \"../../node_modules/yaml/browser/dist/constants.js\");\n\nvar _errors = __webpack_require__(/*! ./errors */ \"../../node_modules/yaml/browser/dist/errors.js\");\n\nvar _listTagNames = _interopRequireDefault(__webpack_require__(/*! ./listTagNames */ \"../../node_modules/yaml/browser/dist/listTagNames.js\"));\n\nvar _schema = _interopRequireDefault(__webpack_require__(/*! ./schema */ \"../../node_modules/yaml/browser/dist/schema/index.js\"));\n\nvar _Alias = _interopRequireDefault(__webpack_require__(/*! ./schema/Alias */ \"../../node_modules/yaml/browser/dist/schema/Alias.js\"));\n\nvar _Collection = _interopRequireWildcard(__webpack_require__(/*! ./schema/Collection */ \"../../node_modules/yaml/browser/dist/schema/Collection.js\"));\n\nvar _Node = _interopRequireDefault(__webpack_require__(/*! ./schema/Node */ \"../../node_modules/yaml/browser/dist/schema/Node.js\"));\n\nvar _Scalar = _interopRequireDefault(__webpack_require__(/*! ./schema/Scalar */ \"../../node_modules/yaml/browser/dist/schema/Scalar.js\"));\n\nvar _toJSON2 = _interopRequireDefault(__webpack_require__(/*! ./toJSON */ \"../../node_modules/yaml/browser/dist/toJSON.js\"));\n\nvar isCollectionItem = function isCollectionItem(node) {\n  return node && [_constants.Type.MAP_KEY, _constants.Type.MAP_VALUE, _constants.Type.SEQ_ITEM].includes(node.type);\n};\n\nvar Document =\n/*#__PURE__*/\nfunction () {\n  function Document(options) {\n    (0, _classCallCheck2.default)(this, Document);\n    this.anchors = new _Anchors.default(options.anchorPrefix);\n    this.commentBefore = null;\n    this.comment = null;\n    this.contents = null;\n    this.directivesEndMarker = null;\n    this.errors = [];\n    this.options = options;\n    this.schema = null;\n    this.tagPrefixes = [];\n    this.version = null;\n    this.warnings = [];\n  }\n\n  (0, _createClass2.default)(Document, [{\n    key: \"assertCollectionContents\",\n    value: function assertCollectionContents() {\n      if (this.contents instanceof _Collection.default) return true;\n      throw new Error('Expected a YAML collection as document contents');\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      this.assertCollectionContents();\n      return this.contents.add(value);\n    }\n  }, {\n    key: \"addIn\",\n    value: function addIn(path, value) {\n      this.assertCollectionContents();\n      this.contents.addIn(path, value);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      this.assertCollectionContents();\n      return this.contents.delete(key);\n    }\n  }, {\n    key: \"deleteIn\",\n    value: function deleteIn(path) {\n      if ((0, _Collection.isEmptyPath)(path)) {\n        if (this.contents == null) return false;\n        this.contents = null;\n        return true;\n      }\n\n      this.assertCollectionContents();\n      return this.contents.deleteIn(path);\n    }\n  }, {\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Document.defaults[this.version] || Document.defaults[this.options.version] || {};\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepScalar) {\n      return this.contents instanceof _Collection.default ? this.contents.get(key, keepScalar) : undefined;\n    }\n  }, {\n    key: \"getIn\",\n    value: function getIn(path, keepScalar) {\n      if ((0, _Collection.isEmptyPath)(path)) return !keepScalar && this.contents instanceof _Scalar.default ? this.contents.value : this.contents;\n      return this.contents instanceof _Collection.default ? this.contents.getIn(path, keepScalar) : undefined;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this.contents instanceof _Collection.default ? this.contents.has(key) : false;\n    }\n  }, {\n    key: \"hasIn\",\n    value: function hasIn(path) {\n      if ((0, _Collection.isEmptyPath)(path)) return this.contents !== undefined;\n      return this.contents instanceof _Collection.default ? this.contents.hasIn(path) : false;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      this.assertCollectionContents();\n      this.contents.set(key, value);\n    }\n  }, {\n    key: \"setIn\",\n    value: function setIn(path, value) {\n      if ((0, _Collection.isEmptyPath)(path)) this.contents = value;else {\n        this.assertCollectionContents();\n        this.contents.setIn(path, value);\n      }\n    }\n  }, {\n    key: \"setSchema\",\n    value: function setSchema(id, customTags) {\n      if (!id && !customTags && this.schema) return;\n      if (typeof id === 'number') id = id.toFixed(1);\n\n      if (id === '1.0' || id === '1.1' || id === '1.2') {\n        if (this.version) this.version = id;else this.options.version = id;\n        delete this.options.schema;\n      } else if (id && typeof id === 'string') {\n        this.options.schema = id;\n      }\n\n      if (Array.isArray(customTags)) this.options.customTags = customTags;\n      var opt = Object.assign({}, this.getDefaults(), this.options);\n      this.schema = new _schema.default(opt);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(node, prevDoc) {\n      if (this.options.keepCstNodes) this.cstNode = node;\n      if (this.options.keepNodeTypes) this.type = 'DOCUMENT';\n      var _node$directives = node.directives,\n          directives = _node$directives === void 0 ? [] : _node$directives,\n          _node$contents = node.contents,\n          contents = _node$contents === void 0 ? [] : _node$contents,\n          directivesEndMarker = node.directivesEndMarker,\n          error = node.error,\n          valueRange = node.valueRange;\n\n      if (error) {\n        if (!error.source) error.source = this;\n        this.errors.push(error);\n      }\n\n      this.parseDirectives(directives, prevDoc);\n      if (directivesEndMarker) this.directivesEndMarker = true;\n      this.range = valueRange ? [valueRange.start, valueRange.end] : null;\n      this.setSchema();\n      this.anchors._cstAliases = [];\n      this.parseContents(contents);\n      this.anchors.resolveNodes();\n\n      if (this.options.prettyErrors) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _error = _step.value;\n            if (_error instanceof _errors.YAMLError) _error.makePretty();\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this.warnings[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var warn = _step2.value;\n            if (warn instanceof _errors.YAMLError) warn.makePretty();\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"parseDirectives\",\n    value: function parseDirectives(directives, prevDoc) {\n      var _this = this;\n\n      var directiveComments = [];\n      var hasDirectives = false;\n      directives.forEach(function (directive) {\n        var comment = directive.comment,\n            name = directive.name;\n\n        switch (name) {\n          case 'TAG':\n            _this.resolveTagDirective(directive);\n\n            hasDirectives = true;\n            break;\n\n          case 'YAML':\n          case 'YAML:1.0':\n            _this.resolveYamlDirective(directive);\n\n            hasDirectives = true;\n            break;\n\n          default:\n            if (name) {\n              var msg = \"YAML only supports %TAG and %YAML directives, and not %\".concat(name);\n\n              _this.warnings.push(new _errors.YAMLWarning(directive, msg));\n            }\n\n        }\n\n        if (comment) directiveComments.push(comment);\n      });\n\n      if (prevDoc && !hasDirectives && '1.1' === (this.version || prevDoc.version || this.options.version)) {\n        var copyTagPrefix = function copyTagPrefix(_ref) {\n          var handle = _ref.handle,\n              prefix = _ref.prefix;\n          return {\n            handle: handle,\n            prefix: prefix\n          };\n        };\n\n        this.tagPrefixes = prevDoc.tagPrefixes.map(copyTagPrefix);\n        this.version = prevDoc.version;\n      }\n\n      this.commentBefore = directiveComments.join('\\n') || null;\n    }\n  }, {\n    key: \"parseContents\",\n    value: function parseContents(contents) {\n      var _this2 = this;\n\n      var comments = {\n        before: [],\n        after: []\n      };\n      var contentNodes = [];\n      var spaceBefore = false;\n      contents.forEach(function (node) {\n        if (node.valueRange) {\n          if (contentNodes.length === 1) {\n            var msg = 'Document is not valid YAML (bad indentation?)';\n\n            _this2.errors.push(new _errors.YAMLSyntaxError(node, msg));\n          }\n\n          var res = _this2.resolveNode(node);\n\n          if (spaceBefore) {\n            res.spaceBefore = true;\n            spaceBefore = false;\n          }\n\n          contentNodes.push(res);\n        } else if (node.comment !== null) {\n          var cc = contentNodes.length === 0 ? comments.before : comments.after;\n          cc.push(node.comment);\n        } else if (node.type === _constants.Type.BLANK_LINE) {\n          spaceBefore = true;\n\n          if (contentNodes.length === 0 && comments.before.length > 0 && !_this2.commentBefore) {\n            // space-separated comments at start are parsed as document comments\n            _this2.commentBefore = comments.before.join('\\n');\n            comments.before = [];\n          }\n        }\n      });\n\n      switch (contentNodes.length) {\n        case 0:\n          this.contents = null;\n          comments.after = comments.before;\n          break;\n\n        case 1:\n          this.contents = contentNodes[0];\n\n          if (this.contents) {\n            var cb = comments.before.join('\\n') || null;\n\n            if (cb) {\n              var cbNode = this.contents instanceof _Collection.default && this.contents.items[0] ? this.contents.items[0] : this.contents;\n              cbNode.commentBefore = cbNode.commentBefore ? \"\".concat(cb, \"\\n\").concat(cbNode.commentBefore) : cb;\n            }\n          } else {\n            comments.after = comments.before.concat(comments.after);\n          }\n\n          break;\n\n        default:\n          this.contents = contentNodes;\n\n          if (this.contents[0]) {\n            this.contents[0].commentBefore = comments.before.join('\\n') || null;\n          } else {\n            comments.after = comments.before.concat(comments.after);\n          }\n\n      }\n\n      this.comment = comments.after.join('\\n') || null;\n    }\n  }, {\n    key: \"resolveTagDirective\",\n    value: function resolveTagDirective(directive) {\n      var _directive$parameters = (0, _slicedToArray2.default)(directive.parameters, 2),\n          handle = _directive$parameters[0],\n          prefix = _directive$parameters[1];\n\n      if (handle && prefix) {\n        if (this.tagPrefixes.every(function (p) {\n          return p.handle !== handle;\n        })) {\n          this.tagPrefixes.push({\n            handle: handle,\n            prefix: prefix\n          });\n        } else {\n          var msg = 'The %TAG directive must only be given at most once per handle in the same document.';\n          this.errors.push(new _errors.YAMLSemanticError(directive, msg));\n        }\n      } else {\n        var _msg = 'Insufficient parameters given for %TAG directive';\n        this.errors.push(new _errors.YAMLSemanticError(directive, _msg));\n      }\n    }\n  }, {\n    key: \"resolveYamlDirective\",\n    value: function resolveYamlDirective(directive) {\n      var _directive$parameters2 = (0, _slicedToArray2.default)(directive.parameters, 1),\n          version = _directive$parameters2[0];\n\n      if (directive.name === 'YAML:1.0') version = '1.0';\n\n      if (this.version) {\n        var msg = 'The %YAML directive must only be given at most once per document.';\n        this.errors.push(new _errors.YAMLSemanticError(directive, msg));\n      }\n\n      if (!version) {\n        var _msg2 = 'Insufficient parameters given for %YAML directive';\n        this.errors.push(new _errors.YAMLSemanticError(directive, _msg2));\n      } else {\n        if (!Document.defaults[version]) {\n          var v0 = this.version || this.options.version;\n\n          var _msg3 = \"Document will be parsed as YAML \".concat(v0, \" rather than YAML \").concat(version);\n\n          this.warnings.push(new _errors.YAMLWarning(directive, _msg3));\n        }\n\n        this.version = version;\n      }\n    }\n  }, {\n    key: \"resolveTagName\",\n    value: function resolveTagName(node) {\n      var tag = node.tag,\n          type = node.type;\n      var nonSpecific = false;\n\n      if (tag) {\n        var handle = tag.handle,\n            suffix = tag.suffix,\n            verbatim = tag.verbatim;\n\n        if (verbatim) {\n          if (verbatim !== '!' && verbatim !== '!!') return verbatim;\n          var msg = \"Verbatim tags aren't resolved, so \".concat(verbatim, \" is invalid.\");\n          this.errors.push(new _errors.YAMLSemanticError(node, msg));\n        } else if (handle === '!' && !suffix) {\n          nonSpecific = true;\n        } else {\n          var prefix = this.tagPrefixes.find(function (p) {\n            return p.handle === handle;\n          });\n\n          if (!prefix) {\n            var dtp = this.getDefaults().tagPrefixes;\n            if (dtp) prefix = dtp.find(function (p) {\n              return p.handle === handle;\n            });\n          }\n\n          if (prefix) {\n            if (suffix) {\n              if (handle === '!' && (this.version || this.options.version) === '1.0') {\n                if (suffix[0] === '^') return suffix;\n\n                if (/[:/]/.test(suffix)) {\n                  // word/foo -> tag:word.yaml.org,2002:foo\n                  var vocab = suffix.match(/^([a-z0-9-]+)\\/(.*)/i);\n                  return vocab ? \"tag:\".concat(vocab[1], \".yaml.org,2002:\").concat(vocab[2]) : \"tag:\".concat(suffix);\n                }\n              }\n\n              return prefix.prefix + decodeURIComponent(suffix);\n            }\n\n            this.errors.push(new _errors.YAMLSemanticError(node, \"The \".concat(handle, \" tag has no suffix.\")));\n          } else {\n            var _msg4 = \"The \".concat(handle, \" tag handle is non-default and was not declared.\");\n\n            this.errors.push(new _errors.YAMLSemanticError(node, _msg4));\n          }\n        }\n      }\n\n      switch (type) {\n        case _constants.Type.BLOCK_FOLDED:\n        case _constants.Type.BLOCK_LITERAL:\n        case _constants.Type.QUOTE_DOUBLE:\n        case _constants.Type.QUOTE_SINGLE:\n          return _schema.default.defaultTags.STR;\n\n        case _constants.Type.FLOW_MAP:\n        case _constants.Type.MAP:\n          return _schema.default.defaultTags.MAP;\n\n        case _constants.Type.FLOW_SEQ:\n        case _constants.Type.SEQ:\n          return _schema.default.defaultTags.SEQ;\n\n        case _constants.Type.PLAIN:\n          return nonSpecific ? _schema.default.defaultTags.STR : null;\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"resolveNode\",\n    value: function resolveNode(node) {\n      if (!node) return null;\n      var anchors = this.anchors,\n          errors = this.errors,\n          schema = this.schema;\n      var hasAnchor = false;\n      var hasTag = false;\n      var comments = {\n        before: [],\n        after: []\n      };\n      var props = isCollectionItem(node.context.parent) ? node.context.parent.props.concat(node.props) : node.props;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = props[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _step3.value,\n              start = _step3$value.start,\n              end = _step3$value.end;\n\n          switch (node.context.src[start]) {\n            case _constants.Char.COMMENT:\n              {\n                if (!node.commentHasRequiredWhitespace(start)) {\n                  var _msg7 = 'Comments must be separated from other tokens by white space characters';\n                  errors.push(new _errors.YAMLSemanticError(node, _msg7));\n                }\n\n                var c = node.context.src.slice(start + 1, end);\n                var header = node.header,\n                    valueRange = node.valueRange;\n\n                if (valueRange && (start > valueRange.start || header && start > header.start)) {\n                  comments.after.push(c);\n                } else {\n                  comments.before.push(c);\n                }\n              }\n              break;\n\n            case _constants.Char.ANCHOR:\n              if (hasAnchor) {\n                var _msg8 = 'A node can have at most one anchor';\n                errors.push(new _errors.YAMLSemanticError(node, _msg8));\n              }\n\n              hasAnchor = true;\n              break;\n\n            case _constants.Char.TAG:\n              if (hasTag) {\n                var _msg9 = 'A node can have at most one tag';\n                errors.push(new _errors.YAMLSemanticError(node, _msg9));\n              }\n\n              hasTag = true;\n              break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      if (hasAnchor) {\n        var name = node.anchor;\n        var prev = anchors.getNode(name); // At this point, aliases for any preceding node with the same anchor\n        // name have already been resolved, so it may safely be renamed.\n\n        if (prev) anchors.map[anchors.newName(name)] = prev; // During parsing, we need to store the CST node in anchors.map as\n        // anchors need to be available during resolution to allow for\n        // circular references.\n\n        anchors.map[name] = node;\n      }\n\n      var res;\n\n      if (node.type === _constants.Type.ALIAS) {\n        if (hasAnchor || hasTag) {\n          var msg = 'An alias node must not specify any properties';\n          errors.push(new _errors.YAMLSemanticError(node, msg));\n        }\n\n        var _name = node.rawValue;\n        var src = anchors.getNode(_name);\n\n        if (!src) {\n          var _msg5 = \"Aliased anchor not found: \".concat(_name);\n\n          errors.push(new _errors.YAMLReferenceError(node, _msg5));\n          return null;\n        } // Lazy resolution for circular references\n\n\n        res = new _Alias.default(src);\n\n        anchors._cstAliases.push(res);\n      } else {\n        var tagName = this.resolveTagName(node);\n\n        if (tagName) {\n          res = schema.resolveNodeWithFallback(this, node, tagName);\n        } else {\n          if (node.type !== _constants.Type.PLAIN) {\n            var _msg6 = \"Failed to resolve \".concat(node.type, \" node here\");\n\n            errors.push(new _errors.YAMLSyntaxError(node, _msg6));\n            return null;\n          }\n\n          try {\n            res = schema.resolveScalar(node.strValue || '');\n          } catch (error) {\n            if (!error.source) error.source = node;\n            errors.push(error);\n            return null;\n          }\n        }\n      }\n\n      if (res) {\n        res.range = [node.range.start, node.range.end];\n        if (this.options.keepCstNodes) res.cstNode = node;\n        if (this.options.keepNodeTypes) res.type = node.type;\n        var cb = comments.before.join('\\n');\n\n        if (cb) {\n          res.commentBefore = res.commentBefore ? \"\".concat(res.commentBefore, \"\\n\").concat(cb) : cb;\n        }\n\n        var ca = comments.after.join('\\n');\n        if (ca) res.comment = res.comment ? \"\".concat(res.comment, \"\\n\").concat(ca) : ca;\n      }\n\n      return node.resolved = res;\n    }\n  }, {\n    key: \"listNonDefaultTags\",\n    value: function listNonDefaultTags() {\n      return (0, _listTagNames.default)(this.contents).filter(function (t) {\n        return t.indexOf(_schema.default.defaultPrefix) !== 0;\n      });\n    }\n  }, {\n    key: \"setTagPrefix\",\n    value: function setTagPrefix(handle, prefix) {\n      if (handle[0] !== '!' || handle[handle.length - 1] !== '!') throw new Error('Handle must start and end with !');\n\n      if (prefix) {\n        var prev = this.tagPrefixes.find(function (p) {\n          return p.handle === handle;\n        });\n        if (prev) prev.prefix = prefix;else this.tagPrefixes.push({\n          handle: handle,\n          prefix: prefix\n        });\n      } else {\n        this.tagPrefixes = this.tagPrefixes.filter(function (p) {\n          return p.handle !== handle;\n        });\n      }\n    }\n  }, {\n    key: \"stringifyTag\",\n    value: function stringifyTag(tag) {\n      if ((this.version || this.options.version) === '1.0') {\n        var priv = tag.match(/^tag:private\\.yaml\\.org,2002:([^:/]+)$/);\n        if (priv) return '!' + priv[1];\n        var vocab = tag.match(/^tag:([a-zA-Z0-9-]+)\\.yaml\\.org,2002:(.*)/);\n        return vocab ? \"!\".concat(vocab[1], \"/\").concat(vocab[2]) : \"!\".concat(tag.replace(/^tag:/, ''));\n      } else {\n        var p = this.tagPrefixes.find(function (p) {\n          return tag.indexOf(p.prefix) === 0;\n        });\n\n        if (!p) {\n          var dtp = this.getDefaults().tagPrefixes;\n          p = dtp && dtp.find(function (p) {\n            return tag.indexOf(p.prefix) === 0;\n          });\n        }\n\n        if (!p) return tag[0] === '!' ? tag : \"!<\".concat(tag, \">\");\n        var suffix = tag.substr(p.prefix.length).replace(/[!,[\\]{}]/g, function (ch) {\n          return {\n            '!': '%21',\n            ',': '%2C',\n            '[': '%5B',\n            ']': '%5D',\n            '{': '%7B',\n            '}': '%7D'\n          }[ch];\n        });\n        return p.handle + suffix;\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(arg) {\n      var _this3 = this;\n\n      var _this$options = this.options,\n          keepBlobsInJSON = _this$options.keepBlobsInJSON,\n          mapAsMap = _this$options.mapAsMap,\n          maxAliasCount = _this$options.maxAliasCount;\n      var keep = keepBlobsInJSON && (typeof arg !== 'string' || !(this.contents instanceof _Scalar.default));\n      var ctx = {\n        doc: this,\n        keep: keep,\n        mapAsMap: keep && !!mapAsMap,\n        maxAliasCount: maxAliasCount\n      };\n      var anchorNames = Object.keys(this.anchors.map);\n      if (anchorNames.length > 0) ctx.anchors = anchorNames.map(function (name) {\n        return {\n          alias: [],\n          aliasCount: 0,\n          count: 1,\n          node: _this3.anchors.map[name]\n        };\n      });\n      return (0, _toJSON2.default)(this.contents, arg, ctx);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (this.errors.length > 0) throw new Error('Document with errors cannot be stringified');\n      this.setSchema();\n      var lines = [];\n      var hasDirectives = false;\n\n      if (this.version) {\n        var vd = '%YAML 1.2';\n\n        if (this.schema.name === 'yaml-1.1') {\n          if (this.version === '1.0') vd = '%YAML:1.0';else if (this.version === '1.1') vd = '%YAML 1.1';\n        }\n\n        lines.push(vd);\n        hasDirectives = true;\n      }\n\n      var tagNames = this.listNonDefaultTags();\n      this.tagPrefixes.forEach(function (_ref2) {\n        var handle = _ref2.handle,\n            prefix = _ref2.prefix;\n\n        if (tagNames.some(function (t) {\n          return t.indexOf(prefix) === 0;\n        })) {\n          lines.push(\"%TAG \".concat(handle, \" \").concat(prefix));\n          hasDirectives = true;\n        }\n      });\n      if (hasDirectives || this.directivesEndMarker) lines.push('---');\n\n      if (this.commentBefore) {\n        if (hasDirectives || !this.directivesEndMarker) lines.unshift('');\n        lines.unshift(this.commentBefore.replace(/^/gm, '#'));\n      }\n\n      var ctx = {\n        anchors: {},\n        doc: this,\n        indent: ''\n      };\n      var chompKeep = false;\n      var contentComment = null;\n\n      if (this.contents) {\n        if (this.contents instanceof _Node.default) {\n          if (this.contents.spaceBefore && (hasDirectives || this.directivesEndMarker)) lines.push('');\n          if (this.contents.commentBefore) lines.push(this.contents.commentBefore.replace(/^/gm, '#')); // top-level block scalars need to be indented if followed by a comment\n\n          ctx.forceBlockIndent = !!this.comment;\n          contentComment = this.contents.comment;\n        }\n\n        var onChompKeep = contentComment ? null : function () {\n          return chompKeep = true;\n        };\n        var body = this.schema.stringify(this.contents, ctx, function () {\n          return contentComment = null;\n        }, onChompKeep);\n        lines.push((0, _addComment.default)(body, '', contentComment));\n      } else if (this.contents !== undefined) {\n        lines.push(this.schema.stringify(this.contents, ctx));\n      }\n\n      if (this.comment) {\n        if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '') lines.push('');\n        lines.push(this.comment.replace(/^/gm, '#'));\n      }\n\n      return lines.join('\\n') + '\\n';\n    }\n  }]);\n  return Document;\n}();\n\nexports.default = Document;\n(0, _defineProperty2.default)(Document, \"defaults\", {\n  '1.0': {\n    schema: 'yaml-1.1',\n    merge: true,\n    tagPrefixes: [{\n      handle: '!',\n      prefix: _schema.default.defaultPrefix\n    }, {\n      handle: '!!',\n      prefix: 'tag:private.yaml.org,2002:'\n    }]\n  },\n  '1.1': {\n    schema: 'yaml-1.1',\n    merge: true,\n    tagPrefixes: [{\n      handle: '!',\n      prefix: '!'\n    }, {\n      handle: '!!',\n      prefix: _schema.default.defaultPrefix\n    }]\n  },\n  '1.2': {\n    schema: 'core',\n    merge: false,\n    tagPrefixes: [{\n      handle: '!',\n      prefix: '!'\n    }, {\n      handle: '!!',\n      prefix: _schema.default.defaultPrefix\n    }]\n  }\n});\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/Document.js?")},"../../node_modules/yaml/browser/dist/addComment.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.addCommentBefore = addCommentBefore;\nexports.default = addComment;\n\nfunction addCommentBefore(str, indent, comment) {\n  if (!comment) return str;\n  var cc = comment.replace(/[\\s\\S]^/gm, "$&".concat(indent, "#"));\n  return "#".concat(cc, "\\n").concat(indent).concat(str);\n}\n\nfunction addComment(str, indent, comment) {\n  return !comment ? str : comment.indexOf(\'\\n\') === -1 ? "".concat(str, " #").concat(comment) : "".concat(str, "\\n") + comment.replace(/^/gm, "".concat(indent || \'\', "#"));\n}\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/addComment.js?')},"../../node_modules/yaml/browser/dist/constants.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type = exports.Char = void 0;\nvar Char = {\n  ANCHOR: '&',\n  COMMENT: '#',\n  TAG: '!',\n  DIRECTIVES_END: '-',\n  DOCUMENT_END: '.'\n};\nexports.Char = Char;\nvar Type = {\n  ALIAS: 'ALIAS',\n  BLANK_LINE: 'BLANK_LINE',\n  BLOCK_FOLDED: 'BLOCK_FOLDED',\n  BLOCK_LITERAL: 'BLOCK_LITERAL',\n  COMMENT: 'COMMENT',\n  DIRECTIVE: 'DIRECTIVE',\n  DOCUMENT: 'DOCUMENT',\n  FLOW_MAP: 'FLOW_MAP',\n  FLOW_SEQ: 'FLOW_SEQ',\n  MAP: 'MAP',\n  MAP_KEY: 'MAP_KEY',\n  MAP_VALUE: 'MAP_VALUE',\n  PLAIN: 'PLAIN',\n  QUOTE_DOUBLE: 'QUOTE_DOUBLE',\n  QUOTE_SINGLE: 'QUOTE_SINGLE',\n  SEQ: 'SEQ',\n  SEQ_ITEM: 'SEQ_ITEM'\n};\nexports.Type = Type;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/constants.js?")},"../../node_modules/yaml/browser/dist/cst/Alias.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ "../../node_modules/yaml/browser/dist/cst/Node.js"));\n\nvar _Range = _interopRequireDefault(__webpack_require__(/*! ./Range */ "../../node_modules/yaml/browser/dist/cst/Range.js"));\n\nvar Alias =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Alias, _Node);\n\n  function Alias() {\n    (0, _classCallCheck2.default)(this, Alias);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Alias).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(Alias, [{\n    key: "parse",\n\n    /**\n     * Parses an *alias from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar\n     */\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n\n      var offset = _Node2.default.endOfIdentifier(src, start + 1);\n\n      this.valueRange = new _Range.default(start + 1, offset);\n      offset = _Node2.default.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      return offset;\n    }\n  }]);\n  return Alias;\n}(_Node2.default);\n\nexports.default = Alias;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/Alias.js?')},"../../node_modules/yaml/browser/dist/cst/BlankLine.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _constants = __webpack_require__(/*! ../constants */ "../../node_modules/yaml/browser/dist/constants.js");\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ "../../node_modules/yaml/browser/dist/cst/Node.js"));\n\nvar _Range = _interopRequireDefault(__webpack_require__(/*! ./Range */ "../../node_modules/yaml/browser/dist/cst/Range.js"));\n\nvar BlankLine =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(BlankLine, _Node);\n\n  function BlankLine() {\n    (0, _classCallCheck2.default)(this, BlankLine);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BlankLine).call(this, _constants.Type.BLANK_LINE));\n  }\n\n  (0, _createClass2.default)(BlankLine, [{\n    key: "parse",\n\n    /**\n     * Parses blank lines from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first \\n character\n     * @returns {number} - Index of the character after this\n     */\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = start + 1;\n\n      while (_Node2.default.atBlank(src, offset)) {\n        var lineEnd = _Node2.default.endOfWhiteSpace(src, offset);\n\n        if (lineEnd === \'\\n\') offset = lineEnd + 1;else break;\n      }\n\n      this.range = new _Range.default(start, offset);\n      return offset;\n    }\n  }, {\n    key: "includesTrailingLines",\n    get: function get() {\n      return true;\n    }\n  }]);\n  return BlankLine;\n}(_Node2.default);\n\nexports.default = BlankLine;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/BlankLine.js?')},"../../node_modules/yaml/browser/dist/cst/BlockValue.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"../../node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Chomp = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"../../node_modules/@babel/runtime/helpers/classCallCheck.js\"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"../../node_modules/@babel/runtime/helpers/createClass.js\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"../../node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\n\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ \"../../node_modules/@babel/runtime/helpers/get.js\"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"../../node_modules/@babel/runtime/helpers/inherits.js\"));\n\nvar _constants = __webpack_require__(/*! ../constants */ \"../../node_modules/yaml/browser/dist/constants.js\");\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ \"../../node_modules/yaml/browser/dist/cst/Node.js\"));\n\nvar _Range = _interopRequireDefault(__webpack_require__(/*! ./Range */ \"../../node_modules/yaml/browser/dist/cst/Range.js\"));\n\nvar Chomp = {\n  CLIP: 'CLIP',\n  KEEP: 'KEEP',\n  STRIP: 'STRIP'\n};\nexports.Chomp = Chomp;\n\nvar BlockValue =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(BlockValue, _Node);\n\n  function BlockValue(type, props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, BlockValue);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BlockValue).call(this, type, props));\n    _this.blockIndent = null;\n    _this.chomping = Chomp.CLIP;\n    _this.header = null;\n    return _this;\n  }\n\n  (0, _createClass2.default)(BlockValue, [{\n    key: \"parseBlockHeader\",\n    value: function parseBlockHeader(start) {\n      var src = this.context.src;\n      var offset = start + 1;\n      var bi = '';\n\n      while (true) {\n        var ch = src[offset];\n\n        switch (ch) {\n          case '-':\n            this.chomping = Chomp.STRIP;\n            break;\n\n          case '+':\n            this.chomping = Chomp.KEEP;\n            break;\n\n          case '0':\n          case '1':\n          case '2':\n          case '3':\n          case '4':\n          case '5':\n          case '6':\n          case '7':\n          case '8':\n          case '9':\n            bi += ch;\n            break;\n\n          default:\n            this.blockIndent = Number(bi) || null;\n            this.header = new _Range.default(start, offset);\n            return offset;\n        }\n\n        offset += 1;\n      }\n    }\n  }, {\n    key: \"parseBlockValue\",\n    value: function parseBlockValue(start) {\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          src = _this$context.src;\n      var offset = start;\n      var valueEnd = start;\n      var bi = this.blockIndent ? indent + this.blockIndent - 1 : indent;\n      var minBlockIndent = 1;\n\n      for (var ch = src[offset]; ch === '\\n'; ch = src[offset]) {\n        offset += 1;\n        if (_Node2.default.atDocumentBoundary(src, offset)) break;\n\n        var end = _Node2.default.endOfBlockIndent(src, bi, offset); // should not include tab?\n\n\n        if (end === null) break;\n\n        if (!this.blockIndent) {\n          // no explicit block indent, none yet detected\n          var lineIndent = end - (offset + indent);\n\n          if (src[end] !== '\\n') {\n            // first line with non-whitespace content\n            if (lineIndent < minBlockIndent) {\n              offset -= 1;\n              break;\n            }\n\n            this.blockIndent = lineIndent;\n            bi = indent + this.blockIndent - 1;\n          } else if (lineIndent > minBlockIndent) {\n            // empty line with more whitespace\n            minBlockIndent = lineIndent;\n          }\n        }\n\n        if (src[end] === '\\n') {\n          offset = end;\n        } else {\n          offset = valueEnd = _Node2.default.endOfLine(src, end);\n        }\n      }\n\n      if (this.chomping !== Chomp.KEEP) {\n        offset = src[valueEnd] ? valueEnd + 1 : valueEnd;\n      }\n\n      this.valueRange = new _Range.default(start + 1, offset);\n      return offset;\n    }\n    /**\n     * Parses a block value from the source\n     *\n     * Accepted forms are:\n     * ```\n     * BS\n     * block\n     * lines\n     *\n     * BS #comment\n     * block\n     * lines\n     * ```\n     * where the block style BS matches the regexp `[|>][-+1-9]*` and block lines\n     * are empty or have an indent level greater than `indent`.\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this block\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = this.parseBlockHeader(start);\n      offset = _Node2.default.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      offset = this.parseBlockValue(offset);\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = (0, _get2.default)((0, _getPrototypeOf2.default)(BlockValue.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      return this.header ? this.header.setOrigRange(cr, offset) : offset;\n    }\n  }, {\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return this.chomping === Chomp.KEEP;\n    }\n  }, {\n    key: \"strValue\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var _this$context2 = this.context,\n          indent = _this$context2.indent,\n          src = _this$context2.src;\n      if (this.valueRange.isEmpty()) return '';\n      var lastNewLine = null;\n      var ch = src[end - 1];\n\n      while (ch === '\\n' || ch === '\\t' || ch === ' ') {\n        end -= 1;\n\n        if (end <= start) {\n          if (this.chomping === Chomp.KEEP) break;else return '';\n        }\n\n        if (ch === '\\n') lastNewLine = end;\n        ch = src[end - 1];\n      }\n\n      var keepStart = end + 1;\n\n      if (lastNewLine) {\n        if (this.chomping === Chomp.KEEP) {\n          keepStart = lastNewLine;\n          end = this.valueRange.end;\n        } else {\n          end = lastNewLine;\n        }\n      }\n\n      var bi = indent + this.blockIndent;\n      var folded = this.type === _constants.Type.BLOCK_FOLDED;\n      var atStart = true;\n      var str = '';\n      var sep = '';\n      var prevMoreIndented = false;\n\n      for (var i = start; i < end; ++i) {\n        for (var j = 0; j < bi; ++j) {\n          if (src[i] !== ' ') break;\n          i += 1;\n        }\n\n        var _ch = src[i];\n\n        if (_ch === '\\n') {\n          if (sep === '\\n') str += '\\n';else sep = '\\n';\n        } else {\n          var lineEnd = _Node2.default.endOfLine(src, i);\n\n          var line = src.slice(i, lineEnd);\n          i = lineEnd;\n\n          if (folded && (_ch === ' ' || _ch === '\\t') && i < keepStart) {\n            if (sep === ' ') sep = '\\n';else if (!prevMoreIndented && !atStart && sep === '\\n') sep = '\\n\\n';\n            str += sep + line; //+ ((lineEnd < end && src[lineEnd]) || '')\n\n            sep = lineEnd < end && src[lineEnd] || '';\n            prevMoreIndented = true;\n          } else {\n            str += sep + line;\n            sep = folded && i < keepStart ? ' ' : '\\n';\n            prevMoreIndented = false;\n          }\n\n          if (atStart && line !== '') atStart = false;\n        }\n      }\n\n      return this.chomping === Chomp.STRIP ? str : str + '\\n';\n    }\n  }]);\n  return BlockValue;\n}(_Node2.default);\n\nexports.default = BlockValue;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/BlockValue.js?")},"../../node_modules/yaml/browser/dist/cst/Collection.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"../../node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.grabCollectionEndComments = grabCollectionEndComments;\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"../../node_modules/@babel/runtime/helpers/classCallCheck.js\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"../../node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\n\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ \"../../node_modules/@babel/runtime/helpers/get.js\"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"../../node_modules/@babel/runtime/helpers/createClass.js\"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"../../node_modules/@babel/runtime/helpers/inherits.js\"));\n\nvar _constants = __webpack_require__(/*! ../constants */ \"../../node_modules/yaml/browser/dist/constants.js\");\n\nvar _BlankLine = _interopRequireDefault(__webpack_require__(/*! ./BlankLine */ \"../../node_modules/yaml/browser/dist/cst/BlankLine.js\"));\n\nvar _CollectionItem = _interopRequireDefault(__webpack_require__(/*! ./CollectionItem */ \"../../node_modules/yaml/browser/dist/cst/CollectionItem.js\"));\n\nvar _Comment = _interopRequireDefault(__webpack_require__(/*! ./Comment */ \"../../node_modules/yaml/browser/dist/cst/Comment.js\"));\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ \"../../node_modules/yaml/browser/dist/cst/Node.js\"));\n\nvar _Range = _interopRequireDefault(__webpack_require__(/*! ./Range */ \"../../node_modules/yaml/browser/dist/cst/Range.js\"));\n\nfunction grabCollectionEndComments(node) {\n  var cnode = node;\n\n  while (cnode instanceof _CollectionItem.default) {\n    cnode = cnode.node;\n  }\n\n  if (!(cnode instanceof Collection)) return null;\n  var len = cnode.items.length;\n  var ci = -1;\n\n  for (var i = len - 1; i >= 0; --i) {\n    var n = cnode.items[i];\n\n    if (n.type === _constants.Type.COMMENT) {\n      // Keep sufficiently indented comments with preceding node\n      var _n$context = n.context,\n          indent = _n$context.indent,\n          lineStart = _n$context.lineStart;\n      if (indent > 0 && n.range.start >= lineStart + indent) break;\n      ci = i;\n    } else if (n.type === _constants.Type.BLANK_LINE) ci = i;else break;\n  }\n\n  if (ci === -1) return null;\n  var ca = cnode.items.splice(ci, len - ci);\n  var prevEnd = ca[0].range.start;\n\n  while (true) {\n    cnode.range.end = prevEnd;\n    if (cnode.valueRange && cnode.valueRange.end > prevEnd) cnode.valueRange.end = prevEnd;\n    if (cnode === node) break;\n    cnode = cnode.context.parent;\n  }\n\n  return ca;\n}\n\nvar Collection =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Collection, _Node);\n  (0, _createClass2.default)(Collection, null, [{\n    key: \"nextContentHasIndent\",\n    value: function nextContentHasIndent(src, offset, indent) {\n      var lineStart = _Node2.default.endOfLine(src, offset) + 1;\n      offset = _Node2.default.endOfWhiteSpace(src, lineStart);\n      var ch = src[offset];\n      if (!ch) return false;\n      if (offset >= lineStart + indent) return true;\n      if (ch !== '#' && ch !== '\\n') return false;\n      return Collection.nextContentHasIndent(src, offset, indent);\n    }\n  }]);\n\n  function Collection(firstItem) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Collection);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Collection).call(this, firstItem.type === _constants.Type.SEQ_ITEM ? _constants.Type.SEQ : _constants.Type.MAP));\n\n    for (var i = firstItem.props.length - 1; i >= 0; --i) {\n      if (firstItem.props[i].start < firstItem.context.lineStart) {\n        // props on previous line are assumed by the collection\n        _this.props = firstItem.props.slice(0, i + 1);\n        firstItem.props = firstItem.props.slice(i + 1);\n        var itemRange = firstItem.props[0] || firstItem.valueRange;\n        firstItem.range.start = itemRange.start;\n        break;\n      }\n    }\n\n    _this.items = [firstItem];\n    var ec = grabCollectionEndComments(firstItem);\n    if (ec) Array.prototype.push.apply(_this.items, ec);\n    return _this;\n  }\n\n  (0, _createClass2.default)(Collection, [{\n    key: \"parse\",\n\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n    value: function parse(context, start) {\n      this.context = context;\n      var parseNode = context.parseNode,\n          src = context.src; // It's easier to recalculate lineStart here rather than tracking down the\n      // last context from which to read it -- eemeli/yaml#2\n\n      var lineStart = _Node2.default.startOfLine(src, start);\n\n      var firstItem = this.items[0]; // First-item context needs to be correct for later comment handling\n      // -- eemeli/yaml#17\n\n      firstItem.context.parent = this;\n      this.valueRange = _Range.default.copy(firstItem.valueRange);\n      var indent = firstItem.range.start - firstItem.context.lineStart;\n      var offset = start;\n      offset = _Node2.default.normalizeOffset(src, offset);\n      var ch = src[offset];\n      var atLineStart = _Node2.default.endOfWhiteSpace(src, lineStart) === offset;\n      var prevIncludesTrailingLines = false;\n\n      while (ch) {\n        while (ch === '\\n' || ch === '#') {\n          if (atLineStart && ch === '\\n' && !prevIncludesTrailingLines) {\n            var blankLine = new _BlankLine.default();\n            offset = blankLine.parse({\n              src: src\n            }, offset);\n            this.valueRange.end = offset;\n\n            if (offset >= src.length) {\n              ch = null;\n              break;\n            }\n\n            this.items.push(blankLine);\n            offset -= 1; // blankLine.parse() consumes terminal newline\n          } else if (ch === '#') {\n            if (offset < lineStart + indent && !Collection.nextContentHasIndent(src, offset, indent)) {\n              return offset;\n            }\n\n            var comment = new _Comment.default();\n            offset = comment.parse({\n              indent: indent,\n              lineStart: lineStart,\n              src: src\n            }, offset);\n            this.items.push(comment);\n            this.valueRange.end = offset;\n\n            if (offset >= src.length) {\n              ch = null;\n              break;\n            }\n          }\n\n          lineStart = offset + 1;\n          offset = _Node2.default.endOfIndent(src, lineStart);\n\n          if (_Node2.default.atBlank(src, offset)) {\n            var wsEnd = _Node2.default.endOfWhiteSpace(src, offset);\n\n            var next = src[wsEnd];\n\n            if (!next || next === '\\n' || next === '#') {\n              offset = wsEnd;\n            }\n          }\n\n          ch = src[offset];\n          atLineStart = true;\n        }\n\n        if (!ch) {\n          break;\n        }\n\n        if (offset !== lineStart + indent && (atLineStart || ch !== ':')) {\n          if (lineStart > start) offset = lineStart;\n          break;\n        }\n\n        if (firstItem.type === _constants.Type.SEQ_ITEM !== (ch === '-')) {\n          var typeswitch = true;\n\n          if (ch === '-') {\n            // map key may start with -, as long as it's followed by a non-whitespace char\n            var _next = src[offset + 1];\n            typeswitch = !_next || _next === '\\n' || _next === '\\t' || _next === ' ';\n          }\n\n          if (typeswitch) {\n            if (lineStart > start) offset = lineStart;\n            break;\n          }\n        }\n\n        var node = parseNode({\n          atLineStart: atLineStart,\n          inCollection: true,\n          indent: indent,\n          lineStart: lineStart,\n          parent: this\n        }, offset);\n        if (!node) return offset; // at next document start\n\n        this.items.push(node);\n        this.valueRange.end = node.valueRange.end;\n        offset = _Node2.default.normalizeOffset(src, node.range.end);\n        ch = src[offset];\n        atLineStart = false;\n        prevIncludesTrailingLines = node.includesTrailingLines; // Need to reset lineStart and atLineStart here if preceding node's range\n        // has advanced to check the current line's indentation level\n        // -- eemeli/yaml#10 & eemeli/yaml#38\n\n        if (ch) {\n          var ls = offset - 1;\n          var prev = src[ls];\n\n          while (prev === ' ' || prev === '\\t') {\n            prev = src[--ls];\n          }\n\n          if (prev === '\\n') {\n            lineStart = ls + 1;\n            atLineStart = true;\n          }\n        }\n\n        var ec = grabCollectionEndComments(node);\n        if (ec) Array.prototype.push.apply(this.items, ec);\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = (0, _get2.default)((0, _getPrototypeOf2.default)(Collection.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      this.items.forEach(function (node) {\n        offset = node.setOrigRanges(cr, offset);\n      });\n      return offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var src = this.context.src,\n          items = this.items,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var str = src.slice(range.start, items[0].range.start) + String(items[0]);\n\n      for (var i = 1; i < items.length; ++i) {\n        var item = items[i];\n        var _item$context = item.context,\n            atLineStart = _item$context.atLineStart,\n            indent = _item$context.indent;\n        if (atLineStart) for (var _i = 0; _i < indent; ++_i) {\n          str += ' ';\n        }\n        str += String(item);\n      }\n\n      return _Node2.default.addStringTerminator(src, range.end, str);\n    }\n  }, {\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return this.items.length > 0;\n    }\n  }]);\n  return Collection;\n}(_Node2.default);\n\nexports.default = Collection;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/Collection.js?")},"../../node_modules/yaml/browser/dist/cst/CollectionItem.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ "../../node_modules/@babel/runtime/helpers/get.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _constants = __webpack_require__(/*! ../constants */ "../../node_modules/yaml/browser/dist/constants.js");\n\nvar _errors = __webpack_require__(/*! ../errors */ "../../node_modules/yaml/browser/dist/errors.js");\n\nvar _BlankLine = _interopRequireDefault(__webpack_require__(/*! ./BlankLine */ "../../node_modules/yaml/browser/dist/cst/BlankLine.js"));\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ "../../node_modules/yaml/browser/dist/cst/Node.js"));\n\nvar _Range = _interopRequireDefault(__webpack_require__(/*! ./Range */ "../../node_modules/yaml/browser/dist/cst/Range.js"));\n\nvar CollectionItem =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(CollectionItem, _Node);\n\n  function CollectionItem(type, props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CollectionItem);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CollectionItem).call(this, type, props));\n    _this.node = null;\n    return _this;\n  }\n\n  (0, _createClass2.default)(CollectionItem, [{\n    key: "parse",\n\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n    value: function parse(context, start) {\n      this.context = context;\n      var parseNode = context.parseNode,\n          src = context.src;\n      var atLineStart = context.atLineStart,\n          lineStart = context.lineStart;\n      if (!atLineStart && this.type === _constants.Type.SEQ_ITEM) this.error = new _errors.YAMLSemanticError(this, \'Sequence items must not have preceding content on the same line\');\n      var indent = atLineStart ? start - lineStart : context.indent;\n\n      var offset = _Node2.default.endOfWhiteSpace(src, start + 1);\n\n      var ch = src[offset];\n      var inlineComment = ch === \'#\';\n      var comments = [];\n      var blankLine = null;\n\n      while (ch === \'\\n\' || ch === \'#\') {\n        if (ch === \'#\') {\n          var _end = _Node2.default.endOfLine(src, offset + 1);\n\n          comments.push(new _Range.default(offset, _end));\n          offset = _end;\n        } else {\n          atLineStart = true;\n          lineStart = offset + 1;\n\n          var wsEnd = _Node2.default.endOfWhiteSpace(src, lineStart);\n\n          if (src[wsEnd] === \'\\n\' && comments.length === 0) {\n            blankLine = new _BlankLine.default();\n            lineStart = blankLine.parse({\n              src: src\n            }, lineStart);\n          }\n\n          offset = _Node2.default.endOfIndent(src, lineStart);\n        }\n\n        ch = src[offset];\n      }\n\n      if (_Node2.default.nextNodeIsIndented(ch, offset - (lineStart + indent), this.type !== _constants.Type.SEQ_ITEM)) {\n        this.node = parseNode({\n          atLineStart: atLineStart,\n          inCollection: false,\n          indent: indent,\n          lineStart: lineStart,\n          parent: this\n        }, offset);\n      } else if (ch && lineStart > start + 1) {\n        offset = lineStart - 1;\n      }\n\n      if (this.node) {\n        if (blankLine) {\n          // Only blank lines preceding non-empty nodes are captured. Note that\n          // this means that collection item range start indices do not always\n          // increase monotonically. -- eemeli/yaml#126\n          var items = context.parent.items || context.parent.contents;\n          if (items) items.push(blankLine);\n        }\n\n        if (comments.length) Array.prototype.push.apply(this.props, comments);\n        offset = this.node.range.end;\n      } else {\n        if (inlineComment) {\n          var c = comments[0];\n          this.props.push(c);\n          offset = c.end;\n        } else {\n          offset = _Node2.default.endOfLine(src, start + 1);\n        }\n      }\n\n      var end = this.node ? this.node.valueRange.end : offset;\n      this.valueRange = new _Range.default(start, end);\n      return offset;\n    }\n  }, {\n    key: "setOrigRanges",\n    value: function setOrigRanges(cr, offset) {\n      offset = (0, _get2.default)((0, _getPrototypeOf2.default)(CollectionItem.prototype), "setOrigRanges", this).call(this, cr, offset);\n      return this.node ? this.node.setOrigRanges(cr, offset) : offset;\n    }\n  }, {\n    key: "toString",\n    value: function toString() {\n      var src = this.context.src,\n          node = this.node,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var str = node ? src.slice(range.start, node.range.start) + String(node) : src.slice(range.start, range.end);\n      return _Node2.default.addStringTerminator(src, range.end, str);\n    }\n  }, {\n    key: "includesTrailingLines",\n    get: function get() {\n      return !!this.node && this.node.includesTrailingLines;\n    }\n  }]);\n  return CollectionItem;\n}(_Node2.default);\n\nexports.default = CollectionItem;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/CollectionItem.js?')},"../../node_modules/yaml/browser/dist/cst/Comment.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _constants = __webpack_require__(/*! ../constants */ "../../node_modules/yaml/browser/dist/constants.js");\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ "../../node_modules/yaml/browser/dist/cst/Node.js"));\n\nvar _Range = _interopRequireDefault(__webpack_require__(/*! ./Range */ "../../node_modules/yaml/browser/dist/cst/Range.js"));\n\nvar Comment =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Comment, _Node);\n\n  function Comment() {\n    (0, _classCallCheck2.default)(this, Comment);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Comment).call(this, _constants.Type.COMMENT));\n  }\n  /**\n   * Parses a comment line from the source\n   *\n   * @param {ParseContext} context\n   * @param {number} start - Index of first character\n   * @returns {number} - Index of the character after this scalar\n   */\n\n\n  (0, _createClass2.default)(Comment, [{\n    key: "parse",\n    value: function parse(context, start) {\n      this.context = context;\n      var offset = this.parseComment(start);\n      this.range = new _Range.default(start, offset);\n      return offset;\n    }\n  }]);\n  return Comment;\n}(_Node2.default);\n\nexports.default = Comment;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/Comment.js?')},"../../node_modules/yaml/browser/dist/cst/Directive.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _constants = __webpack_require__(/*! ../constants */ "../../node_modules/yaml/browser/dist/constants.js");\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ "../../node_modules/yaml/browser/dist/cst/Node.js"));\n\nvar _Range = _interopRequireDefault(__webpack_require__(/*! ./Range */ "../../node_modules/yaml/browser/dist/cst/Range.js"));\n\nvar Directive =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Directive, _Node);\n  (0, _createClass2.default)(Directive, null, [{\n    key: "endOfDirective",\n    value: function endOfDirective(src, offset) {\n      var ch = src[offset];\n\n      while (ch && ch !== \'\\n\' && ch !== \'#\') {\n        ch = src[offset += 1];\n      } // last char can\'t be whitespace\n\n\n      ch = src[offset - 1];\n\n      while (ch === \' \' || ch === \'\\t\') {\n        offset -= 1;\n        ch = src[offset - 1];\n      }\n\n      return offset;\n    }\n  }]);\n\n  function Directive() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Directive);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Directive).call(this, _constants.Type.DIRECTIVE));\n    _this.name = null;\n    return _this;\n  }\n\n  (0, _createClass2.default)(Directive, [{\n    key: "parseName",\n    value: function parseName(start) {\n      var src = this.context.src;\n      var offset = start;\n      var ch = src[offset];\n\n      while (ch && ch !== \'\\n\' && ch !== \'\\t\' && ch !== \' \') {\n        ch = src[offset += 1];\n      }\n\n      this.name = src.slice(start, offset);\n      return offset;\n    }\n  }, {\n    key: "parseParameters",\n    value: function parseParameters(start) {\n      var src = this.context.src;\n      var offset = start;\n      var ch = src[offset];\n\n      while (ch && ch !== \'\\n\' && ch !== \'#\') {\n        ch = src[offset += 1];\n      }\n\n      this.valueRange = new _Range.default(start, offset);\n      return offset;\n    }\n  }, {\n    key: "parse",\n    value: function parse(context, start) {\n      this.context = context;\n      var offset = this.parseName(start + 1);\n      offset = this.parseParameters(offset);\n      offset = this.parseComment(offset);\n      this.range = new _Range.default(start, offset);\n      return offset;\n    }\n  }, {\n    key: "parameters",\n    get: function get() {\n      var raw = this.rawValue;\n      return raw ? raw.trim().split(/[ \\t]+/) : [];\n    }\n  }]);\n  return Directive;\n}(_Node2.default);\n\nexports.default = Directive;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/Directive.js?')},"../../node_modules/yaml/browser/dist/cst/Document.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ "../../node_modules/@babel/runtime/helpers/get.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _constants = __webpack_require__(/*! ../constants */ "../../node_modules/yaml/browser/dist/constants.js");\n\nvar _errors = __webpack_require__(/*! ../errors */ "../../node_modules/yaml/browser/dist/errors.js");\n\nvar _BlankLine = _interopRequireDefault(__webpack_require__(/*! ./BlankLine */ "../../node_modules/yaml/browser/dist/cst/BlankLine.js"));\n\nvar _Collection = __webpack_require__(/*! ./Collection */ "../../node_modules/yaml/browser/dist/cst/Collection.js");\n\nvar _Comment = _interopRequireDefault(__webpack_require__(/*! ./Comment */ "../../node_modules/yaml/browser/dist/cst/Comment.js"));\n\nvar _Directive = _interopRequireDefault(__webpack_require__(/*! ./Directive */ "../../node_modules/yaml/browser/dist/cst/Directive.js"));\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ "../../node_modules/yaml/browser/dist/cst/Node.js"));\n\nvar _Range = _interopRequireDefault(__webpack_require__(/*! ./Range */ "../../node_modules/yaml/browser/dist/cst/Range.js"));\n\nvar Document =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Document, _Node);\n  (0, _createClass2.default)(Document, null, [{\n    key: "startCommentOrEndBlankLine",\n    value: function startCommentOrEndBlankLine(src, start) {\n      var offset = _Node2.default.endOfWhiteSpace(src, start);\n\n      var ch = src[offset];\n      return ch === \'#\' || ch === \'\\n\' ? offset : start;\n    }\n  }]);\n\n  function Document() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Document);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Document).call(this, _constants.Type.DOCUMENT));\n    _this.directives = null;\n    _this.contents = null;\n    _this.directivesEndMarker = null;\n    _this.documentEndMarker = null;\n    return _this;\n  }\n\n  (0, _createClass2.default)(Document, [{\n    key: "parseDirectives",\n    value: function parseDirectives(start) {\n      var src = this.context.src;\n      this.directives = [];\n      var atLineStart = true;\n      var hasDirectives = false;\n      var offset = start;\n\n      while (!_Node2.default.atDocumentBoundary(src, offset, _constants.Char.DIRECTIVES_END)) {\n        offset = Document.startCommentOrEndBlankLine(src, offset);\n\n        switch (src[offset]) {\n          case \'\\n\':\n            if (atLineStart) {\n              var blankLine = new _BlankLine.default();\n              offset = blankLine.parse({\n                src: src\n              }, offset);\n\n              if (offset < src.length) {\n                this.directives.push(blankLine);\n              }\n            } else {\n              offset += 1;\n              atLineStart = true;\n            }\n\n            break;\n\n          case \'#\':\n            {\n              var comment = new _Comment.default();\n              offset = comment.parse({\n                src: src\n              }, offset);\n              this.directives.push(comment);\n              atLineStart = false;\n            }\n            break;\n\n          case \'%\':\n            {\n              var directive = new _Directive.default();\n              offset = directive.parse({\n                parent: this,\n                src: src\n              }, offset);\n              this.directives.push(directive);\n              hasDirectives = true;\n              atLineStart = false;\n            }\n            break;\n\n          default:\n            if (hasDirectives) {\n              this.error = new _errors.YAMLSemanticError(this, \'Missing directives-end indicator line\');\n            } else if (this.directives.length > 0) {\n              this.contents = this.directives;\n              this.directives = [];\n            }\n\n            return offset;\n        }\n      }\n\n      if (src[offset]) {\n        this.directivesEndMarker = new _Range.default(offset, offset + 3);\n        return offset + 3;\n      }\n\n      if (hasDirectives) {\n        this.error = new _errors.YAMLSemanticError(this, \'Missing directives-end indicator line\');\n      } else if (this.directives.length > 0) {\n        this.contents = this.directives;\n        this.directives = [];\n      }\n\n      return offset;\n    }\n  }, {\n    key: "parseContents",\n    value: function parseContents(start) {\n      var _this$context = this.context,\n          parseNode = _this$context.parseNode,\n          src = _this$context.src;\n      if (!this.contents) this.contents = [];\n      var lineStart = start;\n\n      while (src[lineStart - 1] === \'-\') {\n        lineStart -= 1;\n      }\n\n      var offset = _Node2.default.endOfWhiteSpace(src, start);\n\n      var atLineStart = lineStart === start;\n      this.valueRange = new _Range.default(offset);\n\n      while (!_Node2.default.atDocumentBoundary(src, offset, _constants.Char.DOCUMENT_END)) {\n        switch (src[offset]) {\n          case \'\\n\':\n            if (atLineStart) {\n              var blankLine = new _BlankLine.default();\n              offset = blankLine.parse({\n                src: src\n              }, offset);\n\n              if (offset < src.length) {\n                this.contents.push(blankLine);\n              }\n            } else {\n              offset += 1;\n              atLineStart = true;\n            }\n\n            lineStart = offset;\n            break;\n\n          case \'#\':\n            {\n              var comment = new _Comment.default();\n              offset = comment.parse({\n                src: src\n              }, offset);\n              this.contents.push(comment);\n              atLineStart = false;\n            }\n            break;\n\n          default:\n            {\n              var iEnd = _Node2.default.endOfIndent(src, offset);\n\n              var context = {\n                atLineStart: atLineStart,\n                indent: -1,\n                inFlow: false,\n                inCollection: false,\n                lineStart: lineStart,\n                parent: this\n              };\n              var node = parseNode(context, iEnd);\n              if (!node) return this.valueRange.end = iEnd; // at next document start\n\n              this.contents.push(node);\n              offset = node.range.end;\n              atLineStart = false;\n              var ec = (0, _Collection.grabCollectionEndComments)(node);\n              if (ec) Array.prototype.push.apply(this.contents, ec);\n            }\n        }\n\n        offset = Document.startCommentOrEndBlankLine(src, offset);\n      }\n\n      this.valueRange.end = offset;\n\n      if (src[offset]) {\n        this.documentEndMarker = new _Range.default(offset, offset + 3);\n        offset += 3;\n\n        if (src[offset]) {\n          offset = _Node2.default.endOfWhiteSpace(src, offset);\n\n          if (src[offset] === \'#\') {\n            var _comment = new _Comment.default();\n\n            offset = _comment.parse({\n              src: src\n            }, offset);\n            this.contents.push(_comment);\n          }\n\n          switch (src[offset]) {\n            case \'\\n\':\n              offset += 1;\n              break;\n\n            case undefined:\n              break;\n\n            default:\n              this.error = new _errors.YAMLSyntaxError(this, \'Document end marker line cannot have a non-comment suffix\');\n          }\n        }\n      }\n\n      return offset;\n    }\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n\n  }, {\n    key: "parse",\n    value: function parse(context, start) {\n      context.root = this;\n      this.context = context;\n      var src = context.src;\n      var offset = src.charCodeAt(start) === 0xfeff ? start + 1 : start; // skip BOM\n\n      offset = this.parseDirectives(offset);\n      offset = this.parseContents(offset);\n      return offset;\n    }\n  }, {\n    key: "setOrigRanges",\n    value: function setOrigRanges(cr, offset) {\n      offset = (0, _get2.default)((0, _getPrototypeOf2.default)(Document.prototype), "setOrigRanges", this).call(this, cr, offset);\n      this.directives.forEach(function (node) {\n        offset = node.setOrigRanges(cr, offset);\n      });\n      if (this.directivesEndMarker) offset = this.directivesEndMarker.setOrigRange(cr, offset);\n      this.contents.forEach(function (node) {\n        offset = node.setOrigRanges(cr, offset);\n      });\n      if (this.documentEndMarker) offset = this.documentEndMarker.setOrigRange(cr, offset);\n      return offset;\n    }\n  }, {\n    key: "toString",\n    value: function toString() {\n      var contents = this.contents,\n          directives = this.directives,\n          value = this.value;\n      if (value != null) return value;\n      var str = directives.join(\'\');\n\n      if (contents.length > 0) {\n        if (directives.length > 0 || contents[0].type === _constants.Type.COMMENT) str += \'---\\n\';\n        str += contents.join(\'\');\n      }\n\n      if (str[str.length - 1] !== \'\\n\') str += \'\\n\';\n      return str;\n    }\n  }]);\n  return Document;\n}(_Node2.default);\n\nexports.default = Document;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/Document.js?')},"../../node_modules/yaml/browser/dist/cst/FlowCollection.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"../../node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"../../node_modules/@babel/runtime/helpers/classCallCheck.js\"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"../../node_modules/@babel/runtime/helpers/createClass.js\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"../../node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\n\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ \"../../node_modules/@babel/runtime/helpers/get.js\"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"../../node_modules/@babel/runtime/helpers/inherits.js\"));\n\nvar _constants = __webpack_require__(/*! ../constants */ \"../../node_modules/yaml/browser/dist/constants.js\");\n\nvar _errors = __webpack_require__(/*! ../errors */ \"../../node_modules/yaml/browser/dist/errors.js\");\n\nvar _BlankLine = _interopRequireDefault(__webpack_require__(/*! ./BlankLine */ \"../../node_modules/yaml/browser/dist/cst/BlankLine.js\"));\n\nvar _Comment = _interopRequireDefault(__webpack_require__(/*! ./Comment */ \"../../node_modules/yaml/browser/dist/cst/Comment.js\"));\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ \"../../node_modules/yaml/browser/dist/cst/Node.js\"));\n\nvar _Range = _interopRequireDefault(__webpack_require__(/*! ./Range */ \"../../node_modules/yaml/browser/dist/cst/Range.js\"));\n\nvar FlowCollection =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(FlowCollection, _Node);\n\n  function FlowCollection(type, props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, FlowCollection);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FlowCollection).call(this, type, props));\n    _this.items = null;\n    return _this;\n  }\n\n  (0, _createClass2.default)(FlowCollection, [{\n    key: \"prevNodeIsJsonLike\",\n    value: function prevNodeIsJsonLike() {\n      var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.items.length;\n      var node = this.items[idx - 1];\n      return !!node && (node.jsonLike || node.type === _constants.Type.COMMENT && this.nodeIsJsonLike(idx - 1));\n    }\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var parseNode = context.parseNode,\n          src = context.src;\n      var indent = context.indent,\n          lineStart = context.lineStart;\n      var char = src[start]; // { or [\n\n      this.items = [{\n        char: char,\n        offset: start\n      }];\n\n      var offset = _Node2.default.endOfWhiteSpace(src, start + 1);\n\n      char = src[offset];\n\n      while (char && char !== ']' && char !== '}') {\n        switch (char) {\n          case '\\n':\n            {\n              lineStart = offset + 1;\n\n              var wsEnd = _Node2.default.endOfWhiteSpace(src, lineStart);\n\n              if (src[wsEnd] === '\\n') {\n                var blankLine = new _BlankLine.default();\n                lineStart = blankLine.parse({\n                  src: src\n                }, lineStart);\n                this.items.push(blankLine);\n              }\n\n              offset = _Node2.default.endOfIndent(src, lineStart);\n\n              if (offset <= lineStart + indent) {\n                char = src[offset];\n\n                if (offset < lineStart + indent || char !== ']' && char !== '}') {\n                  var msg = 'Insufficient indentation in flow collection';\n                  this.error = new _errors.YAMLSemanticError(this, msg);\n                }\n              }\n            }\n            break;\n\n          case ',':\n            {\n              this.items.push({\n                char: char,\n                offset: offset\n              });\n              offset += 1;\n            }\n            break;\n\n          case '#':\n            {\n              var comment = new _Comment.default();\n              offset = comment.parse({\n                src: src\n              }, offset);\n              this.items.push(comment);\n            }\n            break;\n\n          case '?':\n          case ':':\n            {\n              var next = src[offset + 1];\n\n              if (next === '\\n' || next === '\\t' || next === ' ' || next === ',' || // in-flow : after JSON-like key does not need to be followed by whitespace\n              char === ':' && this.prevNodeIsJsonLike()) {\n                this.items.push({\n                  char: char,\n                  offset: offset\n                });\n                offset += 1;\n                break;\n              }\n            }\n          // fallthrough\n\n          default:\n            {\n              var node = parseNode({\n                atLineStart: false,\n                inCollection: false,\n                inFlow: true,\n                indent: -1,\n                lineStart: lineStart,\n                parent: this\n              }, offset);\n\n              if (!node) {\n                // at next document start\n                this.valueRange = new _Range.default(start, offset);\n                return offset;\n              }\n\n              this.items.push(node);\n              offset = _Node2.default.normalizeOffset(src, node.range.end);\n            }\n        }\n\n        offset = _Node2.default.endOfWhiteSpace(src, offset);\n        char = src[offset];\n      }\n\n      this.valueRange = new _Range.default(start, offset + 1);\n\n      if (char) {\n        this.items.push({\n          char: char,\n          offset: offset\n        });\n        offset = _Node2.default.endOfWhiteSpace(src, offset + 1);\n        offset = this.parseComment(offset);\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = (0, _get2.default)((0, _getPrototypeOf2.default)(FlowCollection.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      this.items.forEach(function (node) {\n        if (node instanceof _Node2.default) {\n          offset = node.setOrigRanges(cr, offset);\n        } else if (cr.length === 0) {\n          node.origOffset = node.offset;\n        } else {\n          var i = offset;\n\n          while (i < cr.length) {\n            if (cr[i] > node.offset) break;else ++i;\n          }\n\n          node.origOffset = node.offset + i;\n          offset = i;\n        }\n      });\n      return offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var src = this.context.src,\n          items = this.items,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var nodes = items.filter(function (item) {\n        return item instanceof _Node2.default;\n      });\n      var str = '';\n      var prevEnd = range.start;\n      nodes.forEach(function (node) {\n        var prefix = src.slice(prevEnd, node.range.start);\n        prevEnd = node.range.end;\n        str += prefix + String(node);\n\n        if (str[str.length - 1] === '\\n' && src[prevEnd - 1] !== '\\n' && src[prevEnd] === '\\n') {\n          // Comment range does not include the terminal newline, but its\n          // stringified value does. Without this fix, newlines at comment ends\n          // get duplicated.\n          prevEnd += 1;\n        }\n      });\n      str += src.slice(prevEnd, range.end);\n      return _Node2.default.addStringTerminator(src, range.end, str);\n    }\n  }]);\n  return FlowCollection;\n}(_Node2.default);\n\nexports.default = FlowCollection;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/FlowCollection.js?")},"../../node_modules/yaml/browser/dist/cst/Node.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"../../node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"../../node_modules/@babel/runtime/helpers/slicedToArray.js\"));\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"../../node_modules/@babel/runtime/helpers/classCallCheck.js\"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"../../node_modules/@babel/runtime/helpers/createClass.js\"));\n\nvar _constants = __webpack_require__(/*! ../constants */ \"../../node_modules/yaml/browser/dist/constants.js\");\n\nvar _sourceUtils = __webpack_require__(/*! ./source-utils */ \"../../node_modules/yaml/browser/dist/cst/source-utils.js\");\n\nvar _Range = _interopRequireDefault(__webpack_require__(/*! ./Range */ \"../../node_modules/yaml/browser/dist/cst/Range.js\"));\n\n/** Root class of all nodes */\nvar Node =\n/*#__PURE__*/\nfunction () {\n  (0, _createClass2.default)(Node, null, [{\n    key: \"addStringTerminator\",\n    value: function addStringTerminator(src, offset, str) {\n      if (str[str.length - 1] === '\\n') return str;\n      var next = Node.endOfWhiteSpace(src, offset);\n      return next >= src.length || src[next] === '\\n' ? str + '\\n' : str;\n    } // ^(---|...)\n\n  }, {\n    key: \"atDocumentBoundary\",\n    value: function atDocumentBoundary(src, offset, sep) {\n      var ch0 = src[offset];\n      if (!ch0) return true;\n      var prev = src[offset - 1];\n      if (prev && prev !== '\\n') return false;\n\n      if (sep) {\n        if (ch0 !== sep) return false;\n      } else {\n        if (ch0 !== _constants.Char.DIRECTIVES_END && ch0 !== _constants.Char.DOCUMENT_END) return false;\n      }\n\n      var ch1 = src[offset + 1];\n      var ch2 = src[offset + 2];\n      if (ch1 !== ch0 || ch2 !== ch0) return false;\n      var ch3 = src[offset + 3];\n      return !ch3 || ch3 === '\\n' || ch3 === '\\t' || ch3 === ' ';\n    }\n  }, {\n    key: \"endOfIdentifier\",\n    value: function endOfIdentifier(src, offset) {\n      var ch = src[offset];\n      var isVerbatim = ch === '<';\n      var notOk = isVerbatim ? ['\\n', '\\t', ' ', '>'] : ['\\n', '\\t', ' ', '[', ']', '{', '}', ','];\n\n      while (ch && notOk.indexOf(ch) === -1) {\n        ch = src[offset += 1];\n      }\n\n      if (isVerbatim && ch === '>') offset += 1;\n      return offset;\n    }\n  }, {\n    key: \"endOfIndent\",\n    value: function endOfIndent(src, offset) {\n      var ch = src[offset];\n\n      while (ch === ' ') {\n        ch = src[offset += 1];\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"endOfLine\",\n    value: function endOfLine(src, offset) {\n      var ch = src[offset];\n\n      while (ch && ch !== '\\n') {\n        ch = src[offset += 1];\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"endOfWhiteSpace\",\n    value: function endOfWhiteSpace(src, offset) {\n      var ch = src[offset];\n\n      while (ch === '\\t' || ch === ' ') {\n        ch = src[offset += 1];\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"startOfLine\",\n    value: function startOfLine(src, offset) {\n      var ch = src[offset - 1];\n      if (ch === '\\n') return offset;\n\n      while (ch && ch !== '\\n') {\n        ch = src[offset -= 1];\n      }\n\n      return offset + 1;\n    }\n    /**\n     * End of indentation, or null if the line's indent level is not more\n     * than `indent`\n     *\n     * @param {string} src\n     * @param {number} indent\n     * @param {number} lineStart\n     * @returns {?number}\n     */\n\n  }, {\n    key: \"endOfBlockIndent\",\n    value: function endOfBlockIndent(src, indent, lineStart) {\n      var inEnd = Node.endOfIndent(src, lineStart);\n\n      if (inEnd > lineStart + indent) {\n        return inEnd;\n      } else {\n        var wsEnd = Node.endOfWhiteSpace(src, inEnd);\n        var ch = src[wsEnd];\n        if (!ch || ch === '\\n') return wsEnd;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"atBlank\",\n    value: function atBlank(src, offset, endAsBlank) {\n      var ch = src[offset];\n      return ch === '\\n' || ch === '\\t' || ch === ' ' || endAsBlank && !ch;\n    }\n  }, {\n    key: \"atCollectionItem\",\n    value: function atCollectionItem(src, offset) {\n      var ch = src[offset];\n      return (ch === '?' || ch === ':' || ch === '-') && Node.atBlank(src, offset + 1, true);\n    }\n  }, {\n    key: \"nextNodeIsIndented\",\n    value: function nextNodeIsIndented(ch, indentDiff, indicatorAsIndent) {\n      if (!ch || indentDiff < 0) return false;\n      if (indentDiff > 0) return true;\n      return indicatorAsIndent && ch === '-';\n    } // should be at line or string end, or at next non-whitespace char\n\n  }, {\n    key: \"normalizeOffset\",\n    value: function normalizeOffset(src, offset) {\n      var ch = src[offset];\n      return !ch ? offset : ch !== '\\n' && src[offset - 1] === '\\n' ? offset - 1 : Node.endOfWhiteSpace(src, offset);\n    } // fold single newline into space, multiple newlines to N - 1 newlines\n    // presumes src[offset] === '\\n'\n\n  }, {\n    key: \"foldNewline\",\n    value: function foldNewline(src, offset, indent) {\n      var inCount = 0;\n      var error = false;\n      var fold = '';\n      var ch = src[offset + 1];\n\n      while (ch === ' ' || ch === '\\t' || ch === '\\n') {\n        switch (ch) {\n          case '\\n':\n            inCount = 0;\n            offset += 1;\n            fold += '\\n';\n            break;\n\n          case '\\t':\n            if (inCount <= indent) error = true;\n            offset = Node.endOfWhiteSpace(src, offset + 2) - 1;\n            break;\n\n          case ' ':\n            inCount += 1;\n            offset += 1;\n            break;\n        }\n\n        ch = src[offset + 1];\n      }\n\n      if (!fold) fold = ' ';\n      if (ch && inCount <= indent) error = true;\n      return {\n        fold: fold,\n        offset: offset,\n        error: error\n      };\n    }\n  }]);\n\n  function Node(type, props, context) {\n    (0, _classCallCheck2.default)(this, Node);\n    Object.defineProperty(this, 'context', {\n      value: context || null,\n      writable: true\n    });\n    this.error = null;\n    this.range = null;\n    this.valueRange = null;\n    this.props = props || [];\n    this.type = type;\n    this.value = null;\n  }\n\n  (0, _createClass2.default)(Node, [{\n    key: \"getPropValue\",\n    value: function getPropValue(idx, key, skipKey) {\n      if (!this.context) return null;\n      var src = this.context.src;\n      var prop = this.props[idx];\n      return prop && src[prop.start] === key ? src.slice(prop.start + (skipKey ? 1 : 0), prop.end) : null;\n    }\n  }, {\n    key: \"commentHasRequiredWhitespace\",\n    value: function commentHasRequiredWhitespace(start) {\n      var src = this.context.src;\n      if (this.header && start === this.header.end) return false;\n      if (!this.valueRange) return false;\n      var end = this.valueRange.end;\n      return start !== end || Node.atBlank(src, end - 1);\n    }\n  }, {\n    key: \"parseComment\",\n    value: function parseComment(start) {\n      var src = this.context.src;\n\n      if (src[start] === _constants.Char.COMMENT) {\n        var end = Node.endOfLine(src, start + 1);\n        var commentRange = new _Range.default(start, end);\n        this.props.push(commentRange);\n        return end;\n      }\n\n      return start;\n    }\n    /**\n     * Populates the `origStart` and `origEnd` values of all ranges for this\n     * node. Extended by child classes to handle descendant nodes.\n     *\n     * @param {number[]} cr - Positions of dropped CR characters\n     * @param {number} offset - Starting index of `cr` from the last call\n     * @returns {number} - The next offset, matching the one found for `origStart`\n     */\n\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      if (this.range) offset = this.range.setOrigRange(cr, offset);\n      if (this.valueRange) this.valueRange.setOrigRange(cr, offset);\n      this.props.forEach(function (prop) {\n        return prop.setOrigRange(cr, offset);\n      });\n      return offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var src = this.context.src,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var str = src.slice(range.start, range.end);\n      return Node.addStringTerminator(src, range.end, str);\n    }\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      for (var i = 0; i < this.props.length; ++i) {\n        var anchor = this.getPropValue(i, _constants.Char.ANCHOR, true);\n        if (anchor != null) return anchor;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"comment\",\n    get: function get() {\n      var comments = [];\n\n      for (var i = 0; i < this.props.length; ++i) {\n        var comment = this.getPropValue(i, _constants.Char.COMMENT, true);\n        if (comment != null) comments.push(comment);\n      }\n\n      return comments.length > 0 ? comments.join('\\n') : null;\n    }\n  }, {\n    key: \"hasComment\",\n    get: function get() {\n      if (this.context) {\n        var src = this.context.src;\n\n        for (var i = 0; i < this.props.length; ++i) {\n          if (src[this.props[i].start] === _constants.Char.COMMENT) return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"hasProps\",\n    get: function get() {\n      if (this.context) {\n        var src = this.context.src;\n\n        for (var i = 0; i < this.props.length; ++i) {\n          if (src[this.props[i].start] !== _constants.Char.COMMENT) return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"jsonLike\",\n    get: function get() {\n      var jsonLikeTypes = [_constants.Type.FLOW_MAP, _constants.Type.FLOW_SEQ, _constants.Type.QUOTE_DOUBLE, _constants.Type.QUOTE_SINGLE];\n      return jsonLikeTypes.indexOf(this.type) !== -1;\n    }\n  }, {\n    key: \"rangeAsLinePos\",\n    get: function get() {\n      if (!this.range || !this.context) return undefined;\n      var start = (0, _sourceUtils.getLinePos)(this.range.start, this.context.root);\n      if (!start) return undefined;\n      var end = (0, _sourceUtils.getLinePos)(this.range.end, this.context.root);\n      return {\n        start: start,\n        end: end\n      };\n    }\n  }, {\n    key: \"rawValue\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      return this.context.src.slice(start, end);\n    }\n  }, {\n    key: \"tag\",\n    get: function get() {\n      for (var i = 0; i < this.props.length; ++i) {\n        var tag = this.getPropValue(i, _constants.Char.TAG, false);\n\n        if (tag != null) {\n          if (tag[1] === '<') {\n            return {\n              verbatim: tag.slice(2, -1)\n            };\n          } else {\n            // eslint-disable-next-line no-unused-vars\n            var _tag$match = tag.match(/^(.*!)([^!]*)$/),\n                _tag$match2 = (0, _slicedToArray2.default)(_tag$match, 3),\n                _ = _tag$match2[0],\n                handle = _tag$match2[1],\n                suffix = _tag$match2[2];\n\n            return {\n              handle: handle,\n              suffix: suffix\n            };\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"valueRangeContainsNewline\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return false;\n      var _this$valueRange2 = this.valueRange,\n          start = _this$valueRange2.start,\n          end = _this$valueRange2.end;\n      var src = this.context.src;\n\n      for (var i = start; i < end; ++i) {\n        if (src[i] === '\\n') return true;\n      }\n\n      return false;\n    }\n  }]);\n  return Node;\n}();\n\nexports.default = Node;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/Node.js?")},"../../node_modules/yaml/browser/dist/cst/ParseContext.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../../node_modules/@babel/runtime/helpers/defineProperty.js"));\n\nvar _constants = __webpack_require__(/*! ../constants */ "../../node_modules/yaml/browser/dist/constants.js");\n\nvar _errors = __webpack_require__(/*! ../errors */ "../../node_modules/yaml/browser/dist/errors.js");\n\nvar _Alias = _interopRequireDefault(__webpack_require__(/*! ./Alias */ "../../node_modules/yaml/browser/dist/cst/Alias.js"));\n\nvar _BlockValue = _interopRequireDefault(__webpack_require__(/*! ./BlockValue */ "../../node_modules/yaml/browser/dist/cst/BlockValue.js"));\n\nvar _Collection = _interopRequireDefault(__webpack_require__(/*! ./Collection */ "../../node_modules/yaml/browser/dist/cst/Collection.js"));\n\nvar _CollectionItem = _interopRequireDefault(__webpack_require__(/*! ./CollectionItem */ "../../node_modules/yaml/browser/dist/cst/CollectionItem.js"));\n\nvar _FlowCollection = _interopRequireDefault(__webpack_require__(/*! ./FlowCollection */ "../../node_modules/yaml/browser/dist/cst/FlowCollection.js"));\n\nvar _Node = _interopRequireDefault(__webpack_require__(/*! ./Node */ "../../node_modules/yaml/browser/dist/cst/Node.js"));\n\nvar _PlainValue = _interopRequireDefault(__webpack_require__(/*! ./PlainValue */ "../../node_modules/yaml/browser/dist/cst/PlainValue.js"));\n\nvar _QuoteDouble = _interopRequireDefault(__webpack_require__(/*! ./QuoteDouble */ "../../node_modules/yaml/browser/dist/cst/QuoteDouble.js"));\n\nvar _QuoteSingle = _interopRequireDefault(__webpack_require__(/*! ./QuoteSingle */ "../../node_modules/yaml/browser/dist/cst/QuoteSingle.js"));\n\nvar _Range = _interopRequireDefault(__webpack_require__(/*! ./Range */ "../../node_modules/yaml/browser/dist/cst/Range.js"));\n\n/**\n * @param {boolean} atLineStart - Node starts at beginning of line\n * @param {boolean} inFlow - true if currently in a flow context\n * @param {boolean} inCollection - true if currently in a collection context\n * @param {number} indent - Current level of indentation\n * @param {number} lineStart - Start of the current line\n * @param {Node} parent - The parent of the node\n * @param {string} src - Source of the YAML document\n */\nvar ParseContext =\n/*#__PURE__*/\nfunction () {\n  (0, _createClass2.default)(ParseContext, null, [{\n    key: "parseType",\n    value: function parseType(src, offset, inFlow) {\n      switch (src[offset]) {\n        case \'*\':\n          return _constants.Type.ALIAS;\n\n        case \'>\':\n          return _constants.Type.BLOCK_FOLDED;\n\n        case \'|\':\n          return _constants.Type.BLOCK_LITERAL;\n\n        case \'{\':\n          return _constants.Type.FLOW_MAP;\n\n        case \'[\':\n          return _constants.Type.FLOW_SEQ;\n\n        case \'?\':\n          return !inFlow && _Node.default.atBlank(src, offset + 1, true) ? _constants.Type.MAP_KEY : _constants.Type.PLAIN;\n\n        case \':\':\n          return !inFlow && _Node.default.atBlank(src, offset + 1, true) ? _constants.Type.MAP_VALUE : _constants.Type.PLAIN;\n\n        case \'-\':\n          return !inFlow && _Node.default.atBlank(src, offset + 1, true) ? _constants.Type.SEQ_ITEM : _constants.Type.PLAIN;\n\n        case \'"\':\n          return _constants.Type.QUOTE_DOUBLE;\n\n        case "\'":\n          return _constants.Type.QUOTE_SINGLE;\n\n        default:\n          return _constants.Type.PLAIN;\n      }\n    }\n  }]);\n\n  function ParseContext() {\n    var _this = this;\n\n    var orig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        atLineStart = _ref.atLineStart,\n        inCollection = _ref.inCollection,\n        inFlow = _ref.inFlow,\n        indent = _ref.indent,\n        lineStart = _ref.lineStart,\n        parent = _ref.parent;\n\n    (0, _classCallCheck2.default)(this, ParseContext);\n    (0, _defineProperty2.default)(this, "parseNode", function (overlay, start) {\n      if (_Node.default.atDocumentBoundary(_this.src, start)) return null;\n      var context = new ParseContext(_this, overlay);\n\n      var _context$parseProps = context.parseProps(start),\n          props = _context$parseProps.props,\n          type = _context$parseProps.type,\n          valueStart = _context$parseProps.valueStart;\n\n      var node;\n\n      switch (type) {\n        case _constants.Type.ALIAS:\n          node = new _Alias.default(type, props);\n          break;\n\n        case _constants.Type.BLOCK_FOLDED:\n        case _constants.Type.BLOCK_LITERAL:\n          node = new _BlockValue.default(type, props);\n          break;\n\n        case _constants.Type.FLOW_MAP:\n        case _constants.Type.FLOW_SEQ:\n          node = new _FlowCollection.default(type, props);\n          break;\n\n        case _constants.Type.MAP_KEY:\n        case _constants.Type.MAP_VALUE:\n        case _constants.Type.SEQ_ITEM:\n          node = new _CollectionItem.default(type, props);\n          break;\n\n        case _constants.Type.COMMENT:\n        case _constants.Type.PLAIN:\n          node = new _PlainValue.default(type, props);\n          break;\n\n        case _constants.Type.QUOTE_DOUBLE:\n          node = new _QuoteDouble.default(type, props);\n          break;\n\n        case _constants.Type.QUOTE_SINGLE:\n          node = new _QuoteSingle.default(type, props);\n          break;\n\n        default:\n          node.error = new _errors.YAMLSyntaxError(node, "Unknown node type: ".concat(JSON.stringify(type)));\n          node.range = new _Range.default(start, start + 1);\n          return node;\n      }\n\n      var offset = node.parse(context, valueStart);\n      node.range = new _Range.default(start, offset);\n\n      if (offset <= start) {\n        node.error = new Error("Node#parse consumed no characters");\n        node.error.parseEnd = offset;\n        node.error.source = node;\n        node.range.end = start + 1;\n      }\n\n      if (context.nodeStartsCollection(node)) {\n        if (!node.error && !context.atLineStart && context.parent.type === _constants.Type.DOCUMENT) {\n          node.error = new _errors.YAMLSyntaxError(node, \'Block collection must not have preceding content here (e.g. directives-end indicator)\');\n        }\n\n        var collection = new _Collection.default(node);\n        offset = collection.parse(new ParseContext(context), offset);\n        collection.range = new _Range.default(start, offset);\n        return collection;\n      }\n\n      return node;\n    });\n    this.atLineStart = atLineStart != null ? atLineStart : orig.atLineStart || false;\n    this.inCollection = inCollection != null ? inCollection : orig.inCollection || false;\n    this.inFlow = inFlow != null ? inFlow : orig.inFlow || false;\n    this.indent = indent != null ? indent : orig.indent;\n    this.lineStart = lineStart != null ? lineStart : orig.lineStart;\n    this.parent = parent != null ? parent : orig.parent || {};\n    this.root = orig.root;\n    this.src = orig.src;\n  } // for logging\n\n\n  (0, _createClass2.default)(ParseContext, [{\n    key: "nodeStartsCollection",\n    value: function nodeStartsCollection(node) {\n      var inCollection = this.inCollection,\n          inFlow = this.inFlow,\n          src = this.src;\n      if (inCollection || inFlow) return false;\n      if (node instanceof _CollectionItem.default) return true; // check for implicit key\n\n      var offset = node.range.end;\n      if (src[offset] === \'\\n\' || src[offset - 1] === \'\\n\') return false;\n      offset = _Node.default.endOfWhiteSpace(src, offset);\n      return src[offset] === \':\';\n    } // Anchor and tag are before type, which determines the node implementation\n    // class; hence this intermediate step.\n\n  }, {\n    key: "parseProps",\n    value: function parseProps(offset) {\n      var inFlow = this.inFlow,\n          parent = this.parent,\n          src = this.src;\n      var props = [];\n      var lineHasProps = false;\n      offset = _Node.default.endOfWhiteSpace(src, offset);\n      var ch = src[offset];\n\n      while (ch === _constants.Char.ANCHOR || ch === _constants.Char.COMMENT || ch === _constants.Char.TAG || ch === \'\\n\') {\n        if (ch === \'\\n\') {\n          var lineStart = offset + 1;\n\n          var inEnd = _Node.default.endOfIndent(src, lineStart);\n\n          var indentDiff = inEnd - (lineStart + this.indent);\n          var noIndicatorAsIndent = parent.type === _constants.Type.SEQ_ITEM && parent.context.atLineStart;\n          if (!_Node.default.nextNodeIsIndented(src[inEnd], indentDiff, !noIndicatorAsIndent)) break;\n          this.atLineStart = true;\n          this.lineStart = lineStart;\n          lineHasProps = false;\n          offset = inEnd;\n        } else if (ch === _constants.Char.COMMENT) {\n          var end = _Node.default.endOfLine(src, offset + 1);\n\n          props.push(new _Range.default(offset, end));\n          offset = end;\n        } else {\n          var _end = _Node.default.endOfIdentifier(src, offset + 1);\n\n          if (ch === _constants.Char.TAG && src[_end] === \',\' && /^[a-zA-Z0-9-]+\\.[a-zA-Z0-9-]+,\\d\\d\\d\\d(-\\d\\d){0,2}\\/\\S/.test(src.slice(offset + 1, _end + 13))) {\n            // Let\'s presume we\'re dealing with a YAML 1.0 domain tag here, rather\n            // than an empty but \'foo.bar\' private-tagged node in a flow collection\n            // followed without whitespace by a plain string starting with a year\n            // or date divided by something.\n            _end = _Node.default.endOfIdentifier(src, _end + 5);\n          }\n\n          props.push(new _Range.default(offset, _end));\n          lineHasProps = true;\n          offset = _Node.default.endOfWhiteSpace(src, _end);\n        }\n\n        ch = src[offset];\n      } // \'- &a : b\' has an anchor on an empty node\n\n\n      if (lineHasProps && ch === \':\' && _Node.default.atBlank(src, offset + 1, true)) offset -= 1;\n      var type = ParseContext.parseType(src, offset, inFlow);\n      return {\n        props: props,\n        type: type,\n        valueStart: offset\n      };\n    }\n    /**\n     * Parses a node from the source\n     * @param {ParseContext} overlay\n     * @param {number} start - Index of first non-whitespace character for the node\n     * @returns {?Node} - null if at a document boundary\n     */\n\n  }, {\n    key: "pretty",\n    get: function get() {\n      var obj = {\n        start: "".concat(this.lineStart, " + ").concat(this.indent),\n        in: [],\n        parent: this.parent.type\n      };\n      if (!this.atLineStart) obj.start += \' + N\';\n      if (this.inCollection) obj.in.push(\'collection\');\n      if (this.inFlow) obj.in.push(\'flow\');\n      return obj;\n    }\n  }]);\n  return ParseContext;\n}();\n\nexports.default = ParseContext;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/ParseContext.js?')},"../../node_modules/yaml/browser/dist/cst/PlainValue.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"../../node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"../../node_modules/@babel/runtime/helpers/classCallCheck.js\"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"../../node_modules/@babel/runtime/helpers/createClass.js\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"../../node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"../../node_modules/@babel/runtime/helpers/inherits.js\"));\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ \"../../node_modules/yaml/browser/dist/cst/Node.js\"));\n\nvar _Range = _interopRequireDefault(__webpack_require__(/*! ./Range */ \"../../node_modules/yaml/browser/dist/cst/Range.js\"));\n\nvar PlainValue =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(PlainValue, _Node);\n\n  function PlainValue() {\n    (0, _classCallCheck2.default)(this, PlainValue);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PlainValue).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(PlainValue, [{\n    key: \"parseBlockValue\",\n    value: function parseBlockValue(start) {\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          inFlow = _this$context.inFlow,\n          src = _this$context.src;\n      var offset = start;\n      var valueEnd = start;\n\n      for (var ch = src[offset]; ch === '\\n'; ch = src[offset]) {\n        if (_Node2.default.atDocumentBoundary(src, offset + 1)) break;\n\n        var end = _Node2.default.endOfBlockIndent(src, indent, offset + 1);\n\n        if (end === null || src[end] === '#') break;\n\n        if (src[end] === '\\n') {\n          offset = end;\n        } else {\n          valueEnd = PlainValue.endOfLine(src, end, inFlow);\n          offset = valueEnd;\n        }\n      }\n\n      if (this.valueRange.isEmpty()) this.valueRange.start = start;\n      this.valueRange.end = valueEnd;\n      return valueEnd;\n    }\n    /**\n     * Parses a plain value from the source\n     *\n     * Accepted forms are:\n     * ```\n     * #comment\n     *\n     * first line\n     *\n     * first line #comment\n     *\n     * first line\n     * block\n     * lines\n     *\n     * #comment\n     * block\n     * lines\n     * ```\n     * where block lines are empty or have an indent level greater than `indent`.\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar, may be `\\n`\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var inFlow = context.inFlow,\n          src = context.src;\n      var offset = start;\n      var ch = src[offset];\n\n      if (ch && ch !== '#' && ch !== '\\n') {\n        offset = PlainValue.endOfLine(src, start, inFlow);\n      }\n\n      this.valueRange = new _Range.default(start, offset);\n      offset = _Node2.default.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n\n      if (!this.hasComment || this.valueRange.isEmpty()) {\n        offset = this.parseBlockValue(offset);\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"strValue\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var src = this.context.src;\n      var ch = src[end - 1];\n\n      while (start < end && (ch === '\\n' || ch === '\\t' || ch === ' ')) {\n        ch = src[--end - 1];\n      }\n\n      ch = src[start];\n\n      while (start < end && (ch === '\\n' || ch === '\\t' || ch === ' ')) {\n        ch = src[++start];\n      }\n\n      var str = '';\n\n      for (var i = start; i < end; ++i) {\n        var _ch = src[i];\n\n        if (_ch === '\\n') {\n          var _Node$foldNewline = _Node2.default.foldNewline(src, i, -1),\n              fold = _Node$foldNewline.fold,\n              offset = _Node$foldNewline.offset;\n\n          str += fold;\n          i = offset;\n        } else if (_ch === ' ' || _ch === '\\t') {\n          // trim trailing whitespace\n          var wsStart = i;\n          var next = src[i + 1];\n\n          while (i < end && (next === ' ' || next === '\\t')) {\n            i += 1;\n            next = src[i + 1];\n          }\n\n          if (next !== '\\n') str += i > wsStart ? src.slice(wsStart, i + 1) : _ch;\n        } else {\n          str += _ch;\n        }\n      }\n\n      return str;\n    }\n  }], [{\n    key: \"endOfLine\",\n    value: function endOfLine(src, start, inFlow) {\n      var ch = src[start];\n      var offset = start;\n\n      while (ch && ch !== '\\n') {\n        if (inFlow && (ch === '[' || ch === ']' || ch === '{' || ch === '}' || ch === ',')) break;\n        var next = src[offset + 1];\n        if (ch === ':' && (!next || next === '\\n' || next === '\\t' || next === ' ' || inFlow && next === ',')) break;\n        if ((ch === ' ' || ch === '\\t') && next === '#') break;\n        offset += 1;\n        ch = next;\n      }\n\n      return offset;\n    }\n  }]);\n  return PlainValue;\n}(_Node2.default);\n\nexports.default = PlainValue;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/PlainValue.js?")},"../../node_modules/yaml/browser/dist/cst/QuoteDouble.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"../../node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"../../node_modules/@babel/runtime/helpers/classCallCheck.js\"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"../../node_modules/@babel/runtime/helpers/createClass.js\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"../../node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"../../node_modules/@babel/runtime/helpers/inherits.js\"));\n\nvar _errors = __webpack_require__(/*! ../errors */ \"../../node_modules/yaml/browser/dist/errors.js\");\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ \"../../node_modules/yaml/browser/dist/cst/Node.js\"));\n\nvar _Range = _interopRequireDefault(__webpack_require__(/*! ./Range */ \"../../node_modules/yaml/browser/dist/cst/Range.js\"));\n\nvar QuoteDouble =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(QuoteDouble, _Node);\n\n  function QuoteDouble() {\n    (0, _classCallCheck2.default)(this, QuoteDouble);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(QuoteDouble).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(QuoteDouble, [{\n    key: \"parseCharCode\",\n    value: function parseCharCode(offset, length, errors) {\n      var src = this.context.src;\n      var cc = src.substr(offset, length);\n      var ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n      var code = ok ? parseInt(cc, 16) : NaN;\n\n      if (isNaN(code)) {\n        errors.push(new _errors.YAMLSyntaxError(this, \"Invalid escape sequence \".concat(src.substr(offset - 2, length + 2))));\n        return src.substr(offset - 2, length + 2);\n      }\n\n      return String.fromCodePoint(code);\n    }\n    /**\n     * Parses a \"double quoted\" value from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = QuoteDouble.endOfQuote(src, start + 1);\n      this.valueRange = new _Range.default(start, offset);\n      offset = _Node2.default.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      return offset;\n    }\n  }, {\n    key: \"strValue\",\n\n    /**\n     * @returns {string | { str: string, errors: YAMLSyntaxError[] }}\n     */\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var errors = [];\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          src = _this$context.src;\n      if (src[end - 1] !== '\"') errors.push(new _errors.YAMLSyntaxError(this, 'Missing closing \"quote')); // Using String#replace is too painful with escaped newlines preceded by\n      // escaped backslashes; also, this should be faster.\n\n      var str = '';\n\n      for (var i = start + 1; i < end - 1; ++i) {\n        var ch = src[i];\n\n        if (ch === '\\n') {\n          if (_Node2.default.atDocumentBoundary(src, i + 1)) errors.push(new _errors.YAMLSemanticError(this, 'Document boundary indicators are not allowed within string values'));\n\n          var _Node$foldNewline = _Node2.default.foldNewline(src, i, indent),\n              fold = _Node$foldNewline.fold,\n              offset = _Node$foldNewline.offset,\n              error = _Node$foldNewline.error;\n\n          str += fold;\n          i = offset;\n          if (error) errors.push(new _errors.YAMLSemanticError(this, 'Multi-line double-quoted string needs to be sufficiently indented'));\n        } else if (ch === '\\\\') {\n          i += 1;\n\n          switch (src[i]) {\n            case '0':\n              str += '\\0';\n              break;\n            // null character\n\n            case 'a':\n              str += '\\x07';\n              break;\n            // bell character\n\n            case 'b':\n              str += '\\b';\n              break;\n            // backspace\n\n            case 'e':\n              str += '\\x1b';\n              break;\n            // escape character\n\n            case 'f':\n              str += '\\f';\n              break;\n            // form feed\n\n            case 'n':\n              str += '\\n';\n              break;\n            // line feed\n\n            case 'r':\n              str += '\\r';\n              break;\n            // carriage return\n\n            case 't':\n              str += '\\t';\n              break;\n            // horizontal tab\n\n            case 'v':\n              str += '\\v';\n              break;\n            // vertical tab\n\n            case 'N':\n              str += \"\\x85\";\n              break;\n            // Unicode next line\n\n            case '_':\n              str += \"\\xA0\";\n              break;\n            // Unicode non-breaking space\n\n            case 'L':\n              str += \"\\u2028\";\n              break;\n            // Unicode line separator\n\n            case 'P':\n              str += \"\\u2029\";\n              break;\n            // Unicode paragraph separator\n\n            case ' ':\n              str += ' ';\n              break;\n\n            case '\"':\n              str += '\"';\n              break;\n\n            case '/':\n              str += '/';\n              break;\n\n            case '\\\\':\n              str += '\\\\';\n              break;\n\n            case '\\t':\n              str += '\\t';\n              break;\n\n            case 'x':\n              str += this.parseCharCode(i + 1, 2, errors);\n              i += 2;\n              break;\n\n            case 'u':\n              str += this.parseCharCode(i + 1, 4, errors);\n              i += 4;\n              break;\n\n            case 'U':\n              str += this.parseCharCode(i + 1, 8, errors);\n              i += 8;\n              break;\n\n            case '\\n':\n              // skip escaped newlines, but still trim the following line\n              while (src[i + 1] === ' ' || src[i + 1] === '\\t') {\n                i += 1;\n              }\n\n              break;\n\n            default:\n              errors.push(new _errors.YAMLSyntaxError(this, \"Invalid escape sequence \".concat(src.substr(i - 1, 2))));\n              str += '\\\\' + src[i];\n          }\n        } else if (ch === ' ' || ch === '\\t') {\n          // trim trailing whitespace\n          var wsStart = i;\n          var next = src[i + 1];\n\n          while (next === ' ' || next === '\\t') {\n            i += 1;\n            next = src[i + 1];\n          }\n\n          if (next !== '\\n') str += i > wsStart ? src.slice(wsStart, i + 1) : ch;\n        } else {\n          str += ch;\n        }\n      }\n\n      return errors.length > 0 ? {\n        errors: errors,\n        str: str\n      } : str;\n    }\n  }], [{\n    key: \"endOfQuote\",\n    value: function endOfQuote(src, offset) {\n      var ch = src[offset];\n\n      while (ch && ch !== '\"') {\n        offset += ch === '\\\\' ? 2 : 1;\n        ch = src[offset];\n      }\n\n      return offset + 1;\n    }\n  }]);\n  return QuoteDouble;\n}(_Node2.default);\n\nexports.default = QuoteDouble;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/QuoteDouble.js?")},"../../node_modules/yaml/browser/dist/cst/QuoteSingle.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _errors = __webpack_require__(/*! ../errors */ "../../node_modules/yaml/browser/dist/errors.js");\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ "../../node_modules/yaml/browser/dist/cst/Node.js"));\n\nvar _Range = _interopRequireDefault(__webpack_require__(/*! ./Range */ "../../node_modules/yaml/browser/dist/cst/Range.js"));\n\nvar QuoteSingle =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(QuoteSingle, _Node);\n\n  function QuoteSingle() {\n    (0, _classCallCheck2.default)(this, QuoteSingle);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(QuoteSingle).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(QuoteSingle, [{\n    key: "parse",\n\n    /**\n     * Parses a \'single quoted\' value from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar\n     */\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = QuoteSingle.endOfQuote(src, start + 1);\n      this.valueRange = new _Range.default(start, offset);\n      offset = _Node2.default.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      return offset;\n    }\n  }, {\n    key: "strValue",\n\n    /**\n     * @returns {string | { str: string, errors: YAMLSyntaxError[] }}\n     */\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var errors = [];\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          src = _this$context.src;\n      if (src[end - 1] !== "\'") errors.push(new _errors.YAMLSyntaxError(this, "Missing closing \'quote"));\n      var str = \'\';\n\n      for (var i = start + 1; i < end - 1; ++i) {\n        var ch = src[i];\n\n        if (ch === \'\\n\') {\n          if (_Node2.default.atDocumentBoundary(src, i + 1)) errors.push(new _errors.YAMLSemanticError(this, \'Document boundary indicators are not allowed within string values\'));\n\n          var _Node$foldNewline = _Node2.default.foldNewline(src, i, indent),\n              fold = _Node$foldNewline.fold,\n              offset = _Node$foldNewline.offset,\n              error = _Node$foldNewline.error;\n\n          str += fold;\n          i = offset;\n          if (error) errors.push(new _errors.YAMLSemanticError(this, \'Multi-line single-quoted string needs to be sufficiently indented\'));\n        } else if (ch === "\'") {\n          str += ch;\n          i += 1;\n          if (src[i] !== "\'") errors.push(new _errors.YAMLSyntaxError(this, \'Unescaped single quote? This should not happen.\'));\n        } else if (ch === \' \' || ch === \'\\t\') {\n          // trim trailing whitespace\n          var wsStart = i;\n          var next = src[i + 1];\n\n          while (next === \' \' || next === \'\\t\') {\n            i += 1;\n            next = src[i + 1];\n          }\n\n          if (next !== \'\\n\') str += i > wsStart ? src.slice(wsStart, i + 1) : ch;\n        } else {\n          str += ch;\n        }\n      }\n\n      return errors.length > 0 ? {\n        errors: errors,\n        str: str\n      } : str;\n    }\n  }], [{\n    key: "endOfQuote",\n    value: function endOfQuote(src, offset) {\n      var ch = src[offset];\n\n      while (ch) {\n        if (ch === "\'") {\n          if (src[offset + 1] !== "\'") break;\n          ch = src[offset += 2];\n        } else {\n          ch = src[offset += 1];\n        }\n      }\n\n      return offset + 1;\n    }\n  }]);\n  return QuoteSingle;\n}(_Node2.default);\n\nexports.default = QuoteSingle;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/QuoteSingle.js?')},"../../node_modules/yaml/browser/dist/cst/Range.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar Range =\n/*#__PURE__*/\nfunction () {\n  (0, _createClass2.default)(Range, null, [{\n    key: "copy",\n    value: function copy(orig) {\n      return new Range(orig.start, orig.end);\n    }\n  }]);\n\n  function Range(start, end) {\n    (0, _classCallCheck2.default)(this, Range);\n    this.start = start;\n    this.end = end || start;\n  }\n\n  (0, _createClass2.default)(Range, [{\n    key: "isEmpty",\n    value: function isEmpty() {\n      return typeof this.start !== \'number\' || !this.end || this.end <= this.start;\n    }\n    /**\n     * Set `origStart` and `origEnd` to point to the original source range for\n     * this node, which may differ due to dropped CR characters.\n     *\n     * @param {number[]} cr - Positions of dropped CR characters\n     * @param {number} offset - Starting index of `cr` from the last call\n     * @returns {number} - The next offset, matching the one found for `origStart`\n     */\n\n  }, {\n    key: "setOrigRange",\n    value: function setOrigRange(cr, offset) {\n      var start = this.start,\n          end = this.end;\n\n      if (cr.length === 0 || end <= cr[0]) {\n        this.origStart = start;\n        this.origEnd = end;\n        return offset;\n      }\n\n      var i = offset;\n\n      while (i < cr.length) {\n        if (cr[i] > start) break;else ++i;\n      }\n\n      this.origStart = start + i;\n      var nextOffset = i;\n\n      while (i < cr.length) {\n        // if end was at \\n, it should now be at \\r\n        if (cr[i] >= end) break;else ++i;\n      }\n\n      this.origEnd = end + i;\n      return nextOffset;\n    }\n  }]);\n  return Range;\n}();\n\nexports.default = Range;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/Range.js?')},"../../node_modules/yaml/browser/dist/cst/parse.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"../../node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parse;\n\nvar _Document = _interopRequireDefault(__webpack_require__(/*! ./Document */ \"../../node_modules/yaml/browser/dist/cst/Document.js\"));\n\nvar _ParseContext = _interopRequireDefault(__webpack_require__(/*! ./ParseContext */ \"../../node_modules/yaml/browser/dist/cst/ParseContext.js\"));\n\n// Published as 'yaml/parse-cst'\nfunction parse(src) {\n  var cr = [];\n\n  if (src.indexOf('\\r') !== -1) {\n    src = src.replace(/\\r\\n?/g, function (match, offset) {\n      if (match.length > 1) cr.push(offset);\n      return '\\n';\n    });\n  }\n\n  var documents = [];\n  var offset = 0;\n\n  do {\n    var doc = new _Document.default();\n    var context = new _ParseContext.default({\n      src: src\n    });\n    offset = doc.parse(context, offset);\n    documents.push(doc);\n  } while (offset < src.length);\n\n  documents.setOrigRanges = function () {\n    if (cr.length === 0) return false;\n\n    for (var i = 1; i < cr.length; ++i) {\n      cr[i] -= i;\n    }\n\n    var crOffset = 0;\n\n    for (var _i = 0; _i < documents.length; ++_i) {\n      crOffset = documents[_i].setOrigRanges(cr, crOffset);\n    }\n\n    cr.splice(0, cr.length);\n    return true;\n  };\n\n  documents.toString = function () {\n    return documents.join('...\\n');\n  };\n\n  return documents;\n}\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/parse.js?")},"../../node_modules/yaml/browser/dist/cst/source-utils.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLinePos = getLinePos;\nexports.getLine = getLine;\nexports.getPrettyContext = getPrettyContext;\n\nfunction findLineStarts(src) {\n  var ls = [0];\n  var offset = src.indexOf('\\n');\n\n  while (offset !== -1) {\n    offset += 1;\n    ls.push(offset);\n    offset = src.indexOf('\\n', offset);\n  }\n\n  return ls;\n}\n\nfunction getSrcInfo(cst) {\n  var lineStarts, src;\n\n  if (typeof cst === 'string') {\n    lineStarts = findLineStarts(cst);\n    src = cst;\n  } else {\n    if (Array.isArray(cst)) cst = cst[0];\n\n    if (cst && cst.context) {\n      if (!cst.lineStarts) cst.lineStarts = findLineStarts(cst.context.src);\n      lineStarts = cst.lineStarts;\n      src = cst.context.src;\n    }\n  }\n\n  return {\n    lineStarts: lineStarts,\n    src: src\n  };\n}\n/**\n * @typedef {Object} LinePos - One-indexed position in the source\n * @property {number} line\n * @property {number} col\n */\n\n/**\n * Determine the line/col position matching a character offset.\n *\n * Accepts a source string or a CST document as the second parameter. With\n * the latter, starting indices for lines are cached in the document as\n * `lineStarts: number[]`.\n *\n * Returns a one-indexed `{ line, col }` location if found, or\n * `undefined` otherwise.\n *\n * @param {number} offset\n * @param {string|Document|Document[]} cst\n * @returns {?LinePos}\n */\n\n\nfunction getLinePos(offset, cst) {\n  if (typeof offset !== 'number' || offset < 0) return null;\n\n  var _getSrcInfo = getSrcInfo(cst),\n      lineStarts = _getSrcInfo.lineStarts,\n      src = _getSrcInfo.src;\n\n  if (!lineStarts || !src || offset > src.length) return null;\n\n  for (var i = 0; i < lineStarts.length; ++i) {\n    var start = lineStarts[i];\n\n    if (offset < start) {\n      return {\n        line: i,\n        col: offset - lineStarts[i - 1] + 1\n      };\n    }\n\n    if (offset === start) return {\n      line: i + 1,\n      col: 1\n    };\n  }\n\n  var line = lineStarts.length;\n  return {\n    line: line,\n    col: offset - lineStarts[line - 1] + 1\n  };\n}\n/**\n * Get a specified line from the source.\n *\n * Accepts a source string or a CST document as the second parameter. With\n * the latter, starting indices for lines are cached in the document as\n * `lineStarts: number[]`.\n *\n * Returns the line as a string if found, or `null` otherwise.\n *\n * @param {number} line One-indexed line number\n * @param {string|Document|Document[]} cst\n * @returns {?string}\n */\n\n\nfunction getLine(line, cst) {\n  var _getSrcInfo2 = getSrcInfo(cst),\n      lineStarts = _getSrcInfo2.lineStarts,\n      src = _getSrcInfo2.src;\n\n  if (!lineStarts || !(line >= 1) || line > lineStarts.length) return null;\n  var start = lineStarts[line - 1];\n  var end = lineStarts[line]; // undefined for last line; that's ok for slice()\n\n  while (end && end > start && src[end - 1] === '\\n') {\n    --end;\n  }\n\n  return src.slice(start, end);\n}\n/**\n * Pretty-print the starting line from the source indicated by the range `pos`\n *\n * Trims output to `maxWidth` chars while keeping the starting column visible,\n * using `…` at either end to indicate dropped characters.\n *\n * Returns a two-line string (or `null`) with `\\n` as separator; the second line\n * will hold appropriately indented `^` marks indicating the column range.\n *\n * @param {Object} pos\n * @param {LinePos} pos.start\n * @param {LinePos} [pos.end]\n * @param {string|Document|Document[]*} cst\n * @param {number} [maxWidth=80]\n * @returns {?string}\n */\n\n\nfunction getPrettyContext(_ref, cst) {\n  var start = _ref.start,\n      end = _ref.end;\n  var maxWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 80;\n  var src = getLine(start.line, cst);\n  if (!src) return null;\n  var col = start.col;\n\n  if (src.length > maxWidth) {\n    if (col <= maxWidth - 10) {\n      src = src.substr(0, maxWidth - 1) + '…';\n    } else {\n      var halfWidth = Math.round(maxWidth / 2);\n      if (src.length > col + halfWidth) src = src.substr(0, col + halfWidth - 1) + '…';\n      col -= src.length - maxWidth;\n      src = '…' + src.substr(1 - maxWidth);\n    }\n  }\n\n  var errLen = 1;\n  var errEnd = '';\n\n  if (end) {\n    if (end.line === start.line && col + (end.col - start.col) <= maxWidth + 1) {\n      errLen = end.col - start.col;\n    } else {\n      errLen = Math.min(src.length + 1, maxWidth) - col;\n      errEnd = '…';\n    }\n  }\n\n  var offset = col > 1 ? ' '.repeat(col - 1) : '';\n  var err = '^'.repeat(errLen);\n  return \"\".concat(src, \"\\n\").concat(offset).concat(err).concat(errEnd);\n}\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/cst/source-utils.js?")},"../../node_modules/yaml/browser/dist/errors.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.YAMLWarning = exports.YAMLSyntaxError = exports.YAMLSemanticError = exports.YAMLReferenceError = exports.YAMLError = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ "../../node_modules/@babel/runtime/helpers/wrapNativeSuper.js"));\n\nvar _Node = _interopRequireDefault(__webpack_require__(/*! ./cst/Node */ "../../node_modules/yaml/browser/dist/cst/Node.js"));\n\nvar _sourceUtils = __webpack_require__(/*! ./cst/source-utils */ "../../node_modules/yaml/browser/dist/cst/source-utils.js");\n\nvar _Range = _interopRequireDefault(__webpack_require__(/*! ./cst/Range */ "../../node_modules/yaml/browser/dist/cst/Range.js"));\n\nvar YAMLError =\n/*#__PURE__*/\nfunction (_Error) {\n  (0, _inherits2.default)(YAMLError, _Error);\n\n  function YAMLError(name, source, message) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, YAMLError);\n    if (!message || !(source instanceof _Node.default)) throw new Error("Invalid arguments for new ".concat(name));\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLError).call(this));\n    _this.name = name;\n    _this.message = message;\n    _this.source = source;\n    return _this;\n  }\n\n  (0, _createClass2.default)(YAMLError, [{\n    key: "makePretty",\n    value: function makePretty() {\n      if (!this.source) return;\n      this.nodeType = this.source.type;\n      var cst = this.source.context && this.source.context.root;\n\n      if (typeof this.offset === \'number\') {\n        this.range = new _Range.default(this.offset, this.offset + 1);\n        var start = cst && (0, _sourceUtils.getLinePos)(this.offset, cst);\n\n        if (start) {\n          var end = {\n            line: start.line,\n            col: start.col + 1\n          };\n          this.linePos = {\n            start: start,\n            end: end\n          };\n        }\n\n        delete this.offset;\n      } else {\n        this.range = this.source.range;\n        this.linePos = this.source.rangeAsLinePos;\n      }\n\n      if (this.linePos) {\n        var _this$linePos$start = this.linePos.start,\n            line = _this$linePos$start.line,\n            col = _this$linePos$start.col;\n        this.message += " at line ".concat(line, ", column ").concat(col);\n        var ctx = cst && (0, _sourceUtils.getPrettyContext)(this.linePos, cst);\n        if (ctx) this.message += ":\\n\\n".concat(ctx, "\\n");\n      }\n\n      delete this.source;\n    }\n  }]);\n  return YAMLError;\n}((0, _wrapNativeSuper2.default)(Error));\n\nexports.YAMLError = YAMLError;\n\nvar YAMLReferenceError =\n/*#__PURE__*/\nfunction (_YAMLError) {\n  (0, _inherits2.default)(YAMLReferenceError, _YAMLError);\n\n  function YAMLReferenceError(source, message) {\n    (0, _classCallCheck2.default)(this, YAMLReferenceError);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLReferenceError).call(this, \'YAMLReferenceError\', source, message));\n  }\n\n  return YAMLReferenceError;\n}(YAMLError);\n\nexports.YAMLReferenceError = YAMLReferenceError;\n\nvar YAMLSemanticError =\n/*#__PURE__*/\nfunction (_YAMLError2) {\n  (0, _inherits2.default)(YAMLSemanticError, _YAMLError2);\n\n  function YAMLSemanticError(source, message) {\n    (0, _classCallCheck2.default)(this, YAMLSemanticError);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLSemanticError).call(this, \'YAMLSemanticError\', source, message));\n  }\n\n  return YAMLSemanticError;\n}(YAMLError);\n\nexports.YAMLSemanticError = YAMLSemanticError;\n\nvar YAMLSyntaxError =\n/*#__PURE__*/\nfunction (_YAMLError3) {\n  (0, _inherits2.default)(YAMLSyntaxError, _YAMLError3);\n\n  function YAMLSyntaxError(source, message) {\n    (0, _classCallCheck2.default)(this, YAMLSyntaxError);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLSyntaxError).call(this, \'YAMLSyntaxError\', source, message));\n  }\n\n  return YAMLSyntaxError;\n}(YAMLError);\n\nexports.YAMLSyntaxError = YAMLSyntaxError;\n\nvar YAMLWarning =\n/*#__PURE__*/\nfunction (_YAMLError4) {\n  (0, _inherits2.default)(YAMLWarning, _YAMLError4);\n\n  function YAMLWarning(source, message) {\n    (0, _classCallCheck2.default)(this, YAMLWarning);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLWarning).call(this, \'YAMLWarning\', source, message));\n  }\n\n  return YAMLWarning;\n}(YAMLError);\n\nexports.YAMLWarning = YAMLWarning;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/errors.js?')},"../../node_modules/yaml/browser/dist/foldFlowLines.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = foldFlowLines;\nexports.FOLD_QUOTED = exports.FOLD_BLOCK = exports.FOLD_FLOW = void 0;\nvar FOLD_FLOW = 'flow';\nexports.FOLD_FLOW = FOLD_FLOW;\nvar FOLD_BLOCK = 'block';\nexports.FOLD_BLOCK = FOLD_BLOCK;\nvar FOLD_QUOTED = 'quoted'; // presumes i+1 is at the start of a line\n// returns index of last newline in more-indented block\n\nexports.FOLD_QUOTED = FOLD_QUOTED;\n\nvar consumeMoreIndentedLines = function consumeMoreIndentedLines(text, i) {\n  var ch = text[i + 1];\n\n  while (ch === ' ' || ch === '\\t') {\n    do {\n      ch = text[i += 1];\n    } while (ch && ch !== '\\n');\n\n    ch = text[i + 1];\n  }\n\n  return i;\n};\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n *\n * @param {string} text\n * @param {string} indent\n * @param {string} [mode='flow'] `'block'` prevents more-indented lines\n *   from being folded; `'quoted'` allows for `\\` escapes, including escaped\n *   newlines\n * @param {Object} options\n * @param {number} [options.indentAtStart] Accounts for leading contents on\n *   the first line, defaulting to `indent.length`\n * @param {number} [options.lineWidth=80]\n * @param {number} [options.minContentWidth=20] Allow highly indented lines to\n *   stretch the line width\n * @param {function} options.onFold Called once if the text is folded\n * @param {function} options.onFold Called once if any line of text exceeds\n *   lineWidth characters\n */\n\n\nfunction foldFlowLines(text, indent, mode, _ref) {\n  var indentAtStart = _ref.indentAtStart,\n      _ref$lineWidth = _ref.lineWidth,\n      lineWidth = _ref$lineWidth === void 0 ? 80 : _ref$lineWidth,\n      _ref$minContentWidth = _ref.minContentWidth,\n      minContentWidth = _ref$minContentWidth === void 0 ? 20 : _ref$minContentWidth,\n      onFold = _ref.onFold,\n      onOverflow = _ref.onOverflow;\n  if (!lineWidth || lineWidth < 0) return text;\n  var endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n  if (text.length <= endStep) return text;\n  var folds = [];\n  var escapedFolds = {};\n  var end = lineWidth - (typeof indentAtStart === 'number' ? indentAtStart : indent.length);\n  var split = undefined;\n  var prev = undefined;\n  var overflow = false;\n  var i = -1;\n\n  if (mode === FOLD_BLOCK) {\n    i = consumeMoreIndentedLines(text, i);\n    if (i !== -1) end = i + endStep;\n  }\n\n  for (var ch; ch = text[i += 1];) {\n    if (mode === FOLD_QUOTED && ch === '\\\\') {\n      switch (text[i + 1]) {\n        case 'x':\n          i += 3;\n          break;\n\n        case 'u':\n          i += 5;\n          break;\n\n        case 'U':\n          i += 9;\n          break;\n\n        default:\n          i += 1;\n      }\n    }\n\n    if (ch === '\\n') {\n      if (mode === FOLD_BLOCK) i = consumeMoreIndentedLines(text, i);\n      end = i + endStep;\n      split = undefined;\n    } else {\n      if (ch === ' ' && prev && prev !== ' ' && prev !== '\\n' && prev !== '\\t') {\n        // space surrounded by non-space can be replaced with newline + indent\n        var next = text[i + 1];\n        if (next && next !== ' ' && next !== '\\n' && next !== '\\t') split = i;\n      }\n\n      if (i >= end) {\n        if (split) {\n          folds.push(split);\n          end = split + endStep;\n          split = undefined;\n        } else if (mode === FOLD_QUOTED) {\n          // white-space collected at end may stretch past lineWidth\n          while (prev === ' ' || prev === '\\t') {\n            prev = ch;\n            ch = text[i += 1];\n            overflow = true;\n          } // i - 2 accounts for not-dropped last char + newline-escaping \\\n\n\n          folds.push(i - 2);\n          escapedFolds[i - 2] = true;\n          end = i - 2 + endStep;\n          split = undefined;\n        } else {\n          overflow = true;\n        }\n      }\n    }\n\n    prev = ch;\n  }\n\n  if (overflow && onOverflow) onOverflow();\n  if (folds.length === 0) return text;\n  if (onFold) onFold();\n  var res = text.slice(0, folds[0]);\n\n  for (var _i = 0; _i < folds.length; ++_i) {\n    var fold = folds[_i];\n\n    var _end = folds[_i + 1] || text.length;\n\n    if (mode === FOLD_QUOTED && escapedFolds[fold]) res += \"\".concat(text[fold], \"\\\\\");\n    res += \"\\n\".concat(indent).concat(text.slice(fold + 1, _end));\n  }\n\n  return res;\n}\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/foldFlowLines.js?")},"../../node_modules/yaml/browser/dist/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _parse = _interopRequireDefault(__webpack_require__(/*! ./cst/parse */ "../../node_modules/yaml/browser/dist/cst/parse.js"));\n\nvar _Document = _interopRequireDefault(__webpack_require__(/*! ./Document */ "../../node_modules/yaml/browser/dist/Document.js"));\n\nvar _errors = __webpack_require__(/*! ./errors */ "../../node_modules/yaml/browser/dist/errors.js");\n\nvar _schema = _interopRequireDefault(__webpack_require__(/*! ./schema */ "../../node_modules/yaml/browser/dist/schema/index.js"));\n\nvar _warnings = __webpack_require__(/*! ./warnings */ "../../node_modules/yaml/browser/dist/warnings.js");\n\nvar defaultOptions = {\n  anchorPrefix: \'a\',\n  customTags: null,\n  keepCstNodes: false,\n  keepNodeTypes: true,\n  keepBlobsInJSON: true,\n  mapAsMap: false,\n  maxAliasCount: 100,\n  prettyErrors: false,\n  // TODO Set true in v2\n  simpleKeys: false,\n  version: \'1.2\'\n};\n\nfunction createNode(value) {\n  var wrapScalars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var tag = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (tag === undefined && typeof wrapScalars === \'string\') {\n    tag = wrapScalars;\n    wrapScalars = true;\n  }\n\n  var options = Object.assign({}, _Document.default.defaults[defaultOptions.version], defaultOptions);\n  var schema = new _schema.default(options);\n  return schema.createNode(value, wrapScalars, tag);\n}\n\nvar Document =\n/*#__PURE__*/\nfunction (_YAMLDocument) {\n  (0, _inherits2.default)(Document, _YAMLDocument);\n\n  function Document(options) {\n    (0, _classCallCheck2.default)(this, Document);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Document).call(this, Object.assign({}, defaultOptions, options)));\n  }\n\n  return Document;\n}(_Document.default);\n\nfunction parseAllDocuments(src, options) {\n  var stream = [];\n  var prev;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = (0, _parse.default)(src)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var cstDoc = _step.value;\n      var doc = new Document(options);\n      doc.parse(cstDoc, prev);\n      stream.push(doc);\n      prev = doc;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return stream;\n}\n\nfunction parseDocument(src, options) {\n  var cst = (0, _parse.default)(src);\n  var doc = new Document(options).parse(cst[0]);\n\n  if (cst.length > 1) {\n    var errMsg = \'Source contains multiple documents; please use YAML.parseAllDocuments()\';\n    doc.errors.unshift(new _errors.YAMLSemanticError(cst[1], errMsg));\n  }\n\n  return doc;\n}\n\nfunction parse(src, options) {\n  var doc = parseDocument(src, options);\n  doc.warnings.forEach(function (warning) {\n    return (0, _warnings.warn)(warning);\n  });\n  if (doc.errors.length > 0) throw doc.errors[0];\n  return doc.toJSON();\n}\n\nfunction stringify(value, options) {\n  var doc = new Document(options);\n  doc.contents = value;\n  return String(doc);\n}\n\nvar _default = {\n  createNode: createNode,\n  defaultOptions: defaultOptions,\n  Document: Document,\n  parse: parse,\n  parseAllDocuments: parseAllDocuments,\n  parseCST: _parse.default,\n  parseDocument: parseDocument,\n  stringify: stringify\n};\nexports.default = _default;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/index.js?')},"../../node_modules/yaml/browser/dist/listTagNames.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "../../node_modules/@babel/runtime/helpers/typeof.js"));\n\nvar _Collection = _interopRequireDefault(__webpack_require__(/*! ./schema/Collection */ "../../node_modules/yaml/browser/dist/schema/Collection.js"));\n\nvar _Pair = _interopRequireDefault(__webpack_require__(/*! ./schema/Pair */ "../../node_modules/yaml/browser/dist/schema/Pair.js"));\n\nvar _Scalar = _interopRequireDefault(__webpack_require__(/*! ./schema/Scalar */ "../../node_modules/yaml/browser/dist/schema/Scalar.js"));\n\nvar visit = function visit(node, tags) {\n  if (node && (0, _typeof2.default)(node) === \'object\') {\n    var tag = node.tag;\n\n    if (node instanceof _Collection.default) {\n      if (tag) tags[tag] = true;\n      node.items.forEach(function (n) {\n        return visit(n, tags);\n      });\n    } else if (node instanceof _Pair.default) {\n      visit(node.key, tags);\n      visit(node.value, tags);\n    } else if (node instanceof _Scalar.default) {\n      if (tag) tags[tag] = true;\n    }\n  }\n\n  return tags;\n};\n\nvar _default = function _default(node) {\n  return Object.keys(visit(node, {}));\n};\n\nexports.default = _default;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/listTagNames.js?')},"../../node_modules/yaml/browser/dist/schema/Alias.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../../node_modules/@babel/runtime/helpers/defineProperty.js"));\n\nvar _constants = __webpack_require__(/*! ../constants */ "../../node_modules/yaml/browser/dist/constants.js");\n\nvar _errors = __webpack_require__(/*! ../errors */ "../../node_modules/yaml/browser/dist/errors.js");\n\nvar _toJSON2 = _interopRequireDefault(__webpack_require__(/*! ../toJSON */ "../../node_modules/yaml/browser/dist/toJSON.js"));\n\nvar _Collection = _interopRequireDefault(__webpack_require__(/*! ./Collection */ "../../node_modules/yaml/browser/dist/schema/Collection.js"));\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ "../../node_modules/yaml/browser/dist/schema/Node.js"));\n\nvar _Pair = _interopRequireDefault(__webpack_require__(/*! ./Pair */ "../../node_modules/yaml/browser/dist/schema/Pair.js"));\n\nvar getAliasCount = function getAliasCount(node, anchors) {\n  if (node instanceof Alias) {\n    var anchor = anchors.find(function (a) {\n      return a.node === node.source;\n    });\n    return anchor.count * anchor.aliasCount;\n  } else if (node instanceof _Collection.default) {\n    var count = 0;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = node.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var item = _step.value;\n        var c = getAliasCount(item, anchors);\n        if (c > count) count = c;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return count;\n  } else if (node instanceof _Pair.default) {\n    var kc = getAliasCount(node.key, anchors);\n    var vc = getAliasCount(node.value, anchors);\n    return Math.max(kc, vc);\n  }\n\n  return 1;\n};\n\nvar Alias =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Alias, _Node);\n  (0, _createClass2.default)(Alias, null, [{\n    key: "stringify",\n    value: function stringify(_ref, _ref2) {\n      var range = _ref.range,\n          source = _ref.source;\n      var anchors = _ref2.anchors,\n          doc = _ref2.doc,\n          implicitKey = _ref2.implicitKey,\n          inStringifyKey = _ref2.inStringifyKey;\n      var anchor = Object.keys(anchors).find(function (a) {\n        return anchors[a] === source;\n      });\n      if (!anchor && inStringifyKey) anchor = doc.anchors.getName(source) || doc.anchors.newName();\n      if (anchor) return "*".concat(anchor).concat(implicitKey ? \' \' : \'\');\n      var msg = doc.anchors.getName(source) ? \'Alias node must be after source node\' : \'Source node not found for alias node\';\n      throw new Error("".concat(msg, " [").concat(range, "]"));\n    }\n  }]);\n\n  function Alias(source) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Alias);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Alias).call(this));\n    _this.source = source;\n    _this.type = _constants.Type.ALIAS;\n    return _this;\n  }\n\n  (0, _createClass2.default)(Alias, [{\n    key: "toJSON",\n    value: function toJSON(arg, ctx) {\n      var _this2 = this;\n\n      if (!ctx) return (0, _toJSON2.default)(this.source, arg, ctx);\n      var anchors = ctx.anchors,\n          maxAliasCount = ctx.maxAliasCount;\n      var anchor = anchors.find(function (a) {\n        return a.node === _this2.source;\n      });\n\n      if (!anchor || anchor.res === undefined) {\n        var msg = \'This should not happen: Alias anchor was not resolved?\';\n        if (this.cstNode) throw new _errors.YAMLReferenceError(this.cstNode, msg);else throw new ReferenceError(msg);\n      }\n\n      if (maxAliasCount >= 0) {\n        anchor.count += 1;\n        if (anchor.aliasCount === 0) anchor.aliasCount = getAliasCount(this.source, anchors);\n\n        if (anchor.count * anchor.aliasCount > maxAliasCount) {\n          var _msg = \'Excessive alias count indicates a resource exhaustion attack\';\n          if (this.cstNode) throw new _errors.YAMLReferenceError(this.cstNode, _msg);else throw new ReferenceError(_msg);\n        }\n      }\n\n      return anchor.res;\n    } // Only called when stringifying an alias mapping key while constructing\n    // Object output.\n\n  }, {\n    key: "toString",\n    value: function toString(ctx) {\n      return Alias.stringify(this, ctx);\n    }\n  }, {\n    key: "tag",\n    set: function set(t) {\n      throw new Error(\'Alias nodes cannot have tags\');\n    }\n  }]);\n  return Alias;\n}(_Node2.default);\n\nexports.default = Alias;\n(0, _defineProperty2.default)(Alias, "default", true);\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/schema/Alias.js?')},"../../node_modules/yaml/browser/dist/schema/Collection.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = exports.isEmptyPath = void 0;\n\nvar _toArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toArray */ "../../node_modules/@babel/runtime/helpers/toArray.js"));\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../../node_modules/@babel/runtime/helpers/assertThisInitialized.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../../node_modules/@babel/runtime/helpers/defineProperty.js"));\n\nvar _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "../../node_modules/@babel/runtime/helpers/typeof.js"));\n\nvar _addComment = _interopRequireDefault(__webpack_require__(/*! ../addComment */ "../../node_modules/yaml/browser/dist/addComment.js"));\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ "../../node_modules/yaml/browser/dist/schema/Node.js"));\n\nvar _Pair = _interopRequireDefault(__webpack_require__(/*! ./Pair */ "../../node_modules/yaml/browser/dist/schema/Pair.js"));\n\nvar _Scalar = _interopRequireDefault(__webpack_require__(/*! ./Scalar */ "../../node_modules/yaml/browser/dist/schema/Scalar.js"));\n\n// null, undefined, or an empty non-string iterable (e.g. [])\nvar isEmptyPath = function isEmptyPath(path) {\n  return path == null || (0, _typeof2.default)(path) === \'object\' && path[Symbol.iterator]().next().done;\n};\n\nexports.isEmptyPath = isEmptyPath;\n\nvar Collection =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Collection, _Node);\n\n  function Collection() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Collection);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Collection)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "items", []);\n    return _this;\n  }\n\n  (0, _createClass2.default)(Collection, [{\n    key: "addIn",\n    value: function addIn(path, value) {\n      if (isEmptyPath(path)) this.add(value);else {\n        var _path = (0, _toArray2.default)(path),\n            key = _path[0],\n            rest = _path.slice(1);\n\n        var node = this.get(key, true);\n        if (node instanceof Collection) node.addIn(rest, value);else throw new Error("Expected YAML collection at ".concat(key, ". Remaining path: ").concat(rest));\n      }\n    }\n  }, {\n    key: "deleteIn",\n    value: function deleteIn(_ref) {\n      var _ref2 = (0, _toArray2.default)(_ref),\n          key = _ref2[0],\n          rest = _ref2.slice(1);\n\n      if (rest.length === 0) return this.delete(key);\n      var node = this.get(key, true);\n      if (node instanceof Collection) return node.deleteIn(rest);else throw new Error("Expected YAML collection at ".concat(key, ". Remaining path: ").concat(rest));\n    }\n  }, {\n    key: "getIn",\n    value: function getIn(_ref3, keepScalar) {\n      var _ref4 = (0, _toArray2.default)(_ref3),\n          key = _ref4[0],\n          rest = _ref4.slice(1);\n\n      var node = this.get(key, true);\n      if (rest.length === 0) return !keepScalar && node instanceof _Scalar.default ? node.value : node;else return node instanceof Collection ? node.getIn(rest, keepScalar) : undefined;\n    }\n  }, {\n    key: "hasAllNullValues",\n    value: function hasAllNullValues() {\n      return this.items.every(function (node) {\n        if (!(node instanceof _Pair.default)) return false;\n        var n = node.value;\n        return n == null || n instanceof _Scalar.default && n.value == null && !n.commentBefore && !n.comment && !n.tag;\n      });\n    }\n  }, {\n    key: "hasIn",\n    value: function hasIn(_ref5) {\n      var _ref6 = (0, _toArray2.default)(_ref5),\n          key = _ref6[0],\n          rest = _ref6.slice(1);\n\n      if (rest.length === 0) return this.has(key);\n      var node = this.get(key, true);\n      return node instanceof Collection ? node.hasIn(rest) : false;\n    }\n  }, {\n    key: "setIn",\n    value: function setIn(_ref7, value) {\n      var _ref8 = (0, _toArray2.default)(_ref7),\n          key = _ref8[0],\n          rest = _ref8.slice(1);\n\n      if (rest.length === 0) {\n        this.set(key, value);\n      } else {\n        var node = this.get(key, true);\n        if (node instanceof Collection) node.setIn(rest, value);else throw new Error("Expected YAML collection at ".concat(key, ". Remaining path: ").concat(rest));\n      }\n    } // overridden in implementations\n\n  }, {\n    key: "toJSON",\n    value: function toJSON() {\n      return null;\n    }\n  }, {\n    key: "toString",\n    value: function toString(ctx, _ref9, onComment, onChompKeep) {\n      var _this2 = this;\n\n      var blockItem = _ref9.blockItem,\n          flowChars = _ref9.flowChars,\n          isMap = _ref9.isMap,\n          itemIndent = _ref9.itemIndent;\n      var _ctx = ctx,\n          doc = _ctx.doc,\n          indent = _ctx.indent;\n      var inFlow = this.type && this.type.substr(0, 4) === \'FLOW\' || ctx.inFlow;\n      if (inFlow) itemIndent += \'  \';\n      var allNullValues = isMap && this.hasAllNullValues();\n      ctx = Object.assign({}, ctx, {\n        allNullValues: allNullValues,\n        indent: itemIndent,\n        inFlow: inFlow,\n        type: null\n      });\n      var chompKeep = false;\n      var hasItemWithNewLine = false;\n      var nodes = this.items.reduce(function (nodes, item, i) {\n        var comment;\n\n        if (item) {\n          if (!chompKeep && item.spaceBefore) nodes.push({\n            type: \'comment\',\n            str: \'\'\n          });\n          if (item.commentBefore) item.commentBefore.match(/^.*$/gm).forEach(function (line) {\n            nodes.push({\n              type: \'comment\',\n              str: "#".concat(line)\n            });\n          });\n          if (item.comment) comment = item.comment;\n          if (inFlow && (!chompKeep && item.spaceBefore || item.commentBefore || item.comment || item.key && (item.key.commentBefore || item.key.comment) || item.value && (item.value.commentBefore || item.value.comment))) hasItemWithNewLine = true;\n        }\n\n        chompKeep = false;\n        var str = doc.schema.stringify(item, ctx, function () {\n          return comment = null;\n        }, function () {\n          return chompKeep = true;\n        });\n        if (inFlow && !hasItemWithNewLine && str.includes(\'\\n\')) hasItemWithNewLine = true;\n        if (inFlow && i < _this2.items.length - 1) str += \',\';\n        str = (0, _addComment.default)(str, itemIndent, comment);\n        if (chompKeep && (comment || inFlow)) chompKeep = false;\n        nodes.push({\n          type: \'item\',\n          str: str\n        });\n        return nodes;\n      }, []);\n      var str;\n\n      if (nodes.length === 0) {\n        str = flowChars.start + flowChars.end;\n      } else if (inFlow) {\n        var start = flowChars.start,\n            end = flowChars.end;\n        var strings = nodes.map(function (n) {\n          return n.str;\n        });\n\n        if (hasItemWithNewLine || strings.reduce(function (sum, str) {\n          return sum + str.length + 2;\n        }, 2) > Collection.maxFlowStringSingleLineLength) {\n          str = start;\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = strings[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var s = _step.value;\n              str += s ? "\\n  ".concat(indent).concat(s) : \'\\n\';\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          str += "\\n".concat(indent).concat(end);\n        } else {\n          str = "".concat(start, " ").concat(strings.join(\' \'), " ").concat(end);\n        }\n      } else {\n        var _strings = nodes.map(blockItem);\n\n        str = _strings.shift();\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _strings[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _s = _step2.value;\n            str += _s ? "\\n".concat(indent).concat(_s) : \'\\n\';\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      if (this.comment) {\n        str += \'\\n\' + this.comment.replace(/^/gm, "".concat(indent, "#"));\n        if (onComment) onComment();\n      } else if (chompKeep && onChompKeep) onChompKeep();\n\n      return str;\n    }\n  }]);\n  return Collection;\n}(_Node2.default);\n\nexports.default = Collection;\n(0, _defineProperty2.default)(Collection, "maxFlowStringSingleLineLength", 60);\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/schema/Collection.js?')},"../../node_modules/yaml/browser/dist/schema/Map.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.findPair = findPair;\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ "../../node_modules/@babel/runtime/helpers/get.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _Collection2 = _interopRequireDefault(__webpack_require__(/*! ./Collection */ "../../node_modules/yaml/browser/dist/schema/Collection.js"));\n\nvar _Pair = _interopRequireDefault(__webpack_require__(/*! ./Pair */ "../../node_modules/yaml/browser/dist/schema/Pair.js"));\n\nvar _Scalar = _interopRequireDefault(__webpack_require__(/*! ./Scalar */ "../../node_modules/yaml/browser/dist/schema/Scalar.js"));\n\nfunction findPair(items, key) {\n  var k = key instanceof _Scalar.default ? key.value : key;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var it = _step.value;\n\n      if (it instanceof _Pair.default) {\n        if (it.key === key || it.key === k) return it;\n        if (it.key && it.key.value === k) return it;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nvar YAMLMap =\n/*#__PURE__*/\nfunction (_Collection) {\n  (0, _inherits2.default)(YAMLMap, _Collection);\n\n  function YAMLMap() {\n    (0, _classCallCheck2.default)(this, YAMLMap);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLMap).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(YAMLMap, [{\n    key: "add",\n    value: function add(pair) {\n      if (!pair) pair = new _Pair.default(pair);else if (!(pair instanceof _Pair.default)) pair = new _Pair.default(pair.key || pair, pair.value);\n      var prev = findPair(this.items, pair.key);\n      if (prev) throw new Error("Key ".concat(pair.key, " already set"));\n      this.items.push(pair);\n    }\n  }, {\n    key: "delete",\n    value: function _delete(key) {\n      var it = findPair(this.items, key);\n      if (!it) return false;\n      var del = this.items.splice(this.items.indexOf(it), 1);\n      return del.length > 0;\n    }\n  }, {\n    key: "get",\n    value: function get(key, keepScalar) {\n      var it = findPair(this.items, key);\n      var node = it && it.value;\n      return !keepScalar && node instanceof _Scalar.default ? node.value : node;\n    }\n  }, {\n    key: "has",\n    value: function has(key) {\n      return !!findPair(this.items, key);\n    }\n  }, {\n    key: "set",\n    value: function set(key, value) {\n      var prev = findPair(this.items, key);\n      if (prev) prev.value = value;else this.items.push(new _Pair.default(key, value));\n    }\n    /**\n     * @param {*} arg ignored\n     * @param {*} ctx Conversion context, originally set in Document#toJSON()\n     * @param {Class} Type If set, forces the returned collection type\n     * @returns {*} Instance of Type, Map, or Object\n     */\n\n  }, {\n    key: "toJSON",\n    value: function toJSON(_, ctx, Type) {\n      var map = Type ? new Type() : ctx && ctx.mapAsMap ? new Map() : {};\n      if (ctx && ctx.onCreate) ctx.onCreate(map);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.items[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n          item.addToJSMap(ctx, map);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return map;\n    }\n  }, {\n    key: "toString",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx) return JSON.stringify(this);\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.items[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          if (!(item instanceof _Pair.default)) throw new Error("Map items must all be pairs; found ".concat(JSON.stringify(item), " instead"));\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(YAMLMap.prototype), "toString", this).call(this, ctx, {\n        blockItem: function blockItem(n) {\n          return n.str;\n        },\n        flowChars: {\n          start: \'{\',\n          end: \'}\'\n        },\n        isMap: true,\n        itemIndent: ctx.indent || \'\'\n      }, onComment, onChompKeep);\n    }\n  }]);\n  return YAMLMap;\n}(_Collection2.default);\n\nexports.default = YAMLMap;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/schema/Map.js?')},"../../node_modules/yaml/browser/dist/schema/Merge.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = exports.MERGE_KEY = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../../node_modules/@babel/runtime/helpers/slicedToArray.js"));\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ "../../node_modules/@babel/runtime/helpers/get.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _Map = _interopRequireDefault(__webpack_require__(/*! ./Map */ "../../node_modules/yaml/browser/dist/schema/Map.js"));\n\nvar _Pair2 = _interopRequireDefault(__webpack_require__(/*! ./Pair */ "../../node_modules/yaml/browser/dist/schema/Pair.js"));\n\nvar _Scalar = _interopRequireDefault(__webpack_require__(/*! ./Scalar */ "../../node_modules/yaml/browser/dist/schema/Scalar.js"));\n\nvar _Seq = _interopRequireDefault(__webpack_require__(/*! ./Seq */ "../../node_modules/yaml/browser/dist/schema/Seq.js"));\n\nvar MERGE_KEY = \'<<\';\nexports.MERGE_KEY = MERGE_KEY;\n\nvar Merge =\n/*#__PURE__*/\nfunction (_Pair) {\n  (0, _inherits2.default)(Merge, _Pair);\n\n  function Merge(pair) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Merge);\n\n    if (pair instanceof _Pair2.default) {\n      var seq = pair.value;\n\n      if (!(seq instanceof _Seq.default)) {\n        seq = new _Seq.default();\n        seq.items.push(pair.value);\n        seq.range = pair.value.range;\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Merge).call(this, pair.key, seq));\n      _this.range = pair.range;\n    } else {\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Merge).call(this, new _Scalar.default(MERGE_KEY), new _Seq.default()));\n    }\n\n    _this.type = \'MERGE_PAIR\';\n    return (0, _possibleConstructorReturn2.default)(_this);\n  } // If the value associated with a merge key is a single mapping node, each of\n  // its key/value pairs is inserted into the current mapping, unless the key\n  // already exists in it. If the value associated with the merge key is a\n  // sequence, then this sequence is expected to contain mapping nodes and each\n  // of these nodes is merged in turn according to its order in the sequence.\n  // Keys in mapping nodes earlier in the sequence override keys specified in\n  // later mapping nodes. -- http://yaml.org/type/merge.html\n\n\n  (0, _createClass2.default)(Merge, [{\n    key: "addToJSMap",\n    value: function addToJSMap(ctx, map) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.value.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var source = _step.value.source;\n          if (!(source instanceof _Map.default)) throw new Error(\'Merge sources must be maps\');\n          var srcMap = source.toJSON(null, ctx, Map);\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = srcMap[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _step2$value = (0, _slicedToArray2.default)(_step2.value, 2),\n                  key = _step2$value[0],\n                  value = _step2$value[1];\n\n              if (map instanceof Map) {\n                if (!map.has(key)) map.set(key, value);\n              } else if (map instanceof Set) {\n                map.add(key);\n              } else {\n                if (!Object.prototype.hasOwnProperty.call(map, key)) map[key] = value;\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return map;\n    }\n  }, {\n    key: "toString",\n    value: function toString(ctx, onComment) {\n      var seq = this.value;\n      if (seq.items.length > 1) return (0, _get2.default)((0, _getPrototypeOf2.default)(Merge.prototype), "toString", this).call(this, ctx, onComment);\n      this.value = seq.items[0];\n      var str = (0, _get2.default)((0, _getPrototypeOf2.default)(Merge.prototype), "toString", this).call(this, ctx, onComment);\n      this.value = seq;\n      return str;\n    }\n  }]);\n  return Merge;\n}(_Pair2.default);\n\nexports.default = Merge;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/schema/Merge.js?')},"../../node_modules/yaml/browser/dist/schema/Node.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar Node = function Node() {\n  (0, _classCallCheck2.default)(this, Node);\n};\n\nexports.default = Node;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/schema/Node.js?')},"../../node_modules/yaml/browser/dist/schema/Pair.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "../../node_modules/@babel/runtime/helpers/typeof.js"));\n\nvar _addComment = _interopRequireDefault(__webpack_require__(/*! ../addComment */ "../../node_modules/yaml/browser/dist/addComment.js"));\n\nvar _constants = __webpack_require__(/*! ../constants */ "../../node_modules/yaml/browser/dist/constants.js");\n\nvar _toJSON = _interopRequireDefault(__webpack_require__(/*! ../toJSON */ "../../node_modules/yaml/browser/dist/toJSON.js"));\n\nvar _Collection = _interopRequireDefault(__webpack_require__(/*! ./Collection */ "../../node_modules/yaml/browser/dist/schema/Collection.js"));\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ "../../node_modules/yaml/browser/dist/schema/Node.js"));\n\nvar _Scalar = _interopRequireDefault(__webpack_require__(/*! ./Scalar */ "../../node_modules/yaml/browser/dist/schema/Scalar.js"));\n\n// Published as \'yaml/pair\'\nvar stringifyKey = function stringifyKey(key, jsKey, ctx) {\n  if (jsKey === null) return \'\';\n  if ((0, _typeof2.default)(jsKey) !== \'object\') return String(jsKey);\n  if (key instanceof _Node2.default && ctx && ctx.doc) return key.toString({\n    anchors: {},\n    doc: ctx.doc,\n    indent: \'\',\n    inFlow: true,\n    inStringifyKey: true\n  });\n  return JSON.stringify(jsKey);\n};\n\nvar Pair =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Pair, _Node);\n\n  function Pair(key) {\n    var _this;\n\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    (0, _classCallCheck2.default)(this, Pair);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Pair).call(this));\n    _this.key = key;\n    _this.value = value;\n    _this.type = \'PAIR\';\n    return _this;\n  }\n\n  (0, _createClass2.default)(Pair, [{\n    key: "addToJSMap",\n    value: function addToJSMap(ctx, map) {\n      var key = (0, _toJSON.default)(this.key, \'\', ctx);\n\n      if (map instanceof Map) {\n        var value = (0, _toJSON.default)(this.value, key, ctx);\n        map.set(key, value);\n      } else if (map instanceof Set) {\n        map.add(key);\n      } else {\n        var stringKey = stringifyKey(this.key, key, ctx);\n        map[stringKey] = (0, _toJSON.default)(this.value, stringKey, ctx);\n      }\n\n      return map;\n    }\n  }, {\n    key: "toJSON",\n    value: function toJSON(_, ctx) {\n      var pair = ctx && ctx.mapAsMap ? new Map() : {};\n      return this.addToJSMap(ctx, pair);\n    }\n  }, {\n    key: "toString",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx || !ctx.doc) return JSON.stringify(this);\n      var simpleKeys = ctx.doc.options.simpleKeys;\n      var key = this.key,\n          value = this.value;\n      var keyComment = key instanceof _Node2.default && key.comment;\n\n      if (simpleKeys) {\n        if (keyComment) {\n          throw new Error(\'With simple keys, key nodes cannot have comments\');\n        }\n\n        if (key instanceof _Collection.default) {\n          var msg = \'With simple keys, collection cannot be used as a key value\';\n          throw new Error(msg);\n        }\n      }\n\n      var explicitKey = !simpleKeys && (!key || keyComment || key instanceof _Collection.default || key.type === _constants.Type.BLOCK_FOLDED || key.type === _constants.Type.BLOCK_LITERAL);\n      var _ctx = ctx,\n          doc = _ctx.doc,\n          indent = _ctx.indent;\n      ctx = Object.assign({}, ctx, {\n        implicitKey: !explicitKey,\n        indent: indent + \'  \'\n      });\n      var chompKeep = false;\n      var str = doc.schema.stringify(key, ctx, function () {\n        return keyComment = null;\n      }, function () {\n        return chompKeep = true;\n      });\n      str = (0, _addComment.default)(str, ctx.indent, keyComment);\n\n      if (ctx.allNullValues && !simpleKeys) {\n        if (this.comment) {\n          str = (0, _addComment.default)(str, ctx.indent, this.comment);\n          if (onComment) onComment();\n        } else if (chompKeep && !keyComment && onChompKeep) onChompKeep();\n\n        return ctx.inFlow ? str : "? ".concat(str);\n      }\n\n      str = explicitKey ? "? ".concat(str, "\\n").concat(indent, ":") : "".concat(str, ":");\n\n      if (this.comment) {\n        // expected (but not strictly required) to be a single-line comment\n        str = (0, _addComment.default)(str, ctx.indent, this.comment);\n        if (onComment) onComment();\n      }\n\n      var vcb = \'\';\n      var valueComment = null;\n\n      if (value instanceof _Node2.default) {\n        if (value.spaceBefore) vcb = \'\\n\';\n\n        if (value.commentBefore) {\n          var cs = value.commentBefore.replace(/^/gm, "".concat(ctx.indent, "#"));\n          vcb += "\\n".concat(cs);\n        }\n\n        valueComment = value.comment;\n      } else if (value && (0, _typeof2.default)(value) === \'object\') {\n        value = doc.schema.createNode(value, true);\n      }\n\n      ctx.implicitKey = false;\n      chompKeep = false;\n      var valueStr = doc.schema.stringify(value, ctx, function () {\n        return valueComment = null;\n      }, function () {\n        return chompKeep = true;\n      });\n      var ws = \' \';\n\n      if (vcb || this.comment) {\n        ws = "".concat(vcb, "\\n").concat(ctx.indent);\n      } else if (!explicitKey && value instanceof _Collection.default) {\n        var flow = valueStr[0] === \'[\' || valueStr[0] === \'{\';\n        if (!flow || valueStr.includes(\'\\n\')) ws = "\\n".concat(ctx.indent);\n      }\n\n      if (chompKeep && !valueComment && onChompKeep) onChompKeep();\n      return (0, _addComment.default)(str + ws + valueStr, ctx.indent, valueComment);\n    }\n  }, {\n    key: "commentBefore",\n    get: function get() {\n      return this.key && this.key.commentBefore;\n    },\n    set: function set(cb) {\n      if (this.key == null) this.key = new _Scalar.default(null);\n      this.key.commentBefore = cb;\n    }\n  }]);\n  return Pair;\n}(_Node2.default);\n\nexports.default = Pair;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/schema/Pair.js?')},"../../node_modules/yaml/browser/dist/schema/Scalar.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _toJSON2 = _interopRequireDefault(__webpack_require__(/*! ../toJSON */ "../../node_modules/yaml/browser/dist/toJSON.js"));\n\nvar _Node2 = _interopRequireDefault(__webpack_require__(/*! ./Node */ "../../node_modules/yaml/browser/dist/schema/Node.js"));\n\n// Published as \'yaml/scalar\'\nvar Scalar =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Scalar, _Node);\n\n  function Scalar(value) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Scalar);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Scalar).call(this));\n    _this.value = value;\n    return _this;\n  }\n\n  (0, _createClass2.default)(Scalar, [{\n    key: "toJSON",\n    value: function toJSON(arg, ctx) {\n      return ctx && ctx.keep ? this.value : (0, _toJSON2.default)(this.value, arg, ctx);\n    }\n  }, {\n    key: "toString",\n    value: function toString() {\n      return String(this.value);\n    }\n  }]);\n  return Scalar;\n}(_Node2.default);\n\nexports.default = Scalar;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/schema/Scalar.js?')},"../../node_modules/yaml/browser/dist/schema/Seq.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ "../../node_modules/@babel/runtime/helpers/get.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _toJSON2 = _interopRequireDefault(__webpack_require__(/*! ../toJSON */ "../../node_modules/yaml/browser/dist/toJSON.js"));\n\nvar _Collection2 = _interopRequireDefault(__webpack_require__(/*! ./Collection */ "../../node_modules/yaml/browser/dist/schema/Collection.js"));\n\nvar _Scalar = _interopRequireDefault(__webpack_require__(/*! ./Scalar */ "../../node_modules/yaml/browser/dist/schema/Scalar.js"));\n\n// Published as \'yaml/seq\'\nfunction asItemIndex(key) {\n  var idx = key instanceof _Scalar.default ? key.value : key;\n  if (idx && typeof idx === \'string\') idx = Number(idx);\n  return Number.isInteger(idx) && idx >= 0 ? idx : null;\n}\n\nvar YAMLSeq =\n/*#__PURE__*/\nfunction (_Collection) {\n  (0, _inherits2.default)(YAMLSeq, _Collection);\n\n  function YAMLSeq() {\n    (0, _classCallCheck2.default)(this, YAMLSeq);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLSeq).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(YAMLSeq, [{\n    key: "add",\n    value: function add(value) {\n      this.items.push(value);\n    }\n  }, {\n    key: "delete",\n    value: function _delete(key) {\n      var idx = asItemIndex(key);\n      if (typeof idx !== \'number\') return false;\n      var del = this.items.splice(idx, 1);\n      return del.length > 0;\n    }\n  }, {\n    key: "get",\n    value: function get(key, keepScalar) {\n      var idx = asItemIndex(key);\n      if (typeof idx !== \'number\') return undefined;\n      var it = this.items[idx];\n      return !keepScalar && it instanceof _Scalar.default ? it.value : it;\n    }\n  }, {\n    key: "has",\n    value: function has(key) {\n      var idx = asItemIndex(key);\n      return typeof idx === \'number\' && idx < this.items.length;\n    }\n  }, {\n    key: "set",\n    value: function set(key, value) {\n      var idx = asItemIndex(key);\n      if (typeof idx !== \'number\') throw new Error("Expected a valid index, not ".concat(key, "."));\n      this.items[idx] = value;\n    }\n  }, {\n    key: "toJSON",\n    value: function toJSON(_, ctx) {\n      var seq = [];\n      if (ctx && ctx.onCreate) ctx.onCreate(seq);\n      var i = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          seq.push((0, _toJSON2.default)(item, String(i++), ctx));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return seq;\n    }\n  }, {\n    key: "toString",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx) return JSON.stringify(this);\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(YAMLSeq.prototype), "toString", this).call(this, ctx, {\n        blockItem: function blockItem(n) {\n          return n.type === \'comment\' ? n.str : "- ".concat(n.str);\n        },\n        flowChars: {\n          start: \'[\',\n          end: \']\'\n        },\n        isMap: false,\n        itemIndent: (ctx.indent || \'\') + \'  \'\n      }, onComment, onChompKeep);\n    }\n  }]);\n  return YAMLSeq;\n}(_Collection2.default);\n\nexports.default = YAMLSeq;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/schema/Seq.js?')},"../../node_modules/yaml/browser/dist/schema/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "../../node_modules/@babel/runtime/helpers/typeof.js"));\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../../node_modules/@babel/runtime/helpers/defineProperty.js"));\n\nvar _warnings = __webpack_require__(/*! ../warnings */ "../../node_modules/yaml/browser/dist/warnings.js");\n\nvar _constants = __webpack_require__(/*! ../constants */ "../../node_modules/yaml/browser/dist/constants.js");\n\nvar _errors = __webpack_require__(/*! ../errors */ "../../node_modules/yaml/browser/dist/errors.js");\n\nvar _stringify = __webpack_require__(/*! ../stringify */ "../../node_modules/yaml/browser/dist/stringify.js");\n\nvar _tags = __webpack_require__(/*! ../tags */ "../../node_modules/yaml/browser/dist/tags/index.js");\n\nvar _string = __webpack_require__(/*! ../tags/failsafe/string */ "../../node_modules/yaml/browser/dist/tags/failsafe/string.js");\n\nvar _Alias = _interopRequireDefault(__webpack_require__(/*! ./Alias */ "../../node_modules/yaml/browser/dist/schema/Alias.js"));\n\nvar _Collection = _interopRequireDefault(__webpack_require__(/*! ./Collection */ "../../node_modules/yaml/browser/dist/schema/Collection.js"));\n\nvar _Node = _interopRequireDefault(__webpack_require__(/*! ./Node */ "../../node_modules/yaml/browser/dist/schema/Node.js"));\n\nvar _Pair = _interopRequireDefault(__webpack_require__(/*! ./Pair */ "../../node_modules/yaml/browser/dist/schema/Pair.js"));\n\nvar _Scalar = _interopRequireDefault(__webpack_require__(/*! ./Scalar */ "../../node_modules/yaml/browser/dist/schema/Scalar.js"));\n\nvar isMap = function isMap(_ref) {\n  var type = _ref.type;\n  return type === _constants.Type.FLOW_MAP || type === _constants.Type.MAP;\n};\n\nvar isSeq = function isSeq(_ref2) {\n  var type = _ref2.type;\n  return type === _constants.Type.FLOW_SEQ || type === _constants.Type.SEQ;\n};\n\nvar Schema =\n/*#__PURE__*/\nfunction () {\n  function Schema(_ref3) {\n    var customTags = _ref3.customTags,\n        merge = _ref3.merge,\n        schema = _ref3.schema,\n        deprecatedCustomTags = _ref3.tags;\n    (0, _classCallCheck2.default)(this, Schema);\n    this.merge = !!merge;\n    this.name = schema;\n    this.tags = _tags.schemas[schema.replace(/\\W/g, \'\')]; // \'yaml-1.1\' -> \'yaml11\'\n\n    if (!this.tags) {\n      var keys = Object.keys(_tags.schemas).map(function (key) {\n        return JSON.stringify(key);\n      }).join(\', \');\n      throw new Error("Unknown schema \\"".concat(schema, "\\"; use one of ").concat(keys));\n    }\n\n    if (!customTags && deprecatedCustomTags) {\n      customTags = deprecatedCustomTags;\n      (0, _warnings.warnOptionDeprecation)(\'tags\', \'customTags\');\n    }\n\n    if (Array.isArray(customTags)) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = customTags[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var tag = _step.value;\n          this.tags = this.tags.concat(tag);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    } else if (typeof customTags === \'function\') {\n      this.tags = customTags(this.tags.slice());\n    }\n\n    for (var i = 0; i < this.tags.length; ++i) {\n      var _tag = this.tags[i];\n\n      if (typeof _tag === \'string\') {\n        var tagObj = _tags.tags[_tag];\n\n        if (!tagObj) {\n          var _keys = Object.keys(_tags.tags).map(function (key) {\n            return JSON.stringify(key);\n          }).join(\', \');\n\n          throw new Error("Unknown custom tag \\"".concat(_tag, "\\"; use one of ").concat(_keys));\n        }\n\n        this.tags[i] = tagObj;\n      }\n    }\n  }\n\n  (0, _createClass2.default)(Schema, [{\n    key: "createNode",\n    value: function createNode(value, wrapScalars, tag, ctx) {\n      if (value instanceof _Node.default) return value;\n      var tagObj;\n\n      if (tag) {\n        if (tag.startsWith(\'!!\')) tag = Schema.defaultPrefix + tag.slice(2);\n        var match = this.tags.filter(function (t) {\n          return t.tag === tag;\n        });\n        tagObj = match.find(function (t) {\n          return !t.format;\n        }) || match[0];\n        if (!tagObj) throw new Error("Tag ".concat(tag, " not found"));\n      } else {\n        // TODO: deprecate/remove class check\n        tagObj = this.tags.find(function (t) {\n          return (t.identify && t.identify(value) || t.class && value instanceof t.class) && !t.format;\n        });\n\n        if (!tagObj) {\n          if (typeof value.toJSON === \'function\') value = value.toJSON();\n          if ((0, _typeof2.default)(value) !== \'object\') return wrapScalars ? new _Scalar.default(value) : value;\n          tagObj = value instanceof Map ? _tags.tags.map : value[Symbol.iterator] ? _tags.tags.seq : _tags.tags.map;\n        }\n      }\n\n      if (!ctx) ctx = {\n        wrapScalars: wrapScalars\n      };else ctx.wrapScalars = wrapScalars;\n\n      if (ctx.onTagObj) {\n        ctx.onTagObj(tagObj);\n        delete ctx.onTagObj;\n      }\n\n      var obj = {};\n\n      if (value && (0, _typeof2.default)(value) === \'object\' && ctx.prevObjects) {\n        var prev = ctx.prevObjects.find(function (o) {\n          return o.value === value;\n        });\n\n        if (prev) {\n          var alias = new _Alias.default(prev); // leaves source dirty; must be cleaned by caller\n\n          ctx.aliasNodes.push(alias);\n          return alias;\n        }\n\n        obj.value = value;\n        ctx.prevObjects.push(obj);\n      }\n\n      obj.node = tagObj.createNode ? tagObj.createNode(this, value, ctx) : wrapScalars ? new _Scalar.default(value) : value;\n      return obj.node;\n    }\n  }, {\n    key: "createPair",\n    value: function createPair(key, value, ctx) {\n      var k = this.createNode(key, ctx.wrapScalars, null, ctx);\n      var v = this.createNode(value, ctx.wrapScalars, null, ctx);\n      return new _Pair.default(k, v);\n    } // falls back to string on no match\n\n  }, {\n    key: "resolveScalar",\n    value: function resolveScalar(str, tags) {\n      if (!tags) tags = this.tags;\n\n      for (var i = 0; i < tags.length; ++i) {\n        var _tags$i = tags[i],\n            format = _tags$i.format,\n            test = _tags$i.test,\n            resolve = _tags$i.resolve;\n\n        if (test) {\n          var match = str.match(test);\n\n          if (match) {\n            var res = resolve.apply(null, match);\n            if (!(res instanceof _Scalar.default)) res = new _Scalar.default(res);\n            if (format) res.format = format;\n            return res;\n          }\n        }\n      }\n\n      if (this.tags.scalarFallback) str = this.tags.scalarFallback(str);\n      return new _Scalar.default(str);\n    } // sets node.resolved on success\n\n  }, {\n    key: "resolveNode",\n    value: function resolveNode(doc, node, tagName) {\n      var tags = this.tags.filter(function (_ref4) {\n        var tag = _ref4.tag;\n        return tag === tagName;\n      });\n      var generic = tags.find(function (_ref5) {\n        var test = _ref5.test;\n        return !test;\n      });\n      if (node.error) doc.errors.push(node.error);\n\n      try {\n        if (generic) {\n          var res = generic.resolve(doc, node);\n          if (!(res instanceof _Collection.default)) res = new _Scalar.default(res);\n          node.resolved = res;\n        } else {\n          var str = (0, _string.resolveString)(doc, node);\n\n          if (typeof str === \'string\' && tags.length > 0) {\n            node.resolved = this.resolveScalar(str, tags);\n          }\n        }\n      } catch (error) {\n        if (!error.source) error.source = node;\n        doc.errors.push(error);\n        node.resolved = null;\n      }\n\n      if (!node.resolved) return null;\n      if (tagName && node.tag) node.resolved.tag = tagName;\n      return node.resolved;\n    }\n  }, {\n    key: "resolveNodeWithFallback",\n    value: function resolveNodeWithFallback(doc, node, tagName) {\n      var res = this.resolveNode(doc, node, tagName);\n      if (Object.prototype.hasOwnProperty.call(node, \'resolved\')) return res;\n      var fallback = isMap(node) ? Schema.defaultTags.MAP : isSeq(node) ? Schema.defaultTags.SEQ : Schema.defaultTags.STR;\n\n      if (fallback) {\n        doc.warnings.push(new _errors.YAMLWarning(node, "The tag ".concat(tagName, " is unavailable, falling back to ").concat(fallback)));\n\n        var _res = this.resolveNode(doc, node, fallback);\n\n        _res.tag = tagName;\n        return _res;\n      } else {\n        doc.errors.push(new _errors.YAMLReferenceError(node, "The tag ".concat(tagName, " is unavailable")));\n      }\n\n      return null;\n    }\n  }, {\n    key: "getTagObject",\n    value: function getTagObject(item) {\n      if (item instanceof _Alias.default) return _Alias.default;\n\n      if (item.tag) {\n        var match = this.tags.filter(function (t) {\n          return t.tag === item.tag;\n        });\n        if (match.length > 0) return match.find(function (t) {\n          return t.format === item.format;\n        }) || match[0];\n      }\n\n      var tagObj, obj;\n\n      if (item instanceof _Scalar.default) {\n        obj = item.value; // TODO: deprecate/remove class check\n\n        var _match = this.tags.filter(function (t) {\n          return t.identify && t.identify(obj) || t.class && obj instanceof t.class;\n        });\n\n        tagObj = _match.find(function (t) {\n          return t.format === item.format;\n        }) || _match.find(function (t) {\n          return !t.format;\n        });\n      } else {\n        obj = item;\n        tagObj = this.tags.find(function (t) {\n          return t.nodeClass && obj instanceof t.nodeClass;\n        });\n      }\n\n      if (!tagObj) {\n        var name = obj && obj.constructor ? obj.constructor.name : (0, _typeof2.default)(obj);\n        throw new Error("Tag not resolved for ".concat(name, " value"));\n      }\n\n      return tagObj;\n    } // needs to be called before stringifier to allow for circular anchor refs\n\n  }, {\n    key: "stringifyProps",\n    value: function stringifyProps(node, tagObj, _ref6) {\n      var anchors = _ref6.anchors,\n          doc = _ref6.doc;\n      var props = [];\n      var anchor = doc.anchors.getName(node);\n\n      if (anchor) {\n        anchors[anchor] = node;\n        props.push("&".concat(anchor));\n      }\n\n      if (node.tag) {\n        props.push(doc.stringifyTag(node.tag));\n      } else if (!tagObj.default) {\n        props.push(doc.stringifyTag(tagObj.tag));\n      }\n\n      return props.join(\' \');\n    }\n  }, {\n    key: "stringify",\n    value: function stringify(item, ctx, onComment, onChompKeep) {\n      var tagObj;\n\n      if (!(item instanceof _Node.default)) {\n        var createCtx = {\n          aliasNodes: [],\n          onTagObj: function onTagObj(o) {\n            return tagObj = o;\n          },\n          prevObjects: []\n        };\n        item = this.createNode(item, true, null, createCtx);\n        var anchors = ctx.doc.anchors;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = createCtx.aliasNodes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var alias = _step2.value;\n            alias.source = alias.source.node;\n            var name = anchors.getName(alias.source);\n\n            if (!name) {\n              name = anchors.newName();\n              anchors.map[name] = alias.source;\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      ctx.tags = this;\n      if (item instanceof _Pair.default) return item.toString(ctx, onComment, onChompKeep);\n      if (!tagObj) tagObj = this.getTagObject(item);\n      var props = this.stringifyProps(item, tagObj, ctx);\n      var str = typeof tagObj.stringify === \'function\' ? tagObj.stringify(item, ctx, onComment, onChompKeep) : item instanceof _Collection.default ? item.toString(ctx, onComment, onChompKeep) : (0, _stringify.stringifyString)(item, ctx, onComment, onChompKeep);\n      return props ? item instanceof _Collection.default && str[0] !== \'{\' && str[0] !== \'[\' ? "".concat(props, "\\n").concat(ctx.indent).concat(str) : "".concat(props, " ").concat(str) : str;\n    }\n  }]);\n  return Schema;\n}();\n\nexports.default = Schema;\n(0, _defineProperty2.default)(Schema, "defaultPrefix", \'tag:yaml.org,2002:\');\n(0, _defineProperty2.default)(Schema, "defaultTags", {\n  MAP: \'tag:yaml.org,2002:map\',\n  SEQ: \'tag:yaml.org,2002:seq\',\n  STR: \'tag:yaml.org,2002:str\'\n});\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/schema/index.js?')},"../../node_modules/yaml/browser/dist/schema/parseMap.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ \"../../node_modules/@babel/runtime/helpers/interopRequireWildcard.js\");\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"../../node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseMap;\n\nvar _constants = __webpack_require__(/*! ../constants */ \"../../node_modules/yaml/browser/dist/constants.js\");\n\nvar _PlainValue = _interopRequireDefault(__webpack_require__(/*! ../cst/PlainValue */ \"../../node_modules/yaml/browser/dist/cst/PlainValue.js\"));\n\nvar _errors = __webpack_require__(/*! ../errors */ \"../../node_modules/yaml/browser/dist/errors.js\");\n\nvar _Map = _interopRequireDefault(__webpack_require__(/*! ./Map */ \"../../node_modules/yaml/browser/dist/schema/Map.js\"));\n\nvar _Merge = _interopRequireWildcard(__webpack_require__(/*! ./Merge */ \"../../node_modules/yaml/browser/dist/schema/Merge.js\"));\n\nvar _Pair = _interopRequireDefault(__webpack_require__(/*! ./Pair */ \"../../node_modules/yaml/browser/dist/schema/Pair.js\"));\n\nvar _parseUtils = __webpack_require__(/*! ./parseUtils */ \"../../node_modules/yaml/browser/dist/schema/parseUtils.js\");\n\nvar _Alias = _interopRequireDefault(__webpack_require__(/*! ./Alias */ \"../../node_modules/yaml/browser/dist/schema/Alias.js\"));\n\nvar _Collection = _interopRequireDefault(__webpack_require__(/*! ./Collection */ \"../../node_modules/yaml/browser/dist/schema/Collection.js\"));\n\nfunction parseMap(doc, cst) {\n  if (cst.type !== _constants.Type.MAP && cst.type !== _constants.Type.FLOW_MAP) {\n    var msg = \"A \".concat(cst.type, \" node cannot be resolved as a mapping\");\n    doc.errors.push(new _errors.YAMLSyntaxError(cst, msg));\n    return null;\n  }\n\n  var _ref = cst.type === _constants.Type.FLOW_MAP ? resolveFlowMapItems(doc, cst) : resolveBlockMapItems(doc, cst),\n      comments = _ref.comments,\n      items = _ref.items;\n\n  var map = new _Map.default();\n  map.items = items;\n  (0, _parseUtils.resolveComments)(map, comments);\n  var hasCollectionKey = false;\n\n  for (var i = 0; i < items.length; ++i) {\n    var iKey = items[i].key;\n    if (iKey instanceof _Collection.default) hasCollectionKey = true;\n\n    if (doc.schema.merge && iKey && iKey.value === _Merge.MERGE_KEY) {\n      items[i] = new _Merge.default(items[i]);\n      var sources = items[i].value.items;\n      var error = null;\n      sources.some(function (node) {\n        if (node instanceof _Alias.default) {\n          // During parsing, alias sources are CST nodes; to account for\n          // circular references their resolved values can't be used here.\n          var type = node.source.type;\n          if (type === _constants.Type.MAP || type === _constants.Type.FLOW_MAP) return false;\n          return error = 'Merge nodes aliases can only point to maps';\n        }\n\n        return error = 'Merge nodes can only have Alias nodes as values';\n      });\n      if (error) doc.errors.push(new _errors.YAMLSemanticError(cst, error));\n    } else {\n      for (var j = i + 1; j < items.length; ++j) {\n        var jKey = items[j].key;\n\n        if (iKey === jKey || iKey && jKey && Object.prototype.hasOwnProperty.call(iKey, 'value') && iKey.value === jKey.value) {\n          var _msg = \"Map keys must be unique; \\\"\".concat(iKey, \"\\\" is repeated\");\n\n          doc.errors.push(new _errors.YAMLSemanticError(cst, _msg));\n          break;\n        }\n      }\n    }\n  }\n\n  if (hasCollectionKey && !doc.options.mapAsMap) {\n    var warn = 'Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.';\n    doc.warnings.push(new _errors.YAMLWarning(cst, warn));\n  }\n\n  cst.resolved = map;\n  return map;\n}\n\nvar valueHasPairComment = function valueHasPairComment(_ref2) {\n  var _ref2$context = _ref2.context,\n      lineStart = _ref2$context.lineStart,\n      node = _ref2$context.node,\n      src = _ref2$context.src,\n      props = _ref2.props;\n  if (props.length === 0) return false;\n  var start = props[0].start;\n  if (node && start > node.valueRange.start) return false;\n  if (src[start] !== _constants.Char.COMMENT) return false;\n\n  for (var i = lineStart; i < start; ++i) {\n    if (src[i] === '\\n') return false;\n  }\n\n  return true;\n};\n\nfunction resolvePairComment(item, pair) {\n  if (!valueHasPairComment(item)) return;\n  var comment = item.getPropValue(0, _constants.Char.COMMENT, true);\n  var found = false;\n  var cb = pair.value.commentBefore;\n\n  if (cb && cb.startsWith(comment)) {\n    pair.value.commentBefore = cb.substr(comment.length + 1);\n    found = true;\n  } else {\n    var cc = pair.value.comment;\n\n    if (!item.node && cc && cc.startsWith(comment)) {\n      pair.value.comment = cc.substr(comment.length + 1);\n      found = true;\n    }\n  }\n\n  if (found) pair.comment = comment;\n}\n\nfunction resolveBlockMapItems(doc, cst) {\n  var comments = [];\n  var items = [];\n  var key = undefined;\n  var keyStart = null;\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    var item = cst.items[i];\n\n    switch (item.type) {\n      case _constants.Type.BLANK_LINE:\n        comments.push({\n          afterKey: !!key,\n          before: items.length\n        });\n        break;\n\n      case _constants.Type.COMMENT:\n        comments.push({\n          afterKey: !!key,\n          before: items.length,\n          comment: item.comment\n        });\n        break;\n\n      case _constants.Type.MAP_KEY:\n        if (key !== undefined) items.push(new _Pair.default(key));\n        if (item.error) doc.errors.push(item.error);\n        key = doc.resolveNode(item.node);\n        keyStart = null;\n        break;\n\n      case _constants.Type.MAP_VALUE:\n        {\n          if (key === undefined) key = null;\n          if (item.error) doc.errors.push(item.error);\n\n          if (!item.context.atLineStart && item.node && item.node.type === _constants.Type.MAP && !item.node.context.atLineStart) {\n            var msg = 'Nested mappings are not allowed in compact mappings';\n            doc.errors.push(new _errors.YAMLSemanticError(item.node, msg));\n          }\n\n          var valueNode = item.node;\n\n          if (!valueNode && item.props.length > 0) {\n            // Comments on an empty mapping value need to be preserved, so we\n            // need to construct a minimal empty node here to use instead of the\n            // missing `item.node`. -- eemeli/yaml#19\n            valueNode = new _PlainValue.default(_constants.Type.PLAIN, []);\n            valueNode.context = {\n              parent: item,\n              src: item.context.src\n            };\n            var pos = item.range.start + 1;\n            valueNode.range = {\n              start: pos,\n              end: pos\n            };\n            valueNode.valueRange = {\n              start: pos,\n              end: pos\n            };\n\n            if (typeof item.range.origStart === 'number') {\n              var origPos = item.range.origStart + 1;\n              valueNode.range.origStart = valueNode.range.origEnd = origPos;\n              valueNode.valueRange.origStart = valueNode.valueRange.origEnd = origPos;\n            }\n          }\n\n          var pair = new _Pair.default(key, doc.resolveNode(valueNode));\n          resolvePairComment(item, pair);\n          items.push(pair);\n          (0, _parseUtils.checkKeyLength)(doc.errors, cst, i, key, keyStart);\n          key = undefined;\n          keyStart = null;\n        }\n        break;\n\n      default:\n        if (key !== undefined) items.push(new _Pair.default(key));\n        key = doc.resolveNode(item);\n        keyStart = item.range.start;\n        if (item.error) doc.errors.push(item.error);\n\n        next: for (var j = i + 1;; ++j) {\n          var nextItem = cst.items[j];\n\n          switch (nextItem && nextItem.type) {\n            case _constants.Type.BLANK_LINE:\n            case _constants.Type.COMMENT:\n              continue next;\n\n            case _constants.Type.MAP_VALUE:\n              break next;\n\n            default:\n              doc.errors.push(new _errors.YAMLSemanticError(item, 'Implicit map keys need to be followed by map values'));\n              break next;\n          }\n        }\n\n        if (item.valueRangeContainsNewline) {\n          var _msg2 = 'Implicit map keys need to be on a single line';\n          doc.errors.push(new _errors.YAMLSemanticError(item, _msg2));\n        }\n\n    }\n  }\n\n  if (key !== undefined) items.push(new _Pair.default(key));\n  return {\n    comments: comments,\n    items: items\n  };\n}\n\nfunction resolveFlowMapItems(doc, cst) {\n  var comments = [];\n  var items = [];\n  var key = undefined;\n  var keyStart = null;\n  var explicitKey = false;\n  var next = '{';\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    (0, _parseUtils.checkKeyLength)(doc.errors, cst, i, key, keyStart);\n    var item = cst.items[i];\n\n    if (typeof item.char === 'string') {\n      var char = item.char,\n          offset = item.offset;\n\n      if (char === '?' && key === undefined && !explicitKey) {\n        explicitKey = true;\n        next = ':';\n        continue;\n      }\n\n      if (char === ':') {\n        if (key === undefined) key = null;\n\n        if (next === ':') {\n          next = ',';\n          continue;\n        }\n      } else {\n        if (explicitKey) {\n          if (key === undefined && char !== ',') key = null;\n          explicitKey = false;\n        }\n\n        if (key !== undefined) {\n          items.push(new _Pair.default(key));\n          key = undefined;\n          keyStart = null;\n\n          if (char === ',') {\n            next = ':';\n            continue;\n          }\n        }\n      }\n\n      if (char === '}') {\n        if (i === cst.items.length - 1) continue;\n      } else if (char === next) {\n        next = ':';\n        continue;\n      }\n\n      var msg = \"Flow map contains an unexpected \".concat(char);\n      var err = new _errors.YAMLSyntaxError(cst, msg);\n      err.offset = offset;\n      doc.errors.push(err);\n    } else if (item.type === _constants.Type.BLANK_LINE) {\n      comments.push({\n        afterKey: !!key,\n        before: items.length\n      });\n    } else if (item.type === _constants.Type.COMMENT) {\n      comments.push({\n        afterKey: !!key,\n        before: items.length,\n        comment: item.comment\n      });\n    } else if (key === undefined) {\n      if (next === ',') doc.errors.push(new _errors.YAMLSemanticError(item, 'Separator , missing in flow map'));\n      key = doc.resolveNode(item);\n      keyStart = explicitKey ? null : item.range.start; // TODO: add error for non-explicit multiline plain key\n    } else {\n      if (next !== ',') doc.errors.push(new _errors.YAMLSemanticError(item, 'Indicator : missing in flow map entry'));\n      items.push(new _Pair.default(key, doc.resolveNode(item)));\n      key = undefined;\n      explicitKey = false;\n    }\n  }\n\n  (0, _parseUtils.checkFlowCollectionEnd)(doc.errors, cst);\n  if (key !== undefined) items.push(new _Pair.default(key));\n  return {\n    comments: comments,\n    items: items\n  };\n}\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/schema/parseMap.js?")},"../../node_modules/yaml/browser/dist/schema/parseSeq.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = parseSeq;\n\nvar _constants = __webpack_require__(/*! ../constants */ "../../node_modules/yaml/browser/dist/constants.js");\n\nvar _errors = __webpack_require__(/*! ../errors */ "../../node_modules/yaml/browser/dist/errors.js");\n\nvar _Pair = _interopRequireDefault(__webpack_require__(/*! ./Pair */ "../../node_modules/yaml/browser/dist/schema/Pair.js"));\n\nvar _parseUtils = __webpack_require__(/*! ./parseUtils */ "../../node_modules/yaml/browser/dist/schema/parseUtils.js");\n\nvar _Seq = _interopRequireDefault(__webpack_require__(/*! ./Seq */ "../../node_modules/yaml/browser/dist/schema/Seq.js"));\n\nvar _Collection = _interopRequireDefault(__webpack_require__(/*! ./Collection */ "../../node_modules/yaml/browser/dist/schema/Collection.js"));\n\nfunction parseSeq(doc, cst) {\n  if (cst.type !== _constants.Type.SEQ && cst.type !== _constants.Type.FLOW_SEQ) {\n    var msg = "A ".concat(cst.type, " node cannot be resolved as a sequence");\n    doc.errors.push(new _errors.YAMLSyntaxError(cst, msg));\n    return null;\n  }\n\n  var _ref = cst.type === _constants.Type.FLOW_SEQ ? resolveFlowSeqItems(doc, cst) : resolveBlockSeqItems(doc, cst),\n      comments = _ref.comments,\n      items = _ref.items;\n\n  var seq = new _Seq.default();\n  seq.items = items;\n  (0, _parseUtils.resolveComments)(seq, comments);\n\n  if (!doc.options.mapAsMap && items.some(function (it) {\n    return it instanceof _Pair.default && it.key instanceof _Collection.default;\n  })) {\n    var warn = \'Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.\';\n    doc.warnings.push(new _errors.YAMLWarning(cst, warn));\n  }\n\n  cst.resolved = seq;\n  return seq;\n}\n\nfunction resolveBlockSeqItems(doc, cst) {\n  var comments = [];\n  var items = [];\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    var item = cst.items[i];\n\n    switch (item.type) {\n      case _constants.Type.BLANK_LINE:\n        comments.push({\n          before: items.length\n        });\n        break;\n\n      case _constants.Type.COMMENT:\n        comments.push({\n          comment: item.comment,\n          before: items.length\n        });\n        break;\n\n      case _constants.Type.SEQ_ITEM:\n        if (item.error) doc.errors.push(item.error);\n        items.push(doc.resolveNode(item.node));\n\n        if (item.hasProps) {\n          var msg = \'Sequence items cannot have tags or anchors before the - indicator\';\n          doc.errors.push(new _errors.YAMLSemanticError(item, msg));\n        }\n\n        break;\n\n      default:\n        if (item.error) doc.errors.push(item.error);\n        doc.errors.push(new _errors.YAMLSyntaxError(item, "Unexpected ".concat(item.type, " node in sequence")));\n    }\n  }\n\n  return {\n    comments: comments,\n    items: items\n  };\n}\n\nfunction resolveFlowSeqItems(doc, cst) {\n  var comments = [];\n  var items = [];\n  var explicitKey = false;\n  var key = undefined;\n  var keyStart = null;\n  var next = \'[\';\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    var item = cst.items[i];\n\n    if (typeof item.char === \'string\') {\n      var char = item.char,\n          offset = item.offset;\n\n      if (char !== \':\' && (explicitKey || key !== undefined)) {\n        if (explicitKey && key === undefined) key = next ? items.pop() : null;\n        items.push(new _Pair.default(key));\n        explicitKey = false;\n        key = undefined;\n        keyStart = null;\n      }\n\n      if (char === next) {\n        next = null;\n      } else if (!next && char === \'?\') {\n        explicitKey = true;\n      } else if (next !== \'[\' && char === \':\' && key === undefined) {\n        if (next === \',\') {\n          key = items.pop();\n\n          if (key instanceof _Pair.default) {\n            var msg = \'Chaining flow sequence pairs is invalid\';\n            var err = new _errors.YAMLSemanticError(cst, msg);\n            err.offset = offset;\n            doc.errors.push(err);\n          }\n\n          if (!explicitKey) (0, _parseUtils.checkKeyLength)(doc.errors, cst, i, key, keyStart);\n        } else {\n          key = null;\n        }\n\n        keyStart = null;\n        explicitKey = false; // TODO: add error for non-explicit multiline plain key\n\n        next = null;\n      } else if (next === \'[\' || char !== \']\' || i < cst.items.length - 1) {\n        var _msg = "Flow sequence contains an unexpected ".concat(char);\n\n        var _err = new _errors.YAMLSyntaxError(cst, _msg);\n\n        _err.offset = offset;\n        doc.errors.push(_err);\n      }\n    } else if (item.type === _constants.Type.BLANK_LINE) {\n      comments.push({\n        before: items.length\n      });\n    } else if (item.type === _constants.Type.COMMENT) {\n      comments.push({\n        comment: item.comment,\n        before: items.length\n      });\n    } else {\n      if (next) {\n        var _msg2 = "Expected a ".concat(next, " in flow sequence");\n\n        doc.errors.push(new _errors.YAMLSemanticError(item, _msg2));\n      }\n\n      var value = doc.resolveNode(item);\n\n      if (key === undefined) {\n        items.push(value);\n      } else {\n        items.push(new _Pair.default(key, value));\n        key = undefined;\n      }\n\n      keyStart = item.range.start;\n      next = \',\';\n    }\n  }\n\n  (0, _parseUtils.checkFlowCollectionEnd)(doc.errors, cst);\n  if (key !== undefined) items.push(new _Pair.default(key));\n  return {\n    comments: comments,\n    items: items\n  };\n}\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/schema/parseSeq.js?')},"../../node_modules/yaml/browser/dist/schema/parseUtils.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkFlowCollectionEnd = checkFlowCollectionEnd;\nexports.checkKeyLength = checkKeyLength;\nexports.resolveComments = resolveComments;\n\nvar _errors = __webpack_require__(/*! ../errors */ \"../../node_modules/yaml/browser/dist/errors.js\");\n\nvar _constants = __webpack_require__(/*! ../constants */ \"../../node_modules/yaml/browser/dist/constants.js\");\n\nfunction checkFlowCollectionEnd(errors, cst) {\n  var char, name;\n\n  switch (cst.type) {\n    case _constants.Type.FLOW_MAP:\n      char = '}';\n      name = 'flow map';\n      break;\n\n    case _constants.Type.FLOW_SEQ:\n      char = ']';\n      name = 'flow sequence';\n      break;\n\n    default:\n      errors.push(new _errors.YAMLSemanticError(cst, 'Not a flow collection!?'));\n      return;\n  }\n\n  var lastItem;\n\n  for (var i = cst.items.length - 1; i >= 0; --i) {\n    var item = cst.items[i];\n\n    if (!item || item.type !== _constants.Type.COMMENT) {\n      lastItem = item;\n      break;\n    }\n  }\n\n  if (lastItem && lastItem.char !== char) {\n    var msg = \"Expected \".concat(name, \" to end with \").concat(char);\n    var err;\n\n    if (typeof lastItem.offset === 'number') {\n      err = new _errors.YAMLSemanticError(cst, msg);\n      err.offset = lastItem.offset + 1;\n    } else {\n      err = new _errors.YAMLSemanticError(lastItem, msg);\n      if (lastItem.range && lastItem.range.end) err.offset = lastItem.range.end - lastItem.range.start;\n    }\n\n    errors.push(err);\n  }\n}\n\nfunction checkKeyLength(errors, node, itemIdx, key, keyStart) {\n  if (!key || typeof keyStart !== 'number') return;\n  var item = node.items[itemIdx];\n  var keyEnd = item && item.range && item.range.start;\n\n  if (!keyEnd) {\n    for (var i = itemIdx - 1; i >= 0; --i) {\n      var it = node.items[i];\n\n      if (it && it.range) {\n        keyEnd = it.range.end + 2 * (itemIdx - i);\n        break;\n      }\n    }\n  }\n\n  if (keyEnd > keyStart + 1024) {\n    var k = String(key).substr(0, 8) + '...' + String(key).substr(-8);\n    errors.push(new _errors.YAMLSemanticError(node, \"The \\\"\".concat(k, \"\\\" key is too long\")));\n  }\n}\n\nfunction resolveComments(collection, comments) {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = comments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _step$value = _step.value,\n          afterKey = _step$value.afterKey,\n          before = _step$value.before,\n          comment = _step$value.comment;\n      var item = collection.items[before];\n\n      if (!item) {\n        if (comment !== undefined) {\n          if (collection.comment) collection.comment += '\\n' + comment;else collection.comment = comment;\n        }\n      } else {\n        if (afterKey && item.value) item = item.value;\n\n        if (comment === undefined) {\n          if (afterKey || !item.commentBefore) item.spaceBefore = true;\n        } else {\n          if (item.commentBefore) item.commentBefore += '\\n' + comment;else item.commentBefore = comment;\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/schema/parseUtils.js?")},"../../node_modules/yaml/browser/dist/stringify.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ \"../../node_modules/@babel/runtime/helpers/interopRequireWildcard.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringifyNumber = stringifyNumber;\nexports.stringifyString = stringifyString;\n\nvar _addComment = __webpack_require__(/*! ./addComment */ \"../../node_modules/yaml/browser/dist/addComment.js\");\n\nvar _constants = __webpack_require__(/*! ./constants */ \"../../node_modules/yaml/browser/dist/constants.js\");\n\nvar _foldFlowLines = _interopRequireWildcard(__webpack_require__(/*! ./foldFlowLines */ \"../../node_modules/yaml/browser/dist/foldFlowLines.js\"));\n\nvar _options = __webpack_require__(/*! ./tags/options */ \"../../node_modules/yaml/browser/dist/tags/options.js\");\n\nfunction stringifyNumber(_ref) {\n  var format = _ref.format,\n      minFractionDigits = _ref.minFractionDigits,\n      tag = _ref.tag,\n      value = _ref.value;\n  if (!isFinite(value)) return isNaN(value) ? '.nan' : value < 0 ? '-.inf' : '.inf';\n  var n = JSON.stringify(value);\n\n  if (!format && minFractionDigits && (!tag || tag === 'tag:yaml.org,2002:float') && /^\\d/.test(n)) {\n    var i = n.indexOf('.');\n\n    if (i < 0) {\n      i = n.length;\n      n += '.';\n    }\n\n    var d = minFractionDigits - (n.length - i - 1);\n\n    while (d-- > 0) {\n      n += '0';\n    }\n  }\n\n  return n;\n}\n\nfunction lineLengthOverLimit(str, limit) {\n  var strLen = str.length;\n  if (strLen <= limit) return false;\n\n  for (var i = 0, start = 0; i < strLen; ++i) {\n    if (str[i] === '\\n') {\n      if (i - start > limit) return true;\n      start = i + 1;\n      if (strLen - start <= limit) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction doubleQuotedString(value, _ref2) {\n  var implicitKey = _ref2.implicitKey,\n      indent = _ref2.indent;\n  var _strOptions$doubleQuo = _options.strOptions.doubleQuoted,\n      jsonEncoding = _strOptions$doubleQuo.jsonEncoding,\n      minMultiLineLength = _strOptions$doubleQuo.minMultiLineLength;\n  var json = JSON.stringify(value);\n  if (jsonEncoding) return json;\n  var str = '';\n  var start = 0;\n\n  for (var i = 0, ch = json[i]; ch; ch = json[++i]) {\n    if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n      // space before newline needs to be escaped to not be folded\n      str += json.slice(start, i) + '\\\\ ';\n      i += 1;\n      start = i;\n      ch = '\\\\';\n    }\n\n    if (ch === '\\\\') switch (json[i + 1]) {\n      case 'u':\n        {\n          str += json.slice(start, i);\n          var code = json.substr(i + 2, 4);\n\n          switch (code) {\n            case '0000':\n              str += '\\\\0';\n              break;\n\n            case '0007':\n              str += '\\\\a';\n              break;\n\n            case '000b':\n              str += '\\\\v';\n              break;\n\n            case '001b':\n              str += '\\\\e';\n              break;\n\n            case '0085':\n              str += '\\\\N';\n              break;\n\n            case '00a0':\n              str += '\\\\_';\n              break;\n\n            case '2028':\n              str += '\\\\L';\n              break;\n\n            case '2029':\n              str += '\\\\P';\n              break;\n\n            default:\n              if (code.substr(0, 2) === '00') str += '\\\\x' + code.substr(2);else str += json.substr(i, 6);\n          }\n\n          i += 5;\n          start = i + 1;\n        }\n        break;\n\n      case 'n':\n        if (implicitKey || json[i + 2] === '\"' || json.length < minMultiLineLength) {\n          i += 1;\n        } else {\n          // folding will eat first newline\n          str += json.slice(start, i) + '\\n\\n';\n\n          while (json[i + 2] === '\\\\' && json[i + 3] === 'n' && json[i + 4] !== '\"') {\n            str += '\\n';\n            i += 2;\n          }\n\n          str += indent; // space after newline needs to be escaped to not be folded\n\n          if (json[i + 2] === ' ') str += '\\\\';\n          i += 1;\n          start = i + 1;\n        }\n\n        break;\n\n      default:\n        i += 1;\n    }\n  }\n\n  str = start ? str + json.slice(start) : json;\n  return implicitKey ? str : (0, _foldFlowLines.default)(str, indent, _foldFlowLines.FOLD_QUOTED, _options.strOptions.fold);\n}\n\nfunction singleQuotedString(value, ctx) {\n  var indent = ctx.indent,\n      implicitKey = ctx.implicitKey;\n\n  if (implicitKey) {\n    if (/\\n/.test(value)) return doubleQuotedString(value, ctx);\n  } else {\n    // single quoted string can't have leading or trailing whitespace around newline\n    if (/[ \\t]\\n|\\n[ \\t]/.test(value)) return doubleQuotedString(value, ctx);\n  }\n\n  var res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, \"$&\\n\".concat(indent)) + \"'\";\n  return implicitKey ? res : (0, _foldFlowLines.default)(res, indent, _foldFlowLines.FOLD_FLOW, _options.strOptions.fold);\n}\n\nfunction blockString(_ref3, ctx, onComment, onChompKeep) {\n  var comment = _ref3.comment,\n      type = _ref3.type,\n      value = _ref3.value;\n\n  // 1. Block can't end in whitespace unless the last line is non-empty.\n  // 2. Strings consisting of only whitespace are best rendered explicitly.\n  if (/\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n    return doubleQuotedString(value, ctx);\n  }\n\n  var indent = ctx.indent || (ctx.forceBlockIndent ? ' ' : '');\n  var indentSize = indent ? '2' : '1'; // root is at -1\n\n  var literal = type === _constants.Type.BLOCK_FOLDED ? false : type === _constants.Type.BLOCK_LITERAL ? true : !lineLengthOverLimit(value, _options.strOptions.fold.lineWidth - indent.length);\n  var header = literal ? '|' : '>';\n  if (!value) return header + '\\n';\n  var wsStart = '';\n  var wsEnd = '';\n  value = value.replace(/[\\n\\t ]*$/, function (ws) {\n    var n = ws.indexOf('\\n');\n\n    if (n === -1) {\n      header += '-'; // strip\n    } else if (value === ws || n !== ws.length - 1) {\n      header += '+'; // keep\n\n      if (onChompKeep) onChompKeep();\n    }\n\n    wsEnd = ws.replace(/\\n$/, '');\n    return '';\n  }).replace(/^[\\n ]*/, function (ws) {\n    if (ws.indexOf(' ') !== -1) header += indentSize;\n    var m = ws.match(/ +$/);\n\n    if (m) {\n      wsStart = ws.slice(0, -m[0].length);\n      return m[0];\n    } else {\n      wsStart = ws;\n      return '';\n    }\n  });\n  if (wsEnd) wsEnd = wsEnd.replace(/\\n+(?!\\n|$)/g, \"$&\".concat(indent));\n  if (wsStart) wsStart = wsStart.replace(/\\n+/g, \"$&\".concat(indent));\n\n  if (comment) {\n    header += ' #' + comment.replace(/ ?[\\r\\n]+/g, ' ');\n    if (onComment) onComment();\n  }\n\n  if (!value) return \"\".concat(header).concat(indentSize, \"\\n\").concat(indent).concat(wsEnd);\n\n  if (literal) {\n    value = value.replace(/\\n+/g, \"$&\".concat(indent));\n    return \"\".concat(header, \"\\n\").concat(indent).concat(wsStart).concat(value).concat(wsEnd);\n  }\n\n  value = value.replace(/\\n+/g, '\\n$&').replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n  //         ^ ind.line  ^ empty     ^ capture next empty lines only at end of indent\n  .replace(/\\n+/g, \"$&\".concat(indent));\n  var body = (0, _foldFlowLines.default)(\"\".concat(wsStart).concat(value).concat(wsEnd), indent, _foldFlowLines.FOLD_BLOCK, _options.strOptions.fold);\n  return \"\".concat(header, \"\\n\").concat(indent).concat(body);\n}\n\nfunction plainString(item, ctx, onComment, onChompKeep) {\n  var comment = item.comment,\n      type = item.type,\n      value = item.value;\n  var actualString = ctx.actualString,\n      implicitKey = ctx.implicitKey,\n      indent = ctx.indent,\n      inFlow = ctx.inFlow,\n      tags = ctx.tags;\n\n  if (implicitKey && /[\\n[\\]{},]/.test(value) || inFlow && /[[\\]{},]/.test(value)) {\n    return doubleQuotedString(value, ctx);\n  }\n\n  if (!value || /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n    // not allowed:\n    // - empty string, '-' or '?'\n    // - start with an indicator character (except [?:-]) or /[?-] /\n    // - '\\n ', ': ' or ' \\n' anywhere\n    // - '#' not preceded by a non-space char\n    // - end with ' ' or ':'\n    return implicitKey || inFlow || value.indexOf('\\n') === -1 ? value.indexOf('\"') !== -1 && value.indexOf(\"'\") === -1 ? singleQuotedString(value, ctx) : doubleQuotedString(value, ctx) : blockString(item, ctx, onComment, onChompKeep);\n  }\n\n  if (!implicitKey && !inFlow && type !== _constants.Type.PLAIN && value.indexOf('\\n') !== -1) {\n    // Where allowed & type not set explicitly, prefer block style for multiline strings\n    return blockString(item, ctx, onComment, onChompKeep);\n  }\n\n  var str = value.replace(/\\n+/g, \"$&\\n\".concat(indent)); // Verify that output will be parsed as a string, as e.g. plain numbers and\n  // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n  // and others in v1.1.\n\n  if (actualString && typeof tags.resolveScalar(str).value !== 'string') {\n    return doubleQuotedString(value, ctx);\n  }\n\n  var body = implicitKey ? str : (0, _foldFlowLines.default)(str, indent, _foldFlowLines.FOLD_FLOW, _options.strOptions.fold);\n\n  if (comment && !inFlow && (body.indexOf('\\n') !== -1 || comment.indexOf('\\n') !== -1)) {\n    if (onComment) onComment();\n    return (0, _addComment.addCommentBefore)(body, indent, comment);\n  }\n\n  return body;\n}\n\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n  var defaultType = _options.strOptions.defaultType;\n  var implicitKey = ctx.implicitKey,\n      inFlow = ctx.inFlow;\n  var _item = item,\n      type = _item.type,\n      value = _item.value;\n\n  if (typeof value !== 'string') {\n    value = String(value);\n    item = Object.assign({}, item, {\n      value: value\n    });\n  }\n\n  var _stringify = function _stringify(_type) {\n    switch (_type) {\n      case _constants.Type.BLOCK_FOLDED:\n      case _constants.Type.BLOCK_LITERAL:\n        return blockString(item, ctx, onComment, onChompKeep);\n\n      case _constants.Type.QUOTE_DOUBLE:\n        return doubleQuotedString(value, ctx);\n\n      case _constants.Type.QUOTE_SINGLE:\n        return singleQuotedString(value, ctx);\n\n      case _constants.Type.PLAIN:\n        return plainString(item, ctx, onComment, onChompKeep);\n\n      default:\n        return null;\n    }\n  };\n\n  if (type !== _constants.Type.QUOTE_DOUBLE && /[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f]/.test(value)) {\n    // force double quotes on control characters\n    type = _constants.Type.QUOTE_DOUBLE;\n  } else if ((implicitKey || inFlow) && (type === _constants.Type.BLOCK_FOLDED || type === _constants.Type.BLOCK_LITERAL)) {\n    // should not happen; blocks are not valid inside flow containers\n    type = _constants.Type.QUOTE_DOUBLE;\n  }\n\n  var res = _stringify(type);\n\n  if (res === null) {\n    res = _stringify(defaultType);\n    if (res === null) throw new Error(\"Unsupported default string type \".concat(defaultType));\n  }\n\n  return res;\n}\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/stringify.js?")},"../../node_modules/yaml/browser/dist/tags/core.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"../../node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Scalar = _interopRequireDefault(__webpack_require__(/*! ../schema/Scalar */ \"../../node_modules/yaml/browser/dist/schema/Scalar.js\"));\n\nvar _stringify = __webpack_require__(/*! ../stringify */ \"../../node_modules/yaml/browser/dist/stringify.js\");\n\nvar _failsafe = _interopRequireDefault(__webpack_require__(/*! ./failsafe */ \"../../node_modules/yaml/browser/dist/tags/failsafe/index.js\"));\n\nvar _options = __webpack_require__(/*! ./options */ \"../../node_modules/yaml/browser/dist/tags/options.js\");\n\nvar _default = _failsafe.default.concat([{\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new _Scalar.default(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^(?:~|[Nn]ull|NULL)?$/,\n  resolve: function resolve() {\n    return null;\n  },\n  options: _options.nullOptions,\n  stringify: function stringify() {\n    return _options.nullOptions.nullStr;\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n  resolve: function resolve(str) {\n    return str[0] === 't' || str[0] === 'T';\n  },\n  options: _options.boolOptions,\n  stringify: function stringify(_ref) {\n    var value = _ref.value;\n    return value ? _options.boolOptions.trueStr : _options.boolOptions.falseStr;\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^0o([0-7]+)$/,\n  resolve: function resolve(str, oct) {\n    return parseInt(oct, 8);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return '0o' + value.toString(8);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^[-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return parseInt(str, 10);\n  },\n  stringify: _stringify.stringifyNumber\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^0x([0-9a-fA-F]+)$/,\n  resolve: function resolve(str, hex) {\n    return parseInt(hex, 16);\n  },\n  stringify: function stringify(_ref3) {\n    var value = _ref3.value;\n    return '0x' + value.toString(16);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.inf|(\\.nan))$/i,\n  resolve: function resolve(str, nan) {\n    return nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n  },\n  stringify: _stringify.stringifyNumber\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?(?:0|[1-9][0-9]*)(\\.[0-9]*)?[eE][-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return parseFloat(str);\n  },\n  stringify: function stringify(_ref4) {\n    var value = _ref4.value;\n    return Number(value).toExponential();\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:0|[1-9][0-9]*)\\.([0-9]*)$/,\n  resolve: function resolve(str, frac) {\n    var node = new _Scalar.default(parseFloat(str));\n    if (frac && frac[frac.length - 1] === '0') node.minFractionDigits = frac.length;\n    return node;\n  },\n  stringify: _stringify.stringifyNumber\n}]);\n\nexports.default = _default;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/tags/core.js?")},"../../node_modules/yaml/browser/dist/tags/failsafe/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _map = _interopRequireDefault(__webpack_require__(/*! ./map */ "../../node_modules/yaml/browser/dist/tags/failsafe/map.js"));\n\nvar _seq = _interopRequireDefault(__webpack_require__(/*! ./seq */ "../../node_modules/yaml/browser/dist/tags/failsafe/seq.js"));\n\nvar _string = _interopRequireDefault(__webpack_require__(/*! ./string */ "../../node_modules/yaml/browser/dist/tags/failsafe/string.js"));\n\nvar _default = [_map.default, _seq.default, _string.default];\nexports.default = _default;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/tags/failsafe/index.js?')},"../../node_modules/yaml/browser/dist/tags/failsafe/map.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "../../node_modules/@babel/runtime/helpers/typeof.js"));\n\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../../node_modules/@babel/runtime/helpers/slicedToArray.js"));\n\nvar _Map = _interopRequireDefault(__webpack_require__(/*! ../../schema/Map */ "../../node_modules/yaml/browser/dist/schema/Map.js"));\n\nvar _parseMap = _interopRequireDefault(__webpack_require__(/*! ../../schema/parseMap */ "../../node_modules/yaml/browser/dist/schema/parseMap.js"));\n\nfunction createMap(schema, obj, ctx) {\n  var map = new _Map.default();\n\n  if (obj instanceof Map) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = obj[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var _step$value = (0, _slicedToArray2.default)(_step.value, 2),\n            key = _step$value[0],\n            value = _step$value[1];\n\n        map.items.push(schema.createPair(key, value, ctx));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  } else if (obj && (0, _typeof2.default)(obj) === \'object\') {\n    for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n      var _key = _Object$keys[_i];\n      map.items.push(schema.createPair(_key, obj[_key], ctx));\n    }\n  }\n\n  return map;\n}\n\nvar _default = {\n  createNode: createMap,\n  default: true,\n  nodeClass: _Map.default,\n  tag: \'tag:yaml.org,2002:map\',\n  resolve: _parseMap.default\n};\nexports.default = _default;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/tags/failsafe/map.js?')},"../../node_modules/yaml/browser/dist/tags/failsafe/seq.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = void 0;\n\nvar _parseSeq = _interopRequireDefault(__webpack_require__(/*! ../../schema/parseSeq */ "../../node_modules/yaml/browser/dist/schema/parseSeq.js"));\n\nvar _Seq = _interopRequireDefault(__webpack_require__(/*! ../../schema/Seq */ "../../node_modules/yaml/browser/dist/schema/Seq.js"));\n\nfunction createSeq(schema, obj, ctx) {\n  var seq = new _Seq.default();\n\n  if (obj && obj[Symbol.iterator]) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = obj[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var it = _step.value;\n        var v = schema.createNode(it, ctx.wrapScalars, null, ctx);\n        seq.items.push(v);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return seq;\n}\n\nvar _default = {\n  createNode: createSeq,\n  default: true,\n  nodeClass: _Seq.default,\n  tag: \'tag:yaml.org,2002:seq\',\n  resolve: _parseSeq.default\n};\nexports.default = _default;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/tags/failsafe/seq.js?')},"../../node_modules/yaml/browser/dist/tags/failsafe/string.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.resolveString = void 0;\n\nvar _stringify = __webpack_require__(/*! ../../stringify */ \"../../node_modules/yaml/browser/dist/stringify.js\");\n\nvar _options = __webpack_require__(/*! ../options */ \"../../node_modules/yaml/browser/dist/tags/options.js\");\n\nvar resolveString = function resolveString(doc, node) {\n  // on error, will return { str: string, errors: Error[] }\n  var res = node.strValue;\n  if (!res) return '';\n  if (typeof res === 'string') return res;\n  res.errors.forEach(function (error) {\n    if (!error.source) error.source = node;\n    doc.errors.push(error);\n  });\n  return res.str;\n};\n\nexports.resolveString = resolveString;\nvar _default = {\n  identify: function identify(value) {\n    return typeof value === 'string';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: resolveString,\n  stringify: function stringify(item, ctx, onComment, onChompKeep) {\n    ctx = Object.assign({\n      actualString: true\n    }, ctx);\n    return (0, _stringify.stringifyString)(item, ctx, onComment, onChompKeep);\n  },\n  options: _options.strOptions\n};\nexports.default = _default;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/tags/failsafe/string.js?")},"../../node_modules/yaml/browser/dist/tags/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.tags = exports.schemas = void 0;\n\nvar _core = _interopRequireDefault(__webpack_require__(/*! ./core */ "../../node_modules/yaml/browser/dist/tags/core.js"));\n\nvar _failsafe = _interopRequireDefault(__webpack_require__(/*! ./failsafe */ "../../node_modules/yaml/browser/dist/tags/failsafe/index.js"));\n\nvar _json = _interopRequireDefault(__webpack_require__(/*! ./json */ "../../node_modules/yaml/browser/dist/tags/json.js"));\n\nvar _yaml = _interopRequireDefault(__webpack_require__(/*! ./yaml-1.1 */ "../../node_modules/yaml/browser/dist/tags/yaml-1.1/index.js"));\n\nvar _map = _interopRequireDefault(__webpack_require__(/*! ./failsafe/map */ "../../node_modules/yaml/browser/dist/tags/failsafe/map.js"));\n\nvar _seq = _interopRequireDefault(__webpack_require__(/*! ./failsafe/seq */ "../../node_modules/yaml/browser/dist/tags/failsafe/seq.js"));\n\nvar _binary = _interopRequireDefault(__webpack_require__(/*! ./yaml-1.1/binary */ "../../node_modules/yaml/browser/dist/tags/yaml-1.1/binary.js"));\n\nvar _omap = _interopRequireDefault(__webpack_require__(/*! ./yaml-1.1/omap */ "../../node_modules/yaml/browser/dist/tags/yaml-1.1/omap.js"));\n\nvar _pairs = _interopRequireDefault(__webpack_require__(/*! ./yaml-1.1/pairs */ "../../node_modules/yaml/browser/dist/tags/yaml-1.1/pairs.js"));\n\nvar _set = _interopRequireDefault(__webpack_require__(/*! ./yaml-1.1/set */ "../../node_modules/yaml/browser/dist/tags/yaml-1.1/set.js"));\n\nvar _timestamp = __webpack_require__(/*! ./yaml-1.1/timestamp */ "../../node_modules/yaml/browser/dist/tags/yaml-1.1/timestamp.js");\n\nvar schemas = {\n  core: _core.default,\n  failsafe: _failsafe.default,\n  json: _json.default,\n  yaml11: _yaml.default\n};\nexports.schemas = schemas;\nvar tags = {\n  binary: _binary.default,\n  floatTime: _timestamp.floatTime,\n  intTime: _timestamp.intTime,\n  map: _map.default,\n  omap: _omap.default,\n  pairs: _pairs.default,\n  seq: _seq.default,\n  set: _set.default,\n  timestamp: _timestamp.timestamp\n};\nexports.tags = tags;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/tags/index.js?')},"../../node_modules/yaml/browser/dist/tags/json.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"../../node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _map = _interopRequireDefault(__webpack_require__(/*! ./failsafe/map */ \"../../node_modules/yaml/browser/dist/tags/failsafe/map.js\"));\n\nvar _seq = _interopRequireDefault(__webpack_require__(/*! ./failsafe/seq */ \"../../node_modules/yaml/browser/dist/tags/failsafe/seq.js\"));\n\nvar _Scalar = _interopRequireDefault(__webpack_require__(/*! ../schema/Scalar */ \"../../node_modules/yaml/browser/dist/schema/Scalar.js\"));\n\nvar _string = __webpack_require__(/*! ./failsafe/string */ \"../../node_modules/yaml/browser/dist/tags/failsafe/string.js\");\n\nvar schema = [_map.default, _seq.default, {\n  identify: function identify(value) {\n    return typeof value === 'string';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: _string.resolveString,\n  stringify: function stringify(value) {\n    return JSON.stringify(value);\n  }\n}, {\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new _Scalar.default(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^null$/,\n  resolve: function resolve() {\n    return null;\n  },\n  stringify: function stringify(value) {\n    return JSON.stringify(value);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^true$/,\n  resolve: function resolve() {\n    return true;\n  },\n  stringify: function stringify(value) {\n    return JSON.stringify(value);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^false$/,\n  resolve: function resolve() {\n    return false;\n  },\n  stringify: function stringify(value) {\n    return JSON.stringify(value);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^-?(?:0|[1-9][0-9]*)$/,\n  resolve: function resolve(str) {\n    return parseInt(str, 10);\n  },\n  stringify: function stringify(value) {\n    return JSON.stringify(value);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n  resolve: function resolve(str) {\n    return parseFloat(str);\n  },\n  stringify: function stringify(value) {\n    return JSON.stringify(value);\n  }\n}];\n\nschema.scalarFallback = function (str) {\n  throw new SyntaxError(\"Unresolved plain scalar \".concat(JSON.stringify(str)));\n};\n\nvar _default = schema;\nexports.default = _default;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/tags/json.js?")},"../../node_modules/yaml/browser/dist/tags/options.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.strOptions = exports.nullOptions = exports.boolOptions = exports.binaryOptions = void 0;\n\nvar _constants = __webpack_require__(/*! ../constants */ \"../../node_modules/yaml/browser/dist/constants.js\");\n\nvar binaryOptions = {\n  defaultType: _constants.Type.BLOCK_LITERAL,\n  lineWidth: 76\n};\nexports.binaryOptions = binaryOptions;\nvar boolOptions = {\n  trueStr: 'true',\n  falseStr: 'false'\n};\nexports.boolOptions = boolOptions;\nvar nullOptions = {\n  nullStr: 'null'\n};\nexports.nullOptions = nullOptions;\nvar strOptions = {\n  defaultType: _constants.Type.PLAIN,\n  doubleQuoted: {\n    jsonEncoding: false,\n    minMultiLineLength: 40\n  },\n  fold: {\n    lineWidth: 80,\n    minContentWidth: 20\n  }\n};\nexports.strOptions = strOptions;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/tags/options.js?")},"../../node_modules/yaml/browser/dist/tags/yaml-1.1/binary.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = __webpack_require__(/*! ../../constants */ \"../../node_modules/yaml/browser/dist/constants.js\");\n\nvar _errors = __webpack_require__(/*! ../../errors */ \"../../node_modules/yaml/browser/dist/errors.js\");\n\nvar _stringify = __webpack_require__(/*! ../../stringify */ \"../../node_modules/yaml/browser/dist/stringify.js\");\n\nvar _string = __webpack_require__(/*! ../failsafe/string */ \"../../node_modules/yaml/browser/dist/tags/failsafe/string.js\");\n\nvar _options = __webpack_require__(/*! ../options */ \"../../node_modules/yaml/browser/dist/tags/options.js\");\n\n/* global atob, btoa, Buffer */\nvar _default = {\n  identify: function identify(value) {\n    return value instanceof Uint8Array;\n  },\n  // Buffer inherits from Uint8Array\n  default: false,\n  tag: 'tag:yaml.org,2002:binary',\n\n  /**\n   * Returns a Buffer in node and an Uint8Array in browsers\n   *\n   * To use the resulting buffer as an image, you'll want to do something like:\n   *\n   *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n   *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n   */\n  resolve: function resolve(doc, node) {\n    if (typeof Buffer === 'function') {\n      var src = (0, _string.resolveString)(doc, node);\n      return Buffer.from(src, 'base64');\n    } else if (typeof atob === 'function') {\n      var _src = atob((0, _string.resolveString)(doc, node));\n\n      var buffer = new Uint8Array(_src.length);\n\n      for (var i = 0; i < _src.length; ++i) {\n        buffer[i] = _src.charCodeAt(i);\n      }\n\n      return buffer;\n    } else {\n      doc.errors.push(new _errors.YAMLReferenceError(node, 'This environment does not support reading binary tags; either Buffer or atob is required'));\n      return null;\n    }\n  },\n  options: _options.binaryOptions,\n  stringify: function stringify(_ref, ctx, onComment, onChompKeep) {\n    var comment = _ref.comment,\n        type = _ref.type,\n        value = _ref.value;\n    var src;\n\n    if (typeof Buffer === 'function') {\n      src = value instanceof Buffer ? value.toString('base64') : Buffer.from(value.buffer).toString('base64');\n    } else if (typeof btoa === 'function') {\n      var s = '';\n\n      for (var i = 0; i < value.length; ++i) {\n        s += String.fromCharCode(value[i]);\n      }\n\n      src = btoa(s);\n    } else {\n      throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n    }\n\n    if (!type) type = _options.binaryOptions.defaultType;\n\n    if (type === _constants.Type.QUOTE_DOUBLE) {\n      value = src;\n    } else {\n      var lineWidth = _options.binaryOptions.lineWidth;\n      var n = Math.ceil(src.length / lineWidth);\n      var lines = new Array(n);\n\n      for (var _i = 0, o = 0; _i < n; ++_i, o += lineWidth) {\n        lines[_i] = src.substr(o, lineWidth);\n      }\n\n      value = lines.join(type === _constants.Type.BLOCK_LITERAL ? '\\n' : ' ');\n    }\n\n    return (0, _stringify.stringifyString)({\n      comment: comment,\n      type: type,\n      value: value\n    }, ctx, onComment, onChompKeep);\n  }\n};\nexports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node-libs-browser/node_modules/buffer/index.js */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/tags/yaml-1.1/binary.js?")},"../../node_modules/yaml/browser/dist/tags/yaml-1.1/index.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"../../node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Scalar = _interopRequireDefault(__webpack_require__(/*! ../../schema/Scalar */ \"../../node_modules/yaml/browser/dist/schema/Scalar.js\"));\n\nvar _stringify = __webpack_require__(/*! ../../stringify */ \"../../node_modules/yaml/browser/dist/stringify.js\");\n\nvar _failsafe = _interopRequireDefault(__webpack_require__(/*! ../failsafe */ \"../../node_modules/yaml/browser/dist/tags/failsafe/index.js\"));\n\nvar _options = __webpack_require__(/*! ../options */ \"../../node_modules/yaml/browser/dist/tags/options.js\");\n\nvar _binary = _interopRequireDefault(__webpack_require__(/*! ./binary */ \"../../node_modules/yaml/browser/dist/tags/yaml-1.1/binary.js\"));\n\nvar _omap = _interopRequireDefault(__webpack_require__(/*! ./omap */ \"../../node_modules/yaml/browser/dist/tags/yaml-1.1/omap.js\"));\n\nvar _pairs = _interopRequireDefault(__webpack_require__(/*! ./pairs */ \"../../node_modules/yaml/browser/dist/tags/yaml-1.1/pairs.js\"));\n\nvar _set = _interopRequireDefault(__webpack_require__(/*! ./set */ \"../../node_modules/yaml/browser/dist/tags/yaml-1.1/set.js\"));\n\nvar _timestamp = __webpack_require__(/*! ./timestamp */ \"../../node_modules/yaml/browser/dist/tags/yaml-1.1/timestamp.js\");\n\nvar _default = _failsafe.default.concat([{\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new _Scalar.default(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^(?:~|[Nn]ull|NULL)?$/,\n  resolve: function resolve() {\n    return null;\n  },\n  options: _options.nullOptions,\n  stringify: function stringify() {\n    return _options.nullOptions.nullStr;\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n  resolve: function resolve() {\n    return true;\n  },\n  options: _options.boolOptions,\n  stringify: function stringify(_ref) {\n    var value = _ref.value;\n    return value ? _options.boolOptions.trueStr : _options.boolOptions.falseStr;\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n  resolve: function resolve() {\n    return false;\n  },\n  options: _options.boolOptions,\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return value ? _options.boolOptions.trueStr : _options.boolOptions.falseStr;\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'BIN',\n  test: /^0b([0-1_]+)$/,\n  resolve: function resolve(str, bin) {\n    return parseInt(bin.replace(/_/g, ''), 2);\n  },\n  stringify: function stringify(_ref3) {\n    var value = _ref3.value;\n    return '0b' + value.toString(2);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^[-+]?0([0-7_]+)$/,\n  resolve: function resolve(str, oct) {\n    return parseInt(oct.replace(/_/g, ''), 8);\n  },\n  stringify: function stringify(_ref4) {\n    var value = _ref4.value;\n    return (value < 0 ? '-0' : '0') + value.toString(8);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^[-+]?[0-9][0-9_]*$/,\n  resolve: function resolve(str) {\n    return parseInt(str.replace(/_/g, ''), 10);\n  },\n  stringify: _stringify.stringifyNumber\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^0x([0-9a-fA-F_]+)$/,\n  resolve: function resolve(str, hex) {\n    return parseInt(hex.replace(/_/g, ''), 16);\n  },\n  stringify: function stringify(_ref5) {\n    var value = _ref5.value;\n    return (value < 0 ? '-0x' : '0x') + value.toString(16);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.inf|(\\.nan))$/i,\n  resolve: function resolve(str, nan) {\n    return nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n  },\n  stringify: _stringify.stringifyNumber\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?([0-9][0-9_]*)?(\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return parseFloat(str.replace(/_/g, ''));\n  },\n  stringify: function stringify(_ref6) {\n    var value = _ref6.value;\n    return Number(value).toExponential();\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:[0-9][0-9_]*)?\\.([0-9_]*)$/,\n  resolve: function resolve(str, frac) {\n    var node = new _Scalar.default(parseFloat(str.replace(/_/g, '')));\n\n    if (frac) {\n      var f = frac.replace(/_/g, '');\n      if (f[f.length - 1] === '0') node.minFractionDigits = f.length;\n    }\n\n    return node;\n  },\n  stringify: _stringify.stringifyNumber\n}], _binary.default, _omap.default, _pairs.default, _set.default, _timestamp.intTime, _timestamp.floatTime, _timestamp.timestamp);\n\nexports.default = _default;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/tags/yaml-1.1/index.js?")},"../../node_modules/yaml/browser/dist/tags/yaml-1.1/omap.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = exports.YAMLOMap = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../../node_modules/@babel/runtime/helpers/assertThisInitialized.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../../node_modules/@babel/runtime/helpers/defineProperty.js"));\n\nvar _errors = __webpack_require__(/*! ../../errors */ "../../node_modules/yaml/browser/dist/errors.js");\n\nvar _toJSON2 = _interopRequireDefault(__webpack_require__(/*! ../../toJSON */ "../../node_modules/yaml/browser/dist/toJSON.js"));\n\nvar _Map = _interopRequireDefault(__webpack_require__(/*! ../../schema/Map */ "../../node_modules/yaml/browser/dist/schema/Map.js"));\n\nvar _Pair = _interopRequireDefault(__webpack_require__(/*! ../../schema/Pair */ "../../node_modules/yaml/browser/dist/schema/Pair.js"));\n\nvar _Scalar = _interopRequireDefault(__webpack_require__(/*! ../../schema/Scalar */ "../../node_modules/yaml/browser/dist/schema/Scalar.js"));\n\nvar _Seq = _interopRequireDefault(__webpack_require__(/*! ../../schema/Seq */ "../../node_modules/yaml/browser/dist/schema/Seq.js"));\n\nvar _pairs = __webpack_require__(/*! ./pairs */ "../../node_modules/yaml/browser/dist/tags/yaml-1.1/pairs.js");\n\nvar YAMLOMap =\n/*#__PURE__*/\nfunction (_YAMLSeq) {\n  (0, _inherits2.default)(YAMLOMap, _YAMLSeq);\n\n  function YAMLOMap() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, YAMLOMap);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLOMap).call(this));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "add", _Map.default.prototype.add.bind((0, _assertThisInitialized2.default)(_this)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "delete", _Map.default.prototype.delete.bind((0, _assertThisInitialized2.default)(_this)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "get", _Map.default.prototype.get.bind((0, _assertThisInitialized2.default)(_this)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "has", _Map.default.prototype.has.bind((0, _assertThisInitialized2.default)(_this)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "set", _Map.default.prototype.set.bind((0, _assertThisInitialized2.default)(_this)));\n    _this.tag = YAMLOMap.tag;\n    return _this;\n  }\n\n  (0, _createClass2.default)(YAMLOMap, [{\n    key: "toJSON",\n    value: function toJSON(_, ctx) {\n      var map = new Map();\n      if (ctx && ctx.onCreate) ctx.onCreate(map);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var pair = _step.value;\n          var key = void 0,\n              value = void 0;\n\n          if (pair instanceof _Pair.default) {\n            key = (0, _toJSON2.default)(pair.key, \'\', ctx);\n            value = (0, _toJSON2.default)(pair.value, key, ctx);\n          } else {\n            key = (0, _toJSON2.default)(pair, \'\', ctx);\n          }\n\n          if (map.has(key)) throw new Error(\'Ordered maps must not include duplicate keys\');\n          map.set(key, value);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return map;\n    }\n  }]);\n  return YAMLOMap;\n}(_Seq.default);\n\nexports.YAMLOMap = YAMLOMap;\n(0, _defineProperty2.default)(YAMLOMap, "tag", \'tag:yaml.org,2002:omap\');\n\nfunction parseOMap(doc, cst) {\n  var pairs = (0, _pairs.parsePairs)(doc, cst);\n  var seenKeys = [];\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = pairs.items[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var key = _step2.value.key;\n\n      if (key instanceof _Scalar.default) {\n        if (seenKeys.includes(key.value)) {\n          var msg = \'Ordered maps must not include duplicate keys\';\n          throw new _errors.YAMLSemanticError(cst, msg);\n        } else {\n          seenKeys.push(key.value);\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return Object.assign(new YAMLOMap(), pairs);\n}\n\nfunction createOMap(schema, iterable, ctx) {\n  var pairs = (0, _pairs.createPairs)(schema, iterable, ctx);\n  var omap = new YAMLOMap();\n  omap.items = pairs.items;\n  return omap;\n}\n\nvar _default = {\n  identify: function identify(value) {\n    return value instanceof Map;\n  },\n  nodeClass: YAMLOMap,\n  default: false,\n  tag: \'tag:yaml.org,2002:omap\',\n  resolve: parseOMap,\n  createNode: createOMap\n};\nexports.default = _default;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/tags/yaml-1.1/omap.js?')},"../../node_modules/yaml/browser/dist/tags/yaml-1.1/pairs.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.parsePairs = parsePairs;\nexports.createPairs = createPairs;\nexports.default = void 0;\n\nvar _errors = __webpack_require__(/*! ../../errors */ "../../node_modules/yaml/browser/dist/errors.js");\n\nvar _Map = _interopRequireDefault(__webpack_require__(/*! ../../schema/Map */ "../../node_modules/yaml/browser/dist/schema/Map.js"));\n\nvar _Pair = _interopRequireDefault(__webpack_require__(/*! ../../schema/Pair */ "../../node_modules/yaml/browser/dist/schema/Pair.js"));\n\nvar _parseSeq = _interopRequireDefault(__webpack_require__(/*! ../../schema/parseSeq */ "../../node_modules/yaml/browser/dist/schema/parseSeq.js"));\n\nvar _Seq = _interopRequireDefault(__webpack_require__(/*! ../../schema/Seq */ "../../node_modules/yaml/browser/dist/schema/Seq.js"));\n\nfunction parsePairs(doc, cst) {\n  var seq = (0, _parseSeq.default)(doc, cst);\n\n  for (var i = 0; i < seq.items.length; ++i) {\n    var item = seq.items[i];\n    if (item instanceof _Pair.default) continue;else if (item instanceof _Map.default) {\n      if (item.items.length > 1) {\n        var msg = \'Each pair must have its own sequence indicator\';\n        throw new _errors.YAMLSemanticError(cst, msg);\n      }\n\n      var pair = item.items[0] || new _Pair.default();\n      if (item.commentBefore) pair.commentBefore = pair.commentBefore ? "".concat(item.commentBefore, "\\n").concat(pair.commentBefore) : item.commentBefore;\n      if (item.comment) pair.comment = pair.comment ? "".concat(item.comment, "\\n").concat(pair.comment) : item.comment;\n      item = pair;\n    }\n    seq.items[i] = item instanceof _Pair.default ? item : new _Pair.default(item);\n  }\n\n  return seq;\n}\n\nfunction createPairs(schema, iterable, ctx) {\n  var pairs = new _Seq.default();\n  pairs.tag = \'tag:yaml.org,2002:pairs\';\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var it = _step.value;\n      var key = void 0,\n          value = void 0;\n\n      if (Array.isArray(it)) {\n        if (it.length === 2) {\n          key = it[0];\n          value = it[1];\n        } else throw new TypeError("Expected [key, value] tuple: ".concat(it));\n      } else if (it && it instanceof Object) {\n        var keys = Object.keys(it);\n\n        if (keys.length === 1) {\n          key = keys[0];\n          value = it[key];\n        } else throw new TypeError("Expected { key: value } tuple: ".concat(it));\n      } else {\n        key = it;\n      }\n\n      var pair = schema.createPair(key, value, ctx);\n      pairs.items.push(pair);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return pairs;\n}\n\nvar _default = {\n  default: false,\n  tag: \'tag:yaml.org,2002:pairs\',\n  resolve: parsePairs,\n  createNode: createPairs\n};\nexports.default = _default;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/tags/yaml-1.1/pairs.js?')},"../../node_modules/yaml/browser/dist/tags/yaml-1.1/set.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "../../node_modules/@babel/runtime/helpers/interopRequireWildcard.js");\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = exports.YAMLSet = void 0;\n\nvar _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "../../node_modules/@babel/runtime/helpers/typeof.js"));\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../../node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../../node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ "../../node_modules/@babel/runtime/helpers/get.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../../node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../../node_modules/@babel/runtime/helpers/defineProperty.js"));\n\nvar _errors = __webpack_require__(/*! ../../errors */ "../../node_modules/yaml/browser/dist/errors.js");\n\nvar _Map = _interopRequireWildcard(__webpack_require__(/*! ../../schema/Map */ "../../node_modules/yaml/browser/dist/schema/Map.js"));\n\nvar _Pair = _interopRequireDefault(__webpack_require__(/*! ../../schema/Pair */ "../../node_modules/yaml/browser/dist/schema/Pair.js"));\n\nvar _parseMap = _interopRequireDefault(__webpack_require__(/*! ../../schema/parseMap */ "../../node_modules/yaml/browser/dist/schema/parseMap.js"));\n\nvar _Scalar = _interopRequireDefault(__webpack_require__(/*! ../../schema/Scalar */ "../../node_modules/yaml/browser/dist/schema/Scalar.js"));\n\nvar YAMLSet =\n/*#__PURE__*/\nfunction (_YAMLMap) {\n  (0, _inherits2.default)(YAMLSet, _YAMLMap);\n\n  function YAMLSet() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, YAMLSet);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLSet).call(this));\n    _this.tag = YAMLSet.tag;\n    return _this;\n  }\n\n  (0, _createClass2.default)(YAMLSet, [{\n    key: "add",\n    value: function add(key) {\n      var pair = key instanceof _Pair.default ? key : new _Pair.default(key);\n      var prev = (0, _Map.findPair)(this.items, pair.key);\n      if (!prev) this.items.push(pair);\n    }\n  }, {\n    key: "get",\n    value: function get(key, keepPair) {\n      var pair = (0, _Map.findPair)(this.items, key);\n      return !keepPair && pair instanceof _Pair.default ? pair.key instanceof _Scalar.default ? pair.key.value : pair.key : pair;\n    }\n  }, {\n    key: "set",\n    value: function set(key, value) {\n      if (typeof value !== \'boolean\') throw new Error("Expected boolean value for set(key, value) in a YAML set, not ".concat((0, _typeof2.default)(value)));\n      var prev = (0, _Map.findPair)(this.items, key);\n\n      if (prev && !value) {\n        this.items.splice(this.items.indexOf(prev), 1);\n      } else if (!prev && value) {\n        this.items.push(new _Pair.default(key));\n      }\n    }\n  }, {\n    key: "toJSON",\n    value: function toJSON(_, ctx) {\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(YAMLSet.prototype), "toJSON", this).call(this, _, ctx, Set);\n    }\n  }, {\n    key: "toString",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx) return JSON.stringify(this);\n      if (this.hasAllNullValues()) return (0, _get2.default)((0, _getPrototypeOf2.default)(YAMLSet.prototype), "toString", this).call(this, ctx, onComment, onChompKeep);else throw new Error(\'Set items must all have null values\');\n    }\n  }]);\n  return YAMLSet;\n}(_Map.default);\n\nexports.YAMLSet = YAMLSet;\n(0, _defineProperty2.default)(YAMLSet, "tag", \'tag:yaml.org,2002:set\');\n\nfunction parseSet(doc, cst) {\n  var map = (0, _parseMap.default)(doc, cst);\n  if (!map.hasAllNullValues()) throw new _errors.YAMLSemanticError(cst, \'Set items must all have null values\');\n  return Object.assign(new YAMLSet(), map);\n}\n\nfunction createSet(schema, iterable, ctx) {\n  var set = new YAMLSet();\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n      set.items.push(schema.createPair(value, null, ctx));\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return set;\n}\n\nvar _default = {\n  identify: function identify(value) {\n    return value instanceof Set;\n  },\n  nodeClass: YAMLSet,\n  default: false,\n  tag: \'tag:yaml.org,2002:set\',\n  resolve: parseSet,\n  createNode: createSet\n};\nexports.default = _default;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/tags/yaml-1.1/set.js?')},"../../node_modules/yaml/browser/dist/tags/yaml-1.1/timestamp.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.timestamp = exports.floatTime = exports.intTime = void 0;\n\nvar _stringify = __webpack_require__(/*! ../../stringify */ \"../../node_modules/yaml/browser/dist/stringify.js\");\n\nvar parseSexagesimal = function parseSexagesimal(sign, parts) {\n  var n = parts.split(':').reduce(function (n, p) {\n    return n * 60 + Number(p);\n  }, 0);\n  return sign === '-' ? -n : n;\n}; // hhhh:mm:ss.sss\n\n\nvar stringifySexagesimal = function stringifySexagesimal(_ref) {\n  var value = _ref.value;\n  if (isNaN(value) || !isFinite(value)) return (0, _stringify.stringifyNumber)(value);\n  var sign = '';\n\n  if (value < 0) {\n    sign = '-';\n    value = Math.abs(value);\n  }\n\n  var parts = [value % 60]; // seconds, including ms\n\n  if (value < 60) {\n    parts.unshift(0); // at least one : is required\n  } else {\n    value = Math.round((value - parts[0]) / 60);\n    parts.unshift(value % 60); // minutes\n\n    if (value >= 60) {\n      value = Math.round((value - parts[0]) / 60);\n      parts.unshift(value); // hours\n    }\n  }\n\n  return sign + parts.map(function (n) {\n    return n < 10 ? '0' + String(n) : String(n);\n  }).join(':').replace(/000000\\d*$/, '') // % 60 may introduce error\n  ;\n};\n\nvar intTime = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'TIME',\n  test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+)$/,\n  resolve: function resolve(str, sign, parts) {\n    return parseSexagesimal(sign, parts.replace(/_/g, ''));\n  },\n  stringify: stringifySexagesimal\n};\nexports.intTime = intTime;\nvar floatTime = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'TIME',\n  test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*)$/,\n  resolve: function resolve(str, sign, parts) {\n    return parseSexagesimal(sign, parts.replace(/_/g, ''));\n  },\n  stringify: stringifySexagesimal\n};\nexports.floatTime = floatTime;\nvar timestamp = {\n  identify: function identify(value) {\n    return value instanceof Date;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:timestamp',\n  // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n  // may be omitted altogether, resulting in a date format. In such a case, the time part is\n  // assumed to be 00:00:00Z (start of day, UTC).\n  test: RegExp('^(?:' + '([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n  '(?:(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n  '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n  '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n  ')?' + ')$'),\n  resolve: function resolve(str, year, month, day, hour, minute, second, millisec, tz) {\n    if (millisec) millisec = (millisec + '00').substr(1, 3);\n    var date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec || 0);\n\n    if (tz && tz !== 'Z') {\n      var d = parseSexagesimal(tz[0], tz.slice(1));\n      if (Math.abs(d) < 30) d *= 60;\n      date -= 60000 * d;\n    }\n\n    return new Date(date);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '');\n  }\n};\nexports.timestamp = timestamp;\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/tags/yaml-1.1/timestamp.js?")},"../../node_modules/yaml/browser/dist/toJSON.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toJSON;\n\nfunction toJSON(value, arg, ctx) {\n  if (Array.isArray(value)) return value.map(function (v, i) {\n    return toJSON(v, String(i), ctx);\n  });\n\n  if (value && typeof value.toJSON === 'function') {\n    var anchor = ctx && ctx.anchors && ctx.anchors.find(function (a) {\n      return a.node === value;\n    });\n    if (anchor) ctx.onCreate = function (res) {\n      anchor.res = res;\n      delete ctx.onCreate;\n    };\n    var res = value.toJSON(arg, ctx);\n    if (anchor && ctx.onCreate) ctx.onCreate(res);\n    return res;\n  }\n\n  return value;\n}\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/toJSON.js?")},"../../node_modules/yaml/browser/dist/warnings.js":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.warn = warn;\nexports.warnFileDeprecation = warnFileDeprecation;\nexports.warnOptionDeprecation = warnOptionDeprecation;\n\n/* global global, console */\nfunction warn(warning, type) {\n  if (global && global._YAML_SILENCE_WARNINGS) return;\n\n  var _ref = global && global.process,\n      emitWarning = _ref.emitWarning; // This will throw in Jest if `warning` is an Error instance due to\n  // https://github.com/facebook/jest/issues/2549\n\n\n  if (emitWarning) emitWarning(warning, type);else {\n    // eslint-disable-next-line no-console\n    console.warn(type ? "".concat(type, ": ").concat(warning) : warning);\n  }\n}\n\nfunction warnFileDeprecation(filename) {\n  if (global && global._YAML_SILENCE_DEPRECATION_WARNINGS) return;\n  var path = filename.replace(/.*yaml[/\\\\]/i, \'\').replace(/\\.js$/, \'\').replace(/\\\\/g, \'/\');\n  warn("The endpoint \'yaml/".concat(path, "\' will be removed in a future release."), \'DeprecationWarning\');\n}\n\nvar warned = {};\n\nfunction warnOptionDeprecation(name, alternative) {\n  if (global && global._YAML_SILENCE_DEPRECATION_WARNINGS) return;\n  if (warned[name]) return;\n  warned[name] = true;\n  var msg = "The option \'".concat(name, "\' will be removed in a future release");\n  msg += alternative ? ", use \'".concat(alternative, "\' instead.") : \'.\';\n  warn(msg, \'DeprecationWarning\');\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "../../node_modules/webpack/buildin/global.js")))\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/dist/warnings.js?')},"../../node_modules/yaml/browser/index.js":function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__(/*! ./dist */ "../../node_modules/yaml/browser/dist/index.js").default\n\n\n//# sourceURL=webpack:////home/naver/git/meeco/js-sdk/node_modules/yaml/browser/index.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ActivityApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActivityApi", function() { return ActivityApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass ActivityApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Retrieves activity feed for the current user. The results are sorted in reverse chronological order (ie most recent first) and paginated, with both items per page and the page to display being parameterized (passed in query string).\n     * Retrieve activities for feed\n     */\n    activitiesGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/activities`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ActivitiesResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Retrieves activity feed for the current user. The results are sorted in reverse chronological order (ie most recent first) and paginated, with both items per page and the page to display being parameterized (passed in query string).\n     * Retrieve activities for feed\n     */\n    activitiesGet(nextPageAfter, perPage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.activitiesGetRaw({ nextPageAfter: nextPageAfter, perPage: perPage });\n            return yield response.value();\n        });\n    }\n    /**\n     * Retrieves activity for the current user\n     * Retrieve activity\n     */\n    activitiesIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling activitiesIdGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/activities/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ActivityFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Retrieves activity for the current user\n     * Retrieve activity\n     */\n    activitiesIdGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.activitiesIdGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ActivityApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/AdmissionTokenApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenApi", function() { return AdmissionTokenApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass AdmissionTokenApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Creates a one-time admission token for account creation in the database, and returns the token to the user. Besides its `id`, it is initialized with a unique `token_value` string and a boolean `used` field with the default value `false`.\n     * Creates an admission token\n     */\n    admissionTokensPostRaw() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // providerApiKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            const response = yield this.request({\n                path: `/admission_tokens`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["AdmissionTokenResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Creates a one-time admission token for account creation in the database, and returns the token to the user. Besides its `id`, it is initialized with a unique `token_value` string and a boolean `used` field with the default value `false`.\n     * Creates an admission token\n     */\n    admissionTokensPost() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.admissionTokensPostRaw();\n            return yield response.value();\n        });\n    }\n    /**\n     * Searches for an admission token record by its `token_value` field and returns  all the token\\\'s fields to the user.\n     * Returns an admission token\n     */\n    admissionTokensTokenValueGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.tokenValue === null || requestParameters.tokenValue === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'tokenValue\', \'Required parameter requestParameters.tokenValue was null or undefined when calling admissionTokensTokenValueGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // providerApiKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            const response = yield this.request({\n                path: `/admission_tokens/{token_value}`.replace(`{${"token_value"}}`, encodeURIComponent(String(requestParameters.tokenValue))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["AdmissionTokenResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Searches for an admission token record by its `token_value` field and returns  all the token\\\'s fields to the user.\n     * Returns an admission token\n     */\n    admissionTokensTokenValueGet(tokenValue) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.admissionTokensTokenValueGetRaw({ tokenValue: tokenValue });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/AdmissionTokenApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/AlertsApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertsApi", function() { return AlertsApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass AlertsApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Returns alerts information for the current user\n     */\n    alertsGetRaw() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/alerts`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["AlertsResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Returns alerts information for the current user\n     */\n    alertsGet() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.alertsGetRaw();\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/AlertsApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/AssociationsApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AssociationsApi", function() { return AssociationsApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass AssociationsApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Updates associations\n     */\n    itemsItemIdAssociationsIdPutRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.itemId === null || requestParameters.itemId === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'itemId\', \'Required parameter requestParameters.itemId was null or undefined when calling itemsItemIdAssociationsIdPut.\');\n            }\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling itemsItemIdAssociationsIdPut.\');\n            }\n            if (requestParameters.associationParams === null || requestParameters.associationParams === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'associationParams\', \'Required parameter requestParameters.associationParams was null or undefined when calling itemsItemIdAssociationsIdPut.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/items/{item_id}/associations/{id}`.replace(`{${"item_id"}}`, encodeURIComponent(String(requestParameters.itemId))).replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'PUT\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PutItemsAssociationsRequestToJSON"])(requestParameters.associationParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["AssociationResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Updates associations\n     */\n    itemsItemIdAssociationsIdPut(itemId, id, associationParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.itemsItemIdAssociationsIdPutRaw({ itemId: itemId, id: id, associationParams: associationParams });\n            return yield response.value();\n        });\n    }\n    /**\n     * Creates associations\n     */\n    itemsItemIdAssociationsPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.itemId === null || requestParameters.itemId === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'itemId\', \'Required parameter requestParameters.itemId was null or undefined when calling itemsItemIdAssociationsPost.\');\n            }\n            if (requestParameters.associationParams === null || requestParameters.associationParams === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'associationParams\', \'Required parameter requestParameters.associationParams was null or undefined when calling itemsItemIdAssociationsPost.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/items/{item_id}/associations`.replace(`{${"item_id"}}`, encodeURIComponent(String(requestParameters.itemId))),\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PostItemsAssociationsRequestToJSON"])(requestParameters.associationParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["AssociationResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Creates associations\n     */\n    itemsItemIdAssociationsPost(itemId, associationParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.itemsItemIdAssociationsPostRaw({ itemId: itemId, associationParams: associationParams });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/AssociationsApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/AttachmentApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttachmentApi", function() { return AttachmentApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass AttachmentApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * List attachments belonging to the current user.\n     * List attachments\n     */\n    attachmentsGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/attachments`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["AttachmentsResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * List attachments belonging to the current user.\n     * List attachments\n     */\n    attachmentsGet(nextPageAfter, perPage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.attachmentsGetRaw({ nextPageAfter: nextPageAfter, perPage: perPage });\n            return yield response.value();\n        });\n    }\n    /**\n     * Select an attachment by `id` and delete it.\n     * Delete attachment\n     */\n    attachmentsIdDeleteRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling attachmentsIdDelete.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/attachments/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Select an attachment by `id` and delete it.\n     * Delete attachment\n     */\n    attachmentsIdDelete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.attachmentsIdDeleteRaw({ id: id });\n        });\n    }\n    /**\n     * Select an attachment by `id` and download it.\n     * Download attachment\n     */\n    attachmentsIdDownloadGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling attachmentsIdDownloadGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/attachments/{id}/download`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["BlobApiResponse"](response);\n        });\n    }\n    /**\n     * Select an attachment by `id` and download it.\n     * Download attachment\n     */\n    attachmentsIdDownloadGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.attachmentsIdDownloadGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Select an attachment by `id` and view its metadata (without retrieving the binary data).\n     * View attachment\n     */\n    attachmentsIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling attachmentsIdGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/attachments/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["AttachmentResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Select an attachment by `id` and view its metadata (without retrieving the binary data).\n     * View attachment\n     */\n    attachmentsIdGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.attachmentsIdGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Creates an attachment record, which represents a binary file. The file record can be attached to an Attachable type (eg Slot) via a BinaryAttachment record.\n     * Upload attachment\n     */\n    attachmentsPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.attachmentFile === null || requestParameters.attachmentFile === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'attachmentFile\', \'Required parameter requestParameters.attachmentFile was null or undefined when calling attachmentsPost.\');\n            }\n            if (requestParameters.attachmentFilename === null || requestParameters.attachmentFilename === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'attachmentFilename\', \'Required parameter requestParameters.attachmentFilename was null or undefined when calling attachmentsPost.\');\n            }\n            if (requestParameters.attachmentContentType === null || requestParameters.attachmentContentType === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'attachmentContentType\', \'Required parameter requestParameters.attachmentContentType was null or undefined when calling attachmentsPost.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const consumes = [\n                { contentType: \'multipart/form-data\' },\n            ];\n            // @ts-ignore: canConsumeForm may be unused\n            const canConsumeForm = _runtime__WEBPACK_IMPORTED_MODULE_0__["canConsumeForm"](consumes);\n            let formParams;\n            let useForm = false;\n            // use FormData to transmit files using content-type "multipart/form-data"\n            useForm = canConsumeForm;\n            if (useForm) {\n                formParams = new FormData();\n            }\n            else {\n                formParams = new URLSearchParams();\n            }\n            if (requestParameters.attachmentFile !== undefined) {\n                formParams.append(\'attachment[file]\', requestParameters.attachmentFile);\n            }\n            if (requestParameters.attachmentFilename !== undefined) {\n                formParams.append(\'attachment[filename]\', requestParameters.attachmentFilename);\n            }\n            if (requestParameters.attachmentContentType !== undefined) {\n                formParams.append(\'attachment[content_type]\', requestParameters.attachmentContentType);\n            }\n            const response = yield this.request({\n                path: `/attachments`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: formParams,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["AttachmentResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Creates an attachment record, which represents a binary file. The file record can be attached to an Attachable type (eg Slot) via a BinaryAttachment record.\n     * Upload attachment\n     */\n    attachmentsPost(attachmentFile, attachmentFilename, attachmentContentType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.attachmentsPostRaw({ attachmentFile: attachmentFile, attachmentFilename: attachmentFilename, attachmentContentType: attachmentContentType });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/AttachmentApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ClassificationNodeApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeApi", function() { return ClassificationNodeApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass ClassificationNodeApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Fetches classification nodes. Can fetch classification nodes belonging toa certain scheme. Can filter classification nodes by a LIKE expression on the nameFetches global nodes and nodes created by the current user excluding classification nodescreated by other users.\n     * Returns a list of classification nodes\n     */\n    classificationNodesGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            if (requestParameters.schemeName !== undefined) {\n                queryParameters[\'scheme_name\'] = requestParameters.schemeName;\n            }\n            if (requestParameters.name !== undefined) {\n                queryParameters[\'name\'] = requestParameters.name;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/classification_nodes`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ClassificationNodesResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Fetches classification nodes. Can fetch classification nodes belonging toa certain scheme. Can filter classification nodes by a LIKE expression on the nameFetches global nodes and nodes created by the current user excluding classification nodescreated by other users.\n     * Returns a list of classification nodes\n     */\n    classificationNodesGet(nextPageAfter, perPage, schemeName, name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.classificationNodesGetRaw({ nextPageAfter: nextPageAfter, perPage: perPage, schemeName: schemeName, name: name });\n            return yield response.value();\n        });\n    }\n    /**\n     * Retrieve a ClassificationNode record specified by `id`.\n     * Returns classification node\n     */\n    classificationNodesIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling classificationNodesIdGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/classification_nodes/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ClassificationNodeResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Retrieve a ClassificationNode record specified by `id`.\n     * Returns classification node\n     */\n    classificationNodesIdGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.classificationNodesIdGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Returns created classification node\n     */\n    classificationNodesPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.classificationNodeParams === null || requestParameters.classificationNodeParams === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'classificationNodeParams\', \'Required parameter requestParameters.classificationNodeParams was null or undefined when calling classificationNodesPost.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/classification_nodes`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["InlineObjectToJSON"])(requestParameters.classificationNodeParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["InlineResponse201FromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Returns created classification node\n     */\n    classificationNodesPost(classificationNodeParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.classificationNodesPostRaw({ classificationNodeParams: classificationNodeParams });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ClassificationNodeApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ClientTaskQueueApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueApi", function() { return ClientTaskQueueApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueGetStateEnum", function() { return ClientTaskQueueGetStateEnum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueGetWorkTypeEnum", function() { return ClientTaskQueueGetWorkTypeEnum; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass ClientTaskQueueApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * A ClientTask represents a task the client is supposed to perform.  Field `work_type` represents a type of work, `target_id` points to the input argument of the task and its semantics depends on `work_type`.  Currently there is only one work type: `update_item_shares`. In an `update_item_shares` task `target_id` points to an item. `update_item_shares` task is created when the item is updated. Clients are expected to re-encrypt encrypted values of the the shared items for all existing shares and update them.  Each ClientTask may have the following states: * `todo` * `in_progress` * `done` * `failed`  This endpoint serves client tasks ordered by `created_at` in descending order. It is possible to request tasks with a different state by providing an array of states to the parameter `state`.  All returned tasks with state `todo` may optionally be transitioned to state `in_progress` through by setting `change_state=true`.  All tasks with state `in_progress` are transitioned back to `todo` after a timeout of 10 minutes unless the state is changed to `done` or `failed`.\n     * Read the client task queue\n     */\n    clientTaskQueueGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            if (requestParameters.changeState !== undefined) {\n                queryParameters[\'change_state\'] = requestParameters.changeState;\n            }\n            if (requestParameters.targetId !== undefined) {\n                queryParameters[\'target_id\'] = requestParameters.targetId;\n            }\n            if (requestParameters.state) {\n                queryParameters[\'state\'] = requestParameters.state.join(_runtime__WEBPACK_IMPORTED_MODULE_0__["COLLECTION_FORMATS"]["csv"]);\n            }\n            if (requestParameters.workType !== undefined) {\n                queryParameters[\'work_type\'] = requestParameters.workType;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/client_task_queue`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ClientTaskQueueResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * A ClientTask represents a task the client is supposed to perform.  Field `work_type` represents a type of work, `target_id` points to the input argument of the task and its semantics depends on `work_type`.  Currently there is only one work type: `update_item_shares`. In an `update_item_shares` task `target_id` points to an item. `update_item_shares` task is created when the item is updated. Clients are expected to re-encrypt encrypted values of the the shared items for all existing shares and update them.  Each ClientTask may have the following states: * `todo` * `in_progress` * `done` * `failed`  This endpoint serves client tasks ordered by `created_at` in descending order. It is possible to request tasks with a different state by providing an array of states to the parameter `state`.  All returned tasks with state `todo` may optionally be transitioned to state `in_progress` through by setting `change_state=true`.  All tasks with state `in_progress` are transitioned back to `todo` after a timeout of 10 minutes unless the state is changed to `done` or `failed`.\n     * Read the client task queue\n     */\n    clientTaskQueueGet(nextPageAfter, perPage, changeState, targetId, state, workType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.clientTaskQueueGetRaw({ nextPageAfter: nextPageAfter, perPage: perPage, changeState: changeState, targetId: targetId, state: state, workType: workType });\n            return yield response.value();\n        });\n    }\n    /**\n     * Change the state of client tasks. Normally used to set tasks to `done` or `failed`. Along with the states the client can pass task execution reports. A report is a JSON object. A report can be useful for failed tasks.Responds with a non-paginated list of with the same tasks.\n     * Change the state of client tasks\n     */\n    clientTaskQueuePutRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/client_task_queue`,\n                method: \'PUT\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PutTasksRequestToJSON"])(requestParameters.updateClientParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ClientTaskQueueResponse1FromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Change the state of client tasks. Normally used to set tasks to `done` or `failed`. Along with the states the client can pass task execution reports. A report is a JSON object. A report can be useful for failed tasks.Responds with a non-paginated list of with the same tasks.\n     * Change the state of client tasks\n     */\n    clientTaskQueuePut(updateClientParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.clientTaskQueuePutRaw({ updateClientParams: updateClientParams });\n            return yield response.value();\n        });\n    }\n}\n/**\n    * @export\n    * @enum {string}\n    */\nvar ClientTaskQueueGetStateEnum;\n(function (ClientTaskQueueGetStateEnum) {\n    ClientTaskQueueGetStateEnum["Todo"] = "todo";\n    ClientTaskQueueGetStateEnum["InProgress"] = "in_progress";\n    ClientTaskQueueGetStateEnum["Done"] = "done";\n    ClientTaskQueueGetStateEnum["Failed"] = "failed";\n})(ClientTaskQueueGetStateEnum || (ClientTaskQueueGetStateEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar ClientTaskQueueGetWorkTypeEnum;\n(function (ClientTaskQueueGetWorkTypeEnum) {\n    ClientTaskQueueGetWorkTypeEnum["UpdateItemShares"] = "update_item_shares";\n    ClientTaskQueueGetWorkTypeEnum["SetupKeyDelegation"] = "setup_key_delegation";\n})(ClientTaskQueueGetWorkTypeEnum || (ClientTaskQueueGetWorkTypeEnum = {}));\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ClientTaskQueueApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ConnectionApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectionApi", function() { return ConnectionApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass ConnectionApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Get connections\n     */\n    connectionsGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/connections`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ConnectionsResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Get connections\n     */\n    connectionsGet(nextPageAfter, perPage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.connectionsGetRaw({ nextPageAfter: nextPageAfter, perPage: perPage });\n            return yield response.value();\n        });\n    }\n    /**\n     * Delete Connection\n     */\n    connectionsIdDeleteRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling connectionsIdDelete.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/connections/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Delete Connection\n     */\n    connectionsIdDelete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connectionsIdDeleteRaw({ id: id });\n        });\n    }\n    /**\n     * Get Connection\n     */\n    connectionsIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling connectionsIdGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/connections/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ConnectionResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Get Connection\n     */\n    connectionsIdGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.connectionsIdGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * This endpoint allows to   * modify the delegation role of delegation  * downgrade a delegation connection to a regular connection * upgrade a regular connection to a delegation connection  Parameter `role`can be one of the following values: * `admin` * `owner` * `reader` * `remove_delegation` -  used to downgrade a delegation connection to a regular connection  Currently this endpoint violates the flow of setting up a delegation connection via an invitation. It allows to omit the step where the delegate candidate agrees to accept this role. We will have to add a similar step which requires the delegate candidate to content to the delegation role.\n     * Modify the delegation role of a connection\n     */\n    connectionsIdPutRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling connectionsIdPut.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/connections/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'PUT\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["UpdateDelegationRoleToJSON"])(requestParameters.updateDelegationRoleParam),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ConnectionResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * This endpoint allows to   * modify the delegation role of delegation  * downgrade a delegation connection to a regular connection * upgrade a regular connection to a delegation connection  Parameter `role`can be one of the following values: * `admin` * `owner` * `reader` * `remove_delegation` -  used to downgrade a delegation connection to a regular connection  Currently this endpoint violates the flow of setting up a delegation connection via an invitation. It allows to omit the step where the delegate candidate agrees to accept this role. We will have to add a similar step which requires the delegate candidate to content to the delegation role.\n     * Modify the delegation role of a connection\n     */\n    connectionsIdPut(id, updateDelegationRoleParam) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.connectionsIdPutRaw({ id: id, updateDelegationRoleParam: updateDelegationRoleParam });\n            return yield response.value();\n        });\n    }\n    /**\n     * Create Connection\n     */\n    connectionsPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/connections`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PostConnectionsRequestToJSON"])(requestParameters.connectionParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ConnectionResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Create Connection\n     */\n    connectionsPost(connectionParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.connectionsPostRaw({ connectionParams: connectionParams });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ConnectionApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/DelegationApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DelegationApi", function() { return DelegationApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass DelegationApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     *  In delegation we differentiate between a delegate user and an owner user:  * `owner` - a user who grants delegation permissions, the real _owner_ of the account * `delegate` - a user who has been granted permission to perform actions on the behalf of the owner  One way to set up a delegation relation is via invitations. Any user can invite another user to become a delegate. See `POST /invitations` for details.  ___  Another way is creating a _child user_. A child account is a new empty account over which the user who has created it has full control via a delegation connection with role `owner`.  The user who has created a child account is considered a _parent_ account. Managing keys of the child account the responsibility of the parent user.  The result of this call is a child account without a private DEK but with a login public key.  In order to create a child account the following data must be submitted:  * Public key and the corresponding keypair external ID of the current user (parent) to create the connection * Public key and the corresponding keypair external ID of the child user (parent) to create the connection * Login public key for the child account.\n     * Create a child user\n     */\n    childUsersPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/child_users`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["CreateChildUserParamsToJSON"])(requestParameters.createChildUserParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["CreateChildUserResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     *  In delegation we differentiate between a delegate user and an owner user:  * `owner` - a user who grants delegation permissions, the real _owner_ of the account * `delegate` - a user who has been granted permission to perform actions on the behalf of the owner  One way to set up a delegation relation is via invitations. Any user can invite another user to become a delegate. See `POST /invitations` for details.  ___  Another way is creating a _child user_. A child account is a new empty account over which the user who has created it has full control via a delegation connection with role `owner`.  The user who has created a child account is considered a _parent_ account. Managing keys of the child account the responsibility of the parent user.  The result of this call is a child account without a private DEK but with a login public key.  In order to create a child account the following data must be submitted:  * Public key and the corresponding keypair external ID of the current user (parent) to create the connection * Public key and the corresponding keypair external ID of the child user (parent) to create the connection * Login public key for the child account.\n     * Create a child user\n     */\n    childUsersPost(createChildUserParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.childUsersPostRaw({ createChildUserParams: createChildUserParams });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/DelegationApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/DirectAttachmentsApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentsApi", function() { return DirectAttachmentsApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass DirectAttachmentsApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Delete attachment record by id\n     * Delete Attachment\n     */\n    directAttachmentsIdDeleteRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling directAttachmentsIdDelete.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/direct/attachments/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Delete attachment record by id\n     * Delete Attachment\n     */\n    directAttachmentsIdDelete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.directAttachmentsIdDeleteRaw({ id: id });\n        });\n    }\n    /**\n     * Retrieve direct download url for user to download file\n     * Get Direct Download Url\n     */\n    directAttachmentsIdDownloadUrlGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling directAttachmentsIdDownloadUrlGet.\');\n            }\n            const queryParameters = {};\n            if (requestParameters.type !== undefined) {\n                queryParameters[\'type\'] = requestParameters.type;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/direct/attachments/{id}/download_url`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["AttachmentDirectDownloadUrlResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Retrieve direct download url for user to download file\n     * Get Direct Download Url\n     */\n    directAttachmentsIdDownloadUrlGet(id, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.directAttachmentsIdDownloadUrlGetRaw({ id: id, type: type });\n            return yield response.value();\n        });\n    }\n    /**\n     * Retrieve attachment record by id\n     * Get Attachment\n     */\n    directAttachmentsIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling directAttachmentsIdGet.\');\n            }\n            const queryParameters = {};\n            if (requestParameters.type !== undefined) {\n                queryParameters[\'type\'] = requestParameters.type;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/direct/attachments/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["CreateAttachmentResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Retrieve attachment record by id\n     * Get Attachment\n     */\n    directAttachmentsIdGet(id, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.directAttachmentsIdGetRaw({ id: id, type: type });\n            return yield response.value();\n        });\n    }\n    /**\n     * Create attachment record after finish uploading file and encrypted artifcat\n     * Create Attachment Record\n     */\n    directAttachmentsPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/direct/attachments`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PostCreateAttachmentRequestToJSON"])(requestParameters.attachmentCreateParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["DirectAttachmentResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Create attachment record after finish uploading file and encrypted artifcat\n     * Create Attachment Record\n     */\n    directAttachmentsPost(attachmentCreateParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.directAttachmentsPostRaw({ attachmentCreateParams: attachmentCreateParams });\n            return yield response.value();\n        });\n    }\n    /**\n     * Retrieve direct upload url for user to upload file\n     * Get Direct Upload Url\n     */\n    directAttachmentsUploadUrlPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/direct/attachments/upload_url`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PostAttachmentDirectUploadUrlRequestToJSON"])(requestParameters.attachmentDirectUploadUrlParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["AttachmentDirectUploadUrlResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Retrieve direct upload url for user to upload file\n     * Get Direct Upload Url\n     */\n    directAttachmentsUploadUrlPost(attachmentDirectUploadUrlParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.directAttachmentsUploadUrlPostRaw({ attachmentDirectUploadUrlParams: attachmentDirectUploadUrlParams });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/DirectAttachmentsApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/EventsApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventsApi", function() { return EventsApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass EventsApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Retrieves events for the current user. The results are sorted in reverse chronological order (ie most recent first) and paginated, with both items per page and the page to display being parameterized (passed in query string).\n     * Get Events\n     */\n    eventsGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            if (requestParameters.eventType !== undefined) {\n                queryParameters[\'event_type\'] = requestParameters.eventType;\n            }\n            if (requestParameters.onDate !== undefined) {\n                queryParameters[\'on_date\'] = requestParameters.onDate;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/events`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["EventsResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Retrieves events for the current user. The results are sorted in reverse chronological order (ie most recent first) and paginated, with both items per page and the page to display being parameterized (passed in query string).\n     * Get Events\n     */\n    eventsGet(nextPageAfter, perPage, eventType, onDate) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.eventsGetRaw({ nextPageAfter: nextPageAfter, perPage: perPage, eventType: eventType, onDate: onDate });\n            return yield response.value();\n        });\n    }\n    /**\n     * TODO\n     * Get Event\n     */\n    eventsIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling eventsIdGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/events/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["EventResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * TODO\n     * Get Event\n     */\n    eventsIdGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.eventsIdGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * TODO\n     * Create Event\n     */\n    eventsPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.eventParams === null || requestParameters.eventParams === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'eventParams\', \'Required parameter requestParameters.eventParams was null or undefined when calling eventsPost.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/events`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PostEventsRequestToJSON"])(requestParameters.eventParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["EventResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * TODO\n     * Create Event\n     */\n    eventsPost(eventParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.eventsPostRaw({ eventParams: eventParams });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/EventsApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ImageApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageApi", function() { return ImageApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n/**\n *\n */\nclass ImageApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Create Image\n     */\n    imagesPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.imageImageFile === null || requestParameters.imageImageFile === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'imageImageFile\', \'Required parameter requestParameters.imageImageFile was null or undefined when calling imagesPost.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const consumes = [\n                { contentType: \'multipart/form-data\' },\n            ];\n            // @ts-ignore: canConsumeForm may be unused\n            const canConsumeForm = _runtime__WEBPACK_IMPORTED_MODULE_0__["canConsumeForm"](consumes);\n            let formParams;\n            let useForm = false;\n            // use FormData to transmit files using content-type "multipart/form-data"\n            useForm = canConsumeForm;\n            if (useForm) {\n                formParams = new FormData();\n            }\n            else {\n                formParams = new URLSearchParams();\n            }\n            if (requestParameters.imageImageFile !== undefined) {\n                formParams.append(\'image[image_file]\', requestParameters.imageImageFile);\n            }\n            const response = yield this.request({\n                path: `/images`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: formParams,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Create Image\n     */\n    imagesPost(imageImageFile) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.imagesPostRaw({ imageImageFile: imageImageFile });\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ImageApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/InvitationApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InvitationApi", function() { return InvitationApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass InvitationApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Retrieves invitations that the current user has created. An invitation token can be specified to fetch a specific token\n     * List invitations\n     */\n    invitationsGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            if (requestParameters.token !== undefined) {\n                queryParameters[\'token\'] = requestParameters.token;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/invitations`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["InvitationsResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Retrieves invitations that the current user has created. An invitation token can be specified to fetch a specific token\n     * List invitations\n     */\n    invitationsGet(nextPageAfter, perPage, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.invitationsGetRaw({ nextPageAfter: nextPageAfter, perPage: perPage, token: token });\n            return yield response.value();\n        });\n    }\n    /**\n     * Delete an invitation by its token. Only the user who created the invitation may delete it.\n     * Delete an invitation\n     */\n    invitationsIdDeleteRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling invitationsIdDelete.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/invitations/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Delete an invitation by its token. Only the user who created the invitation may delete it.\n     * Delete an invitation\n     */\n    invitationsIdDelete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.invitationsIdDeleteRaw({ id: id });\n        });\n    }\n    /**\n     * Read an invitation by its token. Any user with a token may read it.  Blindly accepting an invitation by submitting an invitation token to `POST /connections` might have serious consequences, so client applications are advised to first read the invitation before creating a connection. The intent of an invitation is in JSON field `integration_data`.\n     * Read an invitation\n     */\n    invitationsIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling invitationsIdGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/invitations/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["PublicInvitationResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Read an invitation by its token. Any user with a token may read it.  Blindly accepting an invitation by submitting an invitation token to `POST /connections` might have serious consequences, so client applications are advised to first read the invitation before creating a connection. The intent of an invitation is in JSON field `integration_data`.\n     * Read an invitation\n     */\n    invitationsIdGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.invitationsIdGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Invite another user to connect.  An invitation does not specify a recipient directly, instead the result of this operation is  an invitation token which can then be sent to a recipient by a client application or some other means, mand the recipient can create a connection using this token and endpoint `POST /connections` --- Invitations and connections have 3 special use-cases: 1. a connection between an organization agent and an organization member 2. a connection between a service agent and a user of the service 3. a connection between a user and a delegate user who has been granted permissions to act on behalf of the user  Blindly accepting an invitation by submitting an invitation token to `POST /connections` might have serious consequences, so client applications are advised to first read the invitation with `GET /invitations/{token}`before creating a connection. The intent of an invitation is in JSON field `integration_data`.  --- For the membership invitation parameter `organization_member_role` is used to specify the role we are inviting the user with. There are currently 2 organization member roles: * `owner` - can do everything * `admin` (default) - can only manage organization services If param `organization_member_role` is not provided then role `admin` will be assigned to the invited member. --- For the delegation connection parameters `delegate_role` and `delegation_token` are mandatory. `delegation_token` should be obtained by running `POST /delegations` in the keystore.   If `delegate_role` and `delegation_token` are present, a recipient is invited to become a delegate user who has rights to perform actions on behalf of the user who has created the invitation.  Currently there are three delegate roles: * `owner` * `admin` * `reader`\n     * Submit an invitation\n     */\n    invitationsPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/invitations`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PostInvitationsRequestToJSON"])(requestParameters.invitationParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["InvitationResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Invite another user to connect.  An invitation does not specify a recipient directly, instead the result of this operation is  an invitation token which can then be sent to a recipient by a client application or some other means, mand the recipient can create a connection using this token and endpoint `POST /connections` --- Invitations and connections have 3 special use-cases: 1. a connection between an organization agent and an organization member 2. a connection between a service agent and a user of the service 3. a connection between a user and a delegate user who has been granted permissions to act on behalf of the user  Blindly accepting an invitation by submitting an invitation token to `POST /connections` might have serious consequences, so client applications are advised to first read the invitation with `GET /invitations/{token}`before creating a connection. The intent of an invitation is in JSON field `integration_data`.  --- For the membership invitation parameter `organization_member_role` is used to specify the role we are inviting the user with. There are currently 2 organization member roles: * `owner` - can do everything * `admin` (default) - can only manage organization services If param `organization_member_role` is not provided then role `admin` will be assigned to the invited member. --- For the delegation connection parameters `delegate_role` and `delegation_token` are mandatory. `delegation_token` should be obtained by running `POST /delegations` in the keystore.   If `delegate_role` and `delegation_token` are present, a recipient is invited to become a delegate user who has rights to perform actions on behalf of the user who has created the invitation.  Currently there are three delegate roles: * `owner` * `admin` * `reader`\n     * Submit an invitation\n     */\n    invitationsPost(invitationParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.invitationsPostRaw({ invitationParams: invitationParams });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/InvitationApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ItemApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ItemApi", function() { return ItemApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass ItemApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Fetch items that the current user has access to\n     * Get items\n     */\n    itemsGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.templateIds !== undefined) {\n                queryParameters[\'template_ids\'] = requestParameters.templateIds;\n            }\n            if (requestParameters.classificationSchemeName !== undefined) {\n                queryParameters[\'classification_scheme_name\'] = requestParameters.classificationSchemeName;\n            }\n            if (requestParameters.classificationNodeName !== undefined) {\n                queryParameters[\'classification_node_name\'] = requestParameters.classificationNodeName;\n            }\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/items`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ItemsResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Fetch items that the current user has access to\n     * Get items\n     */\n    itemsGet(templateIds, classificationSchemeName, classificationNodeName, nextPageAfter, perPage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.itemsGetRaw({ templateIds: templateIds, classificationSchemeName: classificationSchemeName, classificationNodeName: classificationNodeName, nextPageAfter: nextPageAfter, perPage: perPage });\n            return yield response.value();\n        });\n    }\n    /**\n     * Delete an item.  If the item is an item shared with the current user, the corresponding share is deleted together with the item.\n     * Delete an item\n     */\n    itemsIdDeleteRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling itemsIdDelete.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/items/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Delete an item.  If the item is an item shared with the current user, the corresponding share is deleted together with the item.\n     * Delete an item\n     */\n    itemsIdDelete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.itemsIdDeleteRaw({ id: id });\n        });\n    }\n    /**\n     * Retrieve a specific Item by `id`.\n     * Get Item\n     */\n    itemsIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling itemsIdGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/items/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ItemResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Retrieve a specific Item by `id`.\n     * Get Item\n     */\n    itemsIdGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.itemsIdGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Update an Item specified by `id` with fields provided in the JSON body.\n     * Update an item\n     */\n    itemsIdPutRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling itemsIdPut.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/items/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'PUT\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PutItemsRequestToJSON"])(requestParameters.updateItemParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ItemResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Update an Item specified by `id` with fields provided in the JSON body.\n     * Update an item\n     */\n    itemsIdPut(id, updateItemParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.itemsIdPutRaw({ id: id, updateItemParams: updateItemParams });\n            return yield response.value();\n        });\n    }\n    /**\n     * Create an Item populated with slot data carried in payload. Slot records are created and associated with the item by the server.\n     * Create an item\n     */\n    itemsPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/items`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PostItemsRequestToJSON"])(requestParameters.createItemParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ItemResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Create an Item populated with slot data carried in payload. Slot records are created and associated with the item by the server.\n     * Create an item\n     */\n    itemsPost(createItemParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.itemsPostRaw({ createItemParams: createItemParams });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ItemApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ItemTemplateApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ItemTemplateApi", function() { return ItemTemplateApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass ItemTemplateApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Fetch public and current_user item templates\n     * Get Item Templates\n     */\n    itemTemplatesGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.byClassificationScheme !== undefined) {\n                queryParameters[\'by_classification[scheme]\'] = requestParameters.byClassificationScheme;\n            }\n            if (requestParameters.byClassificationName !== undefined) {\n                queryParameters[\'by_classification[name]\'] = requestParameters.byClassificationName;\n            }\n            if (requestParameters.like !== undefined) {\n                queryParameters[\'like\'] = requestParameters.like;\n            }\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/item_templates`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ItemTemplatesResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Fetch public and current_user item templates\n     * Get Item Templates\n     */\n    itemTemplatesGet(byClassificationScheme, byClassificationName, like, nextPageAfter, perPage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.itemTemplatesGetRaw({ byClassificationScheme: byClassificationScheme, byClassificationName: byClassificationName, like: like, nextPageAfter: nextPageAfter, perPage: perPage });\n            return yield response.value();\n        });\n    }\n    /**\n     * Get an item template specified by `id`.\n     * Get item template\n     */\n    itemTemplatesIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling itemTemplatesIdGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/item_templates/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ItemTemplateResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Get an item template specified by `id`.\n     * Get item template\n     */\n    itemTemplatesIdGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.itemTemplatesIdGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Create item template\n     */\n    itemTemplatesPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/item_templates`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PostItemTemplateRequestToJSON"])(requestParameters.createItemTemplateParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ItemTemplateResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Create item template\n     */\n    itemTemplatesPost(createItemTemplateParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.itemTemplatesPostRaw({ createItemTemplateParams: createItemTemplateParams });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ItemTemplateApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/MessageApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MessageApi", function() { return MessageApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass MessageApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * List Messages\n     */\n    dashboardMessagesGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.page !== undefined) {\n                queryParameters[\'page\'] = requestParameters.page;\n            }\n            if (requestParameters.per !== undefined) {\n                queryParameters[\'per\'] = requestParameters.per;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/dashboard/messages`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["GetMessagesResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * List Messages\n     */\n    dashboardMessagesGet(page, per) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.dashboardMessagesGetRaw({ page: page, per: per });\n            return yield response.value();\n        });\n    }\n    /**\n     * Delete a Message\n     */\n    dashboardMessagesIdDeleteRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling dashboardMessagesIdDelete.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/dashboard/messages/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Delete a Message\n     */\n    dashboardMessagesIdDelete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.dashboardMessagesIdDeleteRaw({ id: id });\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/MessageApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/OrganizationsForVaultUsersApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrganizationsForVaultUsersApi", function() { return OrganizationsForVaultUsersApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass OrganizationsForVaultUsersApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * List organization.  There are three modes:  * List all validated organizations. This is the default behavior. * List organizations in the requested state that the current user has requested. Submit parameter `mode=requested` * List organizations in which the current user is a member. Submit parameter `mode=member`\n     * List organizations\n     */\n    organizationsGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.mode !== undefined) {\n                queryParameters[\'mode\'] = requestParameters.mode;\n            }\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/organizations`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ListOrganizationsResponse1FromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * List organization.  There are three modes:  * List all validated organizations. This is the default behavior. * List organizations in the requested state that the current user has requested. Submit parameter `mode=requested` * List organizations in which the current user is a member. Submit parameter `mode=member`\n     * List organizations\n     */\n    organizationsGet(mode, nextPageAfter, perPage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.organizationsGetRaw({ mode: mode, nextPageAfter: nextPageAfter, perPage: perPage });\n            return yield response.value();\n        });\n    }\n    /**\n     * Retrieve a validated organization or a requested organization.  This endpoint works in 2 modes:  * a validated organization is readable by everyone * a requested non-validated organization is only readable by the requestor\n     * Retrieve a validated organization or a requested organization\n     */\n    organizationsIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling organizationsIdGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/organizations/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["GetOrganizationbyIdResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Retrieve a validated organization or a requested organization.  This endpoint works in 2 modes:  * a validated organization is readable by everyone * a requested non-validated organization is only readable by the requestor\n     * Retrieve a validated organization or a requested organization\n     */\n    organizationsIdGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.organizationsIdGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Retrieve a validated organization service.  This endpoint can be called by anyone.  Only validated organizations and services are accessible.\n     * Retrieve a validated organization service\n     */\n    organizationsOrganizationIdServicesIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.organizationId === null || requestParameters.organizationId === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'organizationId\', \'Required parameter requestParameters.organizationId was null or undefined when calling organizationsOrganizationIdServicesIdGet.\');\n            }\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling organizationsOrganizationIdServicesIdGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/organizations/{organization_id}/services/{id}`.replace(`{${"organization_id"}}`, encodeURIComponent(String(requestParameters.organizationId))).replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["GetOrganizationServicebyIdResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Retrieve a validated organization service.  This endpoint can be called by anyone.  Only validated organizations and services are accessible.\n     * Retrieve a validated organization service\n     */\n    organizationsOrganizationIdServicesIdGet(organizationId, id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.organizationsOrganizationIdServicesIdGetRaw({ organizationId: organizationId, id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * This endpoint is available for service agents only.  It serves * the public key of the user * whether there is a connection between the user and the service agent * public key from the connection between the user and the service agent * identification of the keypair to which the public key from the connection belongs\n     * Retrieve user info as a service agent\n     */\n    serviceUsersIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling serviceUsersIdGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/service_users/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ServiceUserResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * This endpoint is available for service agents only.  It serves * the public key of the user * whether there is a connection between the user and the service agent * public key from the connection between the user and the service agent * identification of the keypair to which the public key from the connection belongs\n     * Retrieve user info as a service agent\n     */\n    serviceUsersIdGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.serviceUsersIdGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/OrganizationsForVaultUsersApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/OrganizationsManagingMembersApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrganizationsManagingMembersApi", function() { return OrganizationsManagingMembersApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass OrganizationsManagingMembersApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * List all members of an organization.  This endpoint is only accessible to organization owners.  There are currently 2 member roles:  * `owner` - can do everything * `admin` - can only manage organization services\n     * List all members of an organization\n     */\n    organizationsOrganizationIdMembersGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.organizationId === null || requestParameters.organizationId === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'organizationId\', \'Required parameter requestParameters.organizationId was null or undefined when calling organizationsOrganizationIdMembersGet.\');\n            }\n            const queryParameters = {};\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/organizations/{organization_id}/members`.replace(`{${"organization_id"}}`, encodeURIComponent(String(requestParameters.organizationId))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ListOrganizationMemberResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * List all members of an organization.  This endpoint is only accessible to organization owners.  There are currently 2 member roles:  * `owner` - can do everything * `admin` - can only manage organization services\n     * List all members of an organization\n     */\n    organizationsOrganizationIdMembersGet(organizationId, nextPageAfter, perPage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.organizationsOrganizationIdMembersGetRaw({ organizationId: organizationId, nextPageAfter: nextPageAfter, perPage: perPage });\n            return yield response.value();\n        });\n    }\n    /**\n     * Delete a member of an organization.  This endpoint is only accessible to organization owners.  There are currently 2 member roles:  * `owner` - can do everything * `admin` - can only manage organization services  The system will not allow to delete the last owner of the organization.\n     * Delete a member of an organization\n     */\n    organizationsOrganizationIdMembersIdDeleteRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.organizationId === null || requestParameters.organizationId === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'organizationId\', \'Required parameter requestParameters.organizationId was null or undefined when calling organizationsOrganizationIdMembersIdDelete.\');\n            }\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling organizationsOrganizationIdMembersIdDelete.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/organizations/{organization_id}/members/{id}`.replace(`{${"organization_id"}}`, encodeURIComponent(String(requestParameters.organizationId))).replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Delete a member of an organization.  This endpoint is only accessible to organization owners.  There are currently 2 member roles:  * `owner` - can do everything * `admin` - can only manage organization services  The system will not allow to delete the last owner of the organization.\n     * Delete a member of an organization\n     */\n    organizationsOrganizationIdMembersIdDelete(organizationId, id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.organizationsOrganizationIdMembersIdDeleteRaw({ organizationId: organizationId, id: id });\n        });\n    }\n    /**\n     * Change the role of a member.  This endpoint is only accessible to organization owners.  There are currently 2 member roles:  * `owner` - can do everything * `admin` - can only manage organization services  The system will not allow to demote the last owner of the organization.\n     * Change the role of a member\n     */\n    organizationsOrganizationIdMembersIdPutRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.organizationId === null || requestParameters.organizationId === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'organizationId\', \'Required parameter requestParameters.organizationId was null or undefined when calling organizationsOrganizationIdMembersIdPut.\');\n            }\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling organizationsOrganizationIdMembersIdPut.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/organizations/{organization_id}/members/{id}`.replace(`{${"organization_id"}}`, encodeURIComponent(String(requestParameters.organizationId))).replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'PUT\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["UpdateOrganizationMemberRoleRequestToJSON"])(requestParameters.organizationMemberRoleParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Change the role of a member.  This endpoint is only accessible to organization owners.  There are currently 2 member roles:  * `owner` - can do everything * `admin` - can only manage organization services  The system will not allow to demote the last owner of the organization.\n     * Change the role of a member\n     */\n    organizationsOrganizationIdMembersIdPut(organizationId, id, organizationMemberRoleParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.organizationsOrganizationIdMembersIdPutRaw({ organizationId: organizationId, id: id, organizationMemberRoleParams: organizationMemberRoleParams });\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/OrganizationsManagingMembersApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/OrganizationsManagingOrganizationsApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrganizationsManagingOrganizationsApi", function() { return OrganizationsManagingOrganizationsApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass OrganizationsManagingOrganizationsApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Delete a requested organization. The user who requested the organization can use this endpoint to delete the requested organization.\n     * Delete a requested organization\n     */\n    organizationsIdDeleteRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling organizationsIdDelete.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/organizations/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Delete a requested organization. The user who requested the organization can use this endpoint to delete the requested organization.\n     * Delete a requested organization\n     */\n    organizationsIdDelete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.organizationsIdDeleteRaw({ id: id });\n        });\n    }\n    /**\n     * Login as an organization agent.  An organization agent is a non-human Vault user account acting on behalf of the organization.  An organization owner can use this endpoint to obtain a session token for the organization agent.\n     * Log in as organization agent\n     */\n    organizationsIdLoginPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling organizationsIdLoginPost.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/organizations/{id}/login`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["OrganizationAgentLoginDetailResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Login as an organization agent.  An organization agent is a non-human Vault user account acting on behalf of the organization.  An organization owner can use this endpoint to obtain a session token for the organization agent.\n     * Log in as organization agent\n     */\n    organizationsIdLoginPost(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.organizationsIdLoginPostRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Modify a requested organization. The user who requested the organization can use this endpoint to modify the requested organization.\n     * Update a requested organization\n     */\n    organizationsIdPutRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling organizationsIdPut.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/organizations/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'PUT\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["UpdateOrganizationRequestToJSON"])(requestParameters.updateOrganizationParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["UpdateOrganizationResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Modify a requested organization. The user who requested the organization can use this endpoint to modify the requested organization.\n     * Update a requested organization\n     */\n    organizationsIdPut(id, updateOrganizationParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.organizationsIdPutRaw({ id: id, updateOrganizationParams: updateOrganizationParams });\n            return yield response.value();\n        });\n    }\n    /**\n     * Create an organization. The new organization has status `requested`. Organizations with status `requested` cannot have members and services and are invisible for users other than the user who created the organization. Organizations with status `requested` need to be validated or rejected by Meeco.\n     * Create an organization\n     */\n    organizationsPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/organizations`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PostOrganizationRequestToJSON"])(requestParameters.organizationParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["OrganizationResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Create an organization. The new organization has status `requested`. Organizations with status `requested` cannot have members and services and are invisible for users other than the user who created the organization. Organizations with status `requested` need to be validated or rejected by Meeco.\n     * Create an organization\n     */\n    organizationsPost(organizationParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.organizationsPostRaw({ organizationParams: organizationParams });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/OrganizationsManagingOrganizationsApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/OrganizationsManagingServicesApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrganizationsManagingServicesApi", function() { return OrganizationsManagingServicesApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass OrganizationsManagingServicesApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * List requested services for a given organization.  Members of the organization with roles `owner` and `admin` can use this endpoint to list the requested services for this organization.\n     * List requested services for a given organization\n     */\n    organizationsOrganizationIdRequestedServicesGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.organizationId === null || requestParameters.organizationId === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'organizationId\', \'Required parameter requestParameters.organizationId was null or undefined when calling organizationsOrganizationIdRequestedServicesGet.\');\n            }\n            const queryParameters = {};\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/organizations/{organization_id}/requested_services`.replace(`{${"organization_id"}}`, encodeURIComponent(String(requestParameters.organizationId))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ListOrganizationsResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * List requested services for a given organization.  Members of the organization with roles `owner` and `admin` can use this endpoint to list the requested services for this organization.\n     * List requested services for a given organization\n     */\n    organizationsOrganizationIdRequestedServicesGet(organizationId, nextPageAfter, perPage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.organizationsOrganizationIdRequestedServicesGetRaw({ organizationId: organizationId, nextPageAfter: nextPageAfter, perPage: perPage });\n            return yield response.value();\n        });\n    }\n    /**\n     * Delete a requested organization service. Organization members with roles `admin` and `owner` can use this endpoint to delete a requested organization.\n     * Delete a requested organization service\n     */\n    organizationsOrganizationIdServicesIdDeleteRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling organizationsOrganizationIdServicesIdDelete.\');\n            }\n            if (requestParameters.organizationId === null || requestParameters.organizationId === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'organizationId\', \'Required parameter requestParameters.organizationId was null or undefined when calling organizationsOrganizationIdServicesIdDelete.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/organizations/{organization_id}/services/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))).replace(`{${"organization_id"}}`, encodeURIComponent(String(requestParameters.organizationId))),\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Delete a requested organization service. Organization members with roles `admin` and `owner` can use this endpoint to delete a requested organization.\n     * Delete a requested organization service\n     */\n    organizationsOrganizationIdServicesIdDelete(id, organizationId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.organizationsOrganizationIdServicesIdDeleteRaw({ id: id, organizationId: organizationId });\n        });\n    }\n    /**\n     * Login as a service agent.  A service agent is a non-human Vault user account acting on behalf of the service.  An organization owner or admin can use this endpoint to obtain a session token for the service agent.\n     * Log in as organization service agent\n     */\n    organizationsOrganizationIdServicesIdLoginPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.organizationId === null || requestParameters.organizationId === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'organizationId\', \'Required parameter requestParameters.organizationId was null or undefined when calling organizationsOrganizationIdServicesIdLoginPost.\');\n            }\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling organizationsOrganizationIdServicesIdLoginPost.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/organizations/{organization_id}/services/{id}/login`.replace(`{${"organization_id"}}`, encodeURIComponent(String(requestParameters.organizationId))).replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["OrganizationAgentLoginDetailResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Login as a service agent.  A service agent is a non-human Vault user account acting on behalf of the service.  An organization owner or admin can use this endpoint to obtain a session token for the service agent.\n     * Log in as organization service agent\n     */\n    organizationsOrganizationIdServicesIdLoginPost(organizationId, id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.organizationsOrganizationIdServicesIdLoginPostRaw({ organizationId: organizationId, id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Modify a requested organization service. Members of the organization with roles `owner` and `admin` can use this endpoint to modify the requested service.\n     * Update a requested organization service\n     */\n    organizationsOrganizationIdServicesIdPutRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling organizationsOrganizationIdServicesIdPut.\');\n            }\n            if (requestParameters.organizationId === null || requestParameters.organizationId === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'organizationId\', \'Required parameter requestParameters.organizationId was null or undefined when calling organizationsOrganizationIdServicesIdPut.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/organizations/{organization_id}/services/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))).replace(`{${"organization_id"}}`, encodeURIComponent(String(requestParameters.organizationId))),\n                method: \'PUT\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["UpdateOrganizationServiceRequestToJSON"])(requestParameters.updateOrganizationServiceParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["CreateOrganizationServiceResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Modify a requested organization service. Members of the organization with roles `owner` and `admin` can use this endpoint to modify the requested service.\n     * Update a requested organization service\n     */\n    organizationsOrganizationIdServicesIdPut(id, organizationId, updateOrganizationServiceParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.organizationsOrganizationIdServicesIdPutRaw({ id: id, organizationId: organizationId, updateOrganizationServiceParams: updateOrganizationServiceParams });\n            return yield response.value();\n        });\n    }\n    /**\n     * Create an organization service. Organization members with roles `admin` and `owner` can create an organization service. The new organization service has status `requested`. Organization services with status `requested` cannot be used and are invisible for users other than the member of the organization which requested the service. Services with status `requested` need to be validated or rejected by Meeco.\n     * Create an organization service\n     */\n    organizationsOrganizationIdServicesPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.organizationId === null || requestParameters.organizationId === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'organizationId\', \'Required parameter requestParameters.organizationId was null or undefined when calling organizationsOrganizationIdServicesPost.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/organizations/{organization_id}/services`.replace(`{${"organization_id"}}`, encodeURIComponent(String(requestParameters.organizationId))),\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PostOrganizationServiceRequestToJSON"])(requestParameters.organizationServiceParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["CreateOrganizationServiceResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Create an organization service. Organization members with roles `admin` and `owner` can create an organization service. The new organization service has status `requested`. Organization services with status `requested` cannot be used and are invisible for users other than the member of the organization which requested the service. Services with status `requested` need to be validated or rejected by Meeco.\n     * Create an organization service\n     */\n    organizationsOrganizationIdServicesPost(organizationId, organizationServiceParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.organizationsOrganizationIdServicesPostRaw({ organizationId: organizationId, organizationServiceParams: organizationServiceParams });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/OrganizationsManagingServicesApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ReviewOfOrganizationsByMeecoApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReviewOfOrganizationsByMeecoApi", function() { return ReviewOfOrganizationsByMeecoApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass ReviewOfOrganizationsByMeecoApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * List all pending organization service requests.  This endpoint may be used only by Meeco. We will remove it from the public swagger file in future. This endpoint will be probably used by an internal organization management UI.  In addition to the usual session token this endpoint is secured by an additional token expected in header `admin-password`.\n     * List all pending organization service requests\n     */\n    managementRequestedOrganizationServicesGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["admin_password"] = this.configuration.apiKey("admin_password"); // adminPassword authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/management/requested_organization_services`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ListOrganizationServicesResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * List all pending organization service requests.  This endpoint may be used only by Meeco. We will remove it from the public swagger file in future. This endpoint will be probably used by an internal organization management UI.  In addition to the usual session token this endpoint is secured by an additional token expected in header `admin-password`.\n     * List all pending organization service requests\n     */\n    managementRequestedOrganizationServicesGet(nextPageAfter, perPage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.managementRequestedOrganizationServicesGetRaw({ nextPageAfter: nextPageAfter, perPage: perPage });\n            return yield response.value();\n        });\n    }\n    /**\n     * Reject an organization with status `requested`  This endpoint may be used only by Meeco. We will remove it from the public swagger file in future. This endpoint will be probably used by an internal organization management UI.  In addition to the usual session token this endpoint is secured by an additional token expected in header `admin-password`.\n     * Reject a requested organization service\n     */\n    managementRequestedOrganizationServicesIdRejectDeleteRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling managementRequestedOrganizationServicesIdRejectDelete.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["admin_password"] = this.configuration.apiKey("admin_password"); // adminPassword authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/management/requested_organization_services/{id}/reject`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["RejectOrganizationServicebyIdResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Reject an organization with status `requested`  This endpoint may be used only by Meeco. We will remove it from the public swagger file in future. This endpoint will be probably used by an internal organization management UI.  In addition to the usual session token this endpoint is secured by an additional token expected in header `admin-password`.\n     * Reject a requested organization service\n     */\n    managementRequestedOrganizationServicesIdRejectDelete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.managementRequestedOrganizationServicesIdRejectDeleteRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Validate an organization service  with status `requested`.  This endpoint may be used only by Meeco. We will remove it from the public swagger file in future. This endpoint will be probably used by an internal organization management UI.  In addition to the usual session token this endpoint is secured by an additional token expected in header `admin-password`.  An organization service can only be used  by users if it is validated.\n     * Validate a requested organization service\n     */\n    managementRequestedOrganizationServicesIdValidatePutRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling managementRequestedOrganizationServicesIdValidatePut.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["admin_password"] = this.configuration.apiKey("admin_password"); // adminPassword authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/management/requested_organization_services/{id}/validate`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'PUT\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ValidateOrganizationServicebyIdResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Validate an organization service  with status `requested`.  This endpoint may be used only by Meeco. We will remove it from the public swagger file in future. This endpoint will be probably used by an internal organization management UI.  In addition to the usual session token this endpoint is secured by an additional token expected in header `admin-password`.  An organization service can only be used  by users if it is validated.\n     * Validate a requested organization service\n     */\n    managementRequestedOrganizationServicesIdValidatePut(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.managementRequestedOrganizationServicesIdValidatePutRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * List all pending organization requests.  This endpoint may be used only by Meeco. We will remove it from the public swagger file in future. This endpoint will be probably used by an internal organization management UI.  In addition to the usual session token this endpoint is secured by an additional token expected in header `admin-password`.\n     * List all pending organizations requests\n     */\n    managementRequestedOrganizationsGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["admin_password"] = this.configuration.apiKey("admin_password"); // adminPassword authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/management/requested_organizations`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ListOrganizationsResponse2FromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * List all pending organization requests.  This endpoint may be used only by Meeco. We will remove it from the public swagger file in future. This endpoint will be probably used by an internal organization management UI.  In addition to the usual session token this endpoint is secured by an additional token expected in header `admin-password`.\n     * List all pending organizations requests\n     */\n    managementRequestedOrganizationsGet(nextPageAfter, perPage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.managementRequestedOrganizationsGetRaw({ nextPageAfter: nextPageAfter, perPage: perPage });\n            return yield response.value();\n        });\n    }\n    /**\n     * Reject an organization with status `requested`  This endpoint may be used only by Meeco. We will remove it from the public swagger file in future. This endpoint will be probably used by an internal organization management UI.  In addition to the usual session token this endpoint is secured by an additional token expected in header `admin-password`.\n     * Reject an requested organization\n     */\n    managementRequestedOrganizationsIdRejectDeleteRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling managementRequestedOrganizationsIdRejectDelete.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["admin_password"] = this.configuration.apiKey("admin_password"); // adminPassword authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/management/requested_organizations/{id}/reject`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["OrganizationResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Reject an organization with status `requested`  This endpoint may be used only by Meeco. We will remove it from the public swagger file in future. This endpoint will be probably used by an internal organization management UI.  In addition to the usual session token this endpoint is secured by an additional token expected in header `admin-password`.\n     * Reject an requested organization\n     */\n    managementRequestedOrganizationsIdRejectDelete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.managementRequestedOrganizationsIdRejectDeleteRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Validate an organization with status `requested`.  This endpoint may be used only by Meeco. We will remove it from the public swagger file in future. This endpoint will be probably used by an internal organization management UI.  In addition to the usual session token this endpoint is secured by an additional token expected in header `admin-password`.  Once an organization is validated, the following happens:  * The user who requested the organization becomes a member with role `owner` * It is now possible to invite other users as organization member * It is possible to create organization services * It is possible to link a user account as an organization agent * The organization is now visible to other users\n     * Validate a requested organization\n     */\n    managementRequestedOrganizationsIdValidatePutRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling managementRequestedOrganizationsIdValidatePut.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["admin_password"] = this.configuration.apiKey("admin_password"); // adminPassword authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/management/requested_organizations/{id}/validate`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'PUT\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["OrganizationResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Validate an organization with status `requested`.  This endpoint may be used only by Meeco. We will remove it from the public swagger file in future. This endpoint will be probably used by an internal organization management UI.  In addition to the usual session token this endpoint is secured by an additional token expected in header `admin-password`.  Once an organization is validated, the following happens:  * The user who requested the organization becomes a member with role `owner` * It is now possible to invite other users as organization member * It is possible to create organization services * It is possible to link a user account as an organization agent * The organization is now visible to other users\n     * Validate a requested organization\n     */\n    managementRequestedOrganizationsIdValidatePut(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.managementRequestedOrganizationsIdValidatePutRaw({ id: id });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ReviewOfOrganizationsByMeecoApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/SessionApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SessionApi", function() { return SessionApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass SessionApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Deletes either (1) all user sessions (that is, access tokens), (2) or all user sessions except for the session under which the current call is being executed.\n     * Deletes all user sessions\n     */\n    sessionAllDeleteRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.exceptCurrent !== undefined) {\n                queryParameters[\'except_current\'] = requestParameters.exceptCurrent;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/session/all`,\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Deletes either (1) all user sessions (that is, access tokens), (2) or all user sessions except for the session under which the current call is being executed.\n     * Deletes all user sessions\n     */\n    sessionAllDelete(exceptCurrent) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.sessionAllDeleteRaw({ exceptCurrent: exceptCurrent });\n        });\n    }\n    /**\n     * Delete the current session, logging the user out. The session is selected by the current authentication string, which is the only parameter needed.\n     * Log out / Delete Session\n     */\n    sessionDeleteRaw() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/session`,\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Delete the current session, logging the user out. The session is selected by the current authentication string, which is the only parameter needed.\n     * Log out / Delete Session\n     */\n    sessionDelete() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.sessionDeleteRaw();\n        });\n    }\n    /**\n     * Log in with the public key and obtain an session authentication string encrypted with the user\\\'s public key\n     * Log in with the public key\n     */\n    sessionPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            const response = yield this.request({\n                path: `/session`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PostSessionRequestToJSON"])(requestParameters.loginWithPublicKeyParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["CreateSessionResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Log in with the public key and obtain an session authentication string encrypted with the user\\\'s public key\n     * Log in with the public key\n     */\n    sessionPost(loginWithPublicKeyParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.sessionPostRaw({ loginWithPublicKeyParams: loginWithPublicKeyParams });\n            return yield response.value();\n        });\n    }\n    /**\n     * Given an existing session, the client can hit this endpoint to indicate that the user has reopened the app, generating a login event. This is currently used only in the Digital Vault app.\n     * Resume session\n     */\n    sessionResumePatchRaw() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/session/resume`,\n                method: \'PATCH\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["SessionResumeResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Given an existing session, the client can hit this endpoint to indicate that the user has reopened the app, generating a login event. This is currently used only in the Digital Vault app.\n     * Resume session\n     */\n    sessionResumePatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.sessionResumePatchRaw();\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/SessionApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/SharesApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SharesApi", function() { return SharesApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass SharesApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Read incoming shares as the recipient.  Only share records are fetched. Shared items and slots appear in the main feed of users\\\'s items.   Some shares require that the recipient accepts the terms of the share. This behavior is controled by field `acceptance_required`. By default all incoming shares are fetched, but you can also specify parameter `acceptance_required=acceptance_required` in order to only read shares which require acceptance.  Other possible states are:  * `acceptance_not_required` * `accepted` * `rejected`\n     * Read incoming shares\n     */\n    incomingSharesGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            if (requestParameters.acceptanceRequired !== undefined) {\n                queryParameters[\'acceptance_required\'] = requestParameters.acceptanceRequired;\n            }\n            if (requestParameters.shareIds !== undefined) {\n                queryParameters[\'share_ids\'] = requestParameters.shareIds;\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/incoming_shares`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["SharesIncomingResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Read incoming shares as the recipient.  Only share records are fetched. Shared items and slots appear in the main feed of users\\\'s items.   Some shares require that the recipient accepts the terms of the share. This behavior is controled by field `acceptance_required`. By default all incoming shares are fetched, but you can also specify parameter `acceptance_required=acceptance_required` in order to only read shares which require acceptance.  Other possible states are:  * `acceptance_not_required` * `accepted` * `rejected`\n     * Read incoming shares\n     */\n    incomingSharesGet(nextPageAfter, perPage, acceptanceRequired, shareIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.incomingSharesGetRaw({ nextPageAfter: nextPageAfter, perPage: perPage, acceptanceRequired: acceptanceRequired, shareIds: shareIds });\n            return yield response.value();\n        });\n    }\n    /**\n     * Accept share terms.  Some shares require that the recipient accepts the terms of the share. Until the terms are not accepted the share DEK is hidden.   Via this endpoint a recipient can accept terms of a share.\n     * Accept share terms\n     */\n    incomingSharesIdAcceptPutRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling incomingSharesIdAcceptPut.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/incoming_shares/{id}/accept`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'PUT\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["GetShareResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Accept share terms.  Some shares require that the recipient accepts the terms of the share. Until the terms are not accepted the share DEK is hidden.   Via this endpoint a recipient can accept terms of a share.\n     * Accept share terms\n     */\n    incomingSharesIdAcceptPut(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.incomingSharesIdAcceptPutRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Read an incoming share as the recipient.  Only a share record is fetched. Shared items and slots appear in the main feed of users\\\'s items.\n     * Read an incoming share\n     */\n    incomingSharesIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling incomingSharesIdGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/incoming_shares/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["GetShareResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Read an incoming share as the recipient.  Only a share record is fetched. Shared items and slots appear in the main feed of users\\\'s items.\n     * Read an incoming share\n     */\n    incomingSharesIdGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.incomingSharesIdGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Read an incoming share together with shared item, slots, and other associated data.  One and the same item can be shared to a recipient via different shares.   This endpoint renders the shared item in both cases, whether the item has been shared via the current share or via a different share of the same item.   In case the shared item has been shared via the current share then field `item_shared_via_another_share_id` is `NULL`.  If the item has been shared via a different share field `item_shared_via_another_share_id` contains the ID of that share and the client is advised to re-run the call with this ID.\n     * Read an incoming share together with the shared item and slots\n     */\n    incomingSharesIdItemGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling incomingSharesIdItemGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/incoming_shares/{id}/item`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ShareWithItemDataFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Read an incoming share together with shared item, slots, and other associated data.  One and the same item can be shared to a recipient via different shares.   This endpoint renders the shared item in both cases, whether the item has been shared via the current share or via a different share of the same item.   In case the shared item has been shared via the current share then field `item_shared_via_another_share_id` is `NULL`.  If the item has been shared via a different share field `item_shared_via_another_share_id` contains the ID of that share and the client is advised to re-run the call with this ID.\n     * Read an incoming share together with the shared item and slots\n     */\n    incomingSharesIdItemGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.incomingSharesIdItemGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Re-encrypt share data  Data in shared slots is initially encrypted with the share DEK. The share DEK is encrypted with the public key of the share recipient. When processing a share the client application is expected to decrypt the slot data and re-encrypt with the private DEK with this endpoint.\n     * Re-encrypt share data\n     */\n    itemsIdEncryptPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling itemsIdEncryptPost.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/items/{id}/encrypt`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PostItemEncryptRequestToJSON"])(requestParameters.encryptSlotsParam),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ItemResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Re-encrypt share data  Data in shared slots is initially encrypted with the share DEK. The share DEK is encrypted with the public key of the share recipient. When processing a share the client application is expected to decrypt the slot data and re-encrypt with the private DEK with this endpoint.\n     * Re-encrypt share data\n     */\n    itemsIdEncryptPost(id, encryptSlotsParam) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.itemsIdEncryptPostRaw({ id: id, encryptSlotsParam: encryptSlotsParam });\n            return yield response.value();\n        });\n    }\n    /**\n     * Updating all shares of one item is done by the item owner in one go.   A share DEK is encrypted with a public key of the recipient. In order to update shares the owner needs a public key of the recipient of each share. But some shares may be created by users different from the owner, and thus the owner might have no connection to recipients of those shares, and no access to those shares.  This problem is solved by * Putting a public key of the recipient and an identification of the keypair to which the public key belongs into each share record. * Providing a list of all public keys and share IDs for all shares of the given item via this endpoint   Getting this list is the first step in updating all shares of the item.\n     * Prepare an update of all shares of one item\n     */\n    itemsIdSharesGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling itemsIdSharesGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/items/{id}/shares`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["GetItemSharesResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Updating all shares of one item is done by the item owner in one go.   A share DEK is encrypted with a public key of the recipient. In order to update shares the owner needs a public key of the recipient of each share. But some shares may be created by users different from the owner, and thus the owner might have no connection to recipients of those shares, and no access to those shares.  This problem is solved by * Putting a public key of the recipient and an identification of the keypair to which the public key belongs into each share record. * Providing a list of all public keys and share IDs for all shares of the given item via this endpoint   Getting this list is the first step in updating all shares of the item.\n     * Prepare an update of all shares of one item\n     */\n    itemsIdSharesGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.itemsIdSharesGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Share data with other users.  Each share can be a share of all slots of the item, in that case `slot_id` is `NULL`, or it can be a share of just one slot. In this case `slot_id` references one of the slots of the item.  There are 3 users involved in each share:  * owner - the owner of the shared item * sender -  the user who shares data. Can be the owner or one of the recipients * recipient - the user who recieves the shared data.   Whether a non-owner may on-share a shared slot is defined in field `sharing_mode` as one of the following options:  * `owner` - no on-sharing is permitted (default)  * `anyone` - the sender may on-share the item   Some shares require that the recipient accepts the terms of the share. Until the terms are not accepted the share DEK is hidden.   Data in slots is initially encrypted with the DEK in field `encrypted_dek`. The DEK in `encrypted_dek` is encrypted with the public key of the share recipient. When processing a share the client application is expected to decrypt the slot data and re-encrypt with the private DEK.  A public key of the recipient is needed to encrypt the share DEK. Updating all shares of the same item is performed by the owner in one go. In a situation when a share has been created by a recipient, not the owner, and there is no connection between the owner and the recipient, the owner has no access to a public key of the recipient. In order to address this problem when a share is created we also add fields `public_key` and `keypair_external_id` from the connection record between the recipient and the sender. `keypair_external_id` identifies the keypair that the public key belongs to.  When a recipient of a share on-shares the data with someone else, nothing prevents him/her to encrypt some other data instead of the original data. We need a way to enforce integrity of on-shares. We do this with help of HMAC - an authentication code (a digest) obtained by running a cryptographic hash function over the data and a shared secret key.    Two fields in each slot are used for this purpose: * `encrypted_value_verification_key` - is a value verification key encrypted in the same way as the value itself: with the share DEK * `value_verification_hash` - the result of the HMAC function run on the slot value using `encrypted_value_verification_key`. `value_verification_hash` is stored as-is, unencrypted.   Only the owner of the data may send `encrypted_value_verification_key` when creating or updating the share. When other senders create a share, `encrypted_value_verification_key` must be `NULL`.  `value_verification_hash` may and should be sent by every sender, owner or not, because `value_verification_hash` must be re-encrypted with the share DEK for each share.  If the sender replaces `encrypted_value_verification_key` and/or the slot value, this will break the client-side verification against `encrypted_value_verification_key`.\n     * Share data with other users\n     */\n    itemsIdSharesPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling itemsIdSharesPost.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/items/{id}/shares`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PostItemSharesRequestToJSON"])(requestParameters.createSharesParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["SharesCreateResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Share data with other users.  Each share can be a share of all slots of the item, in that case `slot_id` is `NULL`, or it can be a share of just one slot. In this case `slot_id` references one of the slots of the item.  There are 3 users involved in each share:  * owner - the owner of the shared item * sender -  the user who shares data. Can be the owner or one of the recipients * recipient - the user who recieves the shared data.   Whether a non-owner may on-share a shared slot is defined in field `sharing_mode` as one of the following options:  * `owner` - no on-sharing is permitted (default)  * `anyone` - the sender may on-share the item   Some shares require that the recipient accepts the terms of the share. Until the terms are not accepted the share DEK is hidden.   Data in slots is initially encrypted with the DEK in field `encrypted_dek`. The DEK in `encrypted_dek` is encrypted with the public key of the share recipient. When processing a share the client application is expected to decrypt the slot data and re-encrypt with the private DEK.  A public key of the recipient is needed to encrypt the share DEK. Updating all shares of the same item is performed by the owner in one go. In a situation when a share has been created by a recipient, not the owner, and there is no connection between the owner and the recipient, the owner has no access to a public key of the recipient. In order to address this problem when a share is created we also add fields `public_key` and `keypair_external_id` from the connection record between the recipient and the sender. `keypair_external_id` identifies the keypair that the public key belongs to.  When a recipient of a share on-shares the data with someone else, nothing prevents him/her to encrypt some other data instead of the original data. We need a way to enforce integrity of on-shares. We do this with help of HMAC - an authentication code (a digest) obtained by running a cryptographic hash function over the data and a shared secret key.    Two fields in each slot are used for this purpose: * `encrypted_value_verification_key` - is a value verification key encrypted in the same way as the value itself: with the share DEK * `value_verification_hash` - the result of the HMAC function run on the slot value using `encrypted_value_verification_key`. `value_verification_hash` is stored as-is, unencrypted.   Only the owner of the data may send `encrypted_value_verification_key` when creating or updating the share. When other senders create a share, `encrypted_value_verification_key` must be `NULL`.  `value_verification_hash` may and should be sent by every sender, owner or not, because `value_verification_hash` must be re-encrypted with the share DEK for each share.  If the sender replaces `encrypted_value_verification_key` and/or the slot value, this will break the client-side verification against `encrypted_value_verification_key`.\n     * Share data with other users\n     */\n    itemsIdSharesPost(id, createSharesParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.itemsIdSharesPostRaw({ id: id, createSharesParams: createSharesParams });\n            return yield response.value();\n        });\n    }\n    /**\n     * Updating all shares of one item is done by the item owner in one go.  Before calling this endpoint the client application is expected to retrieve the list of shares IDs and public keys via `GET /items/{id}/shares`.  The POST body of this endpoint contains  * a list of share DEKs encrypted with public keys of share recipients * a list of slot values for each slot and each share, each encrypted with the DEK of the share that the slot belongs to  * Optionally: a list of completed `ClientTask` tasks  When a recipient of a share on-shares the data with someone else, nothing prevents him/her to encrypt some other data instead of the original data. We need a way to enforce integrity of on-shares. We do this with help of HMAC - an authentication code (a digest) obtained by running a cryptographic hash function over the data and a shared secret key.    Two fields in each slot are used for this purpose: * `encrypted_value_verification_key` - is a value verification key encrypted in the same way as the value itself: with the share DEK * `value_verification_hash` - the result of the HMAC function run on the slot value using `encrypted_value_verification_key`. `value_verification_hash` is stored as-is, unencrypted.   Only the owner of the data may send `encrypted_value_verification_key` when creating or updating the share. When other senders create a share, `encrypted_value_verification_key` must be `NULL`.  `value_verification_hash` may and should be sent by every sender, owner or not, because `value_verification_hash` must be re-encrypted with the share DEK for each share.  If the sender replaces `encrypted_value_verification_key` and/or the slot value, this will break the client-side verification against `encrypted_value_verification_key`.\n     * Update all shares of one item\n     */\n    itemsIdSharesPutRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling itemsIdSharesPut.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/items/{id}/shares`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'PUT\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PutItemSharesRequestToJSON"])(requestParameters.updateItemSharesParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ItemSharesUpdateResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Updating all shares of one item is done by the item owner in one go.  Before calling this endpoint the client application is expected to retrieve the list of shares IDs and public keys via `GET /items/{id}/shares`.  The POST body of this endpoint contains  * a list of share DEKs encrypted with public keys of share recipients * a list of slot values for each slot and each share, each encrypted with the DEK of the share that the slot belongs to  * Optionally: a list of completed `ClientTask` tasks  When a recipient of a share on-shares the data with someone else, nothing prevents him/her to encrypt some other data instead of the original data. We need a way to enforce integrity of on-shares. We do this with help of HMAC - an authentication code (a digest) obtained by running a cryptographic hash function over the data and a shared secret key.    Two fields in each slot are used for this purpose: * `encrypted_value_verification_key` - is a value verification key encrypted in the same way as the value itself: with the share DEK * `value_verification_hash` - the result of the HMAC function run on the slot value using `encrypted_value_verification_key`. `value_verification_hash` is stored as-is, unencrypted.   Only the owner of the data may send `encrypted_value_verification_key` when creating or updating the share. When other senders create a share, `encrypted_value_verification_key` must be `NULL`.  `value_verification_hash` may and should be sent by every sender, owner or not, because `value_verification_hash` must be re-encrypted with the share DEK for each share.  If the sender replaces `encrypted_value_verification_key` and/or the slot value, this will break the client-side verification against `encrypted_value_verification_key`.\n     * Update all shares of one item\n     */\n    itemsIdSharesPut(id, updateItemSharesParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.itemsIdSharesPutRaw({ id: id, updateItemSharesParams: updateItemSharesParams });\n            return yield response.value();\n        });\n    }\n    /**\n     * Read outgoing shares as the sender.  Only share records are fetched.\n     * Read outgoing shares\n     */\n    outgoingSharesGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters.nextPageAfter !== undefined) {\n                queryParameters[\'next_page_after\'] = requestParameters.nextPageAfter;\n            }\n            if (requestParameters.perPage !== undefined) {\n                queryParameters[\'per_page\'] = requestParameters.perPage;\n            }\n            if (requestParameters.itemIds) {\n                queryParameters[\'item_ids\'] = requestParameters.itemIds.join(_runtime__WEBPACK_IMPORTED_MODULE_0__["COLLECTION_FORMATS"]["csv"]);\n            }\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/outgoing_shares`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["SharesOutgoingResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Read outgoing shares as the sender.  Only share records are fetched.\n     * Read outgoing shares\n     */\n    outgoingSharesGet(nextPageAfter, perPage, itemIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.outgoingSharesGetRaw({ nextPageAfter: nextPageAfter, perPage: perPage, itemIds: itemIds });\n            return yield response.value();\n        });\n    }\n    /**\n     * Read an outgoing share as the sender.  Only a share record is fetched.\n     * Read an outgoing share\n     */\n    outgoingSharesIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling outgoingSharesIdGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/outgoing_shares/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["GetShareResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Read an outgoing share as the sender.  Only a share record is fetched.\n     * Read an outgoing share\n     */\n    outgoingSharesIdGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.outgoingSharesIdGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Delete a share. Both the owner of the shared data and the recipient of the share may delete it.\n     * Delete a share\n     */\n    sharesIdDeleteRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling sharesIdDelete.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/shares/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Delete a share. Both the owner of the shared data and the recipient of the share may delete it.\n     * Delete a share\n     */\n    sharesIdDelete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.sharesIdDeleteRaw({ id: id });\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/SharesApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/SlotApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SlotApi", function() { return SlotApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass SlotApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Select a Slot by `id` and delete it from the database.\n     * Delete a Slot\n     */\n    slotsIdDeleteRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling slotsIdDelete.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/slots/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Select a Slot by `id` and delete it from the database.\n     * Delete a Slot\n     */\n    slotsIdDelete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.slotsIdDeleteRaw({ id: id });\n        });\n    }\n    /**\n     * Retrieve a Slot\\\'s fields by the record\\\'s `id`.\n     * Get a Slot\n     */\n    slotsIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling slotsIdGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/slots/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["SlotResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Retrieve a Slot\\\'s fields by the record\\\'s `id`.\n     * Get a Slot\n     */\n    slotsIdGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.slotsIdGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * Select a Slot by `id` and update its fields.\n     * Update a slot\n     */\n    slotsIdPutRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling slotsIdPut.\');\n            }\n            if (requestParameters.updateSlotParams === null || requestParameters.updateSlotParams === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'updateSlotParams\', \'Required parameter requestParameters.updateSlotParams was null or undefined when calling slotsIdPut.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/slots/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'PUT\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PutSlotsRequestToJSON"])(requestParameters.updateSlotParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["SlotResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Select a Slot by `id` and update its fields.\n     * Update a slot\n     */\n    slotsIdPut(id, updateSlotParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.slotsIdPutRaw({ id: id, updateSlotParams: updateSlotParams });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/SlotApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ThumbnailApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThumbnailApi", function() { return ThumbnailApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass ThumbnailApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Delete a Thumbnail specified by `id`.\n     * Delete thumbnail\n     */\n    thumbnailsIdDeleteRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling thumbnailsIdDelete.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/thumbnails/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Delete a Thumbnail specified by `id`.\n     * Delete thumbnail\n     */\n    thumbnailsIdDelete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.thumbnailsIdDeleteRaw({ id: id });\n        });\n    }\n    /**\n     * Retrieve a thumbnail specified by `id`.\n     * View thumbnail\n     */\n    thumbnailsIdGetRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.id === null || requestParameters.id === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'id\', \'Required parameter requestParameters.id was null or undefined when calling thumbnailsIdGet.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/thumbnails/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["BlobApiResponse"](response);\n        });\n    }\n    /**\n     * Retrieve a thumbnail specified by `id`.\n     * View thumbnail\n     */\n    thumbnailsIdGet(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.thumbnailsIdGetRaw({ id: id });\n            return yield response.value();\n        });\n    }\n    /**\n     * This is used to upload a thumbnail version of an already uploaded image file. The new image will be contained in `binary[file]`, and `binary_id`specifies the associated Binary.\n     * Upload thumbnail\n     */\n    thumbnailsPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters.binaryFile === null || requestParameters.binaryFile === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'binaryFile\', \'Required parameter requestParameters.binaryFile was null or undefined when calling thumbnailsPost.\');\n            }\n            if (requestParameters.binaryId === null || requestParameters.binaryId === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'binaryId\', \'Required parameter requestParameters.binaryId was null or undefined when calling thumbnailsPost.\');\n            }\n            if (requestParameters.sizeType === null || requestParameters.sizeType === undefined) {\n                throw new _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"](\'sizeType\', \'Required parameter requestParameters.sizeType was null or undefined when calling thumbnailsPost.\');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const consumes = [\n                { contentType: \'multipart/form-data\' },\n            ];\n            // @ts-ignore: canConsumeForm may be unused\n            const canConsumeForm = _runtime__WEBPACK_IMPORTED_MODULE_0__["canConsumeForm"](consumes);\n            let formParams;\n            let useForm = false;\n            // use FormData to transmit files using content-type "multipart/form-data"\n            useForm = canConsumeForm;\n            if (useForm) {\n                formParams = new FormData();\n            }\n            else {\n                formParams = new URLSearchParams();\n            }\n            if (requestParameters.binaryFile !== undefined) {\n                formParams.append(\'binary[file]\', requestParameters.binaryFile);\n            }\n            if (requestParameters.binaryId !== undefined) {\n                formParams.append(\'binary_id\', requestParameters.binaryId);\n            }\n            if (requestParameters.sizeType !== undefined) {\n                formParams.append(\'size_type\', requestParameters.sizeType);\n            }\n            const response = yield this.request({\n                path: `/thumbnails`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: formParams,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["ThumbnailResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * This is used to upload a thumbnail version of an already uploaded image file. The new image will be contained in `binary[file]`, and `binary_id`specifies the associated Binary.\n     * Upload thumbnail\n     */\n    thumbnailsPost(binaryFile, binaryId, sizeType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.thumbnailsPostRaw({ binaryFile: binaryFile, binaryId: binaryId, sizeType: sizeType });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ThumbnailApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/UserApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserApi", function() { return UserApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass UserApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Delete the account associated with the currently authenticated user.\n     * Delete an account\n     */\n    meDeleteRaw() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/me`,\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Delete the account associated with the currently authenticated user.\n     * Delete an account\n     */\n    meDelete() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.meDeleteRaw();\n        });\n    }\n    /**\n     * Removes the account associated with the currently authenticated user from the queue for asynchronous deletion.\n     * Remove current user from queue for deletion\n     */\n    meDeletionQueueDeleteRaw() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/me/deletion_queue`,\n                method: \'DELETE\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Removes the account associated with the currently authenticated user from the queue for asynchronous deletion.\n     * Remove current user from queue for deletion\n     */\n    meDeletionQueueDelete() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.meDeletionQueueDeleteRaw();\n        });\n    }\n    /**\n     * Queues the account associated with the currently authenticated user for asynchronous deletion.\n     * Queue current user for deletion\n     */\n    meDeletionQueuePostRaw() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/me/deletion_queue`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["DeletionQueueItemResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Queues the account associated with the currently authenticated user for asynchronous deletion.\n     * Queue current user for deletion\n     */\n    meDeletionQueuePost() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.meDeletionQueuePostRaw();\n            return yield response.value();\n        });\n    }\n    /**\n     * Returns account details for the currently authenticated user.\n     * Show current user\n     */\n    meGetRaw() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/me`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["MeResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Returns account details for the currently authenticated user.\n     * Show current user\n     */\n    meGet() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.meGetRaw();\n            return yield response.value();\n        });\n    }\n    /**\n     * Takes a public key and an admission token and creates a user account.\n     * Create a user\n     */\n    mePostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            const response = yield this.request({\n                path: `/me`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PostMeRequestToJSON"])(requestParameters.createUserParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["PostMeResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Takes a public key and an admission token and creates a user account.\n     * Create a user\n     */\n    mePost(createUserParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.mePostRaw({ createUserParams: createUserParams });\n            return yield response.value();\n        });\n    }\n    /**\n     * Updates details for the currently authenticated user.\n     * Update current user\n     */\n    mePutRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/me`,\n                method: \'PUT\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: Object(_models__WEBPACK_IMPORTED_MODULE_1__["PutMeRequestToJSON"])(requestParameters.updateUserParams),\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["MeResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Updates details for the currently authenticated user.\n     * Update current user\n     */\n    mePut(updateUserParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.mePutRaw({ updateUserParams: updateUserParams });\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/UserApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/VerificationsApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VerificationsApi", function() { return VerificationsApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n/**\n *\n */\nclass VerificationsApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Send an invitation\n     */\n    verificationsPostRaw(requestParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters[\'Content-Type\'] = \'application/json\';\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Delegation-Id"] = this.configuration.apiKey("Meeco-Delegation-Id"); // meecoDelegationId authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["authorizationoidc2"] = this.configuration.apiKey("authorizationoidc2"); // oidc2UserAuthToken authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // userAuthToken authentication\n            }\n            const response = yield this.request({\n                path: `/verifications`,\n                method: \'POST\',\n                headers: headerParameters,\n                query: queryParameters,\n                body: requestParameters.requestOriginParams,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"](response);\n        });\n    }\n    /**\n     * Send an invitation\n     */\n    verificationsPost(requestOriginParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.verificationsPostRaw({ requestOriginParams: requestOriginParams });\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/VerificationsApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/VersionApi.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VersionApi", function() { return VersionApi; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n *\n */\nclass VersionApi extends _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"] {\n    /**\n     * Returns the API version and the component name\n     * Returns the API version and the component name\n     */\n    versionGetRaw() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n                headerParameters["Meeco-Subscription-Key"] = this.configuration.apiKey("Meeco-Subscription-Key"); // subscriptionKey authentication\n            }\n            const response = yield this.request({\n                path: `/version`,\n                method: \'GET\',\n                headers: headerParameters,\n                query: queryParameters,\n            });\n            return new _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"](response, (jsonValue) => Object(_models__WEBPACK_IMPORTED_MODULE_1__["VersionResponseFromJSON"])(jsonValue));\n        });\n    }\n    /**\n     * Returns the API version and the component name\n     * Returns the API version and the component name\n     */\n    versionGet() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.versionGetRaw();\n            return yield response.value();\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/VersionApi.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/index.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ActivityApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ActivityApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ActivityApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityApi", function() { return _ActivityApi__WEBPACK_IMPORTED_MODULE_0__["ActivityApi"]; });\n\n/* harmony import */ var _AdmissionTokenApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AdmissionTokenApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/AdmissionTokenApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenApi", function() { return _AdmissionTokenApi__WEBPACK_IMPORTED_MODULE_1__["AdmissionTokenApi"]; });\n\n/* harmony import */ var _AlertsApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AlertsApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/AlertsApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AlertsApi", function() { return _AlertsApi__WEBPACK_IMPORTED_MODULE_2__["AlertsApi"]; });\n\n/* harmony import */ var _AssociationsApi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AssociationsApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/AssociationsApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssociationsApi", function() { return _AssociationsApi__WEBPACK_IMPORTED_MODULE_3__["AssociationsApi"]; });\n\n/* harmony import */ var _AttachmentApi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AttachmentApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/AttachmentApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentApi", function() { return _AttachmentApi__WEBPACK_IMPORTED_MODULE_4__["AttachmentApi"]; });\n\n/* harmony import */ var _ClassificationNodeApi__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ClassificationNodeApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ClassificationNodeApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeApi", function() { return _ClassificationNodeApi__WEBPACK_IMPORTED_MODULE_5__["ClassificationNodeApi"]; });\n\n/* harmony import */ var _ClientTaskQueueApi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ClientTaskQueueApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ClientTaskQueueApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueApi", function() { return _ClientTaskQueueApi__WEBPACK_IMPORTED_MODULE_6__["ClientTaskQueueApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueGetStateEnum", function() { return _ClientTaskQueueApi__WEBPACK_IMPORTED_MODULE_6__["ClientTaskQueueGetStateEnum"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueGetWorkTypeEnum", function() { return _ClientTaskQueueApi__WEBPACK_IMPORTED_MODULE_6__["ClientTaskQueueGetWorkTypeEnum"]; });\n\n/* harmony import */ var _ConnectionApi__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ConnectionApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ConnectionApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionApi", function() { return _ConnectionApi__WEBPACK_IMPORTED_MODULE_7__["ConnectionApi"]; });\n\n/* harmony import */ var _DelegationApi__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./DelegationApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/DelegationApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DelegationApi", function() { return _DelegationApi__WEBPACK_IMPORTED_MODULE_8__["DelegationApi"]; });\n\n/* harmony import */ var _DirectAttachmentsApi__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./DirectAttachmentsApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/DirectAttachmentsApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentsApi", function() { return _DirectAttachmentsApi__WEBPACK_IMPORTED_MODULE_9__["DirectAttachmentsApi"]; });\n\n/* harmony import */ var _EventsApi__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./EventsApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/EventsApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventsApi", function() { return _EventsApi__WEBPACK_IMPORTED_MODULE_10__["EventsApi"]; });\n\n/* harmony import */ var _ImageApi__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ImageApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ImageApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImageApi", function() { return _ImageApi__WEBPACK_IMPORTED_MODULE_11__["ImageApi"]; });\n\n/* harmony import */ var _InvitationApi__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./InvitationApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/InvitationApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationApi", function() { return _InvitationApi__WEBPACK_IMPORTED_MODULE_12__["InvitationApi"]; });\n\n/* harmony import */ var _ItemApi__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ItemApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ItemApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemApi", function() { return _ItemApi__WEBPACK_IMPORTED_MODULE_13__["ItemApi"]; });\n\n/* harmony import */ var _ItemTemplateApi__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./ItemTemplateApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ItemTemplateApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplateApi", function() { return _ItemTemplateApi__WEBPACK_IMPORTED_MODULE_14__["ItemTemplateApi"]; });\n\n/* harmony import */ var _MessageApi__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./MessageApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/MessageApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MessageApi", function() { return _MessageApi__WEBPACK_IMPORTED_MODULE_15__["MessageApi"]; });\n\n/* harmony import */ var _OrganizationsForVaultUsersApi__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./OrganizationsForVaultUsersApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/OrganizationsForVaultUsersApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsForVaultUsersApi", function() { return _OrganizationsForVaultUsersApi__WEBPACK_IMPORTED_MODULE_16__["OrganizationsForVaultUsersApi"]; });\n\n/* harmony import */ var _OrganizationsManagingMembersApi__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./OrganizationsManagingMembersApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/OrganizationsManagingMembersApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsManagingMembersApi", function() { return _OrganizationsManagingMembersApi__WEBPACK_IMPORTED_MODULE_17__["OrganizationsManagingMembersApi"]; });\n\n/* harmony import */ var _OrganizationsManagingOrganizationsApi__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./OrganizationsManagingOrganizationsApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/OrganizationsManagingOrganizationsApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsManagingOrganizationsApi", function() { return _OrganizationsManagingOrganizationsApi__WEBPACK_IMPORTED_MODULE_18__["OrganizationsManagingOrganizationsApi"]; });\n\n/* harmony import */ var _OrganizationsManagingServicesApi__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./OrganizationsManagingServicesApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/OrganizationsManagingServicesApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsManagingServicesApi", function() { return _OrganizationsManagingServicesApi__WEBPACK_IMPORTED_MODULE_19__["OrganizationsManagingServicesApi"]; });\n\n/* harmony import */ var _ReviewOfOrganizationsByMeecoApi__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./ReviewOfOrganizationsByMeecoApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ReviewOfOrganizationsByMeecoApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReviewOfOrganizationsByMeecoApi", function() { return _ReviewOfOrganizationsByMeecoApi__WEBPACK_IMPORTED_MODULE_20__["ReviewOfOrganizationsByMeecoApi"]; });\n\n/* harmony import */ var _SessionApi__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./SessionApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/SessionApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionApi", function() { return _SessionApi__WEBPACK_IMPORTED_MODULE_21__["SessionApi"]; });\n\n/* harmony import */ var _SharesApi__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./SharesApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/SharesApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesApi", function() { return _SharesApi__WEBPACK_IMPORTED_MODULE_22__["SharesApi"]; });\n\n/* harmony import */ var _SlotApi__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./SlotApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/SlotApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlotApi", function() { return _SlotApi__WEBPACK_IMPORTED_MODULE_23__["SlotApi"]; });\n\n/* harmony import */ var _ThumbnailApi__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./ThumbnailApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/ThumbnailApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ThumbnailApi", function() { return _ThumbnailApi__WEBPACK_IMPORTED_MODULE_24__["ThumbnailApi"]; });\n\n/* harmony import */ var _UserApi__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./UserApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/UserApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserApi", function() { return _UserApi__WEBPACK_IMPORTED_MODULE_25__["UserApi"]; });\n\n/* harmony import */ var _VerificationsApi__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./VerificationsApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/VerificationsApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VerificationsApi", function() { return _VerificationsApi__WEBPACK_IMPORTED_MODULE_26__["VerificationsApi"]; });\n\n/* harmony import */ var _VersionApi__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./VersionApi */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/VersionApi.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VersionApi", function() { return _VersionApi__WEBPACK_IMPORTED_MODULE_27__["VersionApi"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/index.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/index.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BASE_PATH", function() { return _runtime__WEBPACK_IMPORTED_MODULE_0__["BASE_PATH"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BaseAPI", function() { return _runtime__WEBPACK_IMPORTED_MODULE_0__["BaseAPI"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RequiredError", function() { return _runtime__WEBPACK_IMPORTED_MODULE_0__["RequiredError"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "COLLECTION_FORMATS", function() { return _runtime__WEBPACK_IMPORTED_MODULE_0__["COLLECTION_FORMATS"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Configuration", function() { return _runtime__WEBPACK_IMPORTED_MODULE_0__["Configuration"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "exists", function() { return _runtime__WEBPACK_IMPORTED_MODULE_0__["exists"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "querystring", function() { return _runtime__WEBPACK_IMPORTED_MODULE_0__["querystring"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapValues", function() { return _runtime__WEBPACK_IMPORTED_MODULE_0__["mapValues"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "canConsumeForm", function() { return _runtime__WEBPACK_IMPORTED_MODULE_0__["canConsumeForm"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "JSONApiResponse", function() { return _runtime__WEBPACK_IMPORTED_MODULE_0__["JSONApiResponse"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VoidApiResponse", function() { return _runtime__WEBPACK_IMPORTED_MODULE_0__["VoidApiResponse"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BlobApiResponse", function() { return _runtime__WEBPACK_IMPORTED_MODULE_0__["BlobApiResponse"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextApiResponse", function() { return _runtime__WEBPACK_IMPORTED_MODULE_0__["TextApiResponse"]; });\n\n/* harmony import */ var _apis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apis */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/apis/index.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["ActivityApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["AdmissionTokenApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AlertsApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["AlertsApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssociationsApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["AssociationsApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["AttachmentApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["ClassificationNodeApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["ClientTaskQueueApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueGetStateEnum", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["ClientTaskQueueGetStateEnum"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueGetWorkTypeEnum", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["ClientTaskQueueGetWorkTypeEnum"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["ConnectionApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DelegationApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["DelegationApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentsApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["DirectAttachmentsApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventsApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["EventsApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImageApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["ImageApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["InvitationApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["ItemApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplateApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["ItemTemplateApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MessageApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["MessageApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsForVaultUsersApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["OrganizationsForVaultUsersApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsManagingMembersApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["OrganizationsManagingMembersApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsManagingOrganizationsApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["OrganizationsManagingOrganizationsApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsManagingServicesApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["OrganizationsManagingServicesApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReviewOfOrganizationsByMeecoApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["ReviewOfOrganizationsByMeecoApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["SessionApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["SharesApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlotApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["SlotApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ThumbnailApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["ThumbnailApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["UserApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VerificationsApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["VerificationsApi"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VersionApi", function() { return _apis__WEBPACK_IMPORTED_MODULE_1__["VersionApi"]; });\n\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./models */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivitiesResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ActivitiesResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivitiesResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ActivitiesResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivitiesResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ActivitiesResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ActivityFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ActivityFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ActivityToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AdmissionTokenFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AdmissionTokenFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AdmissionTokenToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AdmissionTokenResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AdmissionTokenResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AdmissionTokenResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AlertsFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AlertsFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AlertsFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AlertsFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AlertsToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AlertsToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AlertsResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AlertsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AlertsResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AlertsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AlertsResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AlertsResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssociationFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AssociationFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssociationFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AssociationFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssociationToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AssociationToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssociationResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AssociationResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssociationResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AssociationResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssociationResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AssociationResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectDownloadUrlFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentDirectDownloadUrlFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectDownloadUrlFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentDirectDownloadUrlFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectDownloadUrlToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentDirectDownloadUrlToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectDownloadUrlResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentDirectDownloadUrlResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectDownloadUrlResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentDirectDownloadUrlResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectDownloadUrlResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentDirectDownloadUrlResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectUploadUrlFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentDirectUploadUrlFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectUploadUrlFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentDirectUploadUrlFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectUploadUrlToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentDirectUploadUrlToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectUploadUrlResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentDirectUploadUrlResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectUploadUrlResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentDirectUploadUrlResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectUploadUrlResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentDirectUploadUrlResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentsResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentsResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentsResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["AttachmentsResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChildPublicKeyForConnectionFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ChildPublicKeyForConnectionFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChildPublicKeyForConnectionFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ChildPublicKeyForConnectionFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChildPublicKeyForConnectionToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ChildPublicKeyForConnectionToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClassificationNodeFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClassificationNodeFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClassificationNodeToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClassificationNodeResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClassificationNodeResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClassificationNodeResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodesClassificationNodeFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClassificationNodesClassificationNodeFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodesClassificationNodeFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClassificationNodesClassificationNodeFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodesClassificationNodeToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClassificationNodesClassificationNodeToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodesResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClassificationNodesResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodesResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClassificationNodesResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodesResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClassificationNodesResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClientTaskFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClientTaskFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClientTaskToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClientTaskQueueResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClientTaskQueueResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClientTaskQueueResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueResponse1FromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClientTaskQueueResponse1FromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueResponse1FromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClientTaskQueueResponse1FromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueResponse1ToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ClientTaskQueueResponse1ToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComponentFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ComponentFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComponentFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ComponentFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComponentToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ComponentToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ConnectionFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ConnectionFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ConnectionToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ConnectionResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ConnectionResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ConnectionResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionsResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ConnectionsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionsResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ConnectionsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionsResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ConnectionsResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateAttachmentResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateAttachmentResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateAttachmentResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateAttachmentResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateAttachmentResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateAttachmentResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserParamsFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateChildUserParamsFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserParamsFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateChildUserParamsFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserParamsToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateChildUserParamsToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateChildUserResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateChildUserResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateChildUserResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateOrganizationServiceResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateOrganizationServiceResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateOrganizationServiceResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateOrganizationServiceResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateOrganizationServiceResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateOrganizationServiceResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateSessionResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateSessionResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateSessionResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateSessionResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateSessionResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateSessionResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateSessionResponseSessionFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateSessionResponseSessionFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateSessionResponseSessionFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateSessionResponseSessionFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateSessionResponseSessionToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["CreateSessionResponseSessionToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeletionQueueItemResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["DeletionQueueItemResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeletionQueueItemResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["DeletionQueueItemResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeletionQueueItemResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["DeletionQueueItemResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["DirectAttachmentFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["DirectAttachmentFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["DirectAttachmentToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["DirectAttachmentResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["DirectAttachmentResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["DirectAttachmentResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EncryptedSlotValueFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["EncryptedSlotValueFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EncryptedSlotValueFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["EncryptedSlotValueFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EncryptedSlotValueToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["EncryptedSlotValueToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ErrFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ErrFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ErrToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrorsResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ErrorsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrorsResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ErrorsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrorsResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ErrorsResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["EventFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["EventFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["EventToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["EventResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["EventResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["EventResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventsResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["EventsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventsResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["EventsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventsResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["EventsResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetItemSharesResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetItemSharesResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetItemSharesResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetItemSharesResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetItemSharesResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetItemSharesResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetItemSharesResponseSharesFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetItemSharesResponseSharesFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetItemSharesResponseSharesFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetItemSharesResponseSharesFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetItemSharesResponseSharesToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetItemSharesResponseSharesToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetMessagesResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetMessagesResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetMessagesResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetMessagesResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetMessagesResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetMessagesResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationServicebyIdResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetOrganizationServicebyIdResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationServicebyIdResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetOrganizationServicebyIdResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationServicebyIdResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetOrganizationServicebyIdResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationbyIdResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetOrganizationbyIdResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationbyIdResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetOrganizationbyIdResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationbyIdResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetOrganizationbyIdResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetShareResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetShareResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetShareResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetShareResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetShareResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["GetShareResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InlineObjectFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["InlineObjectFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InlineObjectFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["InlineObjectFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InlineObjectToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["InlineObjectToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InlineResponse201FromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["InlineResponse201FromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InlineResponse201FromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["InlineResponse201FromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InlineResponse201ToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["InlineResponse201ToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["InvitationFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["InvitationFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["InvitationToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["InvitationResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["InvitationResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["InvitationResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationsResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["InvitationsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationsResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["InvitationsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationsResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["InvitationsResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemSharesUpdateResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemSharesUpdateResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemSharesUpdateResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemSharesUpdateResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemSharesUpdateResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemSharesUpdateResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplateFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemTemplateFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplateFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemTemplateFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplateToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemTemplateToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplateResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemTemplateResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplateResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemTemplateResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplateResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemTemplateResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplatesResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemTemplatesResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplatesResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemTemplatesResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplatesResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemTemplatesResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdEncryptSlotsFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemsIdEncryptSlotsFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdEncryptSlotsFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemsIdEncryptSlotsFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdEncryptSlotsToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemsIdEncryptSlotsToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdSharesShareDeksFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemsIdSharesShareDeksFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdSharesShareDeksFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemsIdSharesShareDeksFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdSharesShareDeksToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemsIdSharesShareDeksToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdSharesSlotValuesFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemsIdSharesSlotValuesFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdSharesSlotValuesFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemsIdSharesSlotValuesFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdSharesSlotValuesToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemsIdSharesSlotValuesToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ItemsResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationMemberResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ListOrganizationMemberResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationMemberResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ListOrganizationMemberResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationMemberResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ListOrganizationMemberResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationServicesResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ListOrganizationServicesResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationServicesResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ListOrganizationServicesResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationServicesResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ListOrganizationServicesResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ListOrganizationsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ListOrganizationsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ListOrganizationsResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponse1FromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ListOrganizationsResponse1FromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponse1FromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ListOrganizationsResponse1FromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponse1ToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ListOrganizationsResponse1ToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponse2FromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ListOrganizationsResponse2FromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponse2FromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ListOrganizationsResponse2FromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponse2ToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ListOrganizationsResponse2ToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["MeResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["MeResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["MeResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MessageFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["MessageFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MessageFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["MessageFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MessageToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["MessageToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MetaFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["MetaFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MetaFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["MetaFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MetaToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["MetaToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedAttachmentAttributesFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["NestedAttachmentAttributesFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedAttachmentAttributesFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["NestedAttachmentAttributesFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedAttachmentAttributesToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["NestedAttachmentAttributesToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedClassificationNodeAttributesFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["NestedClassificationNodeAttributesFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedClassificationNodeAttributesFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["NestedClassificationNodeAttributesFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedClassificationNodeAttributesToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["NestedClassificationNodeAttributesToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedSlotAttributesFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["NestedSlotAttributesFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedSlotAttributesFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["NestedSlotAttributesFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedSlotAttributesToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["NestedSlotAttributesToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationAgentLoginDetailResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationAgentLoginDetailResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationAgentLoginDetailResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationAgentLoginDetailResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationAgentLoginDetailResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationAgentLoginDetailResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationMemberFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationMemberFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationMemberFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationMemberFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationMemberToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationMemberToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsIdOrganizationFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationsIdOrganizationFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsIdOrganizationFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationsIdOrganizationFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsIdOrganizationToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationsIdOrganizationToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsOrganizationIdMembersIdOrganizationMemberToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationsOrganizationIdMembersIdOrganizationMemberToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsOrganizationIdServicesIdServiceFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationsOrganizationIdServicesIdServiceFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsOrganizationIdServicesIdServiceFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationsOrganizationIdServicesIdServiceFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsOrganizationIdServicesIdServiceToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OrganizationsOrganizationIdServicesIdServiceToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OwnConnectionDataFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OwnConnectionDataFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OwnConnectionDataFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OwnConnectionDataFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OwnConnectionDataToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["OwnConnectionDataToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ParentPublicKeyForConnectionFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ParentPublicKeyForConnectionFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ParentPublicKeyForConnectionFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ParentPublicKeyForConnectionFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ParentPublicKeyForConnectionToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ParentPublicKeyForConnectionToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostAttachmentDirectUploadUrlBlobRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostAttachmentDirectUploadUrlBlobRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostAttachmentDirectUploadUrlBlobRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostAttachmentDirectUploadUrlBlobRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostAttachmentDirectUploadUrlBlobRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostAttachmentDirectUploadUrlBlobRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostAttachmentDirectUploadUrlRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostAttachmentDirectUploadUrlRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostAttachmentDirectUploadUrlRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostAttachmentDirectUploadUrlRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostAttachmentDirectUploadUrlRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostAttachmentDirectUploadUrlRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostConnectionFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostConnectionFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostConnectionToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionPublicKeyFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostConnectionPublicKeyFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionPublicKeyFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostConnectionPublicKeyFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionPublicKeyToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostConnectionPublicKeyToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionsRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostConnectionsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionsRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostConnectionsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionsRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostConnectionsRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostCreateAttachmentBlobRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostCreateAttachmentBlobRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostCreateAttachmentBlobRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostCreateAttachmentBlobRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostCreateAttachmentBlobRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostCreateAttachmentBlobRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostCreateAttachmentRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostCreateAttachmentRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostCreateAttachmentRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostCreateAttachmentRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostCreateAttachmentRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostCreateAttachmentRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostEventsRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostEventsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostEventsRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostEventsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostEventsRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostEventsRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostInvitationFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostInvitationFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostInvitationToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationPublicKeyFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostInvitationPublicKeyFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationPublicKeyFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostInvitationPublicKeyFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationPublicKeyToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostInvitationPublicKeyToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationsRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostInvitationsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationsRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostInvitationsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationsRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostInvitationsRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemEncryptRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemEncryptRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemEncryptRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemEncryptRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemEncryptRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemEncryptRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemSharesRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemSharesRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemSharesRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemSharesRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemSharesRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemSharesRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemSharesRequestShareFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemSharesRequestShareFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemSharesRequestShareFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemSharesRequestShareFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemSharesRequestShareToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemSharesRequestShareToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemTemplateRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemTemplateRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemTemplateRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemTemplateRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemTemplateRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemTemplateRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemTemplateRequestSlotAttributesFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemTemplateRequestSlotAttributesFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemTemplateRequestSlotAttributesFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemTemplateRequestSlotAttributesFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemTemplateRequestSlotAttributesToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemTemplateRequestSlotAttributesToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsAssociationsRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemsAssociationsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsAssociationsRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemsAssociationsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsAssociationsRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemsAssociationsRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemsRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsRequestItemFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemsRequestItemFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsRequestItemFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemsRequestItemFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsRequestItemToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostItemsRequestItemToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostMeRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostMeRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostMeRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostMeRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostMeRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostMeRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostMeResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostMeResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostMeResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostMeResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostMeResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostMeResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostOrganizationRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostOrganizationRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostOrganizationRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostOrganizationRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostOrganizationRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostOrganizationRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostOrganizationServiceRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostOrganizationServiceRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostOrganizationServiceRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostOrganizationServiceRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostOrganizationServiceRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostOrganizationServiceRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostServiceRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostServiceRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostServiceRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostServiceRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostServiceRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostServiceRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostSessionRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostSessionRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostSessionRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostSessionRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostSessionRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PostSessionRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PublicInvitationFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PublicInvitationFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PublicInvitationFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PublicInvitationFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PublicInvitationToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PublicInvitationToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PublicInvitationResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PublicInvitationResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PublicInvitationResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PublicInvitationResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PublicInvitationResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PublicInvitationResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemSharesClientTasksRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutItemSharesClientTasksRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemSharesClientTasksRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutItemSharesClientTasksRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemSharesClientTasksRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutItemSharesClientTasksRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemSharesRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutItemSharesRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemSharesRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutItemSharesRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemSharesRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutItemSharesRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsAssociationsRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutItemsAssociationsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsAssociationsRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutItemsAssociationsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsAssociationsRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutItemsAssociationsRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutItemsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutItemsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutItemsRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsRequestItemFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutItemsRequestItemFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsRequestItemFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutItemsRequestItemFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsRequestItemToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutItemsRequestItemToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutMeRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutMeRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutMeRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutMeRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutMeRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutMeRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutMeRequestUserFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutMeRequestUserFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutMeRequestUserFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutMeRequestUserFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutMeRequestUserToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutMeRequestUserToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutSharesRequestShareFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutSharesRequestShareFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutSharesRequestShareFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutSharesRequestShareFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutSharesRequestShareToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutSharesRequestShareToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutSlotsRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutSlotsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutSlotsRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutSlotsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutSlotsRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutSlotsRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutTasksRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutTasksRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutTasksRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutTasksRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutTasksRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["PutTasksRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RejectOrganizationServicebyIdResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["RejectOrganizationServicebyIdResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RejectOrganizationServicebyIdResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["RejectOrganizationServicebyIdResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RejectOrganizationServicebyIdResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["RejectOrganizationServicebyIdResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ServiceFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ServiceFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ServiceToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceUserFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ServiceUserFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceUserFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ServiceUserFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceUserToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ServiceUserToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceUserResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ServiceUserResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceUserResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ServiceUserResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceUserResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ServiceUserResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionResumeResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SessionResumeResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionResumeResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SessionResumeResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionResumeResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SessionResumeResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ShareFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ShareFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ShareFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ShareFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ShareToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ShareToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ShareWithItemDataFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ShareWithItemDataFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ShareWithItemDataFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ShareWithItemDataFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ShareWithItemDataToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ShareWithItemDataToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesCreateResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SharesCreateResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesCreateResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SharesCreateResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesCreateResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SharesCreateResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesIncomingResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SharesIncomingResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesIncomingResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SharesIncomingResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesIncomingResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SharesIncomingResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesOutgoingResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SharesOutgoingResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesOutgoingResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SharesOutgoingResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesOutgoingResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SharesOutgoingResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlotFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SlotFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlotFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SlotFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlotToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SlotToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlotResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SlotResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlotResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SlotResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlotResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["SlotResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TheOtherConnectedUserDataFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["TheOtherConnectedUserDataFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TheOtherConnectedUserDataFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["TheOtherConnectedUserDataFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TheOtherConnectedUserDataToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["TheOtherConnectedUserDataToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ThumbnailFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ThumbnailFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ThumbnailFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ThumbnailFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ThumbnailToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ThumbnailToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ThumbnailResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ThumbnailResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ThumbnailResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ThumbnailResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ThumbnailResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ThumbnailResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateDelegationRoleFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UpdateDelegationRoleFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateDelegationRoleFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UpdateDelegationRoleFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateDelegationRoleToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UpdateDelegationRoleToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationMemberRoleRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UpdateOrganizationMemberRoleRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationMemberRoleRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UpdateOrganizationMemberRoleRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationMemberRoleRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UpdateOrganizationMemberRoleRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UpdateOrganizationRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UpdateOrganizationRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UpdateOrganizationRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UpdateOrganizationResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UpdateOrganizationResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UpdateOrganizationResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationServiceRequestFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UpdateOrganizationServiceRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationServiceRequestFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UpdateOrganizationServiceRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationServiceRequestToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UpdateOrganizationServiceRequestToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UserFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UserFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UserToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserAccessTokenFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UserAccessTokenFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserAccessTokenFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UserAccessTokenFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserAccessTokenToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UserAccessTokenToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserQueuedForDeletionFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UserQueuedForDeletionFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserQueuedForDeletionFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UserQueuedForDeletionFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserQueuedForDeletionToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["UserQueuedForDeletionToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValidateOrganizationServicebyIdResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ValidateOrganizationServicebyIdResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValidateOrganizationServicebyIdResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ValidateOrganizationServicebyIdResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValidateOrganizationServicebyIdResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["ValidateOrganizationServicebyIdResponseToJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VersionResponseFromJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["VersionResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VersionResponseFromJSONTyped", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["VersionResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VersionResponseToJSON", function() { return _models__WEBPACK_IMPORTED_MODULE_2__["VersionResponseToJSON"]; });\n\n\n\n\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/index.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ActivitiesResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivitiesResponseFromJSON\", function() { return ActivitiesResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivitiesResponseFromJSONTyped\", function() { return ActivitiesResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivitiesResponseToJSON\", function() { return ActivitiesResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ActivitiesResponseFromJSON(json) {\n    return ActivitiesResponseFromJSONTyped(json, false);\n}\nfunction ActivitiesResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'next_page_after': json['next_page_after'],\n        'activities': (json['activities'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ActivityFromJSON\"])),\n        'events': (json['events'].map(___WEBPACK_IMPORTED_MODULE_0__[\"EventFromJSON\"])),\n        'connections': (json['connections'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ConnectionFromJSON\"])),\n        'meta': json['meta'],\n    };\n}\nfunction ActivitiesResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'next_page_after': value.next_page_after,\n        'activities': (value.activities.map(___WEBPACK_IMPORTED_MODULE_0__[\"ActivityToJSON\"])),\n        'events': (value.events.map(___WEBPACK_IMPORTED_MODULE_0__[\"EventToJSON\"])),\n        'connections': (value.connections.map(___WEBPACK_IMPORTED_MODULE_0__[\"ConnectionToJSON\"])),\n        'meta': value.meta,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ActivitiesResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Activity.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivityFromJSON\", function() { return ActivityFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivityFromJSONTyped\", function() { return ActivityFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivityToJSON\", function() { return ActivityToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction ActivityFromJSON(json) {\n    return ActivityFromJSONTyped(json, false);\n}\nfunction ActivityFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'description': json['description'],\n        'start_time': (new Date(json['start_time'])),\n        'end_time': (json['end_time'] === null ? null : new Date(json['end_time'])),\n        'background_color': json['background_color'],\n        'value': json['value'],\n        'created_at': (new Date(json['created_at'])),\n        'updated_at': (new Date(json['updated_at'])),\n        'image': json['image'],\n        'duration_in_words': json['duration_in_words'],\n        'event_ids': json['event_ids'],\n        'label': json['label'],\n    };\n}\nfunction ActivityToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'description': value.description,\n        'start_time': (value.start_time.toISOString()),\n        'end_time': (value.end_time === null ? null : value.end_time.toISOString()),\n        'background_color': value.background_color,\n        'value': value.value,\n        'created_at': (value.created_at.toISOString()),\n        'updated_at': (value.updated_at.toISOString()),\n        'image': value.image,\n        'duration_in_words': value.duration_in_words,\n        'event_ids': value.event_ids,\n        'label': value.label,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Activity.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AdmissionToken.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AdmissionTokenFromJSON\", function() { return AdmissionTokenFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AdmissionTokenFromJSONTyped\", function() { return AdmissionTokenFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AdmissionTokenToJSON\", function() { return AdmissionTokenToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction AdmissionTokenFromJSON(json) {\n    return AdmissionTokenFromJSONTyped(json, false);\n}\nfunction AdmissionTokenFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'token_value': json['token_value'],\n        'used': json['used'],\n    };\n}\nfunction AdmissionTokenToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'token_value': value.token_value,\n        'used': value.used,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AdmissionToken.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AdmissionTokenResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenResponseFromJSON", function() { return AdmissionTokenResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenResponseFromJSONTyped", function() { return AdmissionTokenResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenResponseToJSON", function() { return AdmissionTokenResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction AdmissionTokenResponseFromJSON(json) {\n    return AdmissionTokenResponseFromJSONTyped(json, false);\n}\nfunction AdmissionTokenResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'admission_token\': Object(___WEBPACK_IMPORTED_MODULE_0__["AdmissionTokenFromJSON"])(json[\'admission_token\']),\n    };\n}\nfunction AdmissionTokenResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'admission_token\': Object(___WEBPACK_IMPORTED_MODULE_0__["AdmissionTokenToJSON"])(value.admission_token),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AdmissionTokenResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Alerts.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AlertsFromJSON\", function() { return AlertsFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AlertsFromJSONTyped\", function() { return AlertsFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AlertsToJSON\", function() { return AlertsToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction AlertsFromJSON(json) {\n    return AlertsFromJSONTyped(json, false);\n}\nfunction AlertsFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'conversations': json['conversations'],\n        'notifications': json['notifications'],\n        'invitations': json['invitations'],\n    };\n}\nfunction AlertsToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'conversations': value.conversations,\n        'notifications': value.notifications,\n        'invitations': value.invitations,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Alerts.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AlertsResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertsResponseFromJSON", function() { return AlertsResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertsResponseFromJSONTyped", function() { return AlertsResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertsResponseToJSON", function() { return AlertsResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction AlertsResponseFromJSON(json) {\n    return AlertsResponseFromJSONTyped(json, false);\n}\nfunction AlertsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'alerts\': Object(___WEBPACK_IMPORTED_MODULE_0__["AlertsFromJSON"])(json[\'alerts\']),\n    };\n}\nfunction AlertsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'alerts\': Object(___WEBPACK_IMPORTED_MODULE_0__["AlertsToJSON"])(value.alerts),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AlertsResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Association.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AssociationFromJSON\", function() { return AssociationFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AssociationFromJSONTyped\", function() { return AssociationFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AssociationToJSON\", function() { return AssociationToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction AssociationFromJSON(json) {\n    return AssociationFromJSONTyped(json, false);\n}\nfunction AssociationFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'associated_to_type': json['associated_to_type'],\n        'associated_to_id': json['associated_to_id'],\n        'associated_from_type': json['associated_from_type'],\n        'associated_from_id': json['associated_from_id'],\n        'association_type': json['association_type'],\n    };\n}\nfunction AssociationToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'associated_to_type': value.associated_to_type,\n        'associated_to_id': value.associated_to_id,\n        'associated_from_type': value.associated_from_type,\n        'associated_from_id': value.associated_from_id,\n        'association_type': value.association_type,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Association.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AssociationResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AssociationResponseFromJSON", function() { return AssociationResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AssociationResponseFromJSONTyped", function() { return AssociationResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AssociationResponseToJSON", function() { return AssociationResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction AssociationResponseFromJSON(json) {\n    return AssociationResponseFromJSONTyped(json, false);\n}\nfunction AssociationResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'association\': Object(___WEBPACK_IMPORTED_MODULE_0__["AssociationFromJSON"])(json[\'association\']),\n    };\n}\nfunction AssociationResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'association\': Object(___WEBPACK_IMPORTED_MODULE_0__["AssociationToJSON"])(value.association),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AssociationResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Attachment.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttachmentFromJSON\", function() { return AttachmentFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttachmentFromJSONTyped\", function() { return AttachmentFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttachmentToJSON\", function() { return AttachmentToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction AttachmentFromJSON(json) {\n    return AttachmentFromJSONTyped(json, false);\n}\nfunction AttachmentFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'content_type': json['content_type'],\n        'filename': json['filename'],\n        'user_id': json['user_id'],\n        'created_at': (new Date(json['created_at'])),\n        'url': json['url'],\n        'is_direct_upload': json['is_direct_upload'],\n    };\n}\nfunction AttachmentToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'content_type': value.content_type,\n        'filename': value.filename,\n        'user_id': value.user_id,\n        'created_at': (value.created_at.toISOString()),\n        'url': value.url,\n        'is_direct_upload': value.is_direct_upload,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Attachment.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentDirectDownloadUrl.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttachmentDirectDownloadUrlFromJSON\", function() { return AttachmentDirectDownloadUrlFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttachmentDirectDownloadUrlFromJSONTyped\", function() { return AttachmentDirectDownloadUrlFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttachmentDirectDownloadUrlToJSON\", function() { return AttachmentDirectDownloadUrlToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction AttachmentDirectDownloadUrlFromJSON(json) {\n    return AttachmentDirectDownloadUrlFromJSONTyped(json, false);\n}\nfunction AttachmentDirectDownloadUrlFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'filename': json['filename'],\n        'content_type': json['content_type'],\n        'byte_size': json['byte_size'],\n        'url': json['url'],\n    };\n}\nfunction AttachmentDirectDownloadUrlToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'filename': value.filename,\n        'content_type': value.content_type,\n        'byte_size': value.byte_size,\n        'url': value.url,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentDirectDownloadUrl.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentDirectDownloadUrlResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectDownloadUrlResponseFromJSON", function() { return AttachmentDirectDownloadUrlResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectDownloadUrlResponseFromJSONTyped", function() { return AttachmentDirectDownloadUrlResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectDownloadUrlResponseToJSON", function() { return AttachmentDirectDownloadUrlResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction AttachmentDirectDownloadUrlResponseFromJSON(json) {\n    return AttachmentDirectDownloadUrlResponseFromJSONTyped(json, false);\n}\nfunction AttachmentDirectDownloadUrlResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'attachment_direct_download_url\': Object(___WEBPACK_IMPORTED_MODULE_0__["AttachmentDirectDownloadUrlFromJSON"])(json[\'attachment_direct_download_url\']),\n    };\n}\nfunction AttachmentDirectDownloadUrlResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'attachment_direct_download_url\': Object(___WEBPACK_IMPORTED_MODULE_0__["AttachmentDirectDownloadUrlToJSON"])(value.attachment_direct_download_url),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentDirectDownloadUrlResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentDirectUploadUrl.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttachmentDirectUploadUrlFromJSON\", function() { return AttachmentDirectUploadUrlFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttachmentDirectUploadUrlFromJSONTyped\", function() { return AttachmentDirectUploadUrlFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttachmentDirectUploadUrlToJSON\", function() { return AttachmentDirectUploadUrlToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction AttachmentDirectUploadUrlFromJSON(json) {\n    return AttachmentDirectUploadUrlFromJSONTyped(json, false);\n}\nfunction AttachmentDirectUploadUrlFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'blob_id': json['blob_id'],\n        'blob_key': json['blob_key'],\n        'url': json['url'],\n    };\n}\nfunction AttachmentDirectUploadUrlToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'blob_id': value.blob_id,\n        'blob_key': value.blob_key,\n        'url': value.url,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentDirectUploadUrl.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentDirectUploadUrlResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectUploadUrlResponseFromJSON", function() { return AttachmentDirectUploadUrlResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectUploadUrlResponseFromJSONTyped", function() { return AttachmentDirectUploadUrlResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectUploadUrlResponseToJSON", function() { return AttachmentDirectUploadUrlResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction AttachmentDirectUploadUrlResponseFromJSON(json) {\n    return AttachmentDirectUploadUrlResponseFromJSONTyped(json, false);\n}\nfunction AttachmentDirectUploadUrlResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'attachment_direct_upload_url\': Object(___WEBPACK_IMPORTED_MODULE_0__["AttachmentDirectUploadUrlFromJSON"])(json[\'attachment_direct_upload_url\']),\n    };\n}\nfunction AttachmentDirectUploadUrlResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'attachment_direct_upload_url\': Object(___WEBPACK_IMPORTED_MODULE_0__["AttachmentDirectUploadUrlToJSON"])(value.attachment_direct_upload_url),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentDirectUploadUrlResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttachmentResponseFromJSON", function() { return AttachmentResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttachmentResponseFromJSONTyped", function() { return AttachmentResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttachmentResponseToJSON", function() { return AttachmentResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction AttachmentResponseFromJSON(json) {\n    return AttachmentResponseFromJSONTyped(json, false);\n}\nfunction AttachmentResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'attachment\': Object(___WEBPACK_IMPORTED_MODULE_0__["AttachmentFromJSON"])(json[\'attachment\']),\n    };\n}\nfunction AttachmentResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'attachment\': Object(___WEBPACK_IMPORTED_MODULE_0__["AttachmentToJSON"])(value.attachment),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentsResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttachmentsResponseFromJSON\", function() { return AttachmentsResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttachmentsResponseFromJSONTyped\", function() { return AttachmentsResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttachmentsResponseToJSON\", function() { return AttachmentsResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction AttachmentsResponseFromJSON(json) {\n    return AttachmentsResponseFromJSONTyped(json, false);\n}\nfunction AttachmentsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'attachments': (json['attachments'].map(___WEBPACK_IMPORTED_MODULE_0__[\"AttachmentFromJSON\"])),\n        'next_page_after': json['next_page_after'],\n        'meta': json['meta'],\n    };\n}\nfunction AttachmentsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'attachments': (value.attachments.map(___WEBPACK_IMPORTED_MODULE_0__[\"AttachmentToJSON\"])),\n        'next_page_after': value.next_page_after,\n        'meta': value.meta,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentsResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ChildPublicKeyForConnection.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChildPublicKeyForConnectionFromJSON\", function() { return ChildPublicKeyForConnectionFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChildPublicKeyForConnectionFromJSONTyped\", function() { return ChildPublicKeyForConnectionFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChildPublicKeyForConnectionToJSON\", function() { return ChildPublicKeyForConnectionToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ChildPublicKeyForConnectionFromJSON(json) {\n    return ChildPublicKeyForConnectionFromJSONTyped(json, false);\n}\nfunction ChildPublicKeyForConnectionFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'pem': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'pem') ? undefined : json['pem'],\n        'external_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'external_id') ? undefined : json['external_id'],\n    };\n}\nfunction ChildPublicKeyForConnectionToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'pem': value.pem,\n        'external_id': value.external_id,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ChildPublicKeyForConnection.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClassificationNode.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClassificationNodeFromJSON\", function() { return ClassificationNodeFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClassificationNodeFromJSONTyped\", function() { return ClassificationNodeFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClassificationNodeToJSON\", function() { return ClassificationNodeToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction ClassificationNodeFromJSON(json) {\n    return ClassificationNodeFromJSONTyped(json, false);\n}\nfunction ClassificationNodeFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'name': json['name'],\n        'label': json['label'],\n        'description': json['description'],\n        'ordinal': json['ordinal'],\n        'background_color': json['background_color'],\n        'image': json['image'],\n        'scheme': json['scheme'],\n    };\n}\nfunction ClassificationNodeToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'name': value.name,\n        'label': value.label,\n        'description': value.description,\n        'ordinal': value.ordinal,\n        'background_color': value.background_color,\n        'image': value.image,\n        'scheme': value.scheme,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClassificationNode.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClassificationNodeResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeResponseFromJSON", function() { return ClassificationNodeResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeResponseFromJSONTyped", function() { return ClassificationNodeResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeResponseToJSON", function() { return ClassificationNodeResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ClassificationNodeResponseFromJSON(json) {\n    return ClassificationNodeResponseFromJSONTyped(json, false);\n}\nfunction ClassificationNodeResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'classification_node\': Object(___WEBPACK_IMPORTED_MODULE_0__["ClassificationNodeFromJSON"])(json[\'classification_node\']),\n    };\n}\nfunction ClassificationNodeResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'classification_node\': Object(___WEBPACK_IMPORTED_MODULE_0__["ClassificationNodeToJSON"])(value.classification_node),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClassificationNodeResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClassificationNodesClassificationNode.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClassificationNodesClassificationNodeFromJSON\", function() { return ClassificationNodesClassificationNodeFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClassificationNodesClassificationNodeFromJSONTyped\", function() { return ClassificationNodesClassificationNodeFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClassificationNodesClassificationNodeToJSON\", function() { return ClassificationNodesClassificationNodeToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ClassificationNodesClassificationNodeFromJSON(json) {\n    return ClassificationNodesClassificationNodeFromJSONTyped(json, false);\n}\nfunction ClassificationNodesClassificationNodeFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'classification_scheme_name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'classification_scheme_name') ? undefined : json['classification_scheme_name'],\n        'name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'name') ? undefined : json['name'],\n        'label': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'label') ? undefined : json['label'],\n        'user_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'user_id') ? undefined : json['user_id'],\n        'description': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'description') ? undefined : json['description'],\n        'image': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'image') ? undefined : json['image'],\n    };\n}\nfunction ClassificationNodesClassificationNodeToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'classification_scheme_name': value.classification_scheme_name,\n        'name': value.name,\n        'label': value.label,\n        'user_id': value.user_id,\n        'description': value.description,\n        'image': value.image,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClassificationNodesClassificationNode.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClassificationNodesResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClassificationNodesResponseFromJSON\", function() { return ClassificationNodesResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClassificationNodesResponseFromJSONTyped\", function() { return ClassificationNodesResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClassificationNodesResponseToJSON\", function() { return ClassificationNodesResponseToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction ClassificationNodesResponseFromJSON(json) {\n    return ClassificationNodesResponseFromJSONTyped(json, false);\n}\nfunction ClassificationNodesResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'next_page_after': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'next_page_after') ? undefined : json['next_page_after'],\n        'classification_nodes': (json['classification_nodes'].map(___WEBPACK_IMPORTED_MODULE_1__[\"ClassificationNodeFromJSON\"])),\n        'meta': Object(___WEBPACK_IMPORTED_MODULE_1__[\"MetaFromJSON\"])(json['meta']),\n    };\n}\nfunction ClassificationNodesResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'next_page_after': value.next_page_after,\n        'classification_nodes': (value.classification_nodes.map(___WEBPACK_IMPORTED_MODULE_1__[\"ClassificationNodeToJSON\"])),\n        'meta': Object(___WEBPACK_IMPORTED_MODULE_1__[\"MetaToJSON\"])(value.meta),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClassificationNodesResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClientTask.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClientTaskFromJSON\", function() { return ClientTaskFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClientTaskFromJSONTyped\", function() { return ClientTaskFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClientTaskToJSON\", function() { return ClientTaskToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction ClientTaskFromJSON(json) {\n    return ClientTaskFromJSONTyped(json, false);\n}\nfunction ClientTaskFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'state': json['state'],\n        'work_type': json['work_type'],\n        'target_id': json['target_id'],\n        'additional_options': json['additional_options'],\n        'last_state_transition_at': (json['last_state_transition_at'] === null ? null : new Date(json['last_state_transition_at'])),\n        'report': json['report'],\n        'created_at': (new Date(json['created_at'])),\n    };\n}\nfunction ClientTaskToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'state': value.state,\n        'work_type': value.work_type,\n        'target_id': value.target_id,\n        'additional_options': value.additional_options,\n        'last_state_transition_at': (value.last_state_transition_at === null ? null : value.last_state_transition_at.toISOString()),\n        'report': value.report,\n        'created_at': (value.created_at.toISOString()),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClientTask.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClientTaskQueueResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClientTaskQueueResponseFromJSON\", function() { return ClientTaskQueueResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClientTaskQueueResponseFromJSONTyped\", function() { return ClientTaskQueueResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClientTaskQueueResponseToJSON\", function() { return ClientTaskQueueResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ClientTaskQueueResponseFromJSON(json) {\n    return ClientTaskQueueResponseFromJSONTyped(json, false);\n}\nfunction ClientTaskQueueResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'next_page_after': json['next_page_after'],\n        'client_tasks': (json['client_tasks'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ClientTaskFromJSON\"])),\n        'meta': json['meta'],\n    };\n}\nfunction ClientTaskQueueResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'next_page_after': value.next_page_after,\n        'client_tasks': (value.client_tasks.map(___WEBPACK_IMPORTED_MODULE_0__[\"ClientTaskToJSON\"])),\n        'meta': value.meta,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClientTaskQueueResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClientTaskQueueResponse1.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueResponse1FromJSON", function() { return ClientTaskQueueResponse1FromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueResponse1FromJSONTyped", function() { return ClientTaskQueueResponse1FromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueResponse1ToJSON", function() { return ClientTaskQueueResponse1ToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ClientTaskQueueResponse1FromJSON(json) {\n    return ClientTaskQueueResponse1FromJSONTyped(json, false);\n}\nfunction ClientTaskQueueResponse1FromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'client_tasks\': (json[\'client_tasks\'].map(___WEBPACK_IMPORTED_MODULE_0__["ClientTaskFromJSON"])),\n    };\n}\nfunction ClientTaskQueueResponse1ToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'client_tasks\': (value.client_tasks.map(___WEBPACK_IMPORTED_MODULE_0__["ClientTaskToJSON"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClientTaskQueueResponse1.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Component.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ComponentFromJSON\", function() { return ComponentFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ComponentFromJSONTyped\", function() { return ComponentFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ComponentToJSON\", function() { return ComponentToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction ComponentFromJSON(json) {\n    return ComponentFromJSONTyped(json, false);\n}\nfunction ComponentFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'api_version': json['api_version'],\n        'name': json['name'],\n    };\n}\nfunction ComponentToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'api_version': value.api_version,\n        'name': value.name,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Component.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Connection.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectionFromJSON", function() { return ConnectionFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectionFromJSONTyped", function() { return ConnectionFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectionToJSON", function() { return ConnectionToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ConnectionFromJSON(json) {\n    return ConnectionFromJSONTyped(json, false);\n}\nfunction ConnectionFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'own\': Object(___WEBPACK_IMPORTED_MODULE_0__["OwnConnectionDataFromJSON"])(json[\'own\']),\n        \'the_other_user\': Object(___WEBPACK_IMPORTED_MODULE_0__["TheOtherConnectedUserDataFromJSON"])(json[\'the_other_user\']),\n    };\n}\nfunction ConnectionToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'own\': Object(___WEBPACK_IMPORTED_MODULE_0__["OwnConnectionDataToJSON"])(value.own),\n        \'the_other_user\': Object(___WEBPACK_IMPORTED_MODULE_0__["TheOtherConnectedUserDataToJSON"])(value.the_other_user),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Connection.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ConnectionResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectionResponseFromJSON", function() { return ConnectionResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectionResponseFromJSONTyped", function() { return ConnectionResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectionResponseToJSON", function() { return ConnectionResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ConnectionResponseFromJSON(json) {\n    return ConnectionResponseFromJSONTyped(json, false);\n}\nfunction ConnectionResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'connection\': Object(___WEBPACK_IMPORTED_MODULE_0__["ConnectionFromJSON"])(json[\'connection\']),\n    };\n}\nfunction ConnectionResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'connection\': Object(___WEBPACK_IMPORTED_MODULE_0__["ConnectionToJSON"])(value.connection),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ConnectionResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ConnectionsResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConnectionsResponseFromJSON\", function() { return ConnectionsResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConnectionsResponseFromJSONTyped\", function() { return ConnectionsResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConnectionsResponseToJSON\", function() { return ConnectionsResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ConnectionsResponseFromJSON(json) {\n    return ConnectionsResponseFromJSONTyped(json, false);\n}\nfunction ConnectionsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'connections': (json['connections'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ConnectionFromJSON\"])),\n        'meta': json['meta'],\n        'next_page_after': json['next_page_after'],\n    };\n}\nfunction ConnectionsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'connections': (value.connections.map(___WEBPACK_IMPORTED_MODULE_0__[\"ConnectionToJSON\"])),\n        'meta': value.meta,\n        'next_page_after': value.next_page_after,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ConnectionsResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateAttachmentResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateAttachmentResponseFromJSON", function() { return CreateAttachmentResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateAttachmentResponseFromJSONTyped", function() { return CreateAttachmentResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateAttachmentResponseToJSON", function() { return CreateAttachmentResponseToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction CreateAttachmentResponseFromJSON(json) {\n    return CreateAttachmentResponseFromJSONTyped(json, false);\n}\nfunction CreateAttachmentResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'attachment\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'attachment\') ? undefined : json[\'attachment\'],\n    };\n}\nfunction CreateAttachmentResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'attachment\': value.attachment,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateAttachmentResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateChildUserParams.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserParamsFromJSON", function() { return CreateChildUserParamsFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserParamsFromJSONTyped", function() { return CreateChildUserParamsFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserParamsToJSON", function() { return CreateChildUserParamsToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction CreateChildUserParamsFromJSON(json) {\n    return CreateChildUserParamsFromJSONTyped(json, false);\n}\nfunction CreateChildUserParamsFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'parent_public_key_for_connection\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'parent_public_key_for_connection\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["ParentPublicKeyForConnectionFromJSON"])(json[\'parent_public_key_for_connection\']),\n        \'child_public_key_for_connection\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'child_public_key_for_connection\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["ChildPublicKeyForConnectionFromJSON"])(json[\'child_public_key_for_connection\']),\n    };\n}\nfunction CreateChildUserParamsToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'parent_public_key_for_connection\': Object(___WEBPACK_IMPORTED_MODULE_1__["ParentPublicKeyForConnectionToJSON"])(value.parent_public_key_for_connection),\n        \'child_public_key_for_connection\': Object(___WEBPACK_IMPORTED_MODULE_1__["ChildPublicKeyForConnectionToJSON"])(value.child_public_key_for_connection),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateChildUserParams.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateChildUserResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserResponseFromJSON", function() { return CreateChildUserResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserResponseFromJSONTyped", function() { return CreateChildUserResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserResponseToJSON", function() { return CreateChildUserResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction CreateChildUserResponseFromJSON(json) {\n    return CreateChildUserResponseFromJSONTyped(json, false);\n}\nfunction CreateChildUserResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'user\': Object(___WEBPACK_IMPORTED_MODULE_0__["UserFromJSON"])(json[\'user\']),\n        \'connection_from_parent_to_child\': Object(___WEBPACK_IMPORTED_MODULE_0__["ConnectionFromJSON"])(json[\'connection_from_parent_to_child\']),\n    };\n}\nfunction CreateChildUserResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'user\': Object(___WEBPACK_IMPORTED_MODULE_0__["UserToJSON"])(value.user),\n        \'connection_from_parent_to_child\': Object(___WEBPACK_IMPORTED_MODULE_0__["ConnectionToJSON"])(value.connection_from_parent_to_child),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateChildUserResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateOrganizationServiceResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateOrganizationServiceResponseFromJSON", function() { return CreateOrganizationServiceResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateOrganizationServiceResponseFromJSONTyped", function() { return CreateOrganizationServiceResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateOrganizationServiceResponseToJSON", function() { return CreateOrganizationServiceResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction CreateOrganizationServiceResponseFromJSON(json) {\n    return CreateOrganizationServiceResponseFromJSONTyped(json, false);\n}\nfunction CreateOrganizationServiceResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'organization\': Object(___WEBPACK_IMPORTED_MODULE_0__["OrganizationFromJSON"])(json[\'organization\']),\n        \'service\': Object(___WEBPACK_IMPORTED_MODULE_0__["ServiceFromJSON"])(json[\'service\']),\n    };\n}\nfunction CreateOrganizationServiceResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'organization\': Object(___WEBPACK_IMPORTED_MODULE_0__["OrganizationToJSON"])(value.organization),\n        \'service\': Object(___WEBPACK_IMPORTED_MODULE_0__["ServiceToJSON"])(value.service),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateOrganizationServiceResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateSessionResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateSessionResponseFromJSON", function() { return CreateSessionResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateSessionResponseFromJSONTyped", function() { return CreateSessionResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateSessionResponseToJSON", function() { return CreateSessionResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction CreateSessionResponseFromJSON(json) {\n    return CreateSessionResponseFromJSONTyped(json, false);\n}\nfunction CreateSessionResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'session\': Object(___WEBPACK_IMPORTED_MODULE_0__["CreateSessionResponseSessionFromJSON"])(json[\'session\']),\n    };\n}\nfunction CreateSessionResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'session\': Object(___WEBPACK_IMPORTED_MODULE_0__["CreateSessionResponseSessionToJSON"])(value.session),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateSessionResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateSessionResponseSession.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CreateSessionResponseSessionFromJSON\", function() { return CreateSessionResponseSessionFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CreateSessionResponseSessionFromJSONTyped\", function() { return CreateSessionResponseSessionFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CreateSessionResponseSessionToJSON\", function() { return CreateSessionResponseSessionToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction CreateSessionResponseSessionFromJSON(json) {\n    return CreateSessionResponseSessionFromJSONTyped(json, false);\n}\nfunction CreateSessionResponseSessionFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'encrypted_session_authentication_string': json['encrypted_session_authentication_string'],\n    };\n}\nfunction CreateSessionResponseSessionToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'encrypted_session_authentication_string': value.encrypted_session_authentication_string,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateSessionResponseSession.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/DeletionQueueItemResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeletionQueueItemResponseFromJSON", function() { return DeletionQueueItemResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeletionQueueItemResponseFromJSONTyped", function() { return DeletionQueueItemResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeletionQueueItemResponseToJSON", function() { return DeletionQueueItemResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction DeletionQueueItemResponseFromJSON(json) {\n    return DeletionQueueItemResponseFromJSONTyped(json, false);\n}\nfunction DeletionQueueItemResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'deletion_queue_item\': Object(___WEBPACK_IMPORTED_MODULE_0__["UserQueuedForDeletionFromJSON"])(json[\'deletion_queue_item\']),\n    };\n}\nfunction DeletionQueueItemResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'deletion_queue_item\': Object(___WEBPACK_IMPORTED_MODULE_0__["UserQueuedForDeletionToJSON"])(value.deletion_queue_item),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/DeletionQueueItemResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/DirectAttachment.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DirectAttachmentFromJSON\", function() { return DirectAttachmentFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DirectAttachmentFromJSONTyped\", function() { return DirectAttachmentFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DirectAttachmentToJSON\", function() { return DirectAttachmentToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction DirectAttachmentFromJSON(json) {\n    return DirectAttachmentFromJSONTyped(json, false);\n}\nfunction DirectAttachmentFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'content_type': json['content_type'],\n        'filename': json['filename'],\n        'user_id': json['user_id'],\n        'created_at': (new Date(json['created_at'])),\n        'is_direct_upload': json['is_direct_upload'],\n    };\n}\nfunction DirectAttachmentToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'content_type': value.content_type,\n        'filename': value.filename,\n        'user_id': value.user_id,\n        'created_at': (value.created_at.toISOString()),\n        'is_direct_upload': value.is_direct_upload,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/DirectAttachment.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/DirectAttachmentResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentResponseFromJSON", function() { return DirectAttachmentResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentResponseFromJSONTyped", function() { return DirectAttachmentResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentResponseToJSON", function() { return DirectAttachmentResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction DirectAttachmentResponseFromJSON(json) {\n    return DirectAttachmentResponseFromJSONTyped(json, false);\n}\nfunction DirectAttachmentResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'attachment\': Object(___WEBPACK_IMPORTED_MODULE_0__["DirectAttachmentFromJSON"])(json[\'attachment\']),\n    };\n}\nfunction DirectAttachmentResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'attachment\': Object(___WEBPACK_IMPORTED_MODULE_0__["DirectAttachmentToJSON"])(value.attachment),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/DirectAttachmentResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/EncryptedSlotValue.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EncryptedSlotValueFromJSON\", function() { return EncryptedSlotValueFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EncryptedSlotValueFromJSONTyped\", function() { return EncryptedSlotValueFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EncryptedSlotValueToJSON\", function() { return EncryptedSlotValueToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction EncryptedSlotValueFromJSON(json) {\n    return EncryptedSlotValueFromJSONTyped(json, false);\n}\nfunction EncryptedSlotValueFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'slot_id': json['slot_id'],\n        'encrypted_value': json['encrypted_value'],\n        'encrypted_value_verification_key': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'encrypted_value_verification_key') ? undefined : json['encrypted_value_verification_key'],\n        'value_verification_hash': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'value_verification_hash') ? undefined : json['value_verification_hash'],\n    };\n}\nfunction EncryptedSlotValueToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'slot_id': value.slot_id,\n        'encrypted_value': value.encrypted_value,\n        'encrypted_value_verification_key': value.encrypted_value_verification_key,\n        'value_verification_hash': value.value_verification_hash,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/EncryptedSlotValue.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Err.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ErrFromJSON\", function() { return ErrFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ErrFromJSONTyped\", function() { return ErrFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ErrToJSON\", function() { return ErrToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction ErrFromJSON(json) {\n    return ErrFromJSONTyped(json, false);\n}\nfunction ErrFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'error': json['error'],\n        'http_code': json['http_code'],\n        'message': json['message'],\n        'requested_language': json['requested_language'],\n        'message_in_requested_language': json['message_in_requested_language'],\n        'extra_info': json['extra_info'],\n    };\n}\nfunction ErrToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'error': value.error,\n        'http_code': value.http_code,\n        'message': value.message,\n        'requested_language': value.requested_language,\n        'message_in_requested_language': value.message_in_requested_language,\n        'extra_info': value.extra_info,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Err.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ErrorsResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorsResponseFromJSON", function() { return ErrorsResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorsResponseFromJSONTyped", function() { return ErrorsResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorsResponseToJSON", function() { return ErrorsResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ErrorsResponseFromJSON(json) {\n    return ErrorsResponseFromJSONTyped(json, false);\n}\nfunction ErrorsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'errors\': (json[\'errors\'].map(___WEBPACK_IMPORTED_MODULE_0__["ErrFromJSON"])),\n    };\n}\nfunction ErrorsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'errors\': (value.errors.map(___WEBPACK_IMPORTED_MODULE_0__["ErrToJSON"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ErrorsResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Event.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventFromJSON\", function() { return EventFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventFromJSONTyped\", function() { return EventFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventToJSON\", function() { return EventToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction EventFromJSON(json) {\n    return EventFromJSONTyped(json, false);\n}\nfunction EventFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'parent_id': json['parent_id'],\n        'creator': json['creator'],\n        'user_id': json['user_id'],\n        'eventable_type': json['eventable_type'],\n        'eventable_id': json['eventable_id'],\n        'event_type': json['event_type'],\n        'name': json['name'],\n        'label': json['label'],\n        'value': json['value'],\n        'duration_in_seconds': json['duration_in_seconds'],\n        'activity_ids': json['activity_ids'],\n    };\n}\nfunction EventToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'parent_id': value.parent_id,\n        'creator': value.creator,\n        'user_id': value.user_id,\n        'eventable_type': value.eventable_type,\n        'eventable_id': value.eventable_id,\n        'event_type': value.event_type,\n        'name': value.name,\n        'label': value.label,\n        'value': value.value,\n        'duration_in_seconds': value.duration_in_seconds,\n        'activity_ids': value.activity_ids,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Event.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/EventResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventResponseFromJSON", function() { return EventResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventResponseFromJSONTyped", function() { return EventResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventResponseToJSON", function() { return EventResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction EventResponseFromJSON(json) {\n    return EventResponseFromJSONTyped(json, false);\n}\nfunction EventResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'event\': Object(___WEBPACK_IMPORTED_MODULE_0__["EventFromJSON"])(json[\'event\']),\n    };\n}\nfunction EventResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'event\': Object(___WEBPACK_IMPORTED_MODULE_0__["EventToJSON"])(value.event),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/EventResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/EventsResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventsResponseFromJSON\", function() { return EventsResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventsResponseFromJSONTyped\", function() { return EventsResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventsResponseToJSON\", function() { return EventsResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction EventsResponseFromJSON(json) {\n    return EventsResponseFromJSONTyped(json, false);\n}\nfunction EventsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'next_page_after': json['next_page_after'],\n        'events': (json['events'].map(___WEBPACK_IMPORTED_MODULE_0__[\"EventFromJSON\"])),\n        'meta': Object(___WEBPACK_IMPORTED_MODULE_0__[\"MetaFromJSON\"])(json['meta']),\n    };\n}\nfunction EventsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'next_page_after': value.next_page_after,\n        'events': (value.events.map(___WEBPACK_IMPORTED_MODULE_0__[\"EventToJSON\"])),\n        'meta': Object(___WEBPACK_IMPORTED_MODULE_0__[\"MetaToJSON\"])(value.meta),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/EventsResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetItemSharesResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetItemSharesResponseFromJSON", function() { return GetItemSharesResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetItemSharesResponseFromJSONTyped", function() { return GetItemSharesResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetItemSharesResponseToJSON", function() { return GetItemSharesResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction GetItemSharesResponseFromJSON(json) {\n    return GetItemSharesResponseFromJSONTyped(json, false);\n}\nfunction GetItemSharesResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'shares\': (json[\'shares\'].map(___WEBPACK_IMPORTED_MODULE_0__["GetItemSharesResponseSharesFromJSON"])),\n    };\n}\nfunction GetItemSharesResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'shares\': (value.shares.map(___WEBPACK_IMPORTED_MODULE_0__["GetItemSharesResponseSharesToJSON"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetItemSharesResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetItemSharesResponseShares.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GetItemSharesResponseSharesFromJSON\", function() { return GetItemSharesResponseSharesFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GetItemSharesResponseSharesFromJSONTyped\", function() { return GetItemSharesResponseSharesFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GetItemSharesResponseSharesToJSON\", function() { return GetItemSharesResponseSharesToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction GetItemSharesResponseSharesFromJSON(json) {\n    return GetItemSharesResponseSharesFromJSONTyped(json, false);\n}\nfunction GetItemSharesResponseSharesFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'id') ? undefined : json['id'],\n        'public_key': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'public_key') ? undefined : json['public_key'],\n    };\n}\nfunction GetItemSharesResponseSharesToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'public_key': value.public_key,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetItemSharesResponseShares.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetMessagesResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetMessagesResponseFromJSON", function() { return GetMessagesResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetMessagesResponseFromJSONTyped", function() { return GetMessagesResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetMessagesResponseToJSON", function() { return GetMessagesResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction GetMessagesResponseFromJSON(json) {\n    return GetMessagesResponseFromJSONTyped(json, false);\n}\nfunction GetMessagesResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'attachments\': (json[\'attachments\'].map(___WEBPACK_IMPORTED_MODULE_0__["AttachmentFromJSON"])),\n        \'messages\': (json[\'messages\'].map(___WEBPACK_IMPORTED_MODULE_0__["MessageFromJSON"])),\n        \'meta\': Object(___WEBPACK_IMPORTED_MODULE_0__["MetaFromJSON"])(json[\'meta\']),\n    };\n}\nfunction GetMessagesResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'attachments\': (value.attachments.map(___WEBPACK_IMPORTED_MODULE_0__["AttachmentToJSON"])),\n        \'messages\': (value.messages.map(___WEBPACK_IMPORTED_MODULE_0__["MessageToJSON"])),\n        \'meta\': Object(___WEBPACK_IMPORTED_MODULE_0__["MetaToJSON"])(value.meta),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetMessagesResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetOrganizationServicebyIdResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationServicebyIdResponseFromJSON", function() { return GetOrganizationServicebyIdResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationServicebyIdResponseFromJSONTyped", function() { return GetOrganizationServicebyIdResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationServicebyIdResponseToJSON", function() { return GetOrganizationServicebyIdResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction GetOrganizationServicebyIdResponseFromJSON(json) {\n    return GetOrganizationServicebyIdResponseFromJSONTyped(json, false);\n}\nfunction GetOrganizationServicebyIdResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'service\': Object(___WEBPACK_IMPORTED_MODULE_0__["ServiceFromJSON"])(json[\'service\']),\n    };\n}\nfunction GetOrganizationServicebyIdResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'service\': Object(___WEBPACK_IMPORTED_MODULE_0__["ServiceToJSON"])(value.service),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetOrganizationServicebyIdResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetOrganizationbyIdResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationbyIdResponseFromJSON", function() { return GetOrganizationbyIdResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationbyIdResponseFromJSONTyped", function() { return GetOrganizationbyIdResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationbyIdResponseToJSON", function() { return GetOrganizationbyIdResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction GetOrganizationbyIdResponseFromJSON(json) {\n    return GetOrganizationbyIdResponseFromJSONTyped(json, false);\n}\nfunction GetOrganizationbyIdResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'organization\': Object(___WEBPACK_IMPORTED_MODULE_0__["OrganizationFromJSON"])(json[\'organization\']),\n        \'services\': (json[\'services\'].map(___WEBPACK_IMPORTED_MODULE_0__["ServiceFromJSON"])),\n    };\n}\nfunction GetOrganizationbyIdResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'organization\': Object(___WEBPACK_IMPORTED_MODULE_0__["OrganizationToJSON"])(value.organization),\n        \'services\': (value.services.map(___WEBPACK_IMPORTED_MODULE_0__["ServiceToJSON"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetOrganizationbyIdResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetShareResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetShareResponseFromJSON", function() { return GetShareResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetShareResponseFromJSONTyped", function() { return GetShareResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetShareResponseToJSON", function() { return GetShareResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction GetShareResponseFromJSON(json) {\n    return GetShareResponseFromJSONTyped(json, false);\n}\nfunction GetShareResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'share\': Object(___WEBPACK_IMPORTED_MODULE_0__["ShareFromJSON"])(json[\'share\']),\n    };\n}\nfunction GetShareResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'share\': Object(___WEBPACK_IMPORTED_MODULE_0__["ShareToJSON"])(value.share),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetShareResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/InlineObject.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InlineObjectFromJSON", function() { return InlineObjectFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InlineObjectFromJSONTyped", function() { return InlineObjectFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InlineObjectToJSON", function() { return InlineObjectToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction InlineObjectFromJSON(json) {\n    return InlineObjectFromJSONTyped(json, false);\n}\nfunction InlineObjectFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'classification_node\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'classification_node\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["ClassificationNodesClassificationNodeFromJSON"])(json[\'classification_node\']),\n    };\n}\nfunction InlineObjectToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'classification_node\': Object(___WEBPACK_IMPORTED_MODULE_1__["ClassificationNodesClassificationNodeToJSON"])(value.classification_node),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/InlineObject.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/InlineResponse201.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InlineResponse201FromJSON", function() { return InlineResponse201FromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InlineResponse201FromJSONTyped", function() { return InlineResponse201FromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InlineResponse201ToJSON", function() { return InlineResponse201ToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction InlineResponse201FromJSON(json) {\n    return InlineResponse201FromJSONTyped(json, false);\n}\nfunction InlineResponse201FromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'classification_node\': Object(___WEBPACK_IMPORTED_MODULE_0__["ClassificationNodeFromJSON"])(json[\'classification_node\']),\n    };\n}\nfunction InlineResponse201ToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'classification_node\': Object(___WEBPACK_IMPORTED_MODULE_0__["ClassificationNodeToJSON"])(value.classification_node),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/InlineResponse201.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Invitation.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InvitationFromJSON\", function() { return InvitationFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InvitationFromJSONTyped\", function() { return InvitationFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InvitationToJSON\", function() { return InvitationToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction InvitationFromJSON(json) {\n    return InvitationFromJSONTyped(json, false);\n}\nfunction InvitationFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'message': json['message'],\n        'sent_at': (json['sent_at'] === null ? null : new Date(json['sent_at'])),\n        'invited_user_id': json['invited_user_id'],\n        'token': json['token'],\n        'outgoing': json['outgoing'],\n        'user_name': json['user_name'],\n        'user_image': json['user_image'],\n        'keypair_external_id': json['keypair_external_id'],\n        'encrypted_recipient_name': json['encrypted_recipient_name'],\n        'integration_data': json['integration_data'],\n    };\n}\nfunction InvitationToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'message': value.message,\n        'sent_at': (value.sent_at === null ? null : value.sent_at.toISOString()),\n        'invited_user_id': value.invited_user_id,\n        'token': value.token,\n        'outgoing': value.outgoing,\n        'user_name': value.user_name,\n        'user_image': value.user_image,\n        'keypair_external_id': value.keypair_external_id,\n        'encrypted_recipient_name': value.encrypted_recipient_name,\n        'integration_data': value.integration_data,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Invitation.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/InvitationResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InvitationResponseFromJSON", function() { return InvitationResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InvitationResponseFromJSONTyped", function() { return InvitationResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InvitationResponseToJSON", function() { return InvitationResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction InvitationResponseFromJSON(json) {\n    return InvitationResponseFromJSONTyped(json, false);\n}\nfunction InvitationResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'invitation\': Object(___WEBPACK_IMPORTED_MODULE_0__["InvitationFromJSON"])(json[\'invitation\']),\n    };\n}\nfunction InvitationResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'invitation\': Object(___WEBPACK_IMPORTED_MODULE_0__["InvitationToJSON"])(value.invitation),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/InvitationResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/InvitationsResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InvitationsResponseFromJSON\", function() { return InvitationsResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InvitationsResponseFromJSONTyped\", function() { return InvitationsResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InvitationsResponseToJSON\", function() { return InvitationsResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction InvitationsResponseFromJSON(json) {\n    return InvitationsResponseFromJSONTyped(json, false);\n}\nfunction InvitationsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'next_page_after': json['next_page_after'],\n        'invitations': (json['invitations'].map(___WEBPACK_IMPORTED_MODULE_0__[\"InvitationFromJSON\"])),\n        'meta': json['meta'],\n    };\n}\nfunction InvitationsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'next_page_after': value.next_page_after,\n        'invitations': (value.invitations.map(___WEBPACK_IMPORTED_MODULE_0__[\"InvitationToJSON\"])),\n        'meta': value.meta,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/InvitationsResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Item.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemFromJSON\", function() { return ItemFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemFromJSONTyped\", function() { return ItemFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemToJSON\", function() { return ItemToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction ItemFromJSON(json) {\n    return ItemFromJSONTyped(json, false);\n}\nfunction ItemFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'own': json['own'],\n        'name': json['name'],\n        'label': json['label'],\n        'description': json['description'],\n        'created_at': (new Date(json['created_at'])),\n        'item_template_id': json['item_template_id'],\n        'ordinal': json['ordinal'],\n        'visible': json['visible'],\n        'updated_at': (new Date(json['updated_at'])),\n        'item_template_label': json['item_template_label'],\n        'image': json['image'],\n        'item_image': json['item_image'],\n        'item_image_background_colour': json['item_image_background_colour'],\n        'classification_node_ids': json['classification_node_ids'],\n        'association_ids': json['association_ids'],\n        'associations_to_ids': json['associations_to_ids'],\n        'slot_ids': json['slot_ids'],\n        'me': json['me'],\n        'background_color': json['background_color'],\n        'original_id': json['original_id'],\n        'owner_id': json['owner_id'],\n        'share_id': json['share_id'],\n    };\n}\nfunction ItemToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'own': value.own,\n        'name': value.name,\n        'label': value.label,\n        'description': value.description,\n        'created_at': (value.created_at.toISOString()),\n        'item_template_id': value.item_template_id,\n        'ordinal': value.ordinal,\n        'visible': value.visible,\n        'updated_at': (value.updated_at.toISOString()),\n        'item_template_label': value.item_template_label,\n        'image': value.image,\n        'item_image': value.item_image,\n        'item_image_background_colour': value.item_image_background_colour,\n        'classification_node_ids': value.classification_node_ids,\n        'association_ids': value.association_ids,\n        'associations_to_ids': value.associations_to_ids,\n        'slot_ids': value.slot_ids,\n        'me': value.me,\n        'background_color': value.background_color,\n        'original_id': value.original_id,\n        'owner_id': value.owner_id,\n        'share_id': value.share_id,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Item.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemResponseFromJSON\", function() { return ItemResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemResponseFromJSONTyped\", function() { return ItemResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemResponseToJSON\", function() { return ItemResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ItemResponseFromJSON(json) {\n    return ItemResponseFromJSONTyped(json, false);\n}\nfunction ItemResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'associations_to': (json['associations_to'].map(___WEBPACK_IMPORTED_MODULE_0__[\"AssociationFromJSON\"])),\n        'associations': (json['associations'].map(___WEBPACK_IMPORTED_MODULE_0__[\"AssociationFromJSON\"])),\n        'attachments': (json['attachments'].map(___WEBPACK_IMPORTED_MODULE_0__[\"AttachmentFromJSON\"])),\n        'classification_nodes': (json['classification_nodes'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ClassificationNodeFromJSON\"])),\n        'item': Object(___WEBPACK_IMPORTED_MODULE_0__[\"ItemFromJSON\"])(json['item']),\n        'slots': (json['slots'].map(___WEBPACK_IMPORTED_MODULE_0__[\"SlotFromJSON\"])),\n        'thumbnails': (json['thumbnails'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ThumbnailFromJSON\"])),\n    };\n}\nfunction ItemResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'associations_to': (value.associations_to.map(___WEBPACK_IMPORTED_MODULE_0__[\"AssociationToJSON\"])),\n        'associations': (value.associations.map(___WEBPACK_IMPORTED_MODULE_0__[\"AssociationToJSON\"])),\n        'attachments': (value.attachments.map(___WEBPACK_IMPORTED_MODULE_0__[\"AttachmentToJSON\"])),\n        'classification_nodes': (value.classification_nodes.map(___WEBPACK_IMPORTED_MODULE_0__[\"ClassificationNodeToJSON\"])),\n        'item': Object(___WEBPACK_IMPORTED_MODULE_0__[\"ItemToJSON\"])(value.item),\n        'slots': (value.slots.map(___WEBPACK_IMPORTED_MODULE_0__[\"SlotToJSON\"])),\n        'thumbnails': (value.thumbnails.map(___WEBPACK_IMPORTED_MODULE_0__[\"ThumbnailToJSON\"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemSharesUpdateResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ItemSharesUpdateResponseFromJSON", function() { return ItemSharesUpdateResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ItemSharesUpdateResponseFromJSONTyped", function() { return ItemSharesUpdateResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ItemSharesUpdateResponseToJSON", function() { return ItemSharesUpdateResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ItemSharesUpdateResponseFromJSON(json) {\n    return ItemSharesUpdateResponseFromJSONTyped(json, false);\n}\nfunction ItemSharesUpdateResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'shares\': (json[\'shares\'].map(___WEBPACK_IMPORTED_MODULE_0__["ShareFromJSON"])),\n    };\n}\nfunction ItemSharesUpdateResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'shares\': (value.shares.map(___WEBPACK_IMPORTED_MODULE_0__["ShareToJSON"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemSharesUpdateResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemTemplate.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemTemplateFromJSON\", function() { return ItemTemplateFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemTemplateFromJSONTyped\", function() { return ItemTemplateFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemTemplateToJSON\", function() { return ItemTemplateToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction ItemTemplateFromJSON(json) {\n    return ItemTemplateFromJSONTyped(json, false);\n}\nfunction ItemTemplateFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'name': json['name'],\n        'description': json['description'],\n        'ordinal': json['ordinal'],\n        'visible': json['visible'],\n        'user_id': json['user_id'],\n        'updated_at': (new Date(json['updated_at'])),\n        'image': json['image'],\n        'classification_node_ids': json['classification_node_ids'],\n        'slot_ids': json['slot_ids'],\n        'label': json['label'],\n        'background_color': json['background_color'],\n    };\n}\nfunction ItemTemplateToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'name': value.name,\n        'description': value.description,\n        'ordinal': value.ordinal,\n        'visible': value.visible,\n        'user_id': value.user_id,\n        'updated_at': (value.updated_at.toISOString()),\n        'image': value.image,\n        'classification_node_ids': value.classification_node_ids,\n        'slot_ids': value.slot_ids,\n        'label': value.label,\n        'background_color': value.background_color,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemTemplate.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemTemplateResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemTemplateResponseFromJSON\", function() { return ItemTemplateResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemTemplateResponseFromJSONTyped\", function() { return ItemTemplateResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemTemplateResponseToJSON\", function() { return ItemTemplateResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ItemTemplateResponseFromJSON(json) {\n    return ItemTemplateResponseFromJSONTyped(json, false);\n}\nfunction ItemTemplateResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'classification_nodes': (json['classification_nodes'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ClassificationNodeFromJSON\"])),\n        'slots': (json['slots'].map(___WEBPACK_IMPORTED_MODULE_0__[\"SlotFromJSON\"])),\n        'item_template': Object(___WEBPACK_IMPORTED_MODULE_0__[\"ItemTemplateFromJSON\"])(json['item_template']),\n        'attachments': (json['attachments'].map(___WEBPACK_IMPORTED_MODULE_0__[\"AttachmentFromJSON\"])),\n        'thumbnails': (json['thumbnails'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ThumbnailFromJSON\"])),\n    };\n}\nfunction ItemTemplateResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'classification_nodes': (value.classification_nodes.map(___WEBPACK_IMPORTED_MODULE_0__[\"ClassificationNodeToJSON\"])),\n        'slots': (value.slots.map(___WEBPACK_IMPORTED_MODULE_0__[\"SlotToJSON\"])),\n        'item_template': Object(___WEBPACK_IMPORTED_MODULE_0__[\"ItemTemplateToJSON\"])(value.item_template),\n        'attachments': (value.attachments.map(___WEBPACK_IMPORTED_MODULE_0__[\"AttachmentToJSON\"])),\n        'thumbnails': (value.thumbnails.map(___WEBPACK_IMPORTED_MODULE_0__[\"ThumbnailToJSON\"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemTemplateResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemTemplatesResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemTemplatesResponseFromJSON\", function() { return ItemTemplatesResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemTemplatesResponseFromJSONTyped\", function() { return ItemTemplatesResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemTemplatesResponseToJSON\", function() { return ItemTemplatesResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ItemTemplatesResponseFromJSON(json) {\n    return ItemTemplatesResponseFromJSONTyped(json, false);\n}\nfunction ItemTemplatesResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'next_page_after': json['next_page_after'],\n        'attachments': (json['attachments'].map(___WEBPACK_IMPORTED_MODULE_0__[\"AttachmentFromJSON\"])),\n        'thumbnails': (json['thumbnails'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ThumbnailFromJSON\"])),\n        'classification_nodes': (json['classification_nodes'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ClassificationNodeFromJSON\"])),\n        'slots': (json['slots'].map(___WEBPACK_IMPORTED_MODULE_0__[\"SlotFromJSON\"])),\n        'item_templates': (json['item_templates'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ItemTemplateFromJSON\"])),\n        'meta': json['meta'],\n    };\n}\nfunction ItemTemplatesResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'next_page_after': value.next_page_after,\n        'attachments': (value.attachments.map(___WEBPACK_IMPORTED_MODULE_0__[\"AttachmentToJSON\"])),\n        'thumbnails': (value.thumbnails.map(___WEBPACK_IMPORTED_MODULE_0__[\"ThumbnailToJSON\"])),\n        'classification_nodes': (value.classification_nodes.map(___WEBPACK_IMPORTED_MODULE_0__[\"ClassificationNodeToJSON\"])),\n        'slots': (value.slots.map(___WEBPACK_IMPORTED_MODULE_0__[\"SlotToJSON\"])),\n        'item_templates': (value.item_templates.map(___WEBPACK_IMPORTED_MODULE_0__[\"ItemTemplateToJSON\"])),\n        'meta': value.meta,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemTemplatesResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemsIdEncryptSlots.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemsIdEncryptSlotsFromJSON\", function() { return ItemsIdEncryptSlotsFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemsIdEncryptSlotsFromJSONTyped\", function() { return ItemsIdEncryptSlotsFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemsIdEncryptSlotsToJSON\", function() { return ItemsIdEncryptSlotsToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ItemsIdEncryptSlotsFromJSON(json) {\n    return ItemsIdEncryptSlotsFromJSONTyped(json, false);\n}\nfunction ItemsIdEncryptSlotsFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'id') ? undefined : json['id'],\n        'encrypted_value': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'encrypted_value') ? undefined : json['encrypted_value'],\n    };\n}\nfunction ItemsIdEncryptSlotsToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'encrypted_value': value.encrypted_value,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemsIdEncryptSlots.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemsIdSharesShareDeks.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemsIdSharesShareDeksFromJSON\", function() { return ItemsIdSharesShareDeksFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemsIdSharesShareDeksFromJSONTyped\", function() { return ItemsIdSharesShareDeksFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemsIdSharesShareDeksToJSON\", function() { return ItemsIdSharesShareDeksToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ItemsIdSharesShareDeksFromJSON(json) {\n    return ItemsIdSharesShareDeksFromJSONTyped(json, false);\n}\nfunction ItemsIdSharesShareDeksFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'share_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'share_id') ? undefined : json['share_id'],\n        'dek': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'dek') ? undefined : json['dek'],\n    };\n}\nfunction ItemsIdSharesShareDeksToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'share_id': value.share_id,\n        'dek': value.dek,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemsIdSharesShareDeks.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemsIdSharesSlotValues.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemsIdSharesSlotValuesFromJSON\", function() { return ItemsIdSharesSlotValuesFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemsIdSharesSlotValuesFromJSONTyped\", function() { return ItemsIdSharesSlotValuesFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemsIdSharesSlotValuesToJSON\", function() { return ItemsIdSharesSlotValuesToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ItemsIdSharesSlotValuesFromJSON(json) {\n    return ItemsIdSharesSlotValuesFromJSONTyped(json, false);\n}\nfunction ItemsIdSharesSlotValuesFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'share_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'share_id') ? undefined : json['share_id'],\n        'slot_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'slot_id') ? undefined : json['slot_id'],\n        'encrypted_value': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'encrypted_value') ? undefined : json['encrypted_value'],\n        'encrypted_value_verification_key': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'encrypted_value_verification_key') ? undefined : json['encrypted_value_verification_key'],\n        'value_verification_hash': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'value_verification_hash') ? undefined : json['value_verification_hash'],\n    };\n}\nfunction ItemsIdSharesSlotValuesToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'share_id': value.share_id,\n        'slot_id': value.slot_id,\n        'encrypted_value': value.encrypted_value,\n        'encrypted_value_verification_key': value.encrypted_value_verification_key,\n        'value_verification_hash': value.value_verification_hash,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemsIdSharesSlotValues.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemsResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemsResponseFromJSON\", function() { return ItemsResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemsResponseFromJSONTyped\", function() { return ItemsResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemsResponseToJSON\", function() { return ItemsResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ItemsResponseFromJSON(json) {\n    return ItemsResponseFromJSONTyped(json, false);\n}\nfunction ItemsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'next_page_after': json['next_page_after'],\n        'associations': (json['associations'].map(___WEBPACK_IMPORTED_MODULE_0__[\"AssociationFromJSON\"])),\n        'associations_to': (json['associations_to'].map(___WEBPACK_IMPORTED_MODULE_0__[\"AssociationFromJSON\"])),\n        'attachments': (json['attachments'].map(___WEBPACK_IMPORTED_MODULE_0__[\"AttachmentFromJSON\"])),\n        'thumbnails': (json['thumbnails'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ThumbnailFromJSON\"])),\n        'classification_nodes': (json['classification_nodes'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ClassificationNodeFromJSON\"])),\n        'slots': (json['slots'].map(___WEBPACK_IMPORTED_MODULE_0__[\"SlotFromJSON\"])),\n        'items': (json['items'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ItemFromJSON\"])),\n        'meta': json['meta'],\n    };\n}\nfunction ItemsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'next_page_after': value.next_page_after,\n        'associations': (value.associations.map(___WEBPACK_IMPORTED_MODULE_0__[\"AssociationToJSON\"])),\n        'associations_to': (value.associations_to.map(___WEBPACK_IMPORTED_MODULE_0__[\"AssociationToJSON\"])),\n        'attachments': (value.attachments.map(___WEBPACK_IMPORTED_MODULE_0__[\"AttachmentToJSON\"])),\n        'thumbnails': (value.thumbnails.map(___WEBPACK_IMPORTED_MODULE_0__[\"ThumbnailToJSON\"])),\n        'classification_nodes': (value.classification_nodes.map(___WEBPACK_IMPORTED_MODULE_0__[\"ClassificationNodeToJSON\"])),\n        'slots': (value.slots.map(___WEBPACK_IMPORTED_MODULE_0__[\"SlotToJSON\"])),\n        'items': (value.items.map(___WEBPACK_IMPORTED_MODULE_0__[\"ItemToJSON\"])),\n        'meta': value.meta,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemsResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ListOrganizationMemberResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListOrganizationMemberResponseFromJSON\", function() { return ListOrganizationMemberResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListOrganizationMemberResponseFromJSONTyped\", function() { return ListOrganizationMemberResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListOrganizationMemberResponseToJSON\", function() { return ListOrganizationMemberResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ListOrganizationMemberResponseFromJSON(json) {\n    return ListOrganizationMemberResponseFromJSONTyped(json, false);\n}\nfunction ListOrganizationMemberResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'members': (json['members'].map(___WEBPACK_IMPORTED_MODULE_0__[\"OrganizationMemberFromJSON\"])),\n        'organization': Object(___WEBPACK_IMPORTED_MODULE_0__[\"OrganizationFromJSON\"])(json['organization']),\n        'meta': json['meta'],\n        'next_page_after': json['next_page_after'],\n    };\n}\nfunction ListOrganizationMemberResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'members': (value.members.map(___WEBPACK_IMPORTED_MODULE_0__[\"OrganizationMemberToJSON\"])),\n        'organization': Object(___WEBPACK_IMPORTED_MODULE_0__[\"OrganizationToJSON\"])(value.organization),\n        'meta': value.meta,\n        'next_page_after': value.next_page_after,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ListOrganizationMemberResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ListOrganizationServicesResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListOrganizationServicesResponseFromJSON\", function() { return ListOrganizationServicesResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListOrganizationServicesResponseFromJSONTyped\", function() { return ListOrganizationServicesResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListOrganizationServicesResponseToJSON\", function() { return ListOrganizationServicesResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ListOrganizationServicesResponseFromJSON(json) {\n    return ListOrganizationServicesResponseFromJSONTyped(json, false);\n}\nfunction ListOrganizationServicesResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'services': (json['services'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ServiceFromJSON\"])),\n        'meta': json['meta'],\n        'next_page_after': json['next_page_after'],\n    };\n}\nfunction ListOrganizationServicesResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'services': (value.services.map(___WEBPACK_IMPORTED_MODULE_0__[\"ServiceToJSON\"])),\n        'meta': value.meta,\n        'next_page_after': value.next_page_after,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ListOrganizationServicesResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ListOrganizationsResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListOrganizationsResponseFromJSON\", function() { return ListOrganizationsResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListOrganizationsResponseFromJSONTyped\", function() { return ListOrganizationsResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListOrganizationsResponseToJSON\", function() { return ListOrganizationsResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ListOrganizationsResponseFromJSON(json) {\n    return ListOrganizationsResponseFromJSONTyped(json, false);\n}\nfunction ListOrganizationsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'services': (json['services'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ServiceFromJSON\"])),\n        'meta': json['meta'],\n        'next_page_after': json['next_page_after'],\n    };\n}\nfunction ListOrganizationsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'services': (value.services.map(___WEBPACK_IMPORTED_MODULE_0__[\"ServiceToJSON\"])),\n        'meta': value.meta,\n        'next_page_after': value.next_page_after,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ListOrganizationsResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ListOrganizationsResponse1.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListOrganizationsResponse1FromJSON\", function() { return ListOrganizationsResponse1FromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListOrganizationsResponse1FromJSONTyped\", function() { return ListOrganizationsResponse1FromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListOrganizationsResponse1ToJSON\", function() { return ListOrganizationsResponse1ToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ListOrganizationsResponse1FromJSON(json) {\n    return ListOrganizationsResponse1FromJSONTyped(json, false);\n}\nfunction ListOrganizationsResponse1FromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'organizations': (json['organizations'].map(___WEBPACK_IMPORTED_MODULE_0__[\"OrganizationFromJSON\"])),\n        'services': (json['services'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ServiceFromJSON\"])),\n        'meta': json['meta'],\n        'next_page_after': json['next_page_after'],\n    };\n}\nfunction ListOrganizationsResponse1ToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'organizations': (value.organizations.map(___WEBPACK_IMPORTED_MODULE_0__[\"OrganizationToJSON\"])),\n        'services': (value.services.map(___WEBPACK_IMPORTED_MODULE_0__[\"ServiceToJSON\"])),\n        'meta': value.meta,\n        'next_page_after': value.next_page_after,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ListOrganizationsResponse1.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ListOrganizationsResponse2.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListOrganizationsResponse2FromJSON\", function() { return ListOrganizationsResponse2FromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListOrganizationsResponse2FromJSONTyped\", function() { return ListOrganizationsResponse2FromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListOrganizationsResponse2ToJSON\", function() { return ListOrganizationsResponse2ToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ListOrganizationsResponse2FromJSON(json) {\n    return ListOrganizationsResponse2FromJSONTyped(json, false);\n}\nfunction ListOrganizationsResponse2FromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'organizations': (json['organizations'].map(___WEBPACK_IMPORTED_MODULE_0__[\"OrganizationFromJSON\"])),\n        'meta': json['meta'],\n        'next_page_after': json['next_page_after'],\n    };\n}\nfunction ListOrganizationsResponse2ToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'organizations': (value.organizations.map(___WEBPACK_IMPORTED_MODULE_0__[\"OrganizationToJSON\"])),\n        'meta': value.meta,\n        'next_page_after': value.next_page_after,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ListOrganizationsResponse2.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/MeResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeResponseFromJSON", function() { return MeResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeResponseFromJSONTyped", function() { return MeResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeResponseToJSON", function() { return MeResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction MeResponseFromJSON(json) {\n    return MeResponseFromJSONTyped(json, false);\n}\nfunction MeResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'user\': Object(___WEBPACK_IMPORTED_MODULE_0__["UserFromJSON"])(json[\'user\']),\n        \'associations\': (json[\'associations\'].map(___WEBPACK_IMPORTED_MODULE_0__["AssociationFromJSON"])),\n    };\n}\nfunction MeResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'user\': Object(___WEBPACK_IMPORTED_MODULE_0__["UserToJSON"])(value.user),\n        \'associations\': (value.associations.map(___WEBPACK_IMPORTED_MODULE_0__["AssociationToJSON"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/MeResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Message.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MessageFromJSON\", function() { return MessageFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MessageFromJSONTyped\", function() { return MessageFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MessageToJSON\", function() { return MessageToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction MessageFromJSON(json) {\n    return MessageFromJSONTyped(json, false);\n}\nfunction MessageFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'from_user_id': json['from_user_id'],\n        'subject': json['subject'],\n        'body': json['body'],\n        'importance': json['importance'],\n        'link': (json['link'] === null ? null : new Date(json['link'])),\n        'created_at': (new Date(json['created_at'])),\n        'conversation_id': json['conversation_id'],\n        'message_number': json['message_number'],\n        'binary_id': json['binary_id'],\n        'read_at': (json['read_at'] === null ? null : new Date(json['read_at'])),\n        'deleted_at': (json['deleted_at'] === null ? null : new Date(json['deleted_at'])),\n        'updated_at': (new Date(json['updated_at'])),\n    };\n}\nfunction MessageToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'from_user_id': value.from_user_id,\n        'subject': value.subject,\n        'body': value.body,\n        'importance': value.importance,\n        'link': (value.link === null ? null : value.link.toISOString()),\n        'created_at': (value.created_at.toISOString()),\n        'conversation_id': value.conversation_id,\n        'message_number': value.message_number,\n        'binary_id': value.binary_id,\n        'read_at': (value.read_at === null ? null : value.read_at.toISOString()),\n        'deleted_at': (value.deleted_at === null ? null : value.deleted_at.toISOString()),\n        'updated_at': (value.updated_at.toISOString()),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Message.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Meta.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MetaFromJSON\", function() { return MetaFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MetaFromJSONTyped\", function() { return MetaFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MetaToJSON\", function() { return MetaToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction MetaFromJSON(json) {\n    return MetaFromJSONTyped(json, false);\n}\nfunction MetaFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'pages': json['pages'],\n        'total_count': json['total_count'],\n    };\n}\nfunction MetaToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'pages': value.pages,\n        'total_count': value.total_count,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Meta.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/NestedAttachmentAttributes.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NestedAttachmentAttributesFromJSON\", function() { return NestedAttachmentAttributesFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NestedAttachmentAttributesFromJSONTyped\", function() { return NestedAttachmentAttributesFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NestedAttachmentAttributesToJSON\", function() { return NestedAttachmentAttributesToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction NestedAttachmentAttributesFromJSON(json) {\n    return NestedAttachmentAttributesFromJSONTyped(json, false);\n}\nfunction NestedAttachmentAttributesFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'id') ? undefined : json['id'],\n        '_destroy': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, '_destroy') ? undefined : json['_destroy'],\n    };\n}\nfunction NestedAttachmentAttributesToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        '_destroy': value._destroy,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/NestedAttachmentAttributes.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/NestedClassificationNodeAttributes.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NestedClassificationNodeAttributesFromJSON\", function() { return NestedClassificationNodeAttributesFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NestedClassificationNodeAttributesFromJSONTyped\", function() { return NestedClassificationNodeAttributesFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NestedClassificationNodeAttributesToJSON\", function() { return NestedClassificationNodeAttributesToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction NestedClassificationNodeAttributesFromJSON(json) {\n    return NestedClassificationNodeAttributesFromJSONTyped(json, false);\n}\nfunction NestedClassificationNodeAttributesFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'id') ? undefined : json['id'],\n        'name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'name') ? undefined : json['name'],\n        'label': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'label') ? undefined : json['label'],\n        'description': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'description') ? undefined : json['description'],\n        'ordinal': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'ordinal') ? undefined : json['ordinal'],\n        'classification_scheme_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'classification_scheme_id') ? undefined : json['classification_scheme_id'],\n        'parent_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'parent_id') ? undefined : json['parent_id'],\n        'user_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'user_id') ? undefined : json['user_id'],\n        'image_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'image_id') ? undefined : json['image_id'],\n        'scheme': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'scheme') ? undefined : json['scheme'],\n        '_destroy': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, '_destroy') ? undefined : json['_destroy'],\n    };\n}\nfunction NestedClassificationNodeAttributesToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'name': value.name,\n        'label': value.label,\n        'description': value.description,\n        'ordinal': value.ordinal,\n        'classification_scheme_id': value.classification_scheme_id,\n        'parent_id': value.parent_id,\n        'user_id': value.user_id,\n        'image_id': value.image_id,\n        'scheme': value.scheme,\n        '_destroy': value._destroy,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/NestedClassificationNodeAttributes.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/NestedSlotAttributes.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NestedSlotAttributesFromJSON\", function() { return NestedSlotAttributesFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NestedSlotAttributesFromJSONTyped\", function() { return NestedSlotAttributesFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NestedSlotAttributesToJSON\", function() { return NestedSlotAttributesToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction NestedSlotAttributesFromJSON(json) {\n    return NestedSlotAttributesFromJSONTyped(json, false);\n}\nfunction NestedSlotAttributesFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'id') ? undefined : json['id'],\n        'name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'name') ? undefined : json['name'],\n        'description': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'description') ? undefined : json['description'],\n        'ordinal': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'ordinal') ? undefined : json['ordinal'],\n        'visible': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'visible') ? undefined : json['visible'],\n        'image_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'image_id') ? undefined : json['image_id'],\n        'template_slot_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'template_slot_id') ? undefined : json['template_slot_id'],\n        'slot_type_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'slot_type_id') ? undefined : json['slot_type_id'],\n        'slot_type_name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'slot_type_name') ? undefined : json['slot_type_name'],\n        'value': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'value') ? undefined : json['value'],\n        'encrypted_value': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'encrypted_value') ? undefined : json['encrypted_value'],\n        'label': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'label') ? undefined : json['label'],\n        '_destroy': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, '_destroy') ? undefined : json['_destroy'],\n        'attachment_attributes': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'attachment_attributes') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__[\"NestedAttachmentAttributesFromJSON\"])(json['attachment_attributes']),\n        'classification_nodes_attributes': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'classification_nodes_attributes') ? undefined : (json['classification_nodes_attributes'].map(___WEBPACK_IMPORTED_MODULE_1__[\"NestedClassificationNodeAttributesFromJSON\"])),\n    };\n}\nfunction NestedSlotAttributesToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'name': value.name,\n        'description': value.description,\n        'ordinal': value.ordinal,\n        'visible': value.visible,\n        'image_id': value.image_id,\n        'template_slot_id': value.template_slot_id,\n        'slot_type_id': value.slot_type_id,\n        'slot_type_name': value.slot_type_name,\n        'value': value.value,\n        'encrypted_value': value.encrypted_value,\n        'label': value.label,\n        '_destroy': value._destroy,\n        'attachment_attributes': Object(___WEBPACK_IMPORTED_MODULE_1__[\"NestedAttachmentAttributesToJSON\"])(value.attachment_attributes),\n        'classification_nodes_attributes': value.classification_nodes_attributes === undefined ? undefined : (value.classification_nodes_attributes.map(___WEBPACK_IMPORTED_MODULE_1__[\"NestedClassificationNodeAttributesToJSON\"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/NestedSlotAttributes.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Organization.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrganizationFromJSON\", function() { return OrganizationFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrganizationFromJSONTyped\", function() { return OrganizationFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrganizationToJSON\", function() { return OrganizationToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction OrganizationFromJSON(json) {\n    return OrganizationFromJSONTyped(json, false);\n}\nfunction OrganizationFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'name': json['name'],\n        'description': json['description'],\n        'url': json['url'],\n        'email': json['email'],\n        'status': json['status'],\n        'requestor_id': json['requestor_id'],\n        'validated_by_id': json['validated_by_id'],\n        'agent_id': json['agent_id'],\n        'validated_at': (json['validated_at'] === null ? null : new Date(json['validated_at'])),\n        'created_at': (new Date(json['created_at'])),\n    };\n}\nfunction OrganizationToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'name': value.name,\n        'description': value.description,\n        'url': value.url,\n        'email': value.email,\n        'status': value.status,\n        'requestor_id': value.requestor_id,\n        'validated_by_id': value.validated_by_id,\n        'agent_id': value.agent_id,\n        'validated_at': (value.validated_at === null ? null : value.validated_at.toISOString()),\n        'created_at': (value.created_at.toISOString()),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Organization.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationAgentLoginDetailResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrganizationAgentLoginDetailResponseFromJSON\", function() { return OrganizationAgentLoginDetailResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrganizationAgentLoginDetailResponseFromJSONTyped\", function() { return OrganizationAgentLoginDetailResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrganizationAgentLoginDetailResponseToJSON\", function() { return OrganizationAgentLoginDetailResponseToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction OrganizationAgentLoginDetailResponseFromJSON(json) {\n    return OrganizationAgentLoginDetailResponseFromJSONTyped(json, false);\n}\nfunction OrganizationAgentLoginDetailResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'token_type': json['token_type'],\n        'encrypted_access_token': json['encrypted_access_token'],\n    };\n}\nfunction OrganizationAgentLoginDetailResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'token_type': value.token_type,\n        'encrypted_access_token': value.encrypted_access_token,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationAgentLoginDetailResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationMember.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrganizationMemberFromJSON\", function() { return OrganizationMemberFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrganizationMemberFromJSONTyped\", function() { return OrganizationMemberFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrganizationMemberToJSON\", function() { return OrganizationMemberToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction OrganizationMemberFromJSON(json) {\n    return OrganizationMemberFromJSONTyped(json, false);\n}\nfunction OrganizationMemberFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'full_name': json['full_name'],\n        'email': json['email'],\n        'is_app_logging_enabled': json['is_app_logging_enabled'],\n        'image': json['image'],\n        'role': json['role'],\n    };\n}\nfunction OrganizationMemberToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'full_name': value.full_name,\n        'email': value.email,\n        'is_app_logging_enabled': value.is_app_logging_enabled,\n        'image': value.image,\n        'role': value.role,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationMember.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrganizationResponseFromJSON", function() { return OrganizationResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrganizationResponseFromJSONTyped", function() { return OrganizationResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrganizationResponseToJSON", function() { return OrganizationResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction OrganizationResponseFromJSON(json) {\n    return OrganizationResponseFromJSONTyped(json, false);\n}\nfunction OrganizationResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'organization\': Object(___WEBPACK_IMPORTED_MODULE_0__["OrganizationFromJSON"])(json[\'organization\']),\n    };\n}\nfunction OrganizationResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'organization\': Object(___WEBPACK_IMPORTED_MODULE_0__["OrganizationToJSON"])(value.organization),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationsIdOrganization.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrganizationsIdOrganizationFromJSON\", function() { return OrganizationsIdOrganizationFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrganizationsIdOrganizationFromJSONTyped\", function() { return OrganizationsIdOrganizationFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrganizationsIdOrganizationToJSON\", function() { return OrganizationsIdOrganizationToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction OrganizationsIdOrganizationFromJSON(json) {\n    return OrganizationsIdOrganizationFromJSONTyped(json, false);\n}\nfunction OrganizationsIdOrganizationFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'name') ? undefined : json['name'],\n        'description': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'description') ? undefined : json['description'],\n        'url': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'url') ? undefined : json['url'],\n        'email': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'email') ? undefined : json['email'],\n    };\n}\nfunction OrganizationsIdOrganizationToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'name': value.name,\n        'description': value.description,\n        'url': value.url,\n        'email': value.email,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationsIdOrganization.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationsOrganizationIdMembersIdOrganizationMember.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSON", function() { return OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSONTyped", function() { return OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrganizationsOrganizationIdMembersIdOrganizationMemberToJSON", function() { return OrganizationsOrganizationIdMembersIdOrganizationMemberToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSON(json) {\n    return OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSONTyped(json, false);\n}\nfunction OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'role\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'role\') ? undefined : json[\'role\'],\n    };\n}\nfunction OrganizationsOrganizationIdMembersIdOrganizationMemberToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'role\': value.role,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationsOrganizationIdMembersIdOrganizationMember.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationsOrganizationIdServicesIdService.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrganizationsOrganizationIdServicesIdServiceFromJSON\", function() { return OrganizationsOrganizationIdServicesIdServiceFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrganizationsOrganizationIdServicesIdServiceFromJSONTyped\", function() { return OrganizationsOrganizationIdServicesIdServiceFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrganizationsOrganizationIdServicesIdServiceToJSON\", function() { return OrganizationsOrganizationIdServicesIdServiceToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction OrganizationsOrganizationIdServicesIdServiceFromJSON(json) {\n    return OrganizationsOrganizationIdServicesIdServiceFromJSONTyped(json, false);\n}\nfunction OrganizationsOrganizationIdServicesIdServiceFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'name') ? undefined : json['name'],\n        'description': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'description') ? undefined : json['description'],\n        'contract': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'contract') ? undefined : json['contract'],\n        'organization_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'organization_id') ? undefined : json['organization_id'],\n    };\n}\nfunction OrganizationsOrganizationIdServicesIdServiceToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'name': value.name,\n        'description': value.description,\n        'contract': value.contract,\n        'organization_id': value.organization_id,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationsOrganizationIdServicesIdService.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OwnConnectionData.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OwnConnectionDataFromJSON\", function() { return OwnConnectionDataFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OwnConnectionDataFromJSONTyped\", function() { return OwnConnectionDataFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OwnConnectionDataToJSON\", function() { return OwnConnectionDataToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction OwnConnectionDataFromJSON(json) {\n    return OwnConnectionDataFromJSONTyped(json, false);\n}\nfunction OwnConnectionDataFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'encrypted_recipient_name': json['encrypted_recipient_name'],\n        'integration_data': json['integration_data'],\n        'connection_type': json['connection_type'],\n        'user_image': json['user_image'],\n        'user_id': json['user_id'],\n        'user_type': json['user_type'],\n        'user_public_key': json['user_public_key'],\n        'user_keypair_external_id': json['user_keypair_external_id'],\n    };\n}\nfunction OwnConnectionDataToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'encrypted_recipient_name': value.encrypted_recipient_name,\n        'integration_data': value.integration_data,\n        'connection_type': value.connection_type,\n        'user_image': value.user_image,\n        'user_id': value.user_id,\n        'user_type': value.user_type,\n        'user_public_key': value.user_public_key,\n        'user_keypair_external_id': value.user_keypair_external_id,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OwnConnectionData.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ParentPublicKeyForConnection.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParentPublicKeyForConnectionFromJSON\", function() { return ParentPublicKeyForConnectionFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParentPublicKeyForConnectionFromJSONTyped\", function() { return ParentPublicKeyForConnectionFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParentPublicKeyForConnectionToJSON\", function() { return ParentPublicKeyForConnectionToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ParentPublicKeyForConnectionFromJSON(json) {\n    return ParentPublicKeyForConnectionFromJSONTyped(json, false);\n}\nfunction ParentPublicKeyForConnectionFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'pem': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'pem') ? undefined : json['pem'],\n        'external_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'external_id') ? undefined : json['external_id'],\n    };\n}\nfunction ParentPublicKeyForConnectionToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'pem': value.pem,\n        'external_id': value.external_id,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ParentPublicKeyForConnection.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostAttachmentDirectUploadUrlBlobRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostAttachmentDirectUploadUrlBlobRequestFromJSON\", function() { return PostAttachmentDirectUploadUrlBlobRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostAttachmentDirectUploadUrlBlobRequestFromJSONTyped\", function() { return PostAttachmentDirectUploadUrlBlobRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostAttachmentDirectUploadUrlBlobRequestToJSON\", function() { return PostAttachmentDirectUploadUrlBlobRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PostAttachmentDirectUploadUrlBlobRequestFromJSON(json) {\n    return PostAttachmentDirectUploadUrlBlobRequestFromJSONTyped(json, false);\n}\nfunction PostAttachmentDirectUploadUrlBlobRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'filename': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'filename') ? undefined : json['filename'],\n        'content_type': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'content_type') ? undefined : json['content_type'],\n        'byte_size': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'byte_size') ? undefined : json['byte_size'],\n    };\n}\nfunction PostAttachmentDirectUploadUrlBlobRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'filename': value.filename,\n        'content_type': value.content_type,\n        'byte_size': value.byte_size,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostAttachmentDirectUploadUrlBlobRequest.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostAttachmentDirectUploadUrlRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostAttachmentDirectUploadUrlRequestFromJSON", function() { return PostAttachmentDirectUploadUrlRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostAttachmentDirectUploadUrlRequestFromJSONTyped", function() { return PostAttachmentDirectUploadUrlRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostAttachmentDirectUploadUrlRequestToJSON", function() { return PostAttachmentDirectUploadUrlRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PostAttachmentDirectUploadUrlRequestFromJSON(json) {\n    return PostAttachmentDirectUploadUrlRequestFromJSONTyped(json, false);\n}\nfunction PostAttachmentDirectUploadUrlRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'blob\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'blob\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["PostAttachmentDirectUploadUrlBlobRequestFromJSON"])(json[\'blob\']),\n    };\n}\nfunction PostAttachmentDirectUploadUrlRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'blob\': Object(___WEBPACK_IMPORTED_MODULE_1__["PostAttachmentDirectUploadUrlBlobRequestToJSON"])(value.blob),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostAttachmentDirectUploadUrlRequest.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostConnection.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostConnectionFromJSON\", function() { return PostConnectionFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostConnectionFromJSONTyped\", function() { return PostConnectionFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostConnectionToJSON\", function() { return PostConnectionToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PostConnectionFromJSON(json) {\n    return PostConnectionFromJSONTyped(json, false);\n}\nfunction PostConnectionFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'encrypted_recipient_name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'encrypted_recipient_name') ? undefined : json['encrypted_recipient_name'],\n        'invitation_token': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'invitation_token') ? undefined : json['invitation_token'],\n    };\n}\nfunction PostConnectionToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'encrypted_recipient_name': value.encrypted_recipient_name,\n        'invitation_token': value.invitation_token,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostConnection.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostConnectionPublicKey.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostConnectionPublicKeyFromJSON\", function() { return PostConnectionPublicKeyFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostConnectionPublicKeyFromJSONTyped\", function() { return PostConnectionPublicKeyFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostConnectionPublicKeyToJSON\", function() { return PostConnectionPublicKeyToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PostConnectionPublicKeyFromJSON(json) {\n    return PostConnectionPublicKeyFromJSONTyped(json, false);\n}\nfunction PostConnectionPublicKeyFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'keypair_external_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'keypair_external_id') ? undefined : json['keypair_external_id'],\n        'public_key': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'public_key') ? undefined : json['public_key'],\n    };\n}\nfunction PostConnectionPublicKeyToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'keypair_external_id': value.keypair_external_id,\n        'public_key': value.public_key,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostConnectionPublicKey.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostConnectionsRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostConnectionsRequestFromJSON", function() { return PostConnectionsRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostConnectionsRequestFromJSONTyped", function() { return PostConnectionsRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostConnectionsRequestToJSON", function() { return PostConnectionsRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PostConnectionsRequestFromJSON(json) {\n    return PostConnectionsRequestFromJSONTyped(json, false);\n}\nfunction PostConnectionsRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'public_key\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'public_key\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["PostConnectionPublicKeyFromJSON"])(json[\'public_key\']),\n        \'connection\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'connection\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["PostConnectionFromJSON"])(json[\'connection\']),\n    };\n}\nfunction PostConnectionsRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'public_key\': Object(___WEBPACK_IMPORTED_MODULE_1__["PostConnectionPublicKeyToJSON"])(value.public_key),\n        \'connection\': Object(___WEBPACK_IMPORTED_MODULE_1__["PostConnectionToJSON"])(value.connection),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostConnectionsRequest.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostCreateAttachmentBlobRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostCreateAttachmentBlobRequestFromJSON\", function() { return PostCreateAttachmentBlobRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostCreateAttachmentBlobRequestFromJSONTyped\", function() { return PostCreateAttachmentBlobRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostCreateAttachmentBlobRequestToJSON\", function() { return PostCreateAttachmentBlobRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PostCreateAttachmentBlobRequestFromJSON(json) {\n    return PostCreateAttachmentBlobRequestFromJSONTyped(json, false);\n}\nfunction PostCreateAttachmentBlobRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'blob_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'blob_id') ? undefined : json['blob_id'],\n        'blob_key': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'blob_key') ? undefined : json['blob_key'],\n        'encrypted_artifact_blob_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'encrypted_artifact_blob_id') ? undefined : json['encrypted_artifact_blob_id'],\n        'encrypted_artifact_blob_key': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'encrypted_artifact_blob_key') ? undefined : json['encrypted_artifact_blob_key'],\n    };\n}\nfunction PostCreateAttachmentBlobRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'blob_id': value.blob_id,\n        'blob_key': value.blob_key,\n        'encrypted_artifact_blob_id': value.encrypted_artifact_blob_id,\n        'encrypted_artifact_blob_key': value.encrypted_artifact_blob_key,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostCreateAttachmentBlobRequest.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostCreateAttachmentRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostCreateAttachmentRequestFromJSON", function() { return PostCreateAttachmentRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostCreateAttachmentRequestFromJSONTyped", function() { return PostCreateAttachmentRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostCreateAttachmentRequestToJSON", function() { return PostCreateAttachmentRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PostCreateAttachmentRequestFromJSON(json) {\n    return PostCreateAttachmentRequestFromJSONTyped(json, false);\n}\nfunction PostCreateAttachmentRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'blob\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'blob\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["PostCreateAttachmentBlobRequestFromJSON"])(json[\'blob\']),\n    };\n}\nfunction PostCreateAttachmentRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'blob\': Object(___WEBPACK_IMPORTED_MODULE_1__["PostCreateAttachmentBlobRequestToJSON"])(value.blob),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostCreateAttachmentRequest.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostEventsRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostEventsRequestFromJSON\", function() { return PostEventsRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostEventsRequestFromJSONTyped\", function() { return PostEventsRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostEventsRequestToJSON\", function() { return PostEventsRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PostEventsRequestFromJSON(json) {\n    return PostEventsRequestFromJSONTyped(json, false);\n}\nfunction PostEventsRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'parent_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'parent_id') ? undefined : json['parent_id'],\n        'app_name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'app_name') ? undefined : json['app_name'],\n        'app_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'app_id') ? undefined : json['app_id'],\n        'eventable_type': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'eventable_type') ? undefined : json['eventable_type'],\n        'eventable_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'eventable_id') ? undefined : json['eventable_id'],\n        'event_type': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'event_type') ? undefined : json['event_type'],\n        'event_time': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'event_time') ? undefined : (json['event_time'] === null ? null : new Date(json['event_time'])),\n        'name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'name') ? undefined : json['name'],\n        'label': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'label') ? undefined : json['label'],\n        'value': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'value') ? undefined : json['value'],\n    };\n}\nfunction PostEventsRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'parent_id': value.parent_id,\n        'app_name': value.app_name,\n        'app_id': value.app_id,\n        'eventable_type': value.eventable_type,\n        'eventable_id': value.eventable_id,\n        'event_type': value.event_type,\n        'event_time': value.event_time === undefined ? undefined : (value.event_time === null ? null : value.event_time.toISOString()),\n        'name': value.name,\n        'label': value.label,\n        'value': value.value,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostEventsRequest.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostInvitation.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostInvitationFromJSON\", function() { return PostInvitationFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostInvitationFromJSONTyped\", function() { return PostInvitationFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostInvitationToJSON\", function() { return PostInvitationToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PostInvitationFromJSON(json) {\n    return PostInvitationFromJSONTyped(json, false);\n}\nfunction PostInvitationFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'encrypted_recipient_name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'encrypted_recipient_name') ? undefined : json['encrypted_recipient_name'],\n        'organization_member_role': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'organization_member_role') ? undefined : json['organization_member_role'],\n        'delegate_role': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'delegate_role') ? undefined : json['delegate_role'],\n        'delegation_token': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'delegation_token') ? undefined : json['delegation_token'],\n    };\n}\nfunction PostInvitationToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'encrypted_recipient_name': value.encrypted_recipient_name,\n        'organization_member_role': value.organization_member_role,\n        'delegate_role': value.delegate_role,\n        'delegation_token': value.delegation_token,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostInvitation.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostInvitationPublicKey.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostInvitationPublicKeyFromJSON\", function() { return PostInvitationPublicKeyFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostInvitationPublicKeyFromJSONTyped\", function() { return PostInvitationPublicKeyFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostInvitationPublicKeyToJSON\", function() { return PostInvitationPublicKeyToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PostInvitationPublicKeyFromJSON(json) {\n    return PostInvitationPublicKeyFromJSONTyped(json, false);\n}\nfunction PostInvitationPublicKeyFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'keypair_external_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'keypair_external_id') ? undefined : json['keypair_external_id'],\n        'public_key': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'public_key') ? undefined : json['public_key'],\n    };\n}\nfunction PostInvitationPublicKeyToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'keypair_external_id': value.keypair_external_id,\n        'public_key': value.public_key,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostInvitationPublicKey.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostInvitationsRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostInvitationsRequestFromJSON", function() { return PostInvitationsRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostInvitationsRequestFromJSONTyped", function() { return PostInvitationsRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostInvitationsRequestToJSON", function() { return PostInvitationsRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PostInvitationsRequestFromJSON(json) {\n    return PostInvitationsRequestFromJSONTyped(json, false);\n}\nfunction PostInvitationsRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'public_key\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'public_key\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["PostInvitationPublicKeyFromJSON"])(json[\'public_key\']),\n        \'invitation\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'invitation\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["PostInvitationFromJSON"])(json[\'invitation\']),\n    };\n}\nfunction PostInvitationsRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'public_key\': Object(___WEBPACK_IMPORTED_MODULE_1__["PostInvitationPublicKeyToJSON"])(value.public_key),\n        \'invitation\': Object(___WEBPACK_IMPORTED_MODULE_1__["PostInvitationToJSON"])(value.invitation),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostInvitationsRequest.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemEncryptRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostItemEncryptRequestFromJSON", function() { return PostItemEncryptRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostItemEncryptRequestFromJSONTyped", function() { return PostItemEncryptRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostItemEncryptRequestToJSON", function() { return PostItemEncryptRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PostItemEncryptRequestFromJSON(json) {\n    return PostItemEncryptRequestFromJSONTyped(json, false);\n}\nfunction PostItemEncryptRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'slots\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'slots\') ? undefined : (json[\'slots\'].map(___WEBPACK_IMPORTED_MODULE_1__["ItemsIdEncryptSlotsFromJSON"])),\n    };\n}\nfunction PostItemEncryptRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'slots\': value.slots === undefined ? undefined : (value.slots.map(___WEBPACK_IMPORTED_MODULE_1__["ItemsIdEncryptSlotsToJSON"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemEncryptRequest.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemSharesRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostItemSharesRequestFromJSON", function() { return PostItemSharesRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostItemSharesRequestFromJSONTyped", function() { return PostItemSharesRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostItemSharesRequestToJSON", function() { return PostItemSharesRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PostItemSharesRequestFromJSON(json) {\n    return PostItemSharesRequestFromJSONTyped(json, false);\n}\nfunction PostItemSharesRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'shares\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'shares\') ? undefined : (json[\'shares\'].map(___WEBPACK_IMPORTED_MODULE_1__["PostItemSharesRequestShareFromJSON"])),\n    };\n}\nfunction PostItemSharesRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'shares\': value.shares === undefined ? undefined : (value.shares.map(___WEBPACK_IMPORTED_MODULE_1__["PostItemSharesRequestShareToJSON"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemSharesRequest.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemSharesRequestShare.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostItemSharesRequestShareFromJSON\", function() { return PostItemSharesRequestShareFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostItemSharesRequestShareFromJSONTyped\", function() { return PostItemSharesRequestShareFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostItemSharesRequestShareToJSON\", function() { return PostItemSharesRequestShareToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PostItemSharesRequestShareFromJSON(json) {\n    return PostItemSharesRequestShareFromJSONTyped(json, false);\n}\nfunction PostItemSharesRequestShareFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'recipient_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'recipient_id') ? undefined : json['recipient_id'],\n        'public_key': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'public_key') ? undefined : json['public_key'],\n        'encrypted_dek': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'encrypted_dek') ? undefined : json['encrypted_dek'],\n        'keypair_external_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'keypair_external_id') ? undefined : json['keypair_external_id'],\n        'terms': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'terms') ? undefined : json['terms'],\n        'sharing_mode': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'sharing_mode') ? undefined : json['sharing_mode'],\n        'acceptance_required': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'acceptance_required') ? undefined : json['acceptance_required'],\n        'expires_at': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'expires_at') ? undefined : (json['expires_at'] === null ? null : new Date(json['expires_at'])),\n        'slot_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'slot_id') ? undefined : json['slot_id'],\n        'slot_values': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'slot_values') ? undefined : (json['slot_values'].map(___WEBPACK_IMPORTED_MODULE_1__[\"EncryptedSlotValueFromJSON\"])),\n    };\n}\nfunction PostItemSharesRequestShareToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'recipient_id': value.recipient_id,\n        'public_key': value.public_key,\n        'encrypted_dek': value.encrypted_dek,\n        'keypair_external_id': value.keypair_external_id,\n        'terms': value.terms,\n        'sharing_mode': value.sharing_mode,\n        'acceptance_required': value.acceptance_required,\n        'expires_at': value.expires_at === undefined ? undefined : (value.expires_at === null ? null : value.expires_at.toISOString()),\n        'slot_id': value.slot_id,\n        'slot_values': value.slot_values === undefined ? undefined : (value.slot_values.map(___WEBPACK_IMPORTED_MODULE_1__[\"EncryptedSlotValueToJSON\"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemSharesRequestShare.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemTemplateRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostItemTemplateRequestFromJSON\", function() { return PostItemTemplateRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostItemTemplateRequestFromJSONTyped\", function() { return PostItemTemplateRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostItemTemplateRequestToJSON\", function() { return PostItemTemplateRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PostItemTemplateRequestFromJSON(json) {\n    return PostItemTemplateRequestFromJSONTyped(json, false);\n}\nfunction PostItemTemplateRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'name') ? undefined : json['name'],\n        'label': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'label') ? undefined : json['label'],\n        'description': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'description') ? undefined : json['description'],\n        'image_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'image_id') ? undefined : json['image_id'],\n        'classification_scheme_name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'classification_scheme_name') ? undefined : json['classification_scheme_name'],\n        'classification_node_name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'classification_node_name') ? undefined : json['classification_node_name'],\n        'slots_attributes': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'slots_attributes') ? undefined : (json['slots_attributes'].map(___WEBPACK_IMPORTED_MODULE_1__[\"PostItemTemplateRequestSlotAttributesFromJSON\"])),\n    };\n}\nfunction PostItemTemplateRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'name': value.name,\n        'label': value.label,\n        'description': value.description,\n        'image_id': value.image_id,\n        'classification_scheme_name': value.classification_scheme_name,\n        'classification_node_name': value.classification_node_name,\n        'slots_attributes': value.slots_attributes === undefined ? undefined : (value.slots_attributes.map(___WEBPACK_IMPORTED_MODULE_1__[\"PostItemTemplateRequestSlotAttributesToJSON\"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemTemplateRequest.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemTemplateRequestSlotAttributes.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostItemTemplateRequestSlotAttributesFromJSON\", function() { return PostItemTemplateRequestSlotAttributesFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostItemTemplateRequestSlotAttributesFromJSONTyped\", function() { return PostItemTemplateRequestSlotAttributesFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostItemTemplateRequestSlotAttributesToJSON\", function() { return PostItemTemplateRequestSlotAttributesToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PostItemTemplateRequestSlotAttributesFromJSON(json) {\n    return PostItemTemplateRequestSlotAttributesFromJSONTyped(json, false);\n}\nfunction PostItemTemplateRequestSlotAttributesFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'name') ? undefined : json['name'],\n        'label': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'label') ? undefined : json['label'],\n        'description': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'description') ? undefined : json['description'],\n        'slot_type_name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'slot_type_name') ? undefined : json['slot_type_name'],\n    };\n}\nfunction PostItemTemplateRequestSlotAttributesToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'name': value.name,\n        'label': value.label,\n        'description': value.description,\n        'slot_type_name': value.slot_type_name,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemTemplateRequestSlotAttributes.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemsAssociationsRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostItemsAssociationsRequestFromJSON\", function() { return PostItemsAssociationsRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostItemsAssociationsRequestFromJSONTyped\", function() { return PostItemsAssociationsRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostItemsAssociationsRequestToJSON\", function() { return PostItemsAssociationsRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PostItemsAssociationsRequestFromJSON(json) {\n    return PostItemsAssociationsRequestFromJSONTyped(json, false);\n}\nfunction PostItemsAssociationsRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'name') ? undefined : json['name'],\n        'association_type_name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'association_type_name') ? undefined : json['association_type_name'],\n        'associated_to_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'associated_to_id') ? undefined : json['associated_to_id'],\n        'associated_to_type': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'associated_to_type') ? undefined : json['associated_to_type'],\n        'associated_from_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'associated_from_id') ? undefined : json['associated_from_id'],\n        'associated_from_type': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'associated_from_type') ? undefined : json['associated_from_type'],\n    };\n}\nfunction PostItemsAssociationsRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'name': value.name,\n        'association_type_name': value.association_type_name,\n        'associated_to_id': value.associated_to_id,\n        'associated_to_type': value.associated_to_type,\n        'associated_from_id': value.associated_from_id,\n        'associated_from_type': value.associated_from_type,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemsAssociationsRequest.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemsRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostItemsRequestFromJSON", function() { return PostItemsRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostItemsRequestFromJSONTyped", function() { return PostItemsRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostItemsRequestToJSON", function() { return PostItemsRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PostItemsRequestFromJSON(json) {\n    return PostItemsRequestFromJSONTyped(json, false);\n}\nfunction PostItemsRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'item\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'item\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["PostItemsRequestItemFromJSON"])(json[\'item\']),\n        \'template_name\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'template_name\') ? undefined : json[\'template_name\'],\n    };\n}\nfunction PostItemsRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'item\': Object(___WEBPACK_IMPORTED_MODULE_1__["PostItemsRequestItemToJSON"])(value.item),\n        \'template_name\': value.template_name,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemsRequest.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemsRequestItem.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostItemsRequestItemFromJSON\", function() { return PostItemsRequestItemFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostItemsRequestItemFromJSONTyped\", function() { return PostItemsRequestItemFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostItemsRequestItemToJSON\", function() { return PostItemsRequestItemToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PostItemsRequestItemFromJSON(json) {\n    return PostItemsRequestItemFromJSONTyped(json, false);\n}\nfunction PostItemsRequestItemFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'label': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'label') ? undefined : json['label'],\n        'classification_nodes_attributes': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'classification_nodes_attributes') ? undefined : (json['classification_nodes_attributes'].map(___WEBPACK_IMPORTED_MODULE_1__[\"NestedClassificationNodeAttributesFromJSON\"])),\n        'slots_attributes': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'slots_attributes') ? undefined : (json['slots_attributes'].map(___WEBPACK_IMPORTED_MODULE_1__[\"NestedSlotAttributesFromJSON\"])),\n    };\n}\nfunction PostItemsRequestItemToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'label': value.label,\n        'classification_nodes_attributes': value.classification_nodes_attributes === undefined ? undefined : (value.classification_nodes_attributes.map(___WEBPACK_IMPORTED_MODULE_1__[\"NestedClassificationNodeAttributesToJSON\"])),\n        'slots_attributes': value.slots_attributes === undefined ? undefined : (value.slots_attributes.map(___WEBPACK_IMPORTED_MODULE_1__[\"NestedSlotAttributesToJSON\"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemsRequestItem.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostMeRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostMeRequestFromJSON\", function() { return PostMeRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostMeRequestFromJSONTyped\", function() { return PostMeRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostMeRequestToJSON\", function() { return PostMeRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PostMeRequestFromJSON(json) {\n    return PostMeRequestFromJSONTyped(json, false);\n}\nfunction PostMeRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'public_key': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'public_key') ? undefined : json['public_key'],\n        'admission_token': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'admission_token') ? undefined : json['admission_token'],\n    };\n}\nfunction PostMeRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'public_key': value.public_key,\n        'admission_token': value.admission_token,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostMeRequest.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostMeResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostMeResponseFromJSON\", function() { return PostMeResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostMeResponseFromJSONTyped\", function() { return PostMeResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostMeResponseToJSON\", function() { return PostMeResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PostMeResponseFromJSON(json) {\n    return PostMeResponseFromJSONTyped(json, false);\n}\nfunction PostMeResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'encrypted_session_authentication_string': json['encrypted_session_authentication_string'],\n        'user': Object(___WEBPACK_IMPORTED_MODULE_0__[\"UserFromJSON\"])(json['user']),\n        'associations': (json['associations'].map(___WEBPACK_IMPORTED_MODULE_0__[\"AssociationFromJSON\"])),\n    };\n}\nfunction PostMeResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'encrypted_session_authentication_string': value.encrypted_session_authentication_string,\n        'user': Object(___WEBPACK_IMPORTED_MODULE_0__[\"UserToJSON\"])(value.user),\n        'associations': (value.associations.map(___WEBPACK_IMPORTED_MODULE_0__[\"AssociationToJSON\"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostMeResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostOrganizationRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostOrganizationRequestFromJSON\", function() { return PostOrganizationRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostOrganizationRequestFromJSONTyped\", function() { return PostOrganizationRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostOrganizationRequestToJSON\", function() { return PostOrganizationRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PostOrganizationRequestFromJSON(json) {\n    return PostOrganizationRequestFromJSONTyped(json, false);\n}\nfunction PostOrganizationRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'name') ? undefined : json['name'],\n        'description': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'description') ? undefined : json['description'],\n        'url': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'url') ? undefined : json['url'],\n        'email': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'email') ? undefined : json['email'],\n        'public_key': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'public_key') ? undefined : json['public_key'],\n    };\n}\nfunction PostOrganizationRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'name': value.name,\n        'description': value.description,\n        'url': value.url,\n        'email': value.email,\n        'public_key': value.public_key,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostOrganizationRequest.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostOrganizationServiceRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostOrganizationServiceRequestFromJSON", function() { return PostOrganizationServiceRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostOrganizationServiceRequestFromJSONTyped", function() { return PostOrganizationServiceRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostOrganizationServiceRequestToJSON", function() { return PostOrganizationServiceRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PostOrganizationServiceRequestFromJSON(json) {\n    return PostOrganizationServiceRequestFromJSONTyped(json, false);\n}\nfunction PostOrganizationServiceRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'service\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'service\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["PostServiceRequestFromJSON"])(json[\'service\']),\n    };\n}\nfunction PostOrganizationServiceRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'service\': Object(___WEBPACK_IMPORTED_MODULE_1__["PostServiceRequestToJSON"])(value.service),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostOrganizationServiceRequest.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostServiceRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostServiceRequestFromJSON\", function() { return PostServiceRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostServiceRequestFromJSONTyped\", function() { return PostServiceRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostServiceRequestToJSON\", function() { return PostServiceRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PostServiceRequestFromJSON(json) {\n    return PostServiceRequestFromJSONTyped(json, false);\n}\nfunction PostServiceRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'name') ? undefined : json['name'],\n        'description': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'description') ? undefined : json['description'],\n        'contract': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'contract') ? undefined : json['contract'],\n        'public_key': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'public_key') ? undefined : json['public_key'],\n    };\n}\nfunction PostServiceRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'name': value.name,\n        'description': value.description,\n        'contract': value.contract,\n        'public_key': value.public_key,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostServiceRequest.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostSessionRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostSessionRequestFromJSON\", function() { return PostSessionRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostSessionRequestFromJSONTyped\", function() { return PostSessionRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PostSessionRequestToJSON\", function() { return PostSessionRequestToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction PostSessionRequestFromJSON(json) {\n    return PostSessionRequestFromJSONTyped(json, false);\n}\nfunction PostSessionRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'public_key': json['public_key'],\n    };\n}\nfunction PostSessionRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'public_key': value.public_key,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostSessionRequest.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PublicInvitation.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PublicInvitationFromJSON\", function() { return PublicInvitationFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PublicInvitationFromJSONTyped\", function() { return PublicInvitationFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PublicInvitationToJSON\", function() { return PublicInvitationToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction PublicInvitationFromJSON(json) {\n    return PublicInvitationFromJSONTyped(json, false);\n}\nfunction PublicInvitationFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'message': json['message'],\n        'sent_at': (json['sent_at'] === null ? null : new Date(json['sent_at'])),\n        'token': json['token'],\n        'user_name': json['user_name'],\n        'user_image': json['user_image'],\n        'user_public_key': json['user_public_key'],\n        'integration_data': json['integration_data'],\n    };\n}\nfunction PublicInvitationToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'message': value.message,\n        'sent_at': (value.sent_at === null ? null : value.sent_at.toISOString()),\n        'token': value.token,\n        'user_name': value.user_name,\n        'user_image': value.user_image,\n        'user_public_key': value.user_public_key,\n        'integration_data': value.integration_data,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PublicInvitation.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PublicInvitationResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PublicInvitationResponseFromJSON", function() { return PublicInvitationResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PublicInvitationResponseFromJSONTyped", function() { return PublicInvitationResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PublicInvitationResponseToJSON", function() { return PublicInvitationResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PublicInvitationResponseFromJSON(json) {\n    return PublicInvitationResponseFromJSONTyped(json, false);\n}\nfunction PublicInvitationResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'invitation\': Object(___WEBPACK_IMPORTED_MODULE_0__["PublicInvitationFromJSON"])(json[\'invitation\']),\n    };\n}\nfunction PublicInvitationResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'invitation\': Object(___WEBPACK_IMPORTED_MODULE_0__["PublicInvitationToJSON"])(value.invitation),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PublicInvitationResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutItemSharesClientTasksRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutItemSharesClientTasksRequestFromJSON\", function() { return PutItemSharesClientTasksRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutItemSharesClientTasksRequestFromJSONTyped\", function() { return PutItemSharesClientTasksRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutItemSharesClientTasksRequestToJSON\", function() { return PutItemSharesClientTasksRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PutItemSharesClientTasksRequestFromJSON(json) {\n    return PutItemSharesClientTasksRequestFromJSONTyped(json, false);\n}\nfunction PutItemSharesClientTasksRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'id') ? undefined : json['id'],\n        'state': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'state') ? undefined : json['state'],\n        'report': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'report') ? undefined : json['report'],\n    };\n}\nfunction PutItemSharesClientTasksRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'state': value.state,\n        'report': value.report,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutItemSharesClientTasksRequest.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutItemSharesRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PutItemSharesRequestFromJSON", function() { return PutItemSharesRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PutItemSharesRequestFromJSONTyped", function() { return PutItemSharesRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PutItemSharesRequestToJSON", function() { return PutItemSharesRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PutItemSharesRequestFromJSON(json) {\n    return PutItemSharesRequestFromJSONTyped(json, false);\n}\nfunction PutItemSharesRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'share_deks\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'share_deks\') ? undefined : (json[\'share_deks\'].map(___WEBPACK_IMPORTED_MODULE_1__["ItemsIdSharesShareDeksFromJSON"])),\n        \'slot_values\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'slot_values\') ? undefined : (json[\'slot_values\'].map(___WEBPACK_IMPORTED_MODULE_1__["ItemsIdSharesSlotValuesFromJSON"])),\n        \'client_tasks\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'client_tasks\') ? undefined : (json[\'client_tasks\'].map(___WEBPACK_IMPORTED_MODULE_1__["PutItemSharesClientTasksRequestFromJSON"])),\n    };\n}\nfunction PutItemSharesRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'share_deks\': value.share_deks === undefined ? undefined : (value.share_deks.map(___WEBPACK_IMPORTED_MODULE_1__["ItemsIdSharesShareDeksToJSON"])),\n        \'slot_values\': value.slot_values === undefined ? undefined : (value.slot_values.map(___WEBPACK_IMPORTED_MODULE_1__["ItemsIdSharesSlotValuesToJSON"])),\n        \'client_tasks\': value.client_tasks === undefined ? undefined : (value.client_tasks.map(___WEBPACK_IMPORTED_MODULE_1__["PutItemSharesClientTasksRequestToJSON"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutItemSharesRequest.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutItemsAssociationsRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutItemsAssociationsRequestFromJSON\", function() { return PutItemsAssociationsRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutItemsAssociationsRequestFromJSONTyped\", function() { return PutItemsAssociationsRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutItemsAssociationsRequestToJSON\", function() { return PutItemsAssociationsRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PutItemsAssociationsRequestFromJSON(json) {\n    return PutItemsAssociationsRequestFromJSONTyped(json, false);\n}\nfunction PutItemsAssociationsRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'name') ? undefined : json['name'],\n        'association_type_name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'association_type_name') ? undefined : json['association_type_name'],\n        'associated_to_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'associated_to_id') ? undefined : json['associated_to_id'],\n        'associated_to_type': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'associated_to_type') ? undefined : json['associated_to_type'],\n        'associated_from_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'associated_from_id') ? undefined : json['associated_from_id'],\n        'associated_from_type': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'associated_from_type') ? undefined : json['associated_from_type'],\n    };\n}\nfunction PutItemsAssociationsRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'name': value.name,\n        'association_type_name': value.association_type_name,\n        'associated_to_id': value.associated_to_id,\n        'associated_to_type': value.associated_to_type,\n        'associated_from_id': value.associated_from_id,\n        'associated_from_type': value.associated_from_type,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutItemsAssociationsRequest.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutItemsRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PutItemsRequestFromJSON", function() { return PutItemsRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PutItemsRequestFromJSONTyped", function() { return PutItemsRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PutItemsRequestToJSON", function() { return PutItemsRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PutItemsRequestFromJSON(json) {\n    return PutItemsRequestFromJSONTyped(json, false);\n}\nfunction PutItemsRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'item\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'item\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["PutItemsRequestItemFromJSON"])(json[\'item\']),\n    };\n}\nfunction PutItemsRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'item\': Object(___WEBPACK_IMPORTED_MODULE_1__["PutItemsRequestItemToJSON"])(value.item),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutItemsRequest.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutItemsRequestItem.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutItemsRequestItemFromJSON\", function() { return PutItemsRequestItemFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutItemsRequestItemFromJSONTyped\", function() { return PutItemsRequestItemFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutItemsRequestItemToJSON\", function() { return PutItemsRequestItemToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PutItemsRequestItemFromJSON(json) {\n    return PutItemsRequestItemFromJSONTyped(json, false);\n}\nfunction PutItemsRequestItemFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'classification_nodes_attributes': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'classification_nodes_attributes') ? undefined : (json['classification_nodes_attributes'].map(___WEBPACK_IMPORTED_MODULE_1__[\"NestedClassificationNodeAttributesFromJSON\"])),\n        'label': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'label') ? undefined : json['label'],\n        'slots_attributes': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'slots_attributes') ? undefined : (json['slots_attributes'].map(___WEBPACK_IMPORTED_MODULE_1__[\"NestedSlotAttributesFromJSON\"])),\n    };\n}\nfunction PutItemsRequestItemToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'classification_nodes_attributes': value.classification_nodes_attributes === undefined ? undefined : (value.classification_nodes_attributes.map(___WEBPACK_IMPORTED_MODULE_1__[\"NestedClassificationNodeAttributesToJSON\"])),\n        'label': value.label,\n        'slots_attributes': value.slots_attributes === undefined ? undefined : (value.slots_attributes.map(___WEBPACK_IMPORTED_MODULE_1__[\"NestedSlotAttributesToJSON\"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutItemsRequestItem.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutMeRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PutMeRequestFromJSON", function() { return PutMeRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PutMeRequestFromJSONTyped", function() { return PutMeRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PutMeRequestToJSON", function() { return PutMeRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PutMeRequestFromJSON(json) {\n    return PutMeRequestFromJSONTyped(json, false);\n}\nfunction PutMeRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'user\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'user\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["PutMeRequestUserFromJSON"])(json[\'user\']),\n    };\n}\nfunction PutMeRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'user\': Object(___WEBPACK_IMPORTED_MODULE_1__["PutMeRequestUserToJSON"])(value.user),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutMeRequest.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutMeRequestUser.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutMeRequestUserFromJSON\", function() { return PutMeRequestUserFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutMeRequestUserFromJSONTyped\", function() { return PutMeRequestUserFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutMeRequestUserToJSON\", function() { return PutMeRequestUserToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PutMeRequestUserFromJSON(json) {\n    return PutMeRequestUserFromJSONTyped(json, false);\n}\nfunction PutMeRequestUserFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'country': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'country') ? undefined : json['country'],\n        'email': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'email') ? undefined : json['email'],\n        'full_name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'full_name') ? undefined : json['full_name'],\n        'image': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'image') ? undefined : json['image'],\n        'private_dek_external_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'private_dek_external_id') ? undefined : json['private_dek_external_id'],\n    };\n}\nfunction PutMeRequestUserToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'country': value.country,\n        'email': value.email,\n        'full_name': value.full_name,\n        'image': value.image,\n        'private_dek_external_id': value.private_dek_external_id,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutMeRequestUser.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutSharesRequestShare.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutSharesRequestShareFromJSON\", function() { return PutSharesRequestShareFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutSharesRequestShareFromJSONTyped\", function() { return PutSharesRequestShareFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutSharesRequestShareToJSON\", function() { return PutSharesRequestShareToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PutSharesRequestShareFromJSON(json) {\n    return PutSharesRequestShareFromJSONTyped(json, false);\n}\nfunction PutSharesRequestShareFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'id') ? undefined : json['id'],\n        'state': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'state') ? undefined : json['state'],\n        'report': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'report') ? undefined : json['report'],\n    };\n}\nfunction PutSharesRequestShareToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'state': value.state,\n        'report': value.report,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutSharesRequestShare.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutSlotsRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutSlotsRequestFromJSON\", function() { return PutSlotsRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutSlotsRequestFromJSONTyped\", function() { return PutSlotsRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PutSlotsRequestToJSON\", function() { return PutSlotsRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction PutSlotsRequestFromJSON(json) {\n    return PutSlotsRequestFromJSONTyped(json, false);\n}\nfunction PutSlotsRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'slot_type_name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'slot_type_name') ? undefined : json['slot_type_name'],\n        'item_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'item_id') ? undefined : json['item_id'],\n        'name': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'name') ? undefined : json['name'],\n        'label': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'label') ? undefined : json['label'],\n        'description': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'description') ? undefined : json['description'],\n        'value': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'value') ? undefined : json['value'],\n        'ordinal': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'ordinal') ? undefined : json['ordinal'],\n        'visible': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'visible') ? undefined : json['visible'],\n        'required': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'required') ? undefined : json['required'],\n        'config': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'config') ? undefined : json['config'],\n        'template_slot_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'template_slot_id') ? undefined : json['template_slot_id'],\n        'image_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'image_id') ? undefined : json['image_id'],\n        'is_template_slot': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'is_template_slot') ? undefined : json['is_template_slot'],\n        'encrypted': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'encrypted') ? undefined : json['encrypted'],\n        'user_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'user_id') ? undefined : json['user_id'],\n        'attachment_attributes': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'attachment_attributes') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__[\"NestedAttachmentAttributesFromJSON\"])(json['attachment_attributes']),\n        'classification_nodes_attributes': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'classification_nodes_attributes') ? undefined : (json['classification_nodes_attributes'].map(___WEBPACK_IMPORTED_MODULE_1__[\"NestedClassificationNodeAttributesFromJSON\"])),\n    };\n}\nfunction PutSlotsRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'slot_type_name': value.slot_type_name,\n        'item_id': value.item_id,\n        'name': value.name,\n        'label': value.label,\n        'description': value.description,\n        'value': value.value,\n        'ordinal': value.ordinal,\n        'visible': value.visible,\n        'required': value.required,\n        'config': value.config,\n        'template_slot_id': value.template_slot_id,\n        'image_id': value.image_id,\n        'is_template_slot': value.is_template_slot,\n        'encrypted': value.encrypted,\n        'user_id': value.user_id,\n        'attachment_attributes': Object(___WEBPACK_IMPORTED_MODULE_1__[\"NestedAttachmentAttributesToJSON\"])(value.attachment_attributes),\n        'classification_nodes_attributes': value.classification_nodes_attributes === undefined ? undefined : (value.classification_nodes_attributes.map(___WEBPACK_IMPORTED_MODULE_1__[\"NestedClassificationNodeAttributesToJSON\"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutSlotsRequest.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutTasksRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PutTasksRequestFromJSON", function() { return PutTasksRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PutTasksRequestFromJSONTyped", function() { return PutTasksRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PutTasksRequestToJSON", function() { return PutTasksRequestToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction PutTasksRequestFromJSON(json) {\n    return PutTasksRequestFromJSONTyped(json, false);\n}\nfunction PutTasksRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'client_tasks\': (json[\'client_tasks\'].map(___WEBPACK_IMPORTED_MODULE_0__["PutSharesRequestShareFromJSON"])),\n    };\n}\nfunction PutTasksRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'client_tasks\': (value.client_tasks.map(___WEBPACK_IMPORTED_MODULE_0__["PutSharesRequestShareToJSON"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutTasksRequest.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/RejectOrganizationServicebyIdResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RejectOrganizationServicebyIdResponseFromJSON", function() { return RejectOrganizationServicebyIdResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RejectOrganizationServicebyIdResponseFromJSONTyped", function() { return RejectOrganizationServicebyIdResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RejectOrganizationServicebyIdResponseToJSON", function() { return RejectOrganizationServicebyIdResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction RejectOrganizationServicebyIdResponseFromJSON(json) {\n    return RejectOrganizationServicebyIdResponseFromJSONTyped(json, false);\n}\nfunction RejectOrganizationServicebyIdResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'service\': Object(___WEBPACK_IMPORTED_MODULE_0__["ServiceFromJSON"])(json[\'service\']),\n    };\n}\nfunction RejectOrganizationServicebyIdResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'service\': Object(___WEBPACK_IMPORTED_MODULE_0__["ServiceToJSON"])(value.service),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/RejectOrganizationServicebyIdResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Service.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServiceFromJSON\", function() { return ServiceFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServiceFromJSONTyped\", function() { return ServiceFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServiceToJSON\", function() { return ServiceToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction ServiceFromJSON(json) {\n    return ServiceFromJSONTyped(json, false);\n}\nfunction ServiceFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'name': json['name'],\n        'description': json['description'],\n        'contract': json['contract'],\n        'status': json['status'],\n        'organization_id': json['organization_id'],\n        'validated_by_id': json['validated_by_id'],\n        'agent_id': json['agent_id'],\n        'validated_at': (json['validated_at'] === null ? null : new Date(json['validated_at'])),\n        'created_at': (new Date(json['created_at'])),\n    };\n}\nfunction ServiceToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'name': value.name,\n        'description': value.description,\n        'contract': value.contract,\n        'status': value.status,\n        'organization_id': value.organization_id,\n        'validated_by_id': value.validated_by_id,\n        'agent_id': value.agent_id,\n        'validated_at': (value.validated_at === null ? null : value.validated_at.toISOString()),\n        'created_at': (value.created_at.toISOString()),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Service.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ServiceUser.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServiceUserFromJSON\", function() { return ServiceUserFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServiceUserFromJSONTyped\", function() { return ServiceUserFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServiceUserToJSON\", function() { return ServiceUserToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction ServiceUserFromJSON(json) {\n    return ServiceUserFromJSONTyped(json, false);\n}\nfunction ServiceUserFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'public_key': json['public_key'],\n        'connection_present': json['connection_present'],\n        'connection_public_key': json['connection_public_key'],\n        'connection_keypair_external_id': json['connection_keypair_external_id'],\n    };\n}\nfunction ServiceUserToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'public_key': value.public_key,\n        'connection_present': value.connection_present,\n        'connection_public_key': value.connection_public_key,\n        'connection_keypair_external_id': value.connection_keypair_external_id,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ServiceUser.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ServiceUserResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServiceUserResponseFromJSON", function() { return ServiceUserResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServiceUserResponseFromJSONTyped", function() { return ServiceUserResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServiceUserResponseToJSON", function() { return ServiceUserResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ServiceUserResponseFromJSON(json) {\n    return ServiceUserResponseFromJSONTyped(json, false);\n}\nfunction ServiceUserResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'service_user\': Object(___WEBPACK_IMPORTED_MODULE_0__["ServiceUserFromJSON"])(json[\'service_user\']),\n    };\n}\nfunction ServiceUserResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'service_user\': Object(___WEBPACK_IMPORTED_MODULE_0__["ServiceUserToJSON"])(value.service_user),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ServiceUserResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/SessionResumeResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SessionResumeResponseFromJSON\", function() { return SessionResumeResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SessionResumeResponseFromJSONTyped\", function() { return SessionResumeResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SessionResumeResponseToJSON\", function() { return SessionResumeResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction SessionResumeResponseFromJSON(json) {\n    return SessionResumeResponseFromJSONTyped(json, false);\n}\nfunction SessionResumeResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'user_access_token': Object(___WEBPACK_IMPORTED_MODULE_0__[\"UserAccessTokenFromJSON\"])(json['user_access_token']),\n        'token_type': json['token_type'],\n        'user': Object(___WEBPACK_IMPORTED_MODULE_0__[\"UserFromJSON\"])(json['user']),\n    };\n}\nfunction SessionResumeResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'user_access_token': Object(___WEBPACK_IMPORTED_MODULE_0__[\"UserAccessTokenToJSON\"])(value.user_access_token),\n        'token_type': value.token_type,\n        'user': Object(___WEBPACK_IMPORTED_MODULE_0__[\"UserToJSON\"])(value.user),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/SessionResumeResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Share.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShareFromJSON\", function() { return ShareFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShareFromJSONTyped\", function() { return ShareFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShareToJSON\", function() { return ShareToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction ShareFromJSON(json) {\n    return ShareFromJSONTyped(json, false);\n}\nfunction ShareFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'owner_id': json['owner_id'],\n        'sender_id': json['sender_id'],\n        'recipient_id': json['recipient_id'],\n        'acceptance_required': json['acceptance_required'],\n        'item_id': json['item_id'],\n        'slot_id': json['slot_id'],\n        'public_key': json['public_key'],\n        'sharing_mode': json['sharing_mode'],\n        'keypair_external_id': json['keypair_external_id'],\n        'encrypted_dek': json['encrypted_dek'],\n        'terms': json['terms'],\n        'created_at': (json['created_at'] === null ? null : new Date(json['created_at'])),\n        'expires_at': (json['expires_at'] === null ? null : new Date(json['expires_at'])),\n    };\n}\nfunction ShareToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'owner_id': value.owner_id,\n        'sender_id': value.sender_id,\n        'recipient_id': value.recipient_id,\n        'acceptance_required': value.acceptance_required,\n        'item_id': value.item_id,\n        'slot_id': value.slot_id,\n        'public_key': value.public_key,\n        'sharing_mode': value.sharing_mode,\n        'keypair_external_id': value.keypair_external_id,\n        'encrypted_dek': value.encrypted_dek,\n        'terms': value.terms,\n        'created_at': (value.created_at === null ? null : value.created_at.toISOString()),\n        'expires_at': (value.expires_at === null ? null : value.expires_at.toISOString()),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Share.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ShareWithItemData.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShareWithItemDataFromJSON\", function() { return ShareWithItemDataFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShareWithItemDataFromJSONTyped\", function() { return ShareWithItemDataFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShareWithItemDataToJSON\", function() { return ShareWithItemDataToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction ShareWithItemDataFromJSON(json) {\n    return ShareWithItemDataFromJSONTyped(json, false);\n}\nfunction ShareWithItemDataFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'share': Object(___WEBPACK_IMPORTED_MODULE_1__[\"ShareFromJSON\"])(json['share']),\n        'item_shared_via_another_share_id': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'item_shared_via_another_share_id') ? undefined : json['item_shared_via_another_share_id'],\n        'associations_to': (json['associations_to'].map(___WEBPACK_IMPORTED_MODULE_1__[\"AssociationFromJSON\"])),\n        'associations': (json['associations'].map(___WEBPACK_IMPORTED_MODULE_1__[\"AssociationFromJSON\"])),\n        'attachments': (json['attachments'].map(___WEBPACK_IMPORTED_MODULE_1__[\"AttachmentFromJSON\"])),\n        'classification_nodes': (json['classification_nodes'].map(___WEBPACK_IMPORTED_MODULE_1__[\"ClassificationNodeFromJSON\"])),\n        'item': Object(___WEBPACK_IMPORTED_MODULE_1__[\"ItemFromJSON\"])(json['item']),\n        'slots': (json['slots'].map(___WEBPACK_IMPORTED_MODULE_1__[\"SlotFromJSON\"])),\n        'thumbnails': (json['thumbnails'].map(___WEBPACK_IMPORTED_MODULE_1__[\"ThumbnailFromJSON\"])),\n    };\n}\nfunction ShareWithItemDataToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'share': Object(___WEBPACK_IMPORTED_MODULE_1__[\"ShareToJSON\"])(value.share),\n        'item_shared_via_another_share_id': value.item_shared_via_another_share_id,\n        'associations_to': (value.associations_to.map(___WEBPACK_IMPORTED_MODULE_1__[\"AssociationToJSON\"])),\n        'associations': (value.associations.map(___WEBPACK_IMPORTED_MODULE_1__[\"AssociationToJSON\"])),\n        'attachments': (value.attachments.map(___WEBPACK_IMPORTED_MODULE_1__[\"AttachmentToJSON\"])),\n        'classification_nodes': (value.classification_nodes.map(___WEBPACK_IMPORTED_MODULE_1__[\"ClassificationNodeToJSON\"])),\n        'item': Object(___WEBPACK_IMPORTED_MODULE_1__[\"ItemToJSON\"])(value.item),\n        'slots': (value.slots.map(___WEBPACK_IMPORTED_MODULE_1__[\"SlotToJSON\"])),\n        'thumbnails': (value.thumbnails.map(___WEBPACK_IMPORTED_MODULE_1__[\"ThumbnailToJSON\"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ShareWithItemData.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/SharesCreateResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SharesCreateResponseFromJSON", function() { return SharesCreateResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SharesCreateResponseFromJSONTyped", function() { return SharesCreateResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SharesCreateResponseToJSON", function() { return SharesCreateResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction SharesCreateResponseFromJSON(json) {\n    return SharesCreateResponseFromJSONTyped(json, false);\n}\nfunction SharesCreateResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'shares\': (json[\'shares\'].map(___WEBPACK_IMPORTED_MODULE_0__["ShareFromJSON"])),\n    };\n}\nfunction SharesCreateResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'shares\': (value.shares.map(___WEBPACK_IMPORTED_MODULE_0__["ShareToJSON"])),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/SharesCreateResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/SharesIncomingResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SharesIncomingResponseFromJSON\", function() { return SharesIncomingResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SharesIncomingResponseFromJSONTyped\", function() { return SharesIncomingResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SharesIncomingResponseToJSON\", function() { return SharesIncomingResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction SharesIncomingResponseFromJSON(json) {\n    return SharesIncomingResponseFromJSONTyped(json, false);\n}\nfunction SharesIncomingResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'next_page_after': json['next_page_after'],\n        'shares': (json['shares'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ShareFromJSON\"])),\n        'meta': json['meta'],\n    };\n}\nfunction SharesIncomingResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'next_page_after': value.next_page_after,\n        'shares': (value.shares.map(___WEBPACK_IMPORTED_MODULE_0__[\"ShareToJSON\"])),\n        'meta': value.meta,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/SharesIncomingResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/SharesOutgoingResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SharesOutgoingResponseFromJSON\", function() { return SharesOutgoingResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SharesOutgoingResponseFromJSONTyped\", function() { return SharesOutgoingResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SharesOutgoingResponseToJSON\", function() { return SharesOutgoingResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction SharesOutgoingResponseFromJSON(json) {\n    return SharesOutgoingResponseFromJSONTyped(json, false);\n}\nfunction SharesOutgoingResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'next_page_after': json['next_page_after'],\n        'shares': (json['shares'].map(___WEBPACK_IMPORTED_MODULE_0__[\"ShareFromJSON\"])),\n        'meta': json['meta'],\n    };\n}\nfunction SharesOutgoingResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'next_page_after': value.next_page_after,\n        'shares': (value.shares.map(___WEBPACK_IMPORTED_MODULE_0__[\"ShareToJSON\"])),\n        'meta': value.meta,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/SharesOutgoingResponse.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Slot.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SlotFromJSON\", function() { return SlotFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SlotFromJSONTyped\", function() { return SlotFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SlotToJSON\", function() { return SlotToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction SlotFromJSON(json) {\n    return SlotFromJSONTyped(json, false);\n}\nfunction SlotFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'own': json['own'],\n        'share_id': json['share_id'],\n        'name': json['name'],\n        'description': json['description'],\n        'encrypted': json['encrypted'],\n        'ordinal': json['ordinal'],\n        'visible': json['visible'],\n        'classification_node_ids': json['classification_node_ids'],\n        'attachment_id': json['attachment_id'],\n        'item_id': json['item_id'],\n        'required': json['required'],\n        'updated_at': (new Date(json['updated_at'])),\n        'created_at': (new Date(json['created_at'])),\n        'slot_type_name': json['slot_type_name'],\n        'creator': json['creator'],\n        'encrypted_value': json['encrypted_value'],\n        'encrypted_value_verification_key': json['encrypted_value_verification_key'],\n        'value_verification_hash': json['value_verification_hash'],\n        'image': json['image'],\n        'label': json['label'],\n        'original_id': json['original_id'],\n        'owner_id': json['owner_id'],\n    };\n}\nfunction SlotToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'own': value.own,\n        'share_id': value.share_id,\n        'name': value.name,\n        'description': value.description,\n        'encrypted': value.encrypted,\n        'ordinal': value.ordinal,\n        'visible': value.visible,\n        'classification_node_ids': value.classification_node_ids,\n        'attachment_id': value.attachment_id,\n        'item_id': value.item_id,\n        'required': value.required,\n        'updated_at': (value.updated_at.toISOString()),\n        'created_at': (value.created_at.toISOString()),\n        'slot_type_name': value.slot_type_name,\n        'creator': value.creator,\n        'encrypted_value': value.encrypted_value,\n        'encrypted_value_verification_key': value.encrypted_value_verification_key,\n        'value_verification_hash': value.value_verification_hash,\n        'image': value.image,\n        'label': value.label,\n        'original_id': value.original_id,\n        'owner_id': value.owner_id,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Slot.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/SlotResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SlotResponseFromJSON", function() { return SlotResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SlotResponseFromJSONTyped", function() { return SlotResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SlotResponseToJSON", function() { return SlotResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction SlotResponseFromJSON(json) {\n    return SlotResponseFromJSONTyped(json, false);\n}\nfunction SlotResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'slot\': Object(___WEBPACK_IMPORTED_MODULE_0__["SlotFromJSON"])(json[\'slot\']),\n    };\n}\nfunction SlotResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'slot\': Object(___WEBPACK_IMPORTED_MODULE_0__["SlotToJSON"])(value.slot),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/SlotResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/TheOtherConnectedUserData.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TheOtherConnectedUserDataFromJSON\", function() { return TheOtherConnectedUserDataFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TheOtherConnectedUserDataFromJSONTyped\", function() { return TheOtherConnectedUserDataFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TheOtherConnectedUserDataToJSON\", function() { return TheOtherConnectedUserDataToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction TheOtherConnectedUserDataFromJSON(json) {\n    return TheOtherConnectedUserDataFromJSONTyped(json, false);\n}\nfunction TheOtherConnectedUserDataFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'integration_data': json['integration_data'],\n        'connection_type': json['connection_type'],\n        'user_id': json['user_id'],\n        'user_image': json['user_image'],\n        'user_type': json['user_type'],\n        'user_public_key': json['user_public_key'],\n        'user_keypair_external_id': json['user_keypair_external_id'],\n    };\n}\nfunction TheOtherConnectedUserDataToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'integration_data': value.integration_data,\n        'connection_type': value.connection_type,\n        'user_id': value.user_id,\n        'user_image': value.user_image,\n        'user_type': value.user_type,\n        'user_public_key': value.user_public_key,\n        'user_keypair_external_id': value.user_keypair_external_id,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/TheOtherConnectedUserData.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Thumbnail.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ThumbnailFromJSON\", function() { return ThumbnailFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ThumbnailFromJSONTyped\", function() { return ThumbnailFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ThumbnailToJSON\", function() { return ThumbnailToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction ThumbnailFromJSON(json) {\n    return ThumbnailFromJSONTyped(json, false);\n}\nfunction ThumbnailFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'binary_id': json['binary_id'],\n        'size_type': json['size_type'],\n        'created_at': (new Date(json['created_at'])),\n        'updated_at': (new Date(json['updated_at'])),\n        'url': json['url'],\n    };\n}\nfunction ThumbnailToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'binary_id': value.binary_id,\n        'size_type': value.size_type,\n        'created_at': (value.created_at.toISOString()),\n        'updated_at': (value.updated_at.toISOString()),\n        'url': value.url,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Thumbnail.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ThumbnailResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThumbnailResponseFromJSON", function() { return ThumbnailResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThumbnailResponseFromJSONTyped", function() { return ThumbnailResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThumbnailResponseToJSON", function() { return ThumbnailResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ThumbnailResponseFromJSON(json) {\n    return ThumbnailResponseFromJSONTyped(json, false);\n}\nfunction ThumbnailResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'thumbnail\': Object(___WEBPACK_IMPORTED_MODULE_0__["ThumbnailFromJSON"])(json[\'thumbnail\']),\n    };\n}\nfunction ThumbnailResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'thumbnail\': Object(___WEBPACK_IMPORTED_MODULE_0__["ThumbnailToJSON"])(value.thumbnail),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ThumbnailResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UpdateDelegationRole.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateDelegationRoleFromJSON", function() { return UpdateDelegationRoleFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateDelegationRoleFromJSONTyped", function() { return UpdateDelegationRoleFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateDelegationRoleToJSON", function() { return UpdateDelegationRoleToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction UpdateDelegationRoleFromJSON(json) {\n    return UpdateDelegationRoleFromJSONTyped(json, false);\n}\nfunction UpdateDelegationRoleFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'role\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'role\') ? undefined : json[\'role\'],\n    };\n}\nfunction UpdateDelegationRoleToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'role\': value.role,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UpdateDelegationRole.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UpdateOrganizationMemberRoleRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationMemberRoleRequestFromJSON", function() { return UpdateOrganizationMemberRoleRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationMemberRoleRequestFromJSONTyped", function() { return UpdateOrganizationMemberRoleRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationMemberRoleRequestToJSON", function() { return UpdateOrganizationMemberRoleRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction UpdateOrganizationMemberRoleRequestFromJSON(json) {\n    return UpdateOrganizationMemberRoleRequestFromJSONTyped(json, false);\n}\nfunction UpdateOrganizationMemberRoleRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'organization_member\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'organization_member\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSON"])(json[\'organization_member\']),\n    };\n}\nfunction UpdateOrganizationMemberRoleRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'organization_member\': Object(___WEBPACK_IMPORTED_MODULE_1__["OrganizationsOrganizationIdMembersIdOrganizationMemberToJSON"])(value.organization_member),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UpdateOrganizationMemberRoleRequest.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UpdateOrganizationRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationRequestFromJSON", function() { return UpdateOrganizationRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationRequestFromJSONTyped", function() { return UpdateOrganizationRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationRequestToJSON", function() { return UpdateOrganizationRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction UpdateOrganizationRequestFromJSON(json) {\n    return UpdateOrganizationRequestFromJSONTyped(json, false);\n}\nfunction UpdateOrganizationRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'organization\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'organization\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["OrganizationsIdOrganizationFromJSON"])(json[\'organization\']),\n    };\n}\nfunction UpdateOrganizationRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'organization\': Object(___WEBPACK_IMPORTED_MODULE_1__["OrganizationsIdOrganizationToJSON"])(value.organization),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UpdateOrganizationRequest.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UpdateOrganizationResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationResponseFromJSON", function() { return UpdateOrganizationResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationResponseFromJSONTyped", function() { return UpdateOrganizationResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationResponseToJSON", function() { return UpdateOrganizationResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction UpdateOrganizationResponseFromJSON(json) {\n    return UpdateOrganizationResponseFromJSONTyped(json, false);\n}\nfunction UpdateOrganizationResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'organization\': Object(___WEBPACK_IMPORTED_MODULE_0__["OrganizationFromJSON"])(json[\'organization\']),\n    };\n}\nfunction UpdateOrganizationResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'organization\': Object(___WEBPACK_IMPORTED_MODULE_0__["OrganizationToJSON"])(value.organization),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UpdateOrganizationResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UpdateOrganizationServiceRequest.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationServiceRequestFromJSON", function() { return UpdateOrganizationServiceRequestFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationServiceRequestFromJSONTyped", function() { return UpdateOrganizationServiceRequestFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationServiceRequestToJSON", function() { return UpdateOrganizationServiceRequestToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nfunction UpdateOrganizationServiceRequestFromJSON(json) {\n    return UpdateOrganizationServiceRequestFromJSONTyped(json, false);\n}\nfunction UpdateOrganizationServiceRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'service\': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__["exists"])(json, \'service\') ? undefined : Object(___WEBPACK_IMPORTED_MODULE_1__["OrganizationsOrganizationIdServicesIdServiceFromJSON"])(json[\'service\']),\n    };\n}\nfunction UpdateOrganizationServiceRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'service\': Object(___WEBPACK_IMPORTED_MODULE_1__["OrganizationsOrganizationIdServicesIdServiceToJSON"])(value.service),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UpdateOrganizationServiceRequest.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/User.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UserFromJSON\", function() { return UserFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UserFromJSONTyped\", function() { return UserFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UserToJSON\", function() { return UserToJSON; });\n/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js\");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction UserFromJSON(json) {\n    return UserFromJSONTyped(json, false);\n}\nfunction UserFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'full_name': json['full_name'],\n        'email': json['email'],\n        'is_app_logging_enabled': json['is_app_logging_enabled'],\n        'image': json['image'],\n        'country': json['country'],\n        'joined_at': (json['joined_at'] === null ? null : new Date(json['joined_at'])),\n        'onboarded_at': (json['onboarded_at'] === null ? null : new Date(json['onboarded_at'])),\n        'track_events': json['track_events'],\n        'track_usage': json['track_usage'],\n        'cloudname': json['cloudname'],\n        'timezone': json['timezone'],\n        'unconfirmed_email': json['unconfirmed_email'],\n        'verified_at': (json['verified_at'] === null ? null : new Date(json['verified_at'])),\n        'share_terms': json['share_terms'],\n        'key_store_admission_token': json['key_store_admission_token'],\n        'key_store_id': json['key_store_id'],\n        'key_store_url': json['key_store_url'],\n        'key_store_username': json['key_store_username'],\n        'private_dek_external_id': json['private_dek_external_id'],\n        'queued_for_deletion_after': (json['queued_for_deletion_after'] === null ? null : new Date(json['queued_for_deletion_after'])),\n        'accepted_terms': json['accepted_terms'],\n        'association_ids': json['association_ids'],\n        'user_type': !Object(_runtime__WEBPACK_IMPORTED_MODULE_0__[\"exists\"])(json, 'user_type') ? undefined : json['user_type'],\n    };\n}\nfunction UserToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'full_name': value.full_name,\n        'email': value.email,\n        'is_app_logging_enabled': value.is_app_logging_enabled,\n        'image': value.image,\n        'country': value.country,\n        'joined_at': (value.joined_at === null ? null : value.joined_at.toISOString()),\n        'onboarded_at': (value.onboarded_at === null ? null : value.onboarded_at.toISOString()),\n        'track_events': value.track_events,\n        'track_usage': value.track_usage,\n        'cloudname': value.cloudname,\n        'timezone': value.timezone,\n        'unconfirmed_email': value.unconfirmed_email,\n        'verified_at': (value.verified_at === null ? null : value.verified_at.toISOString()),\n        'share_terms': value.share_terms,\n        'key_store_admission_token': value.key_store_admission_token,\n        'key_store_id': value.key_store_id,\n        'key_store_url': value.key_store_url,\n        'key_store_username': value.key_store_username,\n        'private_dek_external_id': value.private_dek_external_id,\n        'queued_for_deletion_after': (value.queued_for_deletion_after === null ? null : value.queued_for_deletion_after.toISOString()),\n        'accepted_terms': value.accepted_terms,\n        'association_ids': value.association_ids,\n        'user_type': value.user_type,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/User.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UserAccessToken.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UserAccessTokenFromJSON\", function() { return UserAccessTokenFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UserAccessTokenFromJSONTyped\", function() { return UserAccessTokenFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UserAccessTokenToJSON\", function() { return UserAccessTokenToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction UserAccessTokenFromJSON(json) {\n    return UserAccessTokenFromJSONTyped(json, false);\n}\nfunction UserAccessTokenFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'token': json['token'],\n        'name': json['name'],\n        'client_identifier': json['client_identifier'],\n        'device_push_token': json['device_push_token'],\n        'push_token_platform': json['push_token_platform'],\n        'timezone': json['timezone'],\n        'expire_at': (json['expire_at'] === null ? null : new Date(json['expire_at'])),\n    };\n}\nfunction UserAccessTokenToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'token': value.token,\n        'name': value.name,\n        'client_identifier': value.client_identifier,\n        'device_push_token': value.device_push_token,\n        'push_token_platform': value.push_token_platform,\n        'timezone': value.timezone,\n        'expire_at': (value.expire_at === null ? null : value.expire_at.toISOString()),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UserAccessToken.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UserQueuedForDeletion.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UserQueuedForDeletionFromJSON\", function() { return UserQueuedForDeletionFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UserQueuedForDeletionFromJSONTyped\", function() { return UserQueuedForDeletionFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UserQueuedForDeletionToJSON\", function() { return UserQueuedForDeletionToJSON; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction UserQueuedForDeletionFromJSON(json) {\n    return UserQueuedForDeletionFromJSONTyped(json, false);\n}\nfunction UserQueuedForDeletionFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'id': json['id'],\n        'queued_for_deletion_after': json['queued_for_deletion_after'],\n    };\n}\nfunction UserQueuedForDeletionToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'id': value.id,\n        'queued_for_deletion_after': value.queued_for_deletion_after,\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UserQueuedForDeletion.js?")},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ValidateOrganizationServicebyIdResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidateOrganizationServicebyIdResponseFromJSON", function() { return ValidateOrganizationServicebyIdResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidateOrganizationServicebyIdResponseFromJSONTyped", function() { return ValidateOrganizationServicebyIdResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidateOrganizationServicebyIdResponseToJSON", function() { return ValidateOrganizationServicebyIdResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction ValidateOrganizationServicebyIdResponseFromJSON(json) {\n    return ValidateOrganizationServicebyIdResponseFromJSONTyped(json, false);\n}\nfunction ValidateOrganizationServicebyIdResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'service\': Object(___WEBPACK_IMPORTED_MODULE_0__["ServiceFromJSON"])(json[\'service\']),\n    };\n}\nfunction ValidateOrganizationServicebyIdResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'service\': Object(___WEBPACK_IMPORTED_MODULE_0__["ServiceToJSON"])(value.service),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ValidateOrganizationServicebyIdResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/VersionResponse.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VersionResponseFromJSON", function() { return VersionResponseFromJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VersionResponseFromJSONTyped", function() { return VersionResponseFromJSONTyped; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VersionResponseToJSON", function() { return VersionResponseToJSON; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js");\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nfunction VersionResponseFromJSON(json) {\n    return VersionResponseFromJSONTyped(json, false);\n}\nfunction VersionResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \'component\': Object(___WEBPACK_IMPORTED_MODULE_0__["ComponentFromJSON"])(json[\'component\']),\n    };\n}\nfunction VersionResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \'component\': Object(___WEBPACK_IMPORTED_MODULE_0__["ComponentToJSON"])(value.component),\n    };\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/VersionResponse.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ActivitiesResponse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ActivitiesResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ActivitiesResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivitiesResponseFromJSON", function() { return _ActivitiesResponse__WEBPACK_IMPORTED_MODULE_0__["ActivitiesResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivitiesResponseFromJSONTyped", function() { return _ActivitiesResponse__WEBPACK_IMPORTED_MODULE_0__["ActivitiesResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivitiesResponseToJSON", function() { return _ActivitiesResponse__WEBPACK_IMPORTED_MODULE_0__["ActivitiesResponseToJSON"]; });\n\n/* harmony import */ var _Activity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Activity */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Activity.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityFromJSON", function() { return _Activity__WEBPACK_IMPORTED_MODULE_1__["ActivityFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityFromJSONTyped", function() { return _Activity__WEBPACK_IMPORTED_MODULE_1__["ActivityFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityToJSON", function() { return _Activity__WEBPACK_IMPORTED_MODULE_1__["ActivityToJSON"]; });\n\n/* harmony import */ var _AdmissionToken__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AdmissionToken */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AdmissionToken.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenFromJSON", function() { return _AdmissionToken__WEBPACK_IMPORTED_MODULE_2__["AdmissionTokenFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenFromJSONTyped", function() { return _AdmissionToken__WEBPACK_IMPORTED_MODULE_2__["AdmissionTokenFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenToJSON", function() { return _AdmissionToken__WEBPACK_IMPORTED_MODULE_2__["AdmissionTokenToJSON"]; });\n\n/* harmony import */ var _AdmissionTokenResponse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AdmissionTokenResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AdmissionTokenResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenResponseFromJSON", function() { return _AdmissionTokenResponse__WEBPACK_IMPORTED_MODULE_3__["AdmissionTokenResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenResponseFromJSONTyped", function() { return _AdmissionTokenResponse__WEBPACK_IMPORTED_MODULE_3__["AdmissionTokenResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdmissionTokenResponseToJSON", function() { return _AdmissionTokenResponse__WEBPACK_IMPORTED_MODULE_3__["AdmissionTokenResponseToJSON"]; });\n\n/* harmony import */ var _Alerts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Alerts */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Alerts.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AlertsFromJSON", function() { return _Alerts__WEBPACK_IMPORTED_MODULE_4__["AlertsFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AlertsFromJSONTyped", function() { return _Alerts__WEBPACK_IMPORTED_MODULE_4__["AlertsFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AlertsToJSON", function() { return _Alerts__WEBPACK_IMPORTED_MODULE_4__["AlertsToJSON"]; });\n\n/* harmony import */ var _AlertsResponse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./AlertsResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AlertsResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AlertsResponseFromJSON", function() { return _AlertsResponse__WEBPACK_IMPORTED_MODULE_5__["AlertsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AlertsResponseFromJSONTyped", function() { return _AlertsResponse__WEBPACK_IMPORTED_MODULE_5__["AlertsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AlertsResponseToJSON", function() { return _AlertsResponse__WEBPACK_IMPORTED_MODULE_5__["AlertsResponseToJSON"]; });\n\n/* harmony import */ var _Association__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Association */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Association.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssociationFromJSON", function() { return _Association__WEBPACK_IMPORTED_MODULE_6__["AssociationFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssociationFromJSONTyped", function() { return _Association__WEBPACK_IMPORTED_MODULE_6__["AssociationFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssociationToJSON", function() { return _Association__WEBPACK_IMPORTED_MODULE_6__["AssociationToJSON"]; });\n\n/* harmony import */ var _AssociationResponse__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./AssociationResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AssociationResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssociationResponseFromJSON", function() { return _AssociationResponse__WEBPACK_IMPORTED_MODULE_7__["AssociationResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssociationResponseFromJSONTyped", function() { return _AssociationResponse__WEBPACK_IMPORTED_MODULE_7__["AssociationResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AssociationResponseToJSON", function() { return _AssociationResponse__WEBPACK_IMPORTED_MODULE_7__["AssociationResponseToJSON"]; });\n\n/* harmony import */ var _Attachment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Attachment */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Attachment.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentFromJSON", function() { return _Attachment__WEBPACK_IMPORTED_MODULE_8__["AttachmentFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentFromJSONTyped", function() { return _Attachment__WEBPACK_IMPORTED_MODULE_8__["AttachmentFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentToJSON", function() { return _Attachment__WEBPACK_IMPORTED_MODULE_8__["AttachmentToJSON"]; });\n\n/* harmony import */ var _AttachmentDirectDownloadUrl__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./AttachmentDirectDownloadUrl */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentDirectDownloadUrl.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectDownloadUrlFromJSON", function() { return _AttachmentDirectDownloadUrl__WEBPACK_IMPORTED_MODULE_9__["AttachmentDirectDownloadUrlFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectDownloadUrlFromJSONTyped", function() { return _AttachmentDirectDownloadUrl__WEBPACK_IMPORTED_MODULE_9__["AttachmentDirectDownloadUrlFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectDownloadUrlToJSON", function() { return _AttachmentDirectDownloadUrl__WEBPACK_IMPORTED_MODULE_9__["AttachmentDirectDownloadUrlToJSON"]; });\n\n/* harmony import */ var _AttachmentDirectDownloadUrlResponse__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./AttachmentDirectDownloadUrlResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentDirectDownloadUrlResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectDownloadUrlResponseFromJSON", function() { return _AttachmentDirectDownloadUrlResponse__WEBPACK_IMPORTED_MODULE_10__["AttachmentDirectDownloadUrlResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectDownloadUrlResponseFromJSONTyped", function() { return _AttachmentDirectDownloadUrlResponse__WEBPACK_IMPORTED_MODULE_10__["AttachmentDirectDownloadUrlResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectDownloadUrlResponseToJSON", function() { return _AttachmentDirectDownloadUrlResponse__WEBPACK_IMPORTED_MODULE_10__["AttachmentDirectDownloadUrlResponseToJSON"]; });\n\n/* harmony import */ var _AttachmentDirectUploadUrl__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./AttachmentDirectUploadUrl */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentDirectUploadUrl.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectUploadUrlFromJSON", function() { return _AttachmentDirectUploadUrl__WEBPACK_IMPORTED_MODULE_11__["AttachmentDirectUploadUrlFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectUploadUrlFromJSONTyped", function() { return _AttachmentDirectUploadUrl__WEBPACK_IMPORTED_MODULE_11__["AttachmentDirectUploadUrlFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectUploadUrlToJSON", function() { return _AttachmentDirectUploadUrl__WEBPACK_IMPORTED_MODULE_11__["AttachmentDirectUploadUrlToJSON"]; });\n\n/* harmony import */ var _AttachmentDirectUploadUrlResponse__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./AttachmentDirectUploadUrlResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentDirectUploadUrlResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectUploadUrlResponseFromJSON", function() { return _AttachmentDirectUploadUrlResponse__WEBPACK_IMPORTED_MODULE_12__["AttachmentDirectUploadUrlResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectUploadUrlResponseFromJSONTyped", function() { return _AttachmentDirectUploadUrlResponse__WEBPACK_IMPORTED_MODULE_12__["AttachmentDirectUploadUrlResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentDirectUploadUrlResponseToJSON", function() { return _AttachmentDirectUploadUrlResponse__WEBPACK_IMPORTED_MODULE_12__["AttachmentDirectUploadUrlResponseToJSON"]; });\n\n/* harmony import */ var _AttachmentResponse__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./AttachmentResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentResponseFromJSON", function() { return _AttachmentResponse__WEBPACK_IMPORTED_MODULE_13__["AttachmentResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentResponseFromJSONTyped", function() { return _AttachmentResponse__WEBPACK_IMPORTED_MODULE_13__["AttachmentResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentResponseToJSON", function() { return _AttachmentResponse__WEBPACK_IMPORTED_MODULE_13__["AttachmentResponseToJSON"]; });\n\n/* harmony import */ var _AttachmentsResponse__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./AttachmentsResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/AttachmentsResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentsResponseFromJSON", function() { return _AttachmentsResponse__WEBPACK_IMPORTED_MODULE_14__["AttachmentsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentsResponseFromJSONTyped", function() { return _AttachmentsResponse__WEBPACK_IMPORTED_MODULE_14__["AttachmentsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttachmentsResponseToJSON", function() { return _AttachmentsResponse__WEBPACK_IMPORTED_MODULE_14__["AttachmentsResponseToJSON"]; });\n\n/* harmony import */ var _ChildPublicKeyForConnection__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./ChildPublicKeyForConnection */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ChildPublicKeyForConnection.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChildPublicKeyForConnectionFromJSON", function() { return _ChildPublicKeyForConnection__WEBPACK_IMPORTED_MODULE_15__["ChildPublicKeyForConnectionFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChildPublicKeyForConnectionFromJSONTyped", function() { return _ChildPublicKeyForConnection__WEBPACK_IMPORTED_MODULE_15__["ChildPublicKeyForConnectionFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChildPublicKeyForConnectionToJSON", function() { return _ChildPublicKeyForConnection__WEBPACK_IMPORTED_MODULE_15__["ChildPublicKeyForConnectionToJSON"]; });\n\n/* harmony import */ var _ClassificationNode__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./ClassificationNode */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClassificationNode.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeFromJSON", function() { return _ClassificationNode__WEBPACK_IMPORTED_MODULE_16__["ClassificationNodeFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeFromJSONTyped", function() { return _ClassificationNode__WEBPACK_IMPORTED_MODULE_16__["ClassificationNodeFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeToJSON", function() { return _ClassificationNode__WEBPACK_IMPORTED_MODULE_16__["ClassificationNodeToJSON"]; });\n\n/* harmony import */ var _ClassificationNodeResponse__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./ClassificationNodeResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClassificationNodeResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeResponseFromJSON", function() { return _ClassificationNodeResponse__WEBPACK_IMPORTED_MODULE_17__["ClassificationNodeResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeResponseFromJSONTyped", function() { return _ClassificationNodeResponse__WEBPACK_IMPORTED_MODULE_17__["ClassificationNodeResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodeResponseToJSON", function() { return _ClassificationNodeResponse__WEBPACK_IMPORTED_MODULE_17__["ClassificationNodeResponseToJSON"]; });\n\n/* harmony import */ var _ClassificationNodesClassificationNode__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./ClassificationNodesClassificationNode */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClassificationNodesClassificationNode.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodesClassificationNodeFromJSON", function() { return _ClassificationNodesClassificationNode__WEBPACK_IMPORTED_MODULE_18__["ClassificationNodesClassificationNodeFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodesClassificationNodeFromJSONTyped", function() { return _ClassificationNodesClassificationNode__WEBPACK_IMPORTED_MODULE_18__["ClassificationNodesClassificationNodeFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodesClassificationNodeToJSON", function() { return _ClassificationNodesClassificationNode__WEBPACK_IMPORTED_MODULE_18__["ClassificationNodesClassificationNodeToJSON"]; });\n\n/* harmony import */ var _ClassificationNodesResponse__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./ClassificationNodesResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClassificationNodesResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodesResponseFromJSON", function() { return _ClassificationNodesResponse__WEBPACK_IMPORTED_MODULE_19__["ClassificationNodesResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodesResponseFromJSONTyped", function() { return _ClassificationNodesResponse__WEBPACK_IMPORTED_MODULE_19__["ClassificationNodesResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClassificationNodesResponseToJSON", function() { return _ClassificationNodesResponse__WEBPACK_IMPORTED_MODULE_19__["ClassificationNodesResponseToJSON"]; });\n\n/* harmony import */ var _ClientTask__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./ClientTask */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClientTask.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskFromJSON", function() { return _ClientTask__WEBPACK_IMPORTED_MODULE_20__["ClientTaskFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskFromJSONTyped", function() { return _ClientTask__WEBPACK_IMPORTED_MODULE_20__["ClientTaskFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskToJSON", function() { return _ClientTask__WEBPACK_IMPORTED_MODULE_20__["ClientTaskToJSON"]; });\n\n/* harmony import */ var _ClientTaskQueueResponse__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./ClientTaskQueueResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClientTaskQueueResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueResponseFromJSON", function() { return _ClientTaskQueueResponse__WEBPACK_IMPORTED_MODULE_21__["ClientTaskQueueResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueResponseFromJSONTyped", function() { return _ClientTaskQueueResponse__WEBPACK_IMPORTED_MODULE_21__["ClientTaskQueueResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueResponseToJSON", function() { return _ClientTaskQueueResponse__WEBPACK_IMPORTED_MODULE_21__["ClientTaskQueueResponseToJSON"]; });\n\n/* harmony import */ var _ClientTaskQueueResponse1__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./ClientTaskQueueResponse1 */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ClientTaskQueueResponse1.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueResponse1FromJSON", function() { return _ClientTaskQueueResponse1__WEBPACK_IMPORTED_MODULE_22__["ClientTaskQueueResponse1FromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueResponse1FromJSONTyped", function() { return _ClientTaskQueueResponse1__WEBPACK_IMPORTED_MODULE_22__["ClientTaskQueueResponse1FromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientTaskQueueResponse1ToJSON", function() { return _ClientTaskQueueResponse1__WEBPACK_IMPORTED_MODULE_22__["ClientTaskQueueResponse1ToJSON"]; });\n\n/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./Component */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Component.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComponentFromJSON", function() { return _Component__WEBPACK_IMPORTED_MODULE_23__["ComponentFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComponentFromJSONTyped", function() { return _Component__WEBPACK_IMPORTED_MODULE_23__["ComponentFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComponentToJSON", function() { return _Component__WEBPACK_IMPORTED_MODULE_23__["ComponentToJSON"]; });\n\n/* harmony import */ var _Connection__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./Connection */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Connection.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionFromJSON", function() { return _Connection__WEBPACK_IMPORTED_MODULE_24__["ConnectionFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionFromJSONTyped", function() { return _Connection__WEBPACK_IMPORTED_MODULE_24__["ConnectionFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionToJSON", function() { return _Connection__WEBPACK_IMPORTED_MODULE_24__["ConnectionToJSON"]; });\n\n/* harmony import */ var _ConnectionResponse__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./ConnectionResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ConnectionResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionResponseFromJSON", function() { return _ConnectionResponse__WEBPACK_IMPORTED_MODULE_25__["ConnectionResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionResponseFromJSONTyped", function() { return _ConnectionResponse__WEBPACK_IMPORTED_MODULE_25__["ConnectionResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionResponseToJSON", function() { return _ConnectionResponse__WEBPACK_IMPORTED_MODULE_25__["ConnectionResponseToJSON"]; });\n\n/* harmony import */ var _ConnectionsResponse__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./ConnectionsResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ConnectionsResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionsResponseFromJSON", function() { return _ConnectionsResponse__WEBPACK_IMPORTED_MODULE_26__["ConnectionsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionsResponseFromJSONTyped", function() { return _ConnectionsResponse__WEBPACK_IMPORTED_MODULE_26__["ConnectionsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectionsResponseToJSON", function() { return _ConnectionsResponse__WEBPACK_IMPORTED_MODULE_26__["ConnectionsResponseToJSON"]; });\n\n/* harmony import */ var _CreateAttachmentResponse__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./CreateAttachmentResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateAttachmentResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateAttachmentResponseFromJSON", function() { return _CreateAttachmentResponse__WEBPACK_IMPORTED_MODULE_27__["CreateAttachmentResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateAttachmentResponseFromJSONTyped", function() { return _CreateAttachmentResponse__WEBPACK_IMPORTED_MODULE_27__["CreateAttachmentResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateAttachmentResponseToJSON", function() { return _CreateAttachmentResponse__WEBPACK_IMPORTED_MODULE_27__["CreateAttachmentResponseToJSON"]; });\n\n/* harmony import */ var _CreateChildUserParams__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./CreateChildUserParams */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateChildUserParams.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserParamsFromJSON", function() { return _CreateChildUserParams__WEBPACK_IMPORTED_MODULE_28__["CreateChildUserParamsFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserParamsFromJSONTyped", function() { return _CreateChildUserParams__WEBPACK_IMPORTED_MODULE_28__["CreateChildUserParamsFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserParamsToJSON", function() { return _CreateChildUserParams__WEBPACK_IMPORTED_MODULE_28__["CreateChildUserParamsToJSON"]; });\n\n/* harmony import */ var _CreateChildUserResponse__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./CreateChildUserResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateChildUserResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserResponseFromJSON", function() { return _CreateChildUserResponse__WEBPACK_IMPORTED_MODULE_29__["CreateChildUserResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserResponseFromJSONTyped", function() { return _CreateChildUserResponse__WEBPACK_IMPORTED_MODULE_29__["CreateChildUserResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateChildUserResponseToJSON", function() { return _CreateChildUserResponse__WEBPACK_IMPORTED_MODULE_29__["CreateChildUserResponseToJSON"]; });\n\n/* harmony import */ var _CreateOrganizationServiceResponse__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./CreateOrganizationServiceResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateOrganizationServiceResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateOrganizationServiceResponseFromJSON", function() { return _CreateOrganizationServiceResponse__WEBPACK_IMPORTED_MODULE_30__["CreateOrganizationServiceResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateOrganizationServiceResponseFromJSONTyped", function() { return _CreateOrganizationServiceResponse__WEBPACK_IMPORTED_MODULE_30__["CreateOrganizationServiceResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateOrganizationServiceResponseToJSON", function() { return _CreateOrganizationServiceResponse__WEBPACK_IMPORTED_MODULE_30__["CreateOrganizationServiceResponseToJSON"]; });\n\n/* harmony import */ var _CreateSessionResponse__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./CreateSessionResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateSessionResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateSessionResponseFromJSON", function() { return _CreateSessionResponse__WEBPACK_IMPORTED_MODULE_31__["CreateSessionResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateSessionResponseFromJSONTyped", function() { return _CreateSessionResponse__WEBPACK_IMPORTED_MODULE_31__["CreateSessionResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateSessionResponseToJSON", function() { return _CreateSessionResponse__WEBPACK_IMPORTED_MODULE_31__["CreateSessionResponseToJSON"]; });\n\n/* harmony import */ var _CreateSessionResponseSession__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./CreateSessionResponseSession */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/CreateSessionResponseSession.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateSessionResponseSessionFromJSON", function() { return _CreateSessionResponseSession__WEBPACK_IMPORTED_MODULE_32__["CreateSessionResponseSessionFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateSessionResponseSessionFromJSONTyped", function() { return _CreateSessionResponseSession__WEBPACK_IMPORTED_MODULE_32__["CreateSessionResponseSessionFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateSessionResponseSessionToJSON", function() { return _CreateSessionResponseSession__WEBPACK_IMPORTED_MODULE_32__["CreateSessionResponseSessionToJSON"]; });\n\n/* harmony import */ var _DeletionQueueItemResponse__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./DeletionQueueItemResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/DeletionQueueItemResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeletionQueueItemResponseFromJSON", function() { return _DeletionQueueItemResponse__WEBPACK_IMPORTED_MODULE_33__["DeletionQueueItemResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeletionQueueItemResponseFromJSONTyped", function() { return _DeletionQueueItemResponse__WEBPACK_IMPORTED_MODULE_33__["DeletionQueueItemResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeletionQueueItemResponseToJSON", function() { return _DeletionQueueItemResponse__WEBPACK_IMPORTED_MODULE_33__["DeletionQueueItemResponseToJSON"]; });\n\n/* harmony import */ var _DirectAttachment__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./DirectAttachment */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/DirectAttachment.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentFromJSON", function() { return _DirectAttachment__WEBPACK_IMPORTED_MODULE_34__["DirectAttachmentFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentFromJSONTyped", function() { return _DirectAttachment__WEBPACK_IMPORTED_MODULE_34__["DirectAttachmentFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentToJSON", function() { return _DirectAttachment__WEBPACK_IMPORTED_MODULE_34__["DirectAttachmentToJSON"]; });\n\n/* harmony import */ var _DirectAttachmentResponse__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./DirectAttachmentResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/DirectAttachmentResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentResponseFromJSON", function() { return _DirectAttachmentResponse__WEBPACK_IMPORTED_MODULE_35__["DirectAttachmentResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentResponseFromJSONTyped", function() { return _DirectAttachmentResponse__WEBPACK_IMPORTED_MODULE_35__["DirectAttachmentResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DirectAttachmentResponseToJSON", function() { return _DirectAttachmentResponse__WEBPACK_IMPORTED_MODULE_35__["DirectAttachmentResponseToJSON"]; });\n\n/* harmony import */ var _EncryptedSlotValue__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./EncryptedSlotValue */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/EncryptedSlotValue.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EncryptedSlotValueFromJSON", function() { return _EncryptedSlotValue__WEBPACK_IMPORTED_MODULE_36__["EncryptedSlotValueFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EncryptedSlotValueFromJSONTyped", function() { return _EncryptedSlotValue__WEBPACK_IMPORTED_MODULE_36__["EncryptedSlotValueFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EncryptedSlotValueToJSON", function() { return _EncryptedSlotValue__WEBPACK_IMPORTED_MODULE_36__["EncryptedSlotValueToJSON"]; });\n\n/* harmony import */ var _Err__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./Err */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Err.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrFromJSON", function() { return _Err__WEBPACK_IMPORTED_MODULE_37__["ErrFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrFromJSONTyped", function() { return _Err__WEBPACK_IMPORTED_MODULE_37__["ErrFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrToJSON", function() { return _Err__WEBPACK_IMPORTED_MODULE_37__["ErrToJSON"]; });\n\n/* harmony import */ var _ErrorsResponse__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./ErrorsResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ErrorsResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrorsResponseFromJSON", function() { return _ErrorsResponse__WEBPACK_IMPORTED_MODULE_38__["ErrorsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrorsResponseFromJSONTyped", function() { return _ErrorsResponse__WEBPACK_IMPORTED_MODULE_38__["ErrorsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrorsResponseToJSON", function() { return _ErrorsResponse__WEBPACK_IMPORTED_MODULE_38__["ErrorsResponseToJSON"]; });\n\n/* harmony import */ var _Event__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./Event */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Event.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventFromJSON", function() { return _Event__WEBPACK_IMPORTED_MODULE_39__["EventFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventFromJSONTyped", function() { return _Event__WEBPACK_IMPORTED_MODULE_39__["EventFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventToJSON", function() { return _Event__WEBPACK_IMPORTED_MODULE_39__["EventToJSON"]; });\n\n/* harmony import */ var _EventResponse__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./EventResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/EventResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventResponseFromJSON", function() { return _EventResponse__WEBPACK_IMPORTED_MODULE_40__["EventResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventResponseFromJSONTyped", function() { return _EventResponse__WEBPACK_IMPORTED_MODULE_40__["EventResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventResponseToJSON", function() { return _EventResponse__WEBPACK_IMPORTED_MODULE_40__["EventResponseToJSON"]; });\n\n/* harmony import */ var _EventsResponse__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./EventsResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/EventsResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventsResponseFromJSON", function() { return _EventsResponse__WEBPACK_IMPORTED_MODULE_41__["EventsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventsResponseFromJSONTyped", function() { return _EventsResponse__WEBPACK_IMPORTED_MODULE_41__["EventsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventsResponseToJSON", function() { return _EventsResponse__WEBPACK_IMPORTED_MODULE_41__["EventsResponseToJSON"]; });\n\n/* harmony import */ var _GetItemSharesResponse__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./GetItemSharesResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetItemSharesResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetItemSharesResponseFromJSON", function() { return _GetItemSharesResponse__WEBPACK_IMPORTED_MODULE_42__["GetItemSharesResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetItemSharesResponseFromJSONTyped", function() { return _GetItemSharesResponse__WEBPACK_IMPORTED_MODULE_42__["GetItemSharesResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetItemSharesResponseToJSON", function() { return _GetItemSharesResponse__WEBPACK_IMPORTED_MODULE_42__["GetItemSharesResponseToJSON"]; });\n\n/* harmony import */ var _GetItemSharesResponseShares__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./GetItemSharesResponseShares */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetItemSharesResponseShares.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetItemSharesResponseSharesFromJSON", function() { return _GetItemSharesResponseShares__WEBPACK_IMPORTED_MODULE_43__["GetItemSharesResponseSharesFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetItemSharesResponseSharesFromJSONTyped", function() { return _GetItemSharesResponseShares__WEBPACK_IMPORTED_MODULE_43__["GetItemSharesResponseSharesFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetItemSharesResponseSharesToJSON", function() { return _GetItemSharesResponseShares__WEBPACK_IMPORTED_MODULE_43__["GetItemSharesResponseSharesToJSON"]; });\n\n/* harmony import */ var _GetMessagesResponse__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./GetMessagesResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetMessagesResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetMessagesResponseFromJSON", function() { return _GetMessagesResponse__WEBPACK_IMPORTED_MODULE_44__["GetMessagesResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetMessagesResponseFromJSONTyped", function() { return _GetMessagesResponse__WEBPACK_IMPORTED_MODULE_44__["GetMessagesResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetMessagesResponseToJSON", function() { return _GetMessagesResponse__WEBPACK_IMPORTED_MODULE_44__["GetMessagesResponseToJSON"]; });\n\n/* harmony import */ var _GetOrganizationServicebyIdResponse__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./GetOrganizationServicebyIdResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetOrganizationServicebyIdResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationServicebyIdResponseFromJSON", function() { return _GetOrganizationServicebyIdResponse__WEBPACK_IMPORTED_MODULE_45__["GetOrganizationServicebyIdResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationServicebyIdResponseFromJSONTyped", function() { return _GetOrganizationServicebyIdResponse__WEBPACK_IMPORTED_MODULE_45__["GetOrganizationServicebyIdResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationServicebyIdResponseToJSON", function() { return _GetOrganizationServicebyIdResponse__WEBPACK_IMPORTED_MODULE_45__["GetOrganizationServicebyIdResponseToJSON"]; });\n\n/* harmony import */ var _GetOrganizationbyIdResponse__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./GetOrganizationbyIdResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetOrganizationbyIdResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationbyIdResponseFromJSON", function() { return _GetOrganizationbyIdResponse__WEBPACK_IMPORTED_MODULE_46__["GetOrganizationbyIdResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationbyIdResponseFromJSONTyped", function() { return _GetOrganizationbyIdResponse__WEBPACK_IMPORTED_MODULE_46__["GetOrganizationbyIdResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetOrganizationbyIdResponseToJSON", function() { return _GetOrganizationbyIdResponse__WEBPACK_IMPORTED_MODULE_46__["GetOrganizationbyIdResponseToJSON"]; });\n\n/* harmony import */ var _GetShareResponse__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./GetShareResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/GetShareResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetShareResponseFromJSON", function() { return _GetShareResponse__WEBPACK_IMPORTED_MODULE_47__["GetShareResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetShareResponseFromJSONTyped", function() { return _GetShareResponse__WEBPACK_IMPORTED_MODULE_47__["GetShareResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetShareResponseToJSON", function() { return _GetShareResponse__WEBPACK_IMPORTED_MODULE_47__["GetShareResponseToJSON"]; });\n\n/* harmony import */ var _InlineObject__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./InlineObject */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/InlineObject.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InlineObjectFromJSON", function() { return _InlineObject__WEBPACK_IMPORTED_MODULE_48__["InlineObjectFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InlineObjectFromJSONTyped", function() { return _InlineObject__WEBPACK_IMPORTED_MODULE_48__["InlineObjectFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InlineObjectToJSON", function() { return _InlineObject__WEBPACK_IMPORTED_MODULE_48__["InlineObjectToJSON"]; });\n\n/* harmony import */ var _InlineResponse201__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./InlineResponse201 */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/InlineResponse201.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InlineResponse201FromJSON", function() { return _InlineResponse201__WEBPACK_IMPORTED_MODULE_49__["InlineResponse201FromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InlineResponse201FromJSONTyped", function() { return _InlineResponse201__WEBPACK_IMPORTED_MODULE_49__["InlineResponse201FromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InlineResponse201ToJSON", function() { return _InlineResponse201__WEBPACK_IMPORTED_MODULE_49__["InlineResponse201ToJSON"]; });\n\n/* harmony import */ var _Invitation__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./Invitation */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Invitation.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationFromJSON", function() { return _Invitation__WEBPACK_IMPORTED_MODULE_50__["InvitationFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationFromJSONTyped", function() { return _Invitation__WEBPACK_IMPORTED_MODULE_50__["InvitationFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationToJSON", function() { return _Invitation__WEBPACK_IMPORTED_MODULE_50__["InvitationToJSON"]; });\n\n/* harmony import */ var _InvitationResponse__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./InvitationResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/InvitationResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationResponseFromJSON", function() { return _InvitationResponse__WEBPACK_IMPORTED_MODULE_51__["InvitationResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationResponseFromJSONTyped", function() { return _InvitationResponse__WEBPACK_IMPORTED_MODULE_51__["InvitationResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationResponseToJSON", function() { return _InvitationResponse__WEBPACK_IMPORTED_MODULE_51__["InvitationResponseToJSON"]; });\n\n/* harmony import */ var _InvitationsResponse__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./InvitationsResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/InvitationsResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationsResponseFromJSON", function() { return _InvitationsResponse__WEBPACK_IMPORTED_MODULE_52__["InvitationsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationsResponseFromJSONTyped", function() { return _InvitationsResponse__WEBPACK_IMPORTED_MODULE_52__["InvitationsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvitationsResponseToJSON", function() { return _InvitationsResponse__WEBPACK_IMPORTED_MODULE_52__["InvitationsResponseToJSON"]; });\n\n/* harmony import */ var _Item__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./Item */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Item.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemFromJSON", function() { return _Item__WEBPACK_IMPORTED_MODULE_53__["ItemFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemFromJSONTyped", function() { return _Item__WEBPACK_IMPORTED_MODULE_53__["ItemFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemToJSON", function() { return _Item__WEBPACK_IMPORTED_MODULE_53__["ItemToJSON"]; });\n\n/* harmony import */ var _ItemResponse__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./ItemResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemResponseFromJSON", function() { return _ItemResponse__WEBPACK_IMPORTED_MODULE_54__["ItemResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemResponseFromJSONTyped", function() { return _ItemResponse__WEBPACK_IMPORTED_MODULE_54__["ItemResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemResponseToJSON", function() { return _ItemResponse__WEBPACK_IMPORTED_MODULE_54__["ItemResponseToJSON"]; });\n\n/* harmony import */ var _ItemSharesUpdateResponse__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./ItemSharesUpdateResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemSharesUpdateResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemSharesUpdateResponseFromJSON", function() { return _ItemSharesUpdateResponse__WEBPACK_IMPORTED_MODULE_55__["ItemSharesUpdateResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemSharesUpdateResponseFromJSONTyped", function() { return _ItemSharesUpdateResponse__WEBPACK_IMPORTED_MODULE_55__["ItemSharesUpdateResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemSharesUpdateResponseToJSON", function() { return _ItemSharesUpdateResponse__WEBPACK_IMPORTED_MODULE_55__["ItemSharesUpdateResponseToJSON"]; });\n\n/* harmony import */ var _ItemTemplate__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./ItemTemplate */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemTemplate.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplateFromJSON", function() { return _ItemTemplate__WEBPACK_IMPORTED_MODULE_56__["ItemTemplateFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplateFromJSONTyped", function() { return _ItemTemplate__WEBPACK_IMPORTED_MODULE_56__["ItemTemplateFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplateToJSON", function() { return _ItemTemplate__WEBPACK_IMPORTED_MODULE_56__["ItemTemplateToJSON"]; });\n\n/* harmony import */ var _ItemTemplateResponse__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./ItemTemplateResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemTemplateResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplateResponseFromJSON", function() { return _ItemTemplateResponse__WEBPACK_IMPORTED_MODULE_57__["ItemTemplateResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplateResponseFromJSONTyped", function() { return _ItemTemplateResponse__WEBPACK_IMPORTED_MODULE_57__["ItemTemplateResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplateResponseToJSON", function() { return _ItemTemplateResponse__WEBPACK_IMPORTED_MODULE_57__["ItemTemplateResponseToJSON"]; });\n\n/* harmony import */ var _ItemTemplatesResponse__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./ItemTemplatesResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemTemplatesResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplatesResponseFromJSON", function() { return _ItemTemplatesResponse__WEBPACK_IMPORTED_MODULE_58__["ItemTemplatesResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplatesResponseFromJSONTyped", function() { return _ItemTemplatesResponse__WEBPACK_IMPORTED_MODULE_58__["ItemTemplatesResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemTemplatesResponseToJSON", function() { return _ItemTemplatesResponse__WEBPACK_IMPORTED_MODULE_58__["ItemTemplatesResponseToJSON"]; });\n\n/* harmony import */ var _ItemsIdEncryptSlots__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./ItemsIdEncryptSlots */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemsIdEncryptSlots.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdEncryptSlotsFromJSON", function() { return _ItemsIdEncryptSlots__WEBPACK_IMPORTED_MODULE_59__["ItemsIdEncryptSlotsFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdEncryptSlotsFromJSONTyped", function() { return _ItemsIdEncryptSlots__WEBPACK_IMPORTED_MODULE_59__["ItemsIdEncryptSlotsFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdEncryptSlotsToJSON", function() { return _ItemsIdEncryptSlots__WEBPACK_IMPORTED_MODULE_59__["ItemsIdEncryptSlotsToJSON"]; });\n\n/* harmony import */ var _ItemsIdSharesShareDeks__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./ItemsIdSharesShareDeks */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemsIdSharesShareDeks.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdSharesShareDeksFromJSON", function() { return _ItemsIdSharesShareDeks__WEBPACK_IMPORTED_MODULE_60__["ItemsIdSharesShareDeksFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdSharesShareDeksFromJSONTyped", function() { return _ItemsIdSharesShareDeks__WEBPACK_IMPORTED_MODULE_60__["ItemsIdSharesShareDeksFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdSharesShareDeksToJSON", function() { return _ItemsIdSharesShareDeks__WEBPACK_IMPORTED_MODULE_60__["ItemsIdSharesShareDeksToJSON"]; });\n\n/* harmony import */ var _ItemsIdSharesSlotValues__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./ItemsIdSharesSlotValues */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemsIdSharesSlotValues.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdSharesSlotValuesFromJSON", function() { return _ItemsIdSharesSlotValues__WEBPACK_IMPORTED_MODULE_61__["ItemsIdSharesSlotValuesFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdSharesSlotValuesFromJSONTyped", function() { return _ItemsIdSharesSlotValues__WEBPACK_IMPORTED_MODULE_61__["ItemsIdSharesSlotValuesFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsIdSharesSlotValuesToJSON", function() { return _ItemsIdSharesSlotValues__WEBPACK_IMPORTED_MODULE_61__["ItemsIdSharesSlotValuesToJSON"]; });\n\n/* harmony import */ var _ItemsResponse__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./ItemsResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ItemsResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsResponseFromJSON", function() { return _ItemsResponse__WEBPACK_IMPORTED_MODULE_62__["ItemsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsResponseFromJSONTyped", function() { return _ItemsResponse__WEBPACK_IMPORTED_MODULE_62__["ItemsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsResponseToJSON", function() { return _ItemsResponse__WEBPACK_IMPORTED_MODULE_62__["ItemsResponseToJSON"]; });\n\n/* harmony import */ var _ListOrganizationMemberResponse__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./ListOrganizationMemberResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ListOrganizationMemberResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationMemberResponseFromJSON", function() { return _ListOrganizationMemberResponse__WEBPACK_IMPORTED_MODULE_63__["ListOrganizationMemberResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationMemberResponseFromJSONTyped", function() { return _ListOrganizationMemberResponse__WEBPACK_IMPORTED_MODULE_63__["ListOrganizationMemberResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationMemberResponseToJSON", function() { return _ListOrganizationMemberResponse__WEBPACK_IMPORTED_MODULE_63__["ListOrganizationMemberResponseToJSON"]; });\n\n/* harmony import */ var _ListOrganizationServicesResponse__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./ListOrganizationServicesResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ListOrganizationServicesResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationServicesResponseFromJSON", function() { return _ListOrganizationServicesResponse__WEBPACK_IMPORTED_MODULE_64__["ListOrganizationServicesResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationServicesResponseFromJSONTyped", function() { return _ListOrganizationServicesResponse__WEBPACK_IMPORTED_MODULE_64__["ListOrganizationServicesResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationServicesResponseToJSON", function() { return _ListOrganizationServicesResponse__WEBPACK_IMPORTED_MODULE_64__["ListOrganizationServicesResponseToJSON"]; });\n\n/* harmony import */ var _ListOrganizationsResponse__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./ListOrganizationsResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ListOrganizationsResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponseFromJSON", function() { return _ListOrganizationsResponse__WEBPACK_IMPORTED_MODULE_65__["ListOrganizationsResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponseFromJSONTyped", function() { return _ListOrganizationsResponse__WEBPACK_IMPORTED_MODULE_65__["ListOrganizationsResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponseToJSON", function() { return _ListOrganizationsResponse__WEBPACK_IMPORTED_MODULE_65__["ListOrganizationsResponseToJSON"]; });\n\n/* harmony import */ var _ListOrganizationsResponse1__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./ListOrganizationsResponse1 */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ListOrganizationsResponse1.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponse1FromJSON", function() { return _ListOrganizationsResponse1__WEBPACK_IMPORTED_MODULE_66__["ListOrganizationsResponse1FromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponse1FromJSONTyped", function() { return _ListOrganizationsResponse1__WEBPACK_IMPORTED_MODULE_66__["ListOrganizationsResponse1FromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponse1ToJSON", function() { return _ListOrganizationsResponse1__WEBPACK_IMPORTED_MODULE_66__["ListOrganizationsResponse1ToJSON"]; });\n\n/* harmony import */ var _ListOrganizationsResponse2__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./ListOrganizationsResponse2 */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ListOrganizationsResponse2.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponse2FromJSON", function() { return _ListOrganizationsResponse2__WEBPACK_IMPORTED_MODULE_67__["ListOrganizationsResponse2FromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponse2FromJSONTyped", function() { return _ListOrganizationsResponse2__WEBPACK_IMPORTED_MODULE_67__["ListOrganizationsResponse2FromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ListOrganizationsResponse2ToJSON", function() { return _ListOrganizationsResponse2__WEBPACK_IMPORTED_MODULE_67__["ListOrganizationsResponse2ToJSON"]; });\n\n/* harmony import */ var _MeResponse__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./MeResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/MeResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeResponseFromJSON", function() { return _MeResponse__WEBPACK_IMPORTED_MODULE_68__["MeResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeResponseFromJSONTyped", function() { return _MeResponse__WEBPACK_IMPORTED_MODULE_68__["MeResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeResponseToJSON", function() { return _MeResponse__WEBPACK_IMPORTED_MODULE_68__["MeResponseToJSON"]; });\n\n/* harmony import */ var _Message__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./Message */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Message.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MessageFromJSON", function() { return _Message__WEBPACK_IMPORTED_MODULE_69__["MessageFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MessageFromJSONTyped", function() { return _Message__WEBPACK_IMPORTED_MODULE_69__["MessageFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MessageToJSON", function() { return _Message__WEBPACK_IMPORTED_MODULE_69__["MessageToJSON"]; });\n\n/* harmony import */ var _Meta__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./Meta */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Meta.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MetaFromJSON", function() { return _Meta__WEBPACK_IMPORTED_MODULE_70__["MetaFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MetaFromJSONTyped", function() { return _Meta__WEBPACK_IMPORTED_MODULE_70__["MetaFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MetaToJSON", function() { return _Meta__WEBPACK_IMPORTED_MODULE_70__["MetaToJSON"]; });\n\n/* harmony import */ var _NestedAttachmentAttributes__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./NestedAttachmentAttributes */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/NestedAttachmentAttributes.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedAttachmentAttributesFromJSON", function() { return _NestedAttachmentAttributes__WEBPACK_IMPORTED_MODULE_71__["NestedAttachmentAttributesFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedAttachmentAttributesFromJSONTyped", function() { return _NestedAttachmentAttributes__WEBPACK_IMPORTED_MODULE_71__["NestedAttachmentAttributesFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedAttachmentAttributesToJSON", function() { return _NestedAttachmentAttributes__WEBPACK_IMPORTED_MODULE_71__["NestedAttachmentAttributesToJSON"]; });\n\n/* harmony import */ var _NestedClassificationNodeAttributes__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./NestedClassificationNodeAttributes */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/NestedClassificationNodeAttributes.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedClassificationNodeAttributesFromJSON", function() { return _NestedClassificationNodeAttributes__WEBPACK_IMPORTED_MODULE_72__["NestedClassificationNodeAttributesFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedClassificationNodeAttributesFromJSONTyped", function() { return _NestedClassificationNodeAttributes__WEBPACK_IMPORTED_MODULE_72__["NestedClassificationNodeAttributesFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedClassificationNodeAttributesToJSON", function() { return _NestedClassificationNodeAttributes__WEBPACK_IMPORTED_MODULE_72__["NestedClassificationNodeAttributesToJSON"]; });\n\n/* harmony import */ var _NestedSlotAttributes__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./NestedSlotAttributes */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/NestedSlotAttributes.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedSlotAttributesFromJSON", function() { return _NestedSlotAttributes__WEBPACK_IMPORTED_MODULE_73__["NestedSlotAttributesFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedSlotAttributesFromJSONTyped", function() { return _NestedSlotAttributes__WEBPACK_IMPORTED_MODULE_73__["NestedSlotAttributesFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NestedSlotAttributesToJSON", function() { return _NestedSlotAttributes__WEBPACK_IMPORTED_MODULE_73__["NestedSlotAttributesToJSON"]; });\n\n/* harmony import */ var _Organization__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./Organization */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Organization.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationFromJSON", function() { return _Organization__WEBPACK_IMPORTED_MODULE_74__["OrganizationFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationFromJSONTyped", function() { return _Organization__WEBPACK_IMPORTED_MODULE_74__["OrganizationFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationToJSON", function() { return _Organization__WEBPACK_IMPORTED_MODULE_74__["OrganizationToJSON"]; });\n\n/* harmony import */ var _OrganizationAgentLoginDetailResponse__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./OrganizationAgentLoginDetailResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationAgentLoginDetailResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationAgentLoginDetailResponseFromJSON", function() { return _OrganizationAgentLoginDetailResponse__WEBPACK_IMPORTED_MODULE_75__["OrganizationAgentLoginDetailResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationAgentLoginDetailResponseFromJSONTyped", function() { return _OrganizationAgentLoginDetailResponse__WEBPACK_IMPORTED_MODULE_75__["OrganizationAgentLoginDetailResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationAgentLoginDetailResponseToJSON", function() { return _OrganizationAgentLoginDetailResponse__WEBPACK_IMPORTED_MODULE_75__["OrganizationAgentLoginDetailResponseToJSON"]; });\n\n/* harmony import */ var _OrganizationMember__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./OrganizationMember */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationMember.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationMemberFromJSON", function() { return _OrganizationMember__WEBPACK_IMPORTED_MODULE_76__["OrganizationMemberFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationMemberFromJSONTyped", function() { return _OrganizationMember__WEBPACK_IMPORTED_MODULE_76__["OrganizationMemberFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationMemberToJSON", function() { return _OrganizationMember__WEBPACK_IMPORTED_MODULE_76__["OrganizationMemberToJSON"]; });\n\n/* harmony import */ var _OrganizationResponse__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./OrganizationResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationResponseFromJSON", function() { return _OrganizationResponse__WEBPACK_IMPORTED_MODULE_77__["OrganizationResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationResponseFromJSONTyped", function() { return _OrganizationResponse__WEBPACK_IMPORTED_MODULE_77__["OrganizationResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationResponseToJSON", function() { return _OrganizationResponse__WEBPACK_IMPORTED_MODULE_77__["OrganizationResponseToJSON"]; });\n\n/* harmony import */ var _OrganizationsIdOrganization__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./OrganizationsIdOrganization */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationsIdOrganization.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsIdOrganizationFromJSON", function() { return _OrganizationsIdOrganization__WEBPACK_IMPORTED_MODULE_78__["OrganizationsIdOrganizationFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsIdOrganizationFromJSONTyped", function() { return _OrganizationsIdOrganization__WEBPACK_IMPORTED_MODULE_78__["OrganizationsIdOrganizationFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsIdOrganizationToJSON", function() { return _OrganizationsIdOrganization__WEBPACK_IMPORTED_MODULE_78__["OrganizationsIdOrganizationToJSON"]; });\n\n/* harmony import */ var _OrganizationsOrganizationIdMembersIdOrganizationMember__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./OrganizationsOrganizationIdMembersIdOrganizationMember */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationsOrganizationIdMembersIdOrganizationMember.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSON", function() { return _OrganizationsOrganizationIdMembersIdOrganizationMember__WEBPACK_IMPORTED_MODULE_79__["OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSONTyped", function() { return _OrganizationsOrganizationIdMembersIdOrganizationMember__WEBPACK_IMPORTED_MODULE_79__["OrganizationsOrganizationIdMembersIdOrganizationMemberFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsOrganizationIdMembersIdOrganizationMemberToJSON", function() { return _OrganizationsOrganizationIdMembersIdOrganizationMember__WEBPACK_IMPORTED_MODULE_79__["OrganizationsOrganizationIdMembersIdOrganizationMemberToJSON"]; });\n\n/* harmony import */ var _OrganizationsOrganizationIdServicesIdService__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./OrganizationsOrganizationIdServicesIdService */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OrganizationsOrganizationIdServicesIdService.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsOrganizationIdServicesIdServiceFromJSON", function() { return _OrganizationsOrganizationIdServicesIdService__WEBPACK_IMPORTED_MODULE_80__["OrganizationsOrganizationIdServicesIdServiceFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsOrganizationIdServicesIdServiceFromJSONTyped", function() { return _OrganizationsOrganizationIdServicesIdService__WEBPACK_IMPORTED_MODULE_80__["OrganizationsOrganizationIdServicesIdServiceFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrganizationsOrganizationIdServicesIdServiceToJSON", function() { return _OrganizationsOrganizationIdServicesIdService__WEBPACK_IMPORTED_MODULE_80__["OrganizationsOrganizationIdServicesIdServiceToJSON"]; });\n\n/* harmony import */ var _OwnConnectionData__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./OwnConnectionData */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/OwnConnectionData.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OwnConnectionDataFromJSON", function() { return _OwnConnectionData__WEBPACK_IMPORTED_MODULE_81__["OwnConnectionDataFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OwnConnectionDataFromJSONTyped", function() { return _OwnConnectionData__WEBPACK_IMPORTED_MODULE_81__["OwnConnectionDataFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OwnConnectionDataToJSON", function() { return _OwnConnectionData__WEBPACK_IMPORTED_MODULE_81__["OwnConnectionDataToJSON"]; });\n\n/* harmony import */ var _ParentPublicKeyForConnection__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./ParentPublicKeyForConnection */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ParentPublicKeyForConnection.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ParentPublicKeyForConnectionFromJSON", function() { return _ParentPublicKeyForConnection__WEBPACK_IMPORTED_MODULE_82__["ParentPublicKeyForConnectionFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ParentPublicKeyForConnectionFromJSONTyped", function() { return _ParentPublicKeyForConnection__WEBPACK_IMPORTED_MODULE_82__["ParentPublicKeyForConnectionFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ParentPublicKeyForConnectionToJSON", function() { return _ParentPublicKeyForConnection__WEBPACK_IMPORTED_MODULE_82__["ParentPublicKeyForConnectionToJSON"]; });\n\n/* harmony import */ var _PostAttachmentDirectUploadUrlBlobRequest__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./PostAttachmentDirectUploadUrlBlobRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostAttachmentDirectUploadUrlBlobRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostAttachmentDirectUploadUrlBlobRequestFromJSON", function() { return _PostAttachmentDirectUploadUrlBlobRequest__WEBPACK_IMPORTED_MODULE_83__["PostAttachmentDirectUploadUrlBlobRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostAttachmentDirectUploadUrlBlobRequestFromJSONTyped", function() { return _PostAttachmentDirectUploadUrlBlobRequest__WEBPACK_IMPORTED_MODULE_83__["PostAttachmentDirectUploadUrlBlobRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostAttachmentDirectUploadUrlBlobRequestToJSON", function() { return _PostAttachmentDirectUploadUrlBlobRequest__WEBPACK_IMPORTED_MODULE_83__["PostAttachmentDirectUploadUrlBlobRequestToJSON"]; });\n\n/* harmony import */ var _PostAttachmentDirectUploadUrlRequest__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./PostAttachmentDirectUploadUrlRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostAttachmentDirectUploadUrlRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostAttachmentDirectUploadUrlRequestFromJSON", function() { return _PostAttachmentDirectUploadUrlRequest__WEBPACK_IMPORTED_MODULE_84__["PostAttachmentDirectUploadUrlRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostAttachmentDirectUploadUrlRequestFromJSONTyped", function() { return _PostAttachmentDirectUploadUrlRequest__WEBPACK_IMPORTED_MODULE_84__["PostAttachmentDirectUploadUrlRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostAttachmentDirectUploadUrlRequestToJSON", function() { return _PostAttachmentDirectUploadUrlRequest__WEBPACK_IMPORTED_MODULE_84__["PostAttachmentDirectUploadUrlRequestToJSON"]; });\n\n/* harmony import */ var _PostConnection__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./PostConnection */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostConnection.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionFromJSON", function() { return _PostConnection__WEBPACK_IMPORTED_MODULE_85__["PostConnectionFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionFromJSONTyped", function() { return _PostConnection__WEBPACK_IMPORTED_MODULE_85__["PostConnectionFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionToJSON", function() { return _PostConnection__WEBPACK_IMPORTED_MODULE_85__["PostConnectionToJSON"]; });\n\n/* harmony import */ var _PostConnectionPublicKey__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./PostConnectionPublicKey */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostConnectionPublicKey.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionPublicKeyFromJSON", function() { return _PostConnectionPublicKey__WEBPACK_IMPORTED_MODULE_86__["PostConnectionPublicKeyFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionPublicKeyFromJSONTyped", function() { return _PostConnectionPublicKey__WEBPACK_IMPORTED_MODULE_86__["PostConnectionPublicKeyFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionPublicKeyToJSON", function() { return _PostConnectionPublicKey__WEBPACK_IMPORTED_MODULE_86__["PostConnectionPublicKeyToJSON"]; });\n\n/* harmony import */ var _PostConnectionsRequest__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./PostConnectionsRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostConnectionsRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionsRequestFromJSON", function() { return _PostConnectionsRequest__WEBPACK_IMPORTED_MODULE_87__["PostConnectionsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionsRequestFromJSONTyped", function() { return _PostConnectionsRequest__WEBPACK_IMPORTED_MODULE_87__["PostConnectionsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostConnectionsRequestToJSON", function() { return _PostConnectionsRequest__WEBPACK_IMPORTED_MODULE_87__["PostConnectionsRequestToJSON"]; });\n\n/* harmony import */ var _PostCreateAttachmentBlobRequest__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./PostCreateAttachmentBlobRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostCreateAttachmentBlobRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostCreateAttachmentBlobRequestFromJSON", function() { return _PostCreateAttachmentBlobRequest__WEBPACK_IMPORTED_MODULE_88__["PostCreateAttachmentBlobRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostCreateAttachmentBlobRequestFromJSONTyped", function() { return _PostCreateAttachmentBlobRequest__WEBPACK_IMPORTED_MODULE_88__["PostCreateAttachmentBlobRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostCreateAttachmentBlobRequestToJSON", function() { return _PostCreateAttachmentBlobRequest__WEBPACK_IMPORTED_MODULE_88__["PostCreateAttachmentBlobRequestToJSON"]; });\n\n/* harmony import */ var _PostCreateAttachmentRequest__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./PostCreateAttachmentRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostCreateAttachmentRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostCreateAttachmentRequestFromJSON", function() { return _PostCreateAttachmentRequest__WEBPACK_IMPORTED_MODULE_89__["PostCreateAttachmentRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostCreateAttachmentRequestFromJSONTyped", function() { return _PostCreateAttachmentRequest__WEBPACK_IMPORTED_MODULE_89__["PostCreateAttachmentRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostCreateAttachmentRequestToJSON", function() { return _PostCreateAttachmentRequest__WEBPACK_IMPORTED_MODULE_89__["PostCreateAttachmentRequestToJSON"]; });\n\n/* harmony import */ var _PostEventsRequest__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./PostEventsRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostEventsRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostEventsRequestFromJSON", function() { return _PostEventsRequest__WEBPACK_IMPORTED_MODULE_90__["PostEventsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostEventsRequestFromJSONTyped", function() { return _PostEventsRequest__WEBPACK_IMPORTED_MODULE_90__["PostEventsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostEventsRequestToJSON", function() { return _PostEventsRequest__WEBPACK_IMPORTED_MODULE_90__["PostEventsRequestToJSON"]; });\n\n/* harmony import */ var _PostInvitation__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./PostInvitation */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostInvitation.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationFromJSON", function() { return _PostInvitation__WEBPACK_IMPORTED_MODULE_91__["PostInvitationFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationFromJSONTyped", function() { return _PostInvitation__WEBPACK_IMPORTED_MODULE_91__["PostInvitationFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationToJSON", function() { return _PostInvitation__WEBPACK_IMPORTED_MODULE_91__["PostInvitationToJSON"]; });\n\n/* harmony import */ var _PostInvitationPublicKey__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./PostInvitationPublicKey */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostInvitationPublicKey.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationPublicKeyFromJSON", function() { return _PostInvitationPublicKey__WEBPACK_IMPORTED_MODULE_92__["PostInvitationPublicKeyFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationPublicKeyFromJSONTyped", function() { return _PostInvitationPublicKey__WEBPACK_IMPORTED_MODULE_92__["PostInvitationPublicKeyFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationPublicKeyToJSON", function() { return _PostInvitationPublicKey__WEBPACK_IMPORTED_MODULE_92__["PostInvitationPublicKeyToJSON"]; });\n\n/* harmony import */ var _PostInvitationsRequest__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./PostInvitationsRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostInvitationsRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationsRequestFromJSON", function() { return _PostInvitationsRequest__WEBPACK_IMPORTED_MODULE_93__["PostInvitationsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationsRequestFromJSONTyped", function() { return _PostInvitationsRequest__WEBPACK_IMPORTED_MODULE_93__["PostInvitationsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostInvitationsRequestToJSON", function() { return _PostInvitationsRequest__WEBPACK_IMPORTED_MODULE_93__["PostInvitationsRequestToJSON"]; });\n\n/* harmony import */ var _PostItemEncryptRequest__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./PostItemEncryptRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemEncryptRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemEncryptRequestFromJSON", function() { return _PostItemEncryptRequest__WEBPACK_IMPORTED_MODULE_94__["PostItemEncryptRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemEncryptRequestFromJSONTyped", function() { return _PostItemEncryptRequest__WEBPACK_IMPORTED_MODULE_94__["PostItemEncryptRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemEncryptRequestToJSON", function() { return _PostItemEncryptRequest__WEBPACK_IMPORTED_MODULE_94__["PostItemEncryptRequestToJSON"]; });\n\n/* harmony import */ var _PostItemSharesRequest__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./PostItemSharesRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemSharesRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemSharesRequestFromJSON", function() { return _PostItemSharesRequest__WEBPACK_IMPORTED_MODULE_95__["PostItemSharesRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemSharesRequestFromJSONTyped", function() { return _PostItemSharesRequest__WEBPACK_IMPORTED_MODULE_95__["PostItemSharesRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemSharesRequestToJSON", function() { return _PostItemSharesRequest__WEBPACK_IMPORTED_MODULE_95__["PostItemSharesRequestToJSON"]; });\n\n/* harmony import */ var _PostItemSharesRequestShare__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./PostItemSharesRequestShare */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemSharesRequestShare.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemSharesRequestShareFromJSON", function() { return _PostItemSharesRequestShare__WEBPACK_IMPORTED_MODULE_96__["PostItemSharesRequestShareFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemSharesRequestShareFromJSONTyped", function() { return _PostItemSharesRequestShare__WEBPACK_IMPORTED_MODULE_96__["PostItemSharesRequestShareFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemSharesRequestShareToJSON", function() { return _PostItemSharesRequestShare__WEBPACK_IMPORTED_MODULE_96__["PostItemSharesRequestShareToJSON"]; });\n\n/* harmony import */ var _PostItemTemplateRequest__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./PostItemTemplateRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemTemplateRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemTemplateRequestFromJSON", function() { return _PostItemTemplateRequest__WEBPACK_IMPORTED_MODULE_97__["PostItemTemplateRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemTemplateRequestFromJSONTyped", function() { return _PostItemTemplateRequest__WEBPACK_IMPORTED_MODULE_97__["PostItemTemplateRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemTemplateRequestToJSON", function() { return _PostItemTemplateRequest__WEBPACK_IMPORTED_MODULE_97__["PostItemTemplateRequestToJSON"]; });\n\n/* harmony import */ var _PostItemTemplateRequestSlotAttributes__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./PostItemTemplateRequestSlotAttributes */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemTemplateRequestSlotAttributes.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemTemplateRequestSlotAttributesFromJSON", function() { return _PostItemTemplateRequestSlotAttributes__WEBPACK_IMPORTED_MODULE_98__["PostItemTemplateRequestSlotAttributesFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemTemplateRequestSlotAttributesFromJSONTyped", function() { return _PostItemTemplateRequestSlotAttributes__WEBPACK_IMPORTED_MODULE_98__["PostItemTemplateRequestSlotAttributesFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemTemplateRequestSlotAttributesToJSON", function() { return _PostItemTemplateRequestSlotAttributes__WEBPACK_IMPORTED_MODULE_98__["PostItemTemplateRequestSlotAttributesToJSON"]; });\n\n/* harmony import */ var _PostItemsAssociationsRequest__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./PostItemsAssociationsRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemsAssociationsRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsAssociationsRequestFromJSON", function() { return _PostItemsAssociationsRequest__WEBPACK_IMPORTED_MODULE_99__["PostItemsAssociationsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsAssociationsRequestFromJSONTyped", function() { return _PostItemsAssociationsRequest__WEBPACK_IMPORTED_MODULE_99__["PostItemsAssociationsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsAssociationsRequestToJSON", function() { return _PostItemsAssociationsRequest__WEBPACK_IMPORTED_MODULE_99__["PostItemsAssociationsRequestToJSON"]; });\n\n/* harmony import */ var _PostItemsRequest__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./PostItemsRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemsRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsRequestFromJSON", function() { return _PostItemsRequest__WEBPACK_IMPORTED_MODULE_100__["PostItemsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsRequestFromJSONTyped", function() { return _PostItemsRequest__WEBPACK_IMPORTED_MODULE_100__["PostItemsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsRequestToJSON", function() { return _PostItemsRequest__WEBPACK_IMPORTED_MODULE_100__["PostItemsRequestToJSON"]; });\n\n/* harmony import */ var _PostItemsRequestItem__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./PostItemsRequestItem */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostItemsRequestItem.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsRequestItemFromJSON", function() { return _PostItemsRequestItem__WEBPACK_IMPORTED_MODULE_101__["PostItemsRequestItemFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsRequestItemFromJSONTyped", function() { return _PostItemsRequestItem__WEBPACK_IMPORTED_MODULE_101__["PostItemsRequestItemFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostItemsRequestItemToJSON", function() { return _PostItemsRequestItem__WEBPACK_IMPORTED_MODULE_101__["PostItemsRequestItemToJSON"]; });\n\n/* harmony import */ var _PostMeRequest__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./PostMeRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostMeRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostMeRequestFromJSON", function() { return _PostMeRequest__WEBPACK_IMPORTED_MODULE_102__["PostMeRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostMeRequestFromJSONTyped", function() { return _PostMeRequest__WEBPACK_IMPORTED_MODULE_102__["PostMeRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostMeRequestToJSON", function() { return _PostMeRequest__WEBPACK_IMPORTED_MODULE_102__["PostMeRequestToJSON"]; });\n\n/* harmony import */ var _PostMeResponse__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./PostMeResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostMeResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostMeResponseFromJSON", function() { return _PostMeResponse__WEBPACK_IMPORTED_MODULE_103__["PostMeResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostMeResponseFromJSONTyped", function() { return _PostMeResponse__WEBPACK_IMPORTED_MODULE_103__["PostMeResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostMeResponseToJSON", function() { return _PostMeResponse__WEBPACK_IMPORTED_MODULE_103__["PostMeResponseToJSON"]; });\n\n/* harmony import */ var _PostOrganizationRequest__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./PostOrganizationRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostOrganizationRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostOrganizationRequestFromJSON", function() { return _PostOrganizationRequest__WEBPACK_IMPORTED_MODULE_104__["PostOrganizationRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostOrganizationRequestFromJSONTyped", function() { return _PostOrganizationRequest__WEBPACK_IMPORTED_MODULE_104__["PostOrganizationRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostOrganizationRequestToJSON", function() { return _PostOrganizationRequest__WEBPACK_IMPORTED_MODULE_104__["PostOrganizationRequestToJSON"]; });\n\n/* harmony import */ var _PostOrganizationServiceRequest__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./PostOrganizationServiceRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostOrganizationServiceRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostOrganizationServiceRequestFromJSON", function() { return _PostOrganizationServiceRequest__WEBPACK_IMPORTED_MODULE_105__["PostOrganizationServiceRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostOrganizationServiceRequestFromJSONTyped", function() { return _PostOrganizationServiceRequest__WEBPACK_IMPORTED_MODULE_105__["PostOrganizationServiceRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostOrganizationServiceRequestToJSON", function() { return _PostOrganizationServiceRequest__WEBPACK_IMPORTED_MODULE_105__["PostOrganizationServiceRequestToJSON"]; });\n\n/* harmony import */ var _PostServiceRequest__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./PostServiceRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostServiceRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostServiceRequestFromJSON", function() { return _PostServiceRequest__WEBPACK_IMPORTED_MODULE_106__["PostServiceRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostServiceRequestFromJSONTyped", function() { return _PostServiceRequest__WEBPACK_IMPORTED_MODULE_106__["PostServiceRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostServiceRequestToJSON", function() { return _PostServiceRequest__WEBPACK_IMPORTED_MODULE_106__["PostServiceRequestToJSON"]; });\n\n/* harmony import */ var _PostSessionRequest__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./PostSessionRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PostSessionRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostSessionRequestFromJSON", function() { return _PostSessionRequest__WEBPACK_IMPORTED_MODULE_107__["PostSessionRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostSessionRequestFromJSONTyped", function() { return _PostSessionRequest__WEBPACK_IMPORTED_MODULE_107__["PostSessionRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostSessionRequestToJSON", function() { return _PostSessionRequest__WEBPACK_IMPORTED_MODULE_107__["PostSessionRequestToJSON"]; });\n\n/* harmony import */ var _PublicInvitation__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./PublicInvitation */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PublicInvitation.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PublicInvitationFromJSON", function() { return _PublicInvitation__WEBPACK_IMPORTED_MODULE_108__["PublicInvitationFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PublicInvitationFromJSONTyped", function() { return _PublicInvitation__WEBPACK_IMPORTED_MODULE_108__["PublicInvitationFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PublicInvitationToJSON", function() { return _PublicInvitation__WEBPACK_IMPORTED_MODULE_108__["PublicInvitationToJSON"]; });\n\n/* harmony import */ var _PublicInvitationResponse__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./PublicInvitationResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PublicInvitationResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PublicInvitationResponseFromJSON", function() { return _PublicInvitationResponse__WEBPACK_IMPORTED_MODULE_109__["PublicInvitationResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PublicInvitationResponseFromJSONTyped", function() { return _PublicInvitationResponse__WEBPACK_IMPORTED_MODULE_109__["PublicInvitationResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PublicInvitationResponseToJSON", function() { return _PublicInvitationResponse__WEBPACK_IMPORTED_MODULE_109__["PublicInvitationResponseToJSON"]; });\n\n/* harmony import */ var _PutItemSharesClientTasksRequest__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./PutItemSharesClientTasksRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutItemSharesClientTasksRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemSharesClientTasksRequestFromJSON", function() { return _PutItemSharesClientTasksRequest__WEBPACK_IMPORTED_MODULE_110__["PutItemSharesClientTasksRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemSharesClientTasksRequestFromJSONTyped", function() { return _PutItemSharesClientTasksRequest__WEBPACK_IMPORTED_MODULE_110__["PutItemSharesClientTasksRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemSharesClientTasksRequestToJSON", function() { return _PutItemSharesClientTasksRequest__WEBPACK_IMPORTED_MODULE_110__["PutItemSharesClientTasksRequestToJSON"]; });\n\n/* harmony import */ var _PutItemSharesRequest__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./PutItemSharesRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutItemSharesRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemSharesRequestFromJSON", function() { return _PutItemSharesRequest__WEBPACK_IMPORTED_MODULE_111__["PutItemSharesRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemSharesRequestFromJSONTyped", function() { return _PutItemSharesRequest__WEBPACK_IMPORTED_MODULE_111__["PutItemSharesRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemSharesRequestToJSON", function() { return _PutItemSharesRequest__WEBPACK_IMPORTED_MODULE_111__["PutItemSharesRequestToJSON"]; });\n\n/* harmony import */ var _PutItemsAssociationsRequest__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./PutItemsAssociationsRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutItemsAssociationsRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsAssociationsRequestFromJSON", function() { return _PutItemsAssociationsRequest__WEBPACK_IMPORTED_MODULE_112__["PutItemsAssociationsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsAssociationsRequestFromJSONTyped", function() { return _PutItemsAssociationsRequest__WEBPACK_IMPORTED_MODULE_112__["PutItemsAssociationsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsAssociationsRequestToJSON", function() { return _PutItemsAssociationsRequest__WEBPACK_IMPORTED_MODULE_112__["PutItemsAssociationsRequestToJSON"]; });\n\n/* harmony import */ var _PutItemsRequest__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./PutItemsRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutItemsRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsRequestFromJSON", function() { return _PutItemsRequest__WEBPACK_IMPORTED_MODULE_113__["PutItemsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsRequestFromJSONTyped", function() { return _PutItemsRequest__WEBPACK_IMPORTED_MODULE_113__["PutItemsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsRequestToJSON", function() { return _PutItemsRequest__WEBPACK_IMPORTED_MODULE_113__["PutItemsRequestToJSON"]; });\n\n/* harmony import */ var _PutItemsRequestItem__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./PutItemsRequestItem */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutItemsRequestItem.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsRequestItemFromJSON", function() { return _PutItemsRequestItem__WEBPACK_IMPORTED_MODULE_114__["PutItemsRequestItemFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsRequestItemFromJSONTyped", function() { return _PutItemsRequestItem__WEBPACK_IMPORTED_MODULE_114__["PutItemsRequestItemFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutItemsRequestItemToJSON", function() { return _PutItemsRequestItem__WEBPACK_IMPORTED_MODULE_114__["PutItemsRequestItemToJSON"]; });\n\n/* harmony import */ var _PutMeRequest__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./PutMeRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutMeRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutMeRequestFromJSON", function() { return _PutMeRequest__WEBPACK_IMPORTED_MODULE_115__["PutMeRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutMeRequestFromJSONTyped", function() { return _PutMeRequest__WEBPACK_IMPORTED_MODULE_115__["PutMeRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutMeRequestToJSON", function() { return _PutMeRequest__WEBPACK_IMPORTED_MODULE_115__["PutMeRequestToJSON"]; });\n\n/* harmony import */ var _PutMeRequestUser__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./PutMeRequestUser */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutMeRequestUser.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutMeRequestUserFromJSON", function() { return _PutMeRequestUser__WEBPACK_IMPORTED_MODULE_116__["PutMeRequestUserFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutMeRequestUserFromJSONTyped", function() { return _PutMeRequestUser__WEBPACK_IMPORTED_MODULE_116__["PutMeRequestUserFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutMeRequestUserToJSON", function() { return _PutMeRequestUser__WEBPACK_IMPORTED_MODULE_116__["PutMeRequestUserToJSON"]; });\n\n/* harmony import */ var _PutSharesRequestShare__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./PutSharesRequestShare */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutSharesRequestShare.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutSharesRequestShareFromJSON", function() { return _PutSharesRequestShare__WEBPACK_IMPORTED_MODULE_117__["PutSharesRequestShareFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutSharesRequestShareFromJSONTyped", function() { return _PutSharesRequestShare__WEBPACK_IMPORTED_MODULE_117__["PutSharesRequestShareFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutSharesRequestShareToJSON", function() { return _PutSharesRequestShare__WEBPACK_IMPORTED_MODULE_117__["PutSharesRequestShareToJSON"]; });\n\n/* harmony import */ var _PutSlotsRequest__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./PutSlotsRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutSlotsRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutSlotsRequestFromJSON", function() { return _PutSlotsRequest__WEBPACK_IMPORTED_MODULE_118__["PutSlotsRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutSlotsRequestFromJSONTyped", function() { return _PutSlotsRequest__WEBPACK_IMPORTED_MODULE_118__["PutSlotsRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutSlotsRequestToJSON", function() { return _PutSlotsRequest__WEBPACK_IMPORTED_MODULE_118__["PutSlotsRequestToJSON"]; });\n\n/* harmony import */ var _PutTasksRequest__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./PutTasksRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/PutTasksRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutTasksRequestFromJSON", function() { return _PutTasksRequest__WEBPACK_IMPORTED_MODULE_119__["PutTasksRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutTasksRequestFromJSONTyped", function() { return _PutTasksRequest__WEBPACK_IMPORTED_MODULE_119__["PutTasksRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PutTasksRequestToJSON", function() { return _PutTasksRequest__WEBPACK_IMPORTED_MODULE_119__["PutTasksRequestToJSON"]; });\n\n/* harmony import */ var _RejectOrganizationServicebyIdResponse__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./RejectOrganizationServicebyIdResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/RejectOrganizationServicebyIdResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RejectOrganizationServicebyIdResponseFromJSON", function() { return _RejectOrganizationServicebyIdResponse__WEBPACK_IMPORTED_MODULE_120__["RejectOrganizationServicebyIdResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RejectOrganizationServicebyIdResponseFromJSONTyped", function() { return _RejectOrganizationServicebyIdResponse__WEBPACK_IMPORTED_MODULE_120__["RejectOrganizationServicebyIdResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RejectOrganizationServicebyIdResponseToJSON", function() { return _RejectOrganizationServicebyIdResponse__WEBPACK_IMPORTED_MODULE_120__["RejectOrganizationServicebyIdResponseToJSON"]; });\n\n/* harmony import */ var _Service__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./Service */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Service.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceFromJSON", function() { return _Service__WEBPACK_IMPORTED_MODULE_121__["ServiceFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceFromJSONTyped", function() { return _Service__WEBPACK_IMPORTED_MODULE_121__["ServiceFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceToJSON", function() { return _Service__WEBPACK_IMPORTED_MODULE_121__["ServiceToJSON"]; });\n\n/* harmony import */ var _ServiceUser__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./ServiceUser */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ServiceUser.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceUserFromJSON", function() { return _ServiceUser__WEBPACK_IMPORTED_MODULE_122__["ServiceUserFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceUserFromJSONTyped", function() { return _ServiceUser__WEBPACK_IMPORTED_MODULE_122__["ServiceUserFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceUserToJSON", function() { return _ServiceUser__WEBPACK_IMPORTED_MODULE_122__["ServiceUserToJSON"]; });\n\n/* harmony import */ var _ServiceUserResponse__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./ServiceUserResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ServiceUserResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceUserResponseFromJSON", function() { return _ServiceUserResponse__WEBPACK_IMPORTED_MODULE_123__["ServiceUserResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceUserResponseFromJSONTyped", function() { return _ServiceUserResponse__WEBPACK_IMPORTED_MODULE_123__["ServiceUserResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServiceUserResponseToJSON", function() { return _ServiceUserResponse__WEBPACK_IMPORTED_MODULE_123__["ServiceUserResponseToJSON"]; });\n\n/* harmony import */ var _SessionResumeResponse__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./SessionResumeResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/SessionResumeResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionResumeResponseFromJSON", function() { return _SessionResumeResponse__WEBPACK_IMPORTED_MODULE_124__["SessionResumeResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionResumeResponseFromJSONTyped", function() { return _SessionResumeResponse__WEBPACK_IMPORTED_MODULE_124__["SessionResumeResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionResumeResponseToJSON", function() { return _SessionResumeResponse__WEBPACK_IMPORTED_MODULE_124__["SessionResumeResponseToJSON"]; });\n\n/* harmony import */ var _Share__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./Share */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Share.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ShareFromJSON", function() { return _Share__WEBPACK_IMPORTED_MODULE_125__["ShareFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ShareFromJSONTyped", function() { return _Share__WEBPACK_IMPORTED_MODULE_125__["ShareFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ShareToJSON", function() { return _Share__WEBPACK_IMPORTED_MODULE_125__["ShareToJSON"]; });\n\n/* harmony import */ var _ShareWithItemData__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./ShareWithItemData */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ShareWithItemData.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ShareWithItemDataFromJSON", function() { return _ShareWithItemData__WEBPACK_IMPORTED_MODULE_126__["ShareWithItemDataFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ShareWithItemDataFromJSONTyped", function() { return _ShareWithItemData__WEBPACK_IMPORTED_MODULE_126__["ShareWithItemDataFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ShareWithItemDataToJSON", function() { return _ShareWithItemData__WEBPACK_IMPORTED_MODULE_126__["ShareWithItemDataToJSON"]; });\n\n/* harmony import */ var _SharesCreateResponse__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./SharesCreateResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/SharesCreateResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesCreateResponseFromJSON", function() { return _SharesCreateResponse__WEBPACK_IMPORTED_MODULE_127__["SharesCreateResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesCreateResponseFromJSONTyped", function() { return _SharesCreateResponse__WEBPACK_IMPORTED_MODULE_127__["SharesCreateResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesCreateResponseToJSON", function() { return _SharesCreateResponse__WEBPACK_IMPORTED_MODULE_127__["SharesCreateResponseToJSON"]; });\n\n/* harmony import */ var _SharesIncomingResponse__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./SharesIncomingResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/SharesIncomingResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesIncomingResponseFromJSON", function() { return _SharesIncomingResponse__WEBPACK_IMPORTED_MODULE_128__["SharesIncomingResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesIncomingResponseFromJSONTyped", function() { return _SharesIncomingResponse__WEBPACK_IMPORTED_MODULE_128__["SharesIncomingResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesIncomingResponseToJSON", function() { return _SharesIncomingResponse__WEBPACK_IMPORTED_MODULE_128__["SharesIncomingResponseToJSON"]; });\n\n/* harmony import */ var _SharesOutgoingResponse__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./SharesOutgoingResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/SharesOutgoingResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesOutgoingResponseFromJSON", function() { return _SharesOutgoingResponse__WEBPACK_IMPORTED_MODULE_129__["SharesOutgoingResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesOutgoingResponseFromJSONTyped", function() { return _SharesOutgoingResponse__WEBPACK_IMPORTED_MODULE_129__["SharesOutgoingResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharesOutgoingResponseToJSON", function() { return _SharesOutgoingResponse__WEBPACK_IMPORTED_MODULE_129__["SharesOutgoingResponseToJSON"]; });\n\n/* harmony import */ var _Slot__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./Slot */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Slot.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlotFromJSON", function() { return _Slot__WEBPACK_IMPORTED_MODULE_130__["SlotFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlotFromJSONTyped", function() { return _Slot__WEBPACK_IMPORTED_MODULE_130__["SlotFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlotToJSON", function() { return _Slot__WEBPACK_IMPORTED_MODULE_130__["SlotToJSON"]; });\n\n/* harmony import */ var _SlotResponse__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./SlotResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/SlotResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlotResponseFromJSON", function() { return _SlotResponse__WEBPACK_IMPORTED_MODULE_131__["SlotResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlotResponseFromJSONTyped", function() { return _SlotResponse__WEBPACK_IMPORTED_MODULE_131__["SlotResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlotResponseToJSON", function() { return _SlotResponse__WEBPACK_IMPORTED_MODULE_131__["SlotResponseToJSON"]; });\n\n/* harmony import */ var _TheOtherConnectedUserData__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./TheOtherConnectedUserData */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/TheOtherConnectedUserData.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TheOtherConnectedUserDataFromJSON", function() { return _TheOtherConnectedUserData__WEBPACK_IMPORTED_MODULE_132__["TheOtherConnectedUserDataFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TheOtherConnectedUserDataFromJSONTyped", function() { return _TheOtherConnectedUserData__WEBPACK_IMPORTED_MODULE_132__["TheOtherConnectedUserDataFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TheOtherConnectedUserDataToJSON", function() { return _TheOtherConnectedUserData__WEBPACK_IMPORTED_MODULE_132__["TheOtherConnectedUserDataToJSON"]; });\n\n/* harmony import */ var _Thumbnail__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./Thumbnail */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/Thumbnail.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ThumbnailFromJSON", function() { return _Thumbnail__WEBPACK_IMPORTED_MODULE_133__["ThumbnailFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ThumbnailFromJSONTyped", function() { return _Thumbnail__WEBPACK_IMPORTED_MODULE_133__["ThumbnailFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ThumbnailToJSON", function() { return _Thumbnail__WEBPACK_IMPORTED_MODULE_133__["ThumbnailToJSON"]; });\n\n/* harmony import */ var _ThumbnailResponse__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./ThumbnailResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ThumbnailResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ThumbnailResponseFromJSON", function() { return _ThumbnailResponse__WEBPACK_IMPORTED_MODULE_134__["ThumbnailResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ThumbnailResponseFromJSONTyped", function() { return _ThumbnailResponse__WEBPACK_IMPORTED_MODULE_134__["ThumbnailResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ThumbnailResponseToJSON", function() { return _ThumbnailResponse__WEBPACK_IMPORTED_MODULE_134__["ThumbnailResponseToJSON"]; });\n\n/* harmony import */ var _UpdateDelegationRole__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./UpdateDelegationRole */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UpdateDelegationRole.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateDelegationRoleFromJSON", function() { return _UpdateDelegationRole__WEBPACK_IMPORTED_MODULE_135__["UpdateDelegationRoleFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateDelegationRoleFromJSONTyped", function() { return _UpdateDelegationRole__WEBPACK_IMPORTED_MODULE_135__["UpdateDelegationRoleFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateDelegationRoleToJSON", function() { return _UpdateDelegationRole__WEBPACK_IMPORTED_MODULE_135__["UpdateDelegationRoleToJSON"]; });\n\n/* harmony import */ var _UpdateOrganizationMemberRoleRequest__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./UpdateOrganizationMemberRoleRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UpdateOrganizationMemberRoleRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationMemberRoleRequestFromJSON", function() { return _UpdateOrganizationMemberRoleRequest__WEBPACK_IMPORTED_MODULE_136__["UpdateOrganizationMemberRoleRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationMemberRoleRequestFromJSONTyped", function() { return _UpdateOrganizationMemberRoleRequest__WEBPACK_IMPORTED_MODULE_136__["UpdateOrganizationMemberRoleRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationMemberRoleRequestToJSON", function() { return _UpdateOrganizationMemberRoleRequest__WEBPACK_IMPORTED_MODULE_136__["UpdateOrganizationMemberRoleRequestToJSON"]; });\n\n/* harmony import */ var _UpdateOrganizationRequest__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./UpdateOrganizationRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UpdateOrganizationRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationRequestFromJSON", function() { return _UpdateOrganizationRequest__WEBPACK_IMPORTED_MODULE_137__["UpdateOrganizationRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationRequestFromJSONTyped", function() { return _UpdateOrganizationRequest__WEBPACK_IMPORTED_MODULE_137__["UpdateOrganizationRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationRequestToJSON", function() { return _UpdateOrganizationRequest__WEBPACK_IMPORTED_MODULE_137__["UpdateOrganizationRequestToJSON"]; });\n\n/* harmony import */ var _UpdateOrganizationResponse__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./UpdateOrganizationResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UpdateOrganizationResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationResponseFromJSON", function() { return _UpdateOrganizationResponse__WEBPACK_IMPORTED_MODULE_138__["UpdateOrganizationResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationResponseFromJSONTyped", function() { return _UpdateOrganizationResponse__WEBPACK_IMPORTED_MODULE_138__["UpdateOrganizationResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationResponseToJSON", function() { return _UpdateOrganizationResponse__WEBPACK_IMPORTED_MODULE_138__["UpdateOrganizationResponseToJSON"]; });\n\n/* harmony import */ var _UpdateOrganizationServiceRequest__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./UpdateOrganizationServiceRequest */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UpdateOrganizationServiceRequest.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationServiceRequestFromJSON", function() { return _UpdateOrganizationServiceRequest__WEBPACK_IMPORTED_MODULE_139__["UpdateOrganizationServiceRequestFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationServiceRequestFromJSONTyped", function() { return _UpdateOrganizationServiceRequest__WEBPACK_IMPORTED_MODULE_139__["UpdateOrganizationServiceRequestFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UpdateOrganizationServiceRequestToJSON", function() { return _UpdateOrganizationServiceRequest__WEBPACK_IMPORTED_MODULE_139__["UpdateOrganizationServiceRequestToJSON"]; });\n\n/* harmony import */ var _User__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./User */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/User.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserFromJSON", function() { return _User__WEBPACK_IMPORTED_MODULE_140__["UserFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserFromJSONTyped", function() { return _User__WEBPACK_IMPORTED_MODULE_140__["UserFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserToJSON", function() { return _User__WEBPACK_IMPORTED_MODULE_140__["UserToJSON"]; });\n\n/* harmony import */ var _UserAccessToken__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./UserAccessToken */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UserAccessToken.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserAccessTokenFromJSON", function() { return _UserAccessToken__WEBPACK_IMPORTED_MODULE_141__["UserAccessTokenFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserAccessTokenFromJSONTyped", function() { return _UserAccessToken__WEBPACK_IMPORTED_MODULE_141__["UserAccessTokenFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserAccessTokenToJSON", function() { return _UserAccessToken__WEBPACK_IMPORTED_MODULE_141__["UserAccessTokenToJSON"]; });\n\n/* harmony import */ var _UserQueuedForDeletion__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ./UserQueuedForDeletion */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/UserQueuedForDeletion.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserQueuedForDeletionFromJSON", function() { return _UserQueuedForDeletion__WEBPACK_IMPORTED_MODULE_142__["UserQueuedForDeletionFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserQueuedForDeletionFromJSONTyped", function() { return _UserQueuedForDeletion__WEBPACK_IMPORTED_MODULE_142__["UserQueuedForDeletionFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserQueuedForDeletionToJSON", function() { return _UserQueuedForDeletion__WEBPACK_IMPORTED_MODULE_142__["UserQueuedForDeletionToJSON"]; });\n\n/* harmony import */ var _ValidateOrganizationServicebyIdResponse__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ./ValidateOrganizationServicebyIdResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/ValidateOrganizationServicebyIdResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValidateOrganizationServicebyIdResponseFromJSON", function() { return _ValidateOrganizationServicebyIdResponse__WEBPACK_IMPORTED_MODULE_143__["ValidateOrganizationServicebyIdResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValidateOrganizationServicebyIdResponseFromJSONTyped", function() { return _ValidateOrganizationServicebyIdResponse__WEBPACK_IMPORTED_MODULE_143__["ValidateOrganizationServicebyIdResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValidateOrganizationServicebyIdResponseToJSON", function() { return _ValidateOrganizationServicebyIdResponse__WEBPACK_IMPORTED_MODULE_143__["ValidateOrganizationServicebyIdResponseToJSON"]; });\n\n/* harmony import */ var _VersionResponse__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ./VersionResponse */ "../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/VersionResponse.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VersionResponseFromJSON", function() { return _VersionResponse__WEBPACK_IMPORTED_MODULE_144__["VersionResponseFromJSON"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VersionResponseFromJSONTyped", function() { return _VersionResponse__WEBPACK_IMPORTED_MODULE_144__["VersionResponseFromJSONTyped"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VersionResponseToJSON", function() { return _VersionResponse__WEBPACK_IMPORTED_MODULE_144__["VersionResponseToJSON"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/models/index.js?')},"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BASE_PATH", function() { return BASE_PATH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseAPI", function() { return BaseAPI; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequiredError", function() { return RequiredError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COLLECTION_FORMATS", function() { return COLLECTION_FORMATS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Configuration", function() { return Configuration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exists", function() { return exists; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "querystring", function() { return querystring; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapValues", function() { return mapValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canConsumeForm", function() { return canConsumeForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JSONApiResponse", function() { return JSONApiResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VoidApiResponse", function() { return VoidApiResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BlobApiResponse", function() { return BlobApiResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextApiResponse", function() { return TextApiResponse; });\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Vault\n * Storage for encrypted user data. User data cannot be decrypted and read by Meeco. To access the Vault, the user must have a user and all associated keys and secrets. The keys and secrets are accesed through the user of the Keystore API. In the current implementation the Vault functionality is implemented by the meeco-vault\n *\n * The version of the OpenAPI document: 19.0.2\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst BASE_PATH = "http://localhost:3000".replace(/\\/+$/, "");\nconst isBlob = (value) => typeof Blob !== \'undefined\' && value instanceof Blob;\n/**\n * This is the base class for all generated API classes.\n */\nclass BaseAPI {\n    constructor(configuration = new Configuration()) {\n        this.configuration = configuration;\n        this.fetchApi = (url, init) => __awaiter(this, void 0, void 0, function* () {\n            let fetchParams = { url, init };\n            for (const middleware of this.middleware) {\n                if (middleware.pre) {\n                    fetchParams = (yield middleware.pre(Object.assign({ fetch: this.fetchApi }, fetchParams))) || fetchParams;\n                }\n            }\n            let response = yield this.configuration.fetchApi(fetchParams.url, fetchParams.init);\n            for (const middleware of this.middleware) {\n                if (middleware.post) {\n                    response = (yield middleware.post({\n                        fetch: this.fetchApi,\n                        url,\n                        init,\n                        response: response.clone(),\n                    })) || response;\n                }\n            }\n            return response;\n        });\n        this.middleware = configuration.middleware;\n    }\n    withMiddleware(...middlewares) {\n        const next = this.clone();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n    withPreMiddleware(...preMiddlewares) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware(...middlewares);\n    }\n    withPostMiddleware(...postMiddlewares) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware(...middlewares);\n    }\n    request(context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { url, init } = this.createFetchParams(context);\n            const response = yield this.fetchApi(url, init);\n            if (response.status >= 200 && response.status < 300) {\n                return response;\n            }\n            throw response;\n        });\n    }\n    createFetchParams(context) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a "?" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += \'?\' + this.configuration.queryParamsStringify(context.query);\n        }\n        const body = ((typeof FormData !== "undefined" && context.body instanceof FormData) || context.body instanceof URLSearchParams || isBlob(context.body))\n            ? context.body\n            : JSON.stringify(context.body);\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        const init = {\n            method: context.method,\n            headers: headers,\n            body,\n            credentials: this.configuration.credentials\n        };\n        return { url, init };\n    }\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    clone() {\n        const constructor = this.constructor;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n}\n;\nclass RequiredError extends Error {\n    constructor(field, msg) {\n        super(msg);\n        this.field = field;\n        this.name = "RequiredError";\n    }\n}\nconst COLLECTION_FORMATS = {\n    csv: ",",\n    ssv: " ",\n    tsv: "\\t",\n    pipes: "|",\n};\nclass Configuration {\n    constructor(configuration = {}) {\n        this.configuration = configuration;\n    }\n    get basePath() {\n        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;\n    }\n    get fetchApi() {\n        return this.configuration.fetchApi || window.fetch.bind(window);\n    }\n    get middleware() {\n        return this.configuration.middleware || [];\n    }\n    get queryParamsStringify() {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n    get username() {\n        return this.configuration.username;\n    }\n    get password() {\n        return this.configuration.password;\n    }\n    get apiKey() {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === \'function\' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n    get accessToken() {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === \'function\' ? accessToken : () => accessToken;\n        }\n        return undefined;\n    }\n    get headers() {\n        return this.configuration.headers;\n    }\n    get credentials() {\n        return this.configuration.credentials;\n    }\n}\nfunction exists(json, key) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\nfunction querystring(params, prefix = \'\') {\n    return Object.keys(params)\n        .map((key) => {\n        const fullKey = prefix + (prefix.length ? `[${key}]` : key);\n        const value = params[key];\n        if (value instanceof Array) {\n            const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n                .join(`&${encodeURIComponent(fullKey)}=`);\n            return `${encodeURIComponent(fullKey)}=${multiValue}`;\n        }\n        if (value instanceof Object) {\n            return querystring(value, fullKey);\n        }\n        return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n    })\n        .filter(part => part.length > 0)\n        .join(\'&\');\n}\nfunction mapValues(data, fn) {\n    return Object.keys(data).reduce((acc, key) => (Object.assign({}, acc, { [key]: fn(data[key]) })), {});\n}\nfunction canConsumeForm(consumes) {\n    for (const consume of consumes) {\n        if (\'multipart/form-data\' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\nclass JSONApiResponse {\n    constructor(raw, transformer = (jsonValue) => jsonValue) {\n        this.raw = raw;\n        this.transformer = transformer;\n    }\n    value() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.transformer(yield this.raw.json());\n        });\n    }\n}\nclass VoidApiResponse {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    value() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return undefined;\n        });\n    }\n}\nclass BlobApiResponse {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    value() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.raw.blob();\n        });\n    }\n    ;\n}\nclass TextApiResponse {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    value() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.raw.text();\n        });\n    }\n    ;\n}\n\n\n//# sourceURL=webpack:///../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/runtime.js?')},"../sdk/src/index.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports._cryppoService = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\n/**\n * The publicly exposed API\n */\ntslib_1.__exportStar(__webpack_require__(/*! ./models/auth-data */ "../sdk/src/models/auth-data.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./models/symmetric-key */ "../sdk/src/models/symmetric-key.ts"), exports);\nvar decrypted_keypair_1 = __webpack_require__(/*! ./models/decrypted-keypair */ "../sdk/src/models/decrypted-keypair.ts");\nObject.defineProperty(exports, "DecryptedKeypair", { enumerable: true, get: function () { return decrypted_keypair_1.default; } });\nvar rsa_private_key_1 = __webpack_require__(/*! ./models/rsa-private-key */ "../sdk/src/models/rsa-private-key.ts");\nObject.defineProperty(exports, "RSAPrivateKey", { enumerable: true, get: function () { return rsa_private_key_1.default; } });\nvar rsa_public_key_1 = __webpack_require__(/*! ./models/rsa-public-key */ "../sdk/src/models/rsa-public-key.ts");\nObject.defineProperty(exports, "RSAPublicKey", { enumerable: true, get: function () { return rsa_public_key_1.default; } });\ntslib_1.__exportStar(__webpack_require__(/*! ./models/environment */ "../sdk/src/models/environment.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./models/file-attachment-data */ "../sdk/src/models/file-attachment-data.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./models/item-change */ "../sdk/src/models/item-change.ts"), exports);\nvar item_map_1 = __webpack_require__(/*! ./models/item-map */ "../sdk/src/models/item-map.ts");\nObject.defineProperty(exports, "ItemMap", { enumerable: true, get: function () { return item_map_1.default; } });\ntslib_1.__exportStar(__webpack_require__(/*! ./models/new-item */ "../sdk/src/models/new-item.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./models/item-update */ "../sdk/src/models/item-update.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./models/decrypted-item */ "../sdk/src/models/decrypted-item.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./models/slot-types */ "../sdk/src/models/slot-types.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./models/sdk-template */ "../sdk/src/models/sdk-template.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./models/service-error */ "../sdk/src/models/service-error.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./models/srp-session */ "../sdk/src/models/srp-session.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./models/template-data */ "../sdk/src/models/template-data.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./services/client-task-queue-service */ "../sdk/src/services/client-task-queue-service.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./services/connection-service */ "../sdk/src/services/connection-service.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./services/invitation-service */ "../sdk/src/services/invitation-service.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./services/delegation-service */ "../sdk/src/services/delegation-service.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./services/item-service */ "../sdk/src/services/item-service.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./services/organization-members-service */ "../sdk/src/services/organization-members-service.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./services/organization-services-service */ "../sdk/src/services/organization-services-service.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./services/organization-service */ "../sdk/src/services/organization-service.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./services/service */ "../sdk/src/services/service.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./services/share-service */ "../sdk/src/services/share-service.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./services/template-service */ "../sdk/src/services/template-service.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./services/user-service */ "../sdk/src/services/user-service.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./util/api-factory */ "../sdk/src/util/api-factory.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./util/find-connection-between */ "../sdk/src/util/find-connection-between.ts"), exports);\nvar secrets_1 = __webpack_require__(/*! ./util/secrets */ "../sdk/src/util/secrets.ts");\nObject.defineProperty(exports, "Secrets", { enumerable: true, get: function () { return secrets_1.default; } });\ntslib_1.__exportStar(__webpack_require__(/*! ./util/paged */ "../sdk/src/util/paged.ts"), exports);\nvar slot_helpers_1 = __webpack_require__(/*! ./util/slot-helpers */ "../sdk/src/util/slot-helpers.ts");\nObject.defineProperty(exports, "SlotHelpers", { enumerable: true, get: function () { return slot_helpers_1.default; } });\ntslib_1.__exportStar(__webpack_require__(/*! ./util/transformers */ "../sdk/src/util/transformers.ts"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./util/value-verification */ "../sdk/src/util/value-verification.ts"), exports);\nconst cryppo_service_1 = tslib_1.__importDefault(__webpack_require__(/*! ./services/cryppo-service */ "../sdk/src/services/cryppo-service.ts"));\nexports._cryppoService = cryppo_service_1.default;\n\n\n//# sourceURL=webpack:///../sdk/src/index.ts?')},"../sdk/src/models/auth-data.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.AuthData = void 0;\n/**\n * `AuthData` is a container for all the data required to perform actions on behalf of a Meeco User.\n *\n * *Note:* Actual `AuthData` passed to method calls doesn\'t need to be an instance of this class - it can just conform to the interface.\n */\nclass AuthData {\n    constructor(config) {\n        this.data_encryption_key = config.data_encryption_key;\n        this.key_encryption_key = config.key_encryption_key;\n        this.keystore_access_token = config.keystore_access_token;\n        this.passphrase_derived_key = config.passphrase_derived_key;\n        this.secret = config.secret;\n        this.vault_access_token = config.vault_access_token;\n    }\n}\nexports.AuthData = AuthData;\n\n\n//# sourceURL=webpack:///../sdk/src/models/auth-data.ts?')},"../sdk/src/models/decrypted-item.ts":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(global) {\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.DecryptedItem = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst cryppo_service_1 = tslib_1.__importDefault(__webpack_require__(/*! ../services/cryppo-service */ "../sdk/src/services/cryppo-service.ts"));\nconst slot_helpers_1 = tslib_1.__importDefault(__webpack_require__(/*! ../util/slot-helpers */ "../sdk/src/util/slot-helpers.ts"));\nconst item_map_1 = tslib_1.__importDefault(__webpack_require__(/*! ./item-map */ "../sdk/src/models/item-map.ts"));\nconst item_update_1 = __webpack_require__(/*! ./item-update */ "../sdk/src/models/item-update.ts");\n/**\n * Wraps Items returned from the API that have been decrypted, usually by {@link ItemService}.\n * If `associations`, `classification_nodes` and `attachements`are provided at construction, they are stored.\n *\n * Note that {@link classification_nodes} is not the same as `ItemResponse.classification_nodes`, it is just the\n * classifications that apply to the Item!\n *\n * `DecryptedItem` is immutable, you should use {@link toItemUpdate} to stage modifications.\n */\nclass DecryptedItem extends item_map_1.default {\n    constructor(item, slots = [], extra = {}) {\n        super(slots.filter(s => item.slot_ids.some(id => id === s.id)));\n        this.item = item;\n        // simpler interface\n        this.id = item.id;\n        this.own = item.own;\n        this.name = item.name;\n        this.label = item.label;\n        this.description = item.description;\n        this.original_id = item.original_id || undefined;\n        this.owner_id = item.owner_id || undefined;\n        this.share_id = item.share_id || undefined;\n        this.allClassificationNodes = extra.classification_nodes || [];\n        this.classification_nodes =\n            this.allClassificationNodes.filter(x => item.classification_node_ids.some(y => y === x.id)) ||\n                [];\n        this.attachments = extra.attachments || [];\n        // TODO do these need to be filtered by id?\n        this.thumbnails = extra.thumbnails || [];\n        this.associations = extra.associations || [];\n        this.associations_to = extra.associations_to || [];\n    }\n    static async fromAPI(key, response) {\n        const slots = await Promise.all(response.slots.map(s => slot_helpers_1.default.decryptSlot(key, s)));\n        return new DecryptedItem(response.item, slots, response);\n    }\n    /** True if you are the original creator of this Item */\n    isOwned() {\n        return this.own;\n    }\n    /** True if this Item is shared with you */\n    isReceived() {\n        return !this.isOwned() && !!this.share_id;\n    }\n    getSlotAttachment(slot) {\n        if (slot.attachment_id) {\n            return this.attachments.find(x => x.id === slot.attachment_id);\n        }\n        else {\n            return undefined;\n        }\n    }\n    getSlotClassifications(slot) {\n        return this.allClassificationNodes.filter(x => slot.classification_node_ids.some(y => y === x.id));\n    }\n    /**\n     * Stage updated values in an ItemUpdate.\n     * This has no effect on the values stored in this DecryptedItem.\n     */\n    toItemUpdate(update) {\n        return new item_update_1.ItemUpdate(this.id, update);\n    }\n    /**\n     * For updating shared data (i.e. `PUT items/id/shares`).\n     * The Item\'s slots are encrypted with the given DEK and value verification hashes are appended.\n     * You must own the Item to update it like this.\n     */\n    async toShareSlots(credentials, shareId) {\n        if (!this.own) {\n            throw new Error(\'cannot share non-owned Item\');\n        }\n        return Promise.all(this.slots.map(async (slot) => {\n            const withHash = await slot_helpers_1.default.addHashAndKey(slot);\n            const encrypted = await slot_helpers_1.default.encryptSlot(credentials, withHash);\n            if (slot.value) {\n                return {\n                    share_id: shareId,\n                    slot_id: slot.id,\n                    encrypted_value: encrypted.encrypted_value,\n                    encrypted_value_verification_key: encrypted.encrypted_value_verification_key,\n                    value_verification_hash: encrypted.value_verification_hash || undefined,\n                };\n            }\n            else {\n                return {\n                    share_id: shareId,\n                    slot_id: slot.id,\n                };\n            }\n        }));\n    }\n    // for POST /items/id/share\n    // note that for PUT /items/id/share these must be zipped with share_ids\n    // note that POST /items/id/encrypt takes slots with just id, encrypted_value\n    async toEncryptedSlotValues(credentials) {\n        return Promise.all(this.slots.map(async (slot) => slot_helpers_1.default.toEncryptedSlotValue(credentials, slot)));\n    }\n}\nexports.DecryptedItem = DecryptedItem;\nDecryptedItem.cryppo = global.cryppo || cryppo_service_1.default;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/webpack/buildin/global.js */ "../../node_modules/webpack/buildin/global.js")))\n\n//# sourceURL=webpack:///../sdk/src/models/decrypted-item.ts?')},"../sdk/src/models/decrypted-keypair.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst cryppo_service_1 = tslib_1.__importDefault(__webpack_require__(/*! ../services/cryppo-service */ "../sdk/src/services/cryppo-service.ts"));\nconst rsa_private_key_1 = tslib_1.__importDefault(__webpack_require__(/*! ./rsa-private-key */ "../sdk/src/models/rsa-private-key.ts"));\nconst rsa_public_key_1 = tslib_1.__importDefault(__webpack_require__(/*! ./rsa-public-key */ "../sdk/src/models/rsa-public-key.ts"));\n/**\n * An asymmetric encryption (public/private) key pair, with the private key decrypted.\n *\n * Encryption and decryption methods are defined on the classes {@link RSAPublickey} and {@link RSAPrivatekey} which may\n * be used if only one key is available.\n */\nclass DecryptedKeypair {\n    /**\n     * @param publicKey PEM formatted public key string.\n     * @param privateKey PEM formatted private key string.\n     * @param externalIds An optional array of identifier strings from the Meeco Keystore.\n     * @param keystoreId An optional GUID for the Keypair in the Keystore. Typically only set if constructed with {@link fromAPI}.\n     */\n    constructor(publicKey, privateKey, externalIds = [], keystoreId) {\n        this.externalIds = externalIds;\n        this.keystoreId = keystoreId;\n        this.publicKey = new rsa_public_key_1.default(publicKey);\n        this.privateKey = new rsa_private_key_1.default(privateKey);\n    }\n    /** A new random keypair. */\n    static async generate(keyBits = 4096, externalIds = []) {\n        const { privateKey, publicKey } = await cryppo_service_1.default.generateRSAKeyPair(keyBits);\n        return new DecryptedKeypair(publicKey, privateKey, externalIds);\n    }\n    /**\n     * Decrypts a keypair from the Meeco Keystore.\n     * @param keyEncryptionKey Key used to encrypt the private key.\n     * @param keypair From the API response.\n     */\n    static async fromAPI(keyEncryptionKey, keypair) {\n        const { id, public_key, encrypted_serialized_key, external_identifiers } = keypair;\n        // decrypt serialized private key, check correct\n        const privateKey = await keyEncryptionKey.decryptKey(encrypted_serialized_key);\n        return new DecryptedKeypair(public_key, privateKey.key, external_identifiers, id);\n    }\n}\nexports.default = DecryptedKeypair;\n\n\n//# sourceURL=webpack:///../sdk/src/models/decrypted-keypair.ts?')},"../sdk/src/models/environment.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.Environment = void 0;\n/**\n * Environment configuration - used to point to the desired API host (e.g sandbox or production) and configure\n * your subscription keys for API access.\n */\nclass Environment {\n    constructor(config) {\n        this.vault = config.vault;\n        this.keystore = config.keystore;\n    }\n}\nexports.Environment = Environment;\n\n\n//# sourceURL=webpack:///../sdk/src/models/environment.ts?')},"../sdk/src/models/file-attachment-data.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.FileAttachmentData = void 0;\nclass FileAttachmentData {\n    constructor(config) {\n        this.itemId = config.itemId;\n        this.label = config.label;\n        this.file = config.file;\n        this.fileName = config.fileName;\n        this.fileType = config.fileType;\n    }\n}\nexports.FileAttachmentData = FileAttachmentData;\n\n\n//# sourceURL=webpack:///../sdk/src/models/file-attachment-data.ts?')},"../sdk/src/models/item-change.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst item_map_1 = tslib_1.__importDefault(__webpack_require__(/*! ./item-map */ "../sdk/src/models/item-map.ts"));\n/**\n * Represents a change to the Item that hasn\'t been posted to the API.\n * It can be modified, and contains only partial information about the Item.\n */\nclass ItemChange extends item_map_1.default {\n    constructor(slots = [], classification_nodes = []) {\n        super(slots);\n        this.slots = slots;\n        this.classification_nodes = classification_nodes;\n    }\n    /**\n     * Existing values in `this.slots` are overwritten if present in `assignment`.\n     * `assignment` names that do not correspond to existing names in `this.slots` are created.\n     * @param assignment A map from Slot.name to Slot.value.\n     */\n    assignValues(assignment) {\n        const slotNameMap = this.slotsByName;\n        Object.entries(assignment).forEach(([name, value]) => {\n            if (name in slotNameMap) {\n                slotNameMap[name].value = value;\n            }\n            else {\n                this.slots.push({ name, value });\n            }\n        });\n    }\n    /**\n     * Set the Slot values in this change-set to *exactly* the given values.\n     * Properties of existing Slots will be preserved.\n     * Any Slots not in `assignment` will be removed from the change-set.\n     */\n    set values(assignment) {\n        const slotNameMap = this.slotsByName;\n        const newSlots = Object.entries(assignment).map(([name, value]) => {\n            if (name in slotNameMap) {\n                const existingSlot = slotNameMap[name];\n                existingSlot.value = value;\n                return existingSlot;\n            }\n            else {\n                return { name, value };\n            }\n        });\n        this.slots = newSlots;\n    }\n    /**\n     * This just removes the Slot from the creation request. The Slot may still exist on the\n     * created Item if it is a Template slot.\n     */\n    removeSlot(spec) {\n        if (spec.name) {\n            this.slots = this.slots.filter(s => s[\'name\'] !== spec.name);\n        }\n        if (spec.label) {\n            this.slots = this.slots.filter(s => s[\'label\'] !== spec.label);\n        }\n    }\n}\nexports.default = ItemChange;\n\n\n//# sourceURL=webpack:///../sdk/src/models/item-change.ts?')},"../sdk/src/models/item-map.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.indexSlotsByName = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst slot_helpers_1 = tslib_1.__importDefault(__webpack_require__(/*! ../util/slot-helpers */ "../sdk/src/util/slot-helpers.ts"));\n/**\n * Index an array of Slot-like objects by their name (or label if name is missing).\n * @param transform Optionally transform the values in the resulting map. By default returns the Slot itself.\n */\nfunction indexSlotsByName(slots, transform) {\n    function getSlotName(slot) {\n        return slot.name || slot_helpers_1.default.nameFromLabel(slot.label);\n    }\n    const map = {};\n    slots.forEach(slot => {\n        map[getSlotName(slot)] = transform ? transform(slot) : slot;\n    });\n    return map;\n}\nexports.indexSlotsByName = indexSlotsByName;\n/**\n * This class adds the ability to represent an array of Slots (or Slot-like things) as\n * a map from names to Slots or values.\n * Where Slots are only given a label, then an appropriate name is computed.\n */\nclass ItemMap {\n    constructor(slots) {\n        this.slots = slots;\n    }\n    /**\n     * The Slots in this ItemMap keyed by their names.\n     */\n    get slotsByName() {\n        return indexSlotsByName(this.slots);\n    }\n    /**\n     * The values of Slots in this ItemMap keyed by names.\n     */\n    get values() {\n        return indexSlotsByName(this.slots, slot => slot[\'value\']);\n    }\n}\nexports.default = ItemMap;\n\n\n//# sourceURL=webpack:///../sdk/src/models/item-map.ts?')},"../sdk/src/models/item-update.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.ItemUpdate = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst slot_helpers_1 = tslib_1.__importDefault(__webpack_require__(/*! ../util/slot-helpers */ "../sdk/src/util/slot-helpers.ts"));\nconst transformers_1 = __webpack_require__(/*! ../util/transformers */ "../sdk/src/util/transformers.ts");\nconst item_change_1 = tslib_1.__importDefault(__webpack_require__(/*! ./item-change */ "../sdk/src/models/item-change.ts"));\nconst new_item_1 = __webpack_require__(/*! ./new-item */ "../sdk/src/models/new-item.ts");\n/** Construct an update for an existing Item given its id. */\nclass ItemUpdate extends item_change_1.default {\n    constructor(id, update) {\n        super(update.slots, update.classification_nodes);\n        this.id = id;\n        if (update.label === \'\') {\n            throw new Error(\'Cannot create Item with empty label\');\n        }\n        this.label = update.label;\n    }\n    static fromJSON(json) {\n        return new ItemUpdate(json.id, json);\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            label: this.label,\n            slots: this.slots,\n            classification_nodes: this.classification_nodes,\n        };\n    }\n    toNewItem(label, templateName) {\n        return new new_item_1.NewItem(label, templateName, this.slots);\n    }\n    // for PUT /items/id\n    // - should encrypt all values in slots attributes request\n    async toRequest(key) {\n        if (slot_helpers_1.default.findWithEncryptedValue(this.slots)) {\n            throw new Error(\'Slot`s existing value will be overwritten\');\n        }\n        // if (anyDuplicateSlotNames(this.slots)) {\n        //   throw new Error(\'Duplicate Slot names will be merged\');\n        // }\n        let slots_attributes;\n        if (this.slots.length > 0) {\n            slots_attributes = await Promise.all(this.slots.map(slot => slot_helpers_1.default.encryptSlot(key, slot)));\n        }\n        let classification_nodes_attributes;\n        if (this.classification_nodes.length > 0) {\n            classification_nodes_attributes = this.classification_nodes.map(transformers_1.toNestedClassificationNode);\n        }\n        return {\n            item: {\n                classification_nodes_attributes,\n                label: this.label,\n                slots_attributes,\n            },\n        };\n    }\n}\nexports.ItemUpdate = ItemUpdate;\n\n\n//# sourceURL=webpack:///../sdk/src/models/item-update.ts?')},"../sdk/src/models/new-item.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NewItem = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"../../node_modules/tslib/tslib.es6.js\");\nconst slot_helpers_1 = tslib_1.__importDefault(__webpack_require__(/*! ../util/slot-helpers */ \"../sdk/src/util/slot-helpers.ts\"));\nconst transformers_1 = __webpack_require__(/*! ../util/transformers */ \"../sdk/src/util/transformers.ts\");\nconst item_change_1 = tslib_1.__importDefault(__webpack_require__(/*! ./item-change */ \"../sdk/src/models/item-change.ts\"));\n/** An Item which does not exist in the API */\nclass NewItem extends item_change_1.default {\n    /**\n     * Required fields for creating a new Item.\n     * @param label Must be non-empty string\n     * @param template_name Must be non-empty string\n     */\n    constructor(label, template_name, slots = [], classification_nodes = []) {\n        super(slots, classification_nodes);\n        this.label = label;\n        this.template_name = template_name;\n        this.slots = slots;\n        this.classification_nodes = classification_nodes;\n        if (this.label === '') {\n            throw new Error('Cannot create Item with empty label');\n        }\n        if (this.template_name === '') {\n            throw new Error('Cannot create Item with empty template name');\n        }\n    }\n    static fromTemplate(template, templateSlots, label, extraSlots = []) {\n        return new NewItem(label, template.name, templateSlots.map(transformers_1.slotToNewSlot).concat(extraSlots));\n    }\n    /**\n     * constraints:\n     * - each slot must have either a non-empty label or name\n     * - slots may not have a 'value' field\n     * - encrypted_value is either a cryppo formatted string or is not present\n     * - slot type must be a valid type\n     * @param dek\n     */\n    async toRequest(dek) {\n        const badValue = slot_helpers_1.default.findWithEncryptedValue(this.slots);\n        if (badValue) {\n            throw new Error(`Slot ${badValue['name'] ||\n                badValue['label']} with existing encrypted_value with be overwritten`);\n        }\n        // TODO should enforce map integrity?\n        const slots_attributes = await Promise.all(this.slots.map(slot => slot_helpers_1.default.encryptSlot({ data_encryption_key: dek }, slot)));\n        return {\n            template_name: this.template_name,\n            item: {\n                label: this.label,\n                slots_attributes,\n            },\n        };\n    }\n}\nexports.NewItem = NewItem;\n\n\n//# sourceURL=webpack:///../sdk/src/models/new-item.ts?")},"../sdk/src/models/rsa-private-key.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst cryppo_service_1 = tslib_1.__importDefault(__webpack_require__(/*! ../services/cryppo-service */ "../sdk/src/services/cryppo-service.ts"));\nconst rsa_public_key_1 = __webpack_require__(/*! ./rsa-public-key */ "../sdk/src/models/rsa-public-key.ts");\nconst symmetric_key_1 = __webpack_require__(/*! ./symmetric-key */ "../sdk/src/models/symmetric-key.ts");\n/**\n * PEM formatted private key, e.g. \'-----BEGIN RSA PRIVATE KEY--- base64 encoded key...\'.\n * Unlike {@link SymmetricKey} it is never written in raw bytes.\n * The constructor will check the format of the key string.\n */\nclass RSAPrivateKey {\n    constructor(_value) {\n        this._value = _value;\n        if (!_value.startsWith(\'-----BEGIN RSA PRIVATE KEY\')) {\n            throw new Error(\'Not an RSA private key: \' + _value);\n        }\n    }\n    /** PEM formatted key string */\n    get key() {\n        return this._value;\n    }\n    /**\n     * Used for base64 encoded access tokens.\n     * @param serialized\n     */\n    async decryptToken(serialized) {\n        return cryppo_service_1.default.decryptSerializedWithPrivateKey({\n            privateKeyPem: this.key,\n            serialized,\n            scheme: rsa_public_key_1.ASYMMETRIC_KEY_STRATEGY,\n        });\n    }\n    async decryptKey(serialized) {\n        return this.decryptToken(serialized).then(result => symmetric_key_1.SymmetricKey.fromRaw(result));\n    }\n}\nexports.default = RSAPrivateKey;\n\n\n//# sourceURL=webpack:///../sdk/src/models/rsa-private-key.ts?')},"../sdk/src/models/rsa-public-key.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ASYMMETRIC_KEY_STRATEGY = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"../../node_modules/tslib/tslib.es6.js\");\nconst cryppo_service_1 = tslib_1.__importDefault(__webpack_require__(/*! ../services/cryppo-service */ \"../sdk/src/services/cryppo-service.ts\"));\nexports.ASYMMETRIC_KEY_STRATEGY = 'RSA-OAEP';\n/**\n * PEM formatted public key, e.g. '-----BEGIN PUBLIC KEY--- base64 encoded key...'.\n * Unlike {@link SymmetricKey} it is never written in raw bytes.\n */\nclass RSAPublicKey {\n    constructor(_value) {\n        this._value = _value;\n        if (!_value.startsWith('-----BEGIN PUBLIC KEY')) {\n            throw new Error('Not an RSA public key: ' + _value);\n        }\n    }\n    /** PEM formatted key string */\n    get key() {\n        return this._value;\n    }\n    /**\n     * Used for base64 encoded access tokens.\n     * @param serialized\n     */\n    async encryptToken(value) {\n        return cryppo_service_1.default\n            .encryptWithPublicKey({\n            publicKeyPem: this.key,\n            data: value,\n            scheme: exports.ASYMMETRIC_KEY_STRATEGY,\n        })\n            .then(r => r.serialized);\n    }\n    async encryptKey(key) {\n        return this.encryptToken(key.key);\n    }\n}\nexports.default = RSAPublicKey;\n\n\n//# sourceURL=webpack:///../sdk/src/models/rsa-public-key.ts?")},"../sdk/src/models/sdk-template.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.SDKTemplate = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst transformers_1 = __webpack_require__(/*! ../util/transformers */ "../sdk/src/util/transformers.ts");\nconst item_map_1 = tslib_1.__importDefault(__webpack_require__(/*! ./item-map */ "../sdk/src/models/item-map.ts"));\nconst new_item_1 = __webpack_require__(/*! ./new-item */ "../sdk/src/models/new-item.ts");\n/**\n * Local copy of an API ItemTemplate.\n * View slots as a map with `template.slotsByName` or create a new Item with `toNewItem()`\n */\nclass SDKTemplate extends item_map_1.default {\n    constructor(itemTemplate, slots, extra = {}) {\n        super(slots.filter(s => itemTemplate.slot_ids.some(id => id === s.id)));\n        this.itemTemplate = itemTemplate;\n        // simpler interface\n        this.id = itemTemplate.id;\n        this.name = itemTemplate.name;\n        this.label = itemTemplate.label;\n        this.description = itemTemplate.description;\n        this.allClassificationNodes = extra.classification_nodes || [];\n        this.classification_nodes =\n            this.allClassificationNodes.filter(x => itemTemplate.classification_node_ids.some(y => y === x.id)) || [];\n        this.attachments = extra.attachments || [];\n        this.thumbnails = extra.thumbnails || [];\n    }\n    static fromAPI(response) {\n        const { classification_nodes, slots, item_template, attachments, thumbnails } = response;\n        return new SDKTemplate(item_template, slots, { classification_nodes, attachments, thumbnails });\n    }\n    toNewItem(label) {\n        return new new_item_1.NewItem(label, this.name, this.slots.map(transformers_1.slotToNewSlot));\n    }\n}\nexports.SDKTemplate = SDKTemplate;\n\n\n//# sourceURL=webpack:///../sdk/src/models/sdk-template.ts?')},"../sdk/src/models/service-error.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeecoServiceError = exports.ERROR_CODES = void 0;\nexports.ERROR_CODES = {\n    InvalidSecretFormat: 'INVALID_SECRET_FORMAT',\n    LoginFailed: 'LOGIN_FAILED',\n};\nclass MeecoServiceError extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nexports.MeecoServiceError = MeecoServiceError;\n\n\n//# sourceURL=webpack:///../sdk/src/models/service-error.ts?")},"../sdk/src/models/slot-types.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.SlotType = void 0;\nvar SlotType;\n(function (SlotType) {\n    SlotType["Bool"] = "bool";\n    SlotType["ClassificationNode"] = "classification_node";\n    SlotType["Color"] = "color";\n    SlotType["Date"] = "date";\n    SlotType["DateTime"] = "datetime";\n    SlotType["Image"] = "image";\n    SlotType["KeyValue"] = "key_value";\n    SlotType["NoteText"] = "note_text";\n    SlotType["Select"] = "select";\n    SlotType["Attachment"] = "attachment";\n    SlotType["URL"] = "url";\n    SlotType["PhoneNumber"] = "phone_number";\n    SlotType["SelectMultiple"] = "select_multiple";\n    SlotType["Email"] = "email";\n    SlotType["Password"] = "password";\n})(SlotType = exports.SlotType || (exports.SlotType = {}));\n\n\n//# sourceURL=webpack:///../sdk/src/models/slot-types.ts?')},"../sdk/src/models/srp-session.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.SRPSession = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst jsrp = tslib_1.__importStar(__webpack_require__(/*! jsrp */ "../../node_modules/jsrp/jsrp.js"));\nclass SRPSession {\n    constructor() {\n        this._client = null;\n    }\n    /**\n     * The raw `jsrp` client\n     */\n    get client() {\n        if (!this._client) {\n            throw new Error(\'Must call SRPSession init() first\');\n        }\n        return this._client;\n    }\n    async init(username, passwordDerivedFromPassphrase) {\n        this._client = await this.createSrpClient(username, passwordDerivedFromPassphrase);\n        return this;\n    }\n    /**\n     * Computes the client public key - Also known as the "srp_a" value\n     */\n    async getClientPublic() {\n        return this.client.getPublicKey();\n    }\n    /**\n     * Computes the client proof from the server challenge - Also known as the "srp_m" value\n     */\n    async computeProofFromChallenge({ salt, serverPublic }) {\n        this.client.setSalt(salt);\n        this.client.setServerPublicKey(serverPublic);\n        return this.client.getProof();\n    }\n    async createVerifier() {\n        return new Promise(resolve => {\n            this.client.createVerifier((err, result) => {\n                resolve(result);\n            });\n        });\n    }\n    createSrpClient(username, password) {\n        return new Promise(resolve => {\n            const client = new jsrp.client();\n            client.init({ username, password, length: 2048 }, () => {\n                resolve(client);\n            });\n        });\n    }\n}\nexports.SRPSession = SRPSession;\n\n\n//# sourceURL=webpack:///../sdk/src/models/srp-session.ts?')},"../sdk/src/models/symmetric-key.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SymmetricKey = exports.SYMMETRIC_KEY_LENGTH = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"../../node_modules/tslib/tslib.es6.js\");\nconst cryppo_service_1 = tslib_1.__importDefault(__webpack_require__(/*! ../services/cryppo-service */ \"../sdk/src/services/cryppo-service.ts\"));\nexports.SYMMETRIC_KEY_LENGTH = 32;\nconst SYMMETRIC_KEY_STRATEGY = cryppo_service_1.default.CipherStrategy.AES_GCM;\n/**\n * Meeco password-derived, key-encryption and data-encryption keys are all symmetric keys (there is one key\n * that is used to both encrypt and decrypt things).\n *\n * This wrapper ensures that keys can be safely serialized as JSON (by encoding them as URL-Safe Base64)\n * and avoids confusion when dealing with converting to and from this encoded format, as well as encrypting\n * UTF-8 strings or other keys.\n */\nclass SymmetricKey {\n    /**\n     * The constructor is intentionally private as we want the user to be explicit as to whether the value coming\n     * in is raw bytes or a base64 encoded version.\n     *\n     * @param _value  Value as binary string. Avoid outputting to console but should be used for actual encryption.\n     */\n    constructor(_value) {\n        this._value = _value;\n        if (!_value) {\n            throw new Error('Empty encryption key!');\n        }\n    }\n    /** A new, random symmetric key with default length. */\n    static generate(length = exports.SYMMETRIC_KEY_LENGTH) {\n        return SymmetricKey.fromRaw(cryppo_service_1.default.generateRandomKey(length));\n    }\n    /**\n     * Create a {@link SymmetricKey} from encoded URL-safe base 64 version of the key.\n     * Use this for keys received via API calls or printed from the CLI.\n     */\n    static fromSerialized(value) {\n        if (!value) {\n            throw new Error('Symmetric Key cannot be constructed from an empty string');\n        }\n        if (!value.match(SymmetricKey.base64RE)) {\n            throw new Error(`Serialized key ${value} did not match base64 format`);\n        }\n        const parseResult = cryppo_service_1.default.decodeSafe64(value || '');\n        return new SymmetricKey(parseResult);\n    }\n    /**\n     * Create a {@link SymmetricKey} from a binary string version of the key.\n     * Use this for keys created by calls to cryppo.\n     */\n    static fromRaw(value) {\n        return new SymmetricKey(value);\n    }\n    /**\n     * @returns The raw encryption key as a byte string.\n     */\n    get key() {\n        return this._value;\n    }\n    /**\n     * Implicitly called by `JSON.stringify()` to ensure that the value is safely printable\n     */\n    toJSON() {\n        return cryppo_service_1.default.encodeSafe64(this._value);\n    }\n    /**\n     * Used to encrypt user-entered data such as birthdays or name.\n     * Should *not* be used to encrypt keys - use {@link encryptKey} instead.\n     * Empty string input will produce a null result.\n     * @returns Base 64 encoded encrypted string.\n     */\n    async encryptString(value) {\n        if (value === null || value === '') {\n            return null;\n        }\n        return cryppo_service_1.default\n            .encryptStringWithKey({\n            data: value,\n            key: this.key,\n            strategy: SYMMETRIC_KEY_STRATEGY,\n        })\n            .then(result => result.serialized);\n    }\n    /**\n     * Used to encrypt generated bytes such as encryption keys or verification keys.\n     * N.B.. Encryption keys are considered binary data even though they are often represented as strings.\n     * @returns Base 64 encoded encrypted string.\n     */\n    async encryptKey(key) {\n        return cryppo_service_1.default\n            .encryptBinaryWithKey({\n            data: key.key,\n            key: this.key,\n            strategy: SYMMETRIC_KEY_STRATEGY,\n        })\n            .then(result => result.serialized);\n    }\n    /**\n     * Used to decrypt user-entered data such as birthdays or name.\n     * Should *not* be used to decrypt keys - use {@link decryptKey} instead.\n     *\n     * Accepts string or null for compatibility with API return types, and returns\n     * null only when input is null.\n     */\n    async decryptString(serialized) {\n        if (serialized === null) {\n            return null;\n        }\n        return cryppo_service_1.default.decryptStringWithKey({\n            key: this.key,\n            serialized,\n        });\n    }\n    /**\n     * Used to decrypt generated bytes such as encryption keys or verification keys.\n     * N.B.. Encryption keys are considered binary data even though they are often represented as strings\n     */\n    async decryptKey(serialized) {\n        return cryppo_service_1.default\n            .decryptBinaryWithKey({\n            key: this.key,\n            serialized,\n        })\n            .then(result => SymmetricKey.fromRaw(result));\n    }\n}\nexports.SymmetricKey = SymmetricKey;\n// This describes the base64 format defined by cryppo.encodeSafe64\nSymmetricKey.base64RE = /^[a-zA-Z0-9\\-_=]*$/;\n\n\n//# sourceURL=webpack:///../sdk/src/models/symmetric-key.ts?")},"../sdk/src/models/template-data.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n\n\n//# sourceURL=webpack:///../sdk/src/models/template-data.ts?')},"../sdk/src/services/client-task-queue-service.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientTaskQueueService = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"../../node_modules/tslib/tslib.es6.js\");\nconst vault_api_sdk_1 = __webpack_require__(/*! @meeco/vault-api-sdk */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/index.js\");\nconst service_error_1 = __webpack_require__(/*! ../models/service-error */ \"../sdk/src/models/service-error.ts\");\nconst paged_1 = __webpack_require__(/*! ../util/paged */ \"../sdk/src/util/paged.ts\");\nconst service_1 = tslib_1.__importDefault(__webpack_require__(/*! ./service */ \"../sdk/src/services/service.ts\"));\nconst share_service_1 = __webpack_require__(/*! ./share-service */ \"../sdk/src/services/share-service.ts\");\nvar vault_api_sdk_2 = __webpack_require__(/*! @meeco/vault-api-sdk */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/index.js\");\nObject.defineProperty(exports, \"ClientTaskState\", { enumerable: true, get: function () { return vault_api_sdk_2.ClientTaskQueueGetStateEnum; } });\n/**\n * A ClientTask describes a set of API actions the client has been requested to perform,\n * usually encrypting some data with their private keys.\n */\nclass ClientTaskQueueService extends service_1.default {\n    getAPI(token) {\n        return this.vaultAPIFactory(token).ClientTaskQueueApi;\n    }\n    /**\n     * @param change_state If true, set the state of all tasks in the reponse to 'in_progress'\n     * @param states Filter results by state.\n     * @param target_id Filter results by target_id.\n     */\n    async list(credentials, change_state = false, states = [vault_api_sdk_1.ClientTaskQueueGetStateEnum.Todo], target_id, options) {\n        const result = await this.vaultAPIFactory(credentials).ClientTaskQueueApi.clientTaskQueueGet(options === null || options === void 0 ? void 0 : options.nextPageAfter, options === null || options === void 0 ? void 0 : options.perPage, change_state, target_id, states);\n        if (paged_1.resultHasNext(result) && (options === null || options === void 0 ? void 0 : options.perPage) === undefined) {\n            this.logger.warn('Some results omitted, but page limit was not explicitly set');\n        }\n        return result;\n    }\n    async listAll(credentials, change_state = false, states = [vault_api_sdk_1.ClientTaskQueueGetStateEnum.Todo], target_id) {\n        const api = this.vaultAPIFactory(credentials).ClientTaskQueueApi;\n        return paged_1.getAllPaged(cursor => api.clientTaskQueueGet(cursor, undefined, change_state, target_id, states))\n            .then(paged_1.reducePages)\n            .then(result => result.client_tasks);\n    }\n    /**\n     * Count all tasks that have state either 'todo' or 'in_progress'.\n     * May make multiple API calls, depending on number of tasks.\n     */\n    async countOutstandingTasks(credentials) {\n        const allTasks = await this.listAll(credentials, false, [\n            vault_api_sdk_1.ClientTaskQueueGetStateEnum.Todo,\n            vault_api_sdk_1.ClientTaskQueueGetStateEnum.InProgress,\n        ]);\n        const initialCount = { todo: 0, in_progress: 0 };\n        const result = allTasks.reduce((acc, task) => {\n            if (task.state === vault_api_sdk_1.ClientTaskQueueGetStateEnum.Todo) {\n                acc.todo += 1;\n            }\n            else if (task.state === vault_api_sdk_1.ClientTaskQueueGetStateEnum.InProgress) {\n                acc.in_progress += 1;\n            }\n            return acc;\n        }, initialCount);\n        return result;\n    }\n    /**\n     * Execute the given ClientTasks, updating their state in the API.\n     * Currently, the only implemented task is 'update_item_share'.\n     *\n     * ClientTask state is set to 'in_progress' once execution begins.\n     * Any tasks with state 'in_progress' or 'done' will raise an exception.\n     * Tasks with state 'failed' will be retried.\n     *\n     * No tasks are initiated if any one of the tasks is unrecognized or cannot be started.\n     * @param tasks ClientTasks to be executed. Each must have state 'todo' or 'failed'.\n     * @param authData\n     */\n    async execute(credentials, tasks) {\n        this.logger.log(`Executing ${tasks.length} tasks`);\n        for (const task of tasks) {\n            if (task.work_type !== 'update_item_shares') {\n                throw new service_error_1.MeecoServiceError(`Do not know how to execute ClientTask of type ${task.work_type}`);\n            }\n            if (task.state === vault_api_sdk_1.ClientTaskQueueGetStateEnum.InProgress || task.state === vault_api_sdk_1.ClientTaskQueueGetStateEnum.Done) {\n                throw new service_error_1.MeecoServiceError(`Cannot execute ${task.work_type} task ${task.id} because it is already ${task.state}`);\n            }\n        }\n        const updateSharesTasksResult = await this.updateSharesClientTasks(credentials, tasks);\n        return updateSharesTasksResult;\n    }\n    /**\n     * In this ClientTask, the target_id points to an Item which has been updated by the owner and so the owner must re-encrypt\n     * the Item with each of the shared public keys.\n     * @param listOfClientTasks A list of update_item_shares tasks to run.\n     * @param authData\n     */\n    async updateSharesClientTasks(credentials, tasks) {\n        const shareService = new share_service_1.ShareService(this.environment, this.logger.log);\n        const taskReport = {\n            completed: [],\n            failed: [],\n        };\n        const runTask = async (task) => {\n            try {\n                await shareService.updateSharedItem(credentials, task.target_id);\n                task.state = vault_api_sdk_1.ClientTaskQueueGetStateEnum.Done;\n                taskReport.completed.push(task);\n            }\n            catch (error) {\n                this.logger.warn(`Task with id=${task.id} failed!`);\n                task.state = vault_api_sdk_1.ClientTaskQueueGetStateEnum.Failed;\n                taskReport.failed.push(Object.assign(Object.assign({}, task), { failureReason: error === null || error === void 0 ? void 0 : error.body }));\n            }\n        };\n        // Set all tasks to in_progress\n        await this.vaultAPIFactory(credentials).ClientTaskQueueApi.clientTaskQueuePut({\n            client_tasks: tasks.map(({ id }) => ({ id, state: vault_api_sdk_1.ClientTaskQueueGetStateEnum.InProgress })),\n        });\n        this.logger.log('Set: in_progress');\n        await Promise.all(tasks.map(runTask));\n        // now update the tasks in the API\n        this.logger.log(`Task run completed, updating.`);\n        const allTasks = taskReport.completed\n            .concat(taskReport.failed)\n            .map(({ id, state, report }) => ({ id, state, report }));\n        await this.vaultAPIFactory(credentials).ClientTaskQueueApi.clientTaskQueuePut({\n            client_tasks: allTasks,\n        });\n        return taskReport;\n    }\n}\nexports.ClientTaskQueueService = ClientTaskQueueService;\n\n\n//# sourceURL=webpack:///../sdk/src/services/client-task-queue-service.ts?")},"../sdk/src/services/connection-service.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionService = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"../../node_modules/tslib/tslib.es6.js\");\nconst paged_1 = __webpack_require__(/*! ../util/paged */ \"../sdk/src/util/paged.ts\");\nconst invitation_service_1 = __webpack_require__(/*! ./invitation-service */ \"../sdk/src/services/invitation-service.ts\");\nconst service_1 = tslib_1.__importDefault(__webpack_require__(/*! ./service */ \"../sdk/src/services/service.ts\"));\n/**\n * Used for setting up connections between Meeco `User`s to allow the secure sharing of data (see also {@link ShareService})\n */\nclass ConnectionService extends service_1.default {\n    getAPI(token) {\n        return this.vaultAPIFactory(token).ConnectionApi;\n    }\n    /**\n     * Note this only works if we have authentication data for both connecting users.\n     * For more typical use cases you should manually call {@link InvitationService.create}\n     * as one user and {@link InvitationService.accept} as the other user.\n     */\n    async createConnection(config) {\n        const { to, from, options } = config;\n        let existingConnection;\n        try {\n            // We want to avoid creating keypairs etc. only to find out that the users were connected from the beginning\n            this.logger.log('Checking for an existing connection');\n            existingConnection = await this.findConnectionBetween(from, to);\n        }\n        catch (err) {\n            // Empty catch because getting 404's is expected if the connection does not exist\n        }\n        // @ts-ignore\n        if ((existingConnection === null || existingConnection === void 0 ? void 0 : existingConnection.fromUserConnection) && (existingConnection === null || existingConnection === void 0 ? void 0 : existingConnection.toUserConnection)) {\n            throw new Error('Connection exists between the specified users');\n        }\n        const invitations = new invitation_service_1.InvitationService(this.environment);\n        const invitation = await invitations.create(from, options.toName);\n        await invitations.accept(to, options.fromName, invitation.token);\n        // Now the connection has been created we need to re-fetch the original user's connection.\n        // We might as well fetch both to ensure it's connected both ways correctly.\n        const { fromUserConnection, toUserConnection } = await this.findConnectionBetween(from, to);\n        return {\n            invitation,\n            fromUserConnection,\n            toUserConnection,\n            options,\n        };\n    }\n    /**\n     * @deprecated Use {@link list} instead.\n     * @param user\n     */\n    async listConnections(credentials) {\n        return this.list(credentials);\n    }\n    async list(credentials, options) {\n        const { data_encryption_key } = credentials;\n        this.logger.log('Fetching connections');\n        const result = await this.vaultAPIFactory(credentials).ConnectionApi.connectionsGet(options === null || options === void 0 ? void 0 : options.nextPageAfter, options === null || options === void 0 ? void 0 : options.perPage);\n        if (paged_1.resultHasNext(result) && (options === null || options === void 0 ? void 0 : options.perPage) === undefined) {\n            this.logger.warn('Some results omitted, but page limit was not explicitly set');\n        }\n        this.logger.log('Decrypting connection names');\n        return Promise.all((result.connections || []).map(this.decryptConnection(data_encryption_key)));\n    }\n    async listAll(credentials) {\n        const { data_encryption_key } = credentials;\n        const api = this.vaultAPIFactory(credentials).ConnectionApi;\n        return paged_1.getAllPaged(cursor => api.connectionsGet(cursor)).then(results => {\n            const responses = results.reduce((a, b) => a.concat(b.connections), []);\n            return Promise.all((responses || []).map(this.decryptConnection(data_encryption_key)));\n        });\n    }\n    decryptConnection(dek) {\n        return async (connection) => {\n            const encryptedName = connection.own.encrypted_recipient_name;\n            return {\n                recipient_name: await dek.decryptString(encryptedName || ''),\n                connection,\n            };\n        };\n    }\n    /**\n     * @deprecated Use `get` instead.\n     */\n    async fetchConnectionWithId(credentials, connectionId) {\n        return this.get(credentials, connectionId);\n    }\n    async get(credentials, connectionId) {\n        this.logger.log('Fetching user connection');\n        const response = await this.vaultAPIFactory(credentials).ConnectionApi.connectionsIdGet(connectionId);\n        const connection = response.connection;\n        if (!connection || !connection.own.id) {\n            throw new Error(`Connection ${connectionId} not found.`);\n        }\n        return connection;\n    }\n    /**\n     * Helper to find connection between two users (if one exists)\n     * Throws an Error if no connection exists.\n     */\n    async findConnectionBetween(fromUser, toUser) {\n        this.logger.log('Fetching from user connections');\n        const { connections: fromUserConnections } = await this.vaultAPIFactory(fromUser).ConnectionApi.connectionsGet();\n        if (fromUserConnections.length === 0) {\n            throw new Error('Users are not connected. Please set up a connection first.');\n        }\n        this.logger.log('Fetching to user connections');\n        const { connections: toUserConnections } = await this.vaultAPIFactory(toUser).ConnectionApi.connectionsGet();\n        let toUserConnection;\n        const fromUserConnection = fromUserConnections.find(fromConnection => {\n            const result = toUserConnections.find(toConnection => fromConnection.own.user_public_key === toConnection.the_other_user.user_public_key);\n            if (result) {\n                toUserConnection = result;\n            }\n            return !!result;\n        });\n        if (!fromUserConnection) {\n            throw new Error('Users are not connected. Please set up a connection first.');\n        }\n        // toUserConnection must be defined if fromUserConnection is\n        return { fromUserConnection, toUserConnection: toUserConnection };\n    }\n}\nexports.ConnectionService = ConnectionService;\n\n\n//# sourceURL=webpack:///../sdk/src/services/connection-service.ts?")},"../sdk/src/services/cryppo-service.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst cryppo = tslib_1.__importStar(__webpack_require__(/*! @meeco/cryppo */ "../../node_modules/@meeco/cryppo/dist/index.esm.js"));\n/**\n *\n * Mockable cryppo\n *\n * ES6 module imports can not be stubbed with certain cobinations of TypeScript/sinon/etc.\n * https://github.com/sinonjs/sinon/issues/1711\n *\n * By having an intermediate module we can use `sinon.stub` to mock cryppo methods in tests\n * @hidden\n */\nexports.default = Object.assign({}, cryppo);\n\n\n//# sourceURL=webpack:///../sdk/src/services/cryppo-service.ts?')},"../sdk/src/services/delegation-service.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.DelegationService = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst __1 = __webpack_require__(/*! .. */ "../sdk/src/index.ts");\nconst symmetric_key_1 = __webpack_require__(/*! ../models/symmetric-key */ "../sdk/src/models/symmetric-key.ts");\nconst service_1 = tslib_1.__importDefault(__webpack_require__(/*! ./service */ "../sdk/src/services/service.ts"));\n/**\n * Used for setting up delegation connections between Meeco `User`s to allow the secure management of another users account\n */\nclass DelegationService extends service_1.default {\n    getAPI(token) {\n        return this.vaultAPIFactory(token).DelegationApi;\n    }\n    async createChildUser(credentials, childConnectionIdentifier) {\n        const parentKek = credentials.key_encryption_key;\n        this.logger.log(\'Generating keys for child user\');\n        const childKek = symmetric_key_1.SymmetricKey.generate();\n        const encryptedChildKek = await parentKek.encryptKey(childKek);\n        const childDek = symmetric_key_1.SymmetricKey.generate();\n        const encryptedChildDek = await childKek.encryptKey(childDek);\n        const childToParentKeyId = \'parent_connection\';\n        const childToParentKey = await __1.DecryptedKeypair.generate();\n        const encryptedChildToParentKey = await childKek.encryptKey(childToParentKey.privateKey);\n        const parentToChildKeyId = childConnectionIdentifier;\n        const parentToChildKey = await __1.DecryptedKeypair.generate();\n        const encryptedParentToChildKey = await parentKek.encryptKey(parentToChildKey.privateKey);\n        await this.keystoreAPIFactory(credentials).KeypairApi.keypairsPost({\n            public_key: parentToChildKey.publicKey.key,\n            encrypted_serialized_key: encryptedParentToChildKey,\n            metadata: {},\n            external_identifiers: [parentToChildKeyId],\n        });\n        this.logger.log(\'Creating child user\');\n        const childUser = await this.vaultAPIFactory(credentials)\n            .DelegationApi.childUsersPost({\n            parent_public_key_for_connection: {\n                pem: parentToChildKey.publicKey.key,\n                external_id: parentToChildKeyId,\n            },\n            child_public_key_for_connection: {\n                pem: childToParentKey.publicKey.key,\n                external_id: childToParentKeyId,\n            },\n        })\n            .then(result => {\n            return result.user;\n        });\n        this.logger.log(\'Saving child user keys to keystore\');\n        return await this.keystoreAPIFactory(credentials)\n            .DelegationApi.childUsersPost({\n            vault_child_id: childUser.id,\n            child_kek: encryptedChildKek,\n            child_dek: encryptedChildDek,\n            child_keypair_for_connection: {\n                encrypted_private_key: encryptedChildToParentKey,\n                public_key: childToParentKey.publicKey.key,\n                external_id: childToParentKeyId,\n            },\n        })\n            .then(result => {\n            return result.delegation;\n        });\n    }\n}\nexports.DelegationService = DelegationService;\n\n\n//# sourceURL=webpack:///../sdk/src/services/delegation-service.ts?')},"../sdk/src/services/invitation-service.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvitationService = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"../../node_modules/tslib/tslib.es6.js\");\nconst decrypted_keypair_1 = tslib_1.__importDefault(__webpack_require__(/*! ../models/decrypted-keypair */ \"../sdk/src/models/decrypted-keypair.ts\"));\nconst service_error_1 = __webpack_require__(/*! ../models/service-error */ \"../sdk/src/models/service-error.ts\");\nconst service_1 = tslib_1.__importDefault(__webpack_require__(/*! ./service */ \"../sdk/src/services/service.ts\"));\nclass InvitationService extends service_1.default {\n    getAPI(token) {\n        return this.vaultAPIFactory(token).InvitationApi;\n    }\n    /**\n     * Create an invitation token for a Connection (exchanging public keys to share Items).\n     * @param connectionName Used in the new Connection, only visible to the creating user.\n     * @param keypairId Use this public key in the new Connection. This is a Keystore Keypair.id (not external_id).\n     * Throws an error if the key pair does not exist.\n     */\n    async create(credentials, connectionName, keypairId) {\n        const { key_encryption_key, data_encryption_key } = credentials;\n        let keyPair;\n        if (keypairId) {\n            keyPair = await this.getKeyPair(credentials, keypairId);\n        }\n        else {\n            keyPair = await this.createAndStoreKeyPair(credentials, key_encryption_key);\n        }\n        const encryptedName = await this.encryptNameOrDefault(data_encryption_key, connectionName, 'New Connection');\n        this.logger.log('Sending invitation request');\n        return this.vaultAPIFactory(credentials)\n            .InvitationApi.invitationsPost({\n            public_key: {\n                keypair_external_id: keyPair.id,\n                public_key: keyPair.public_key,\n            },\n            invitation: {\n                encrypted_recipient_name: encryptedName,\n            },\n        })\n            .then(result => result.invitation);\n    }\n    /**\n     * Create a Connection from an Invitation token.\n     * @param connectionName Used in the new Connection, only visible to the creating user.\n     * @param invitationToken From an existing Invitation request. Throws an exception if it does not exist.\n     * @param keypairId Use this public key in the new Connection. This is a Keystore Keypair.id (not external_id).\n     * Throws an error if the key pair does not exist.\n     */\n    async accept(credentials, name, invitationToken, keypairId) {\n        const { key_encryption_key, data_encryption_key } = credentials;\n        let keyPair;\n        if (keypairId) {\n            keyPair = await this.getKeyPair(credentials, keypairId);\n        }\n        else {\n            keyPair = await this.createAndStoreKeyPair(credentials, key_encryption_key);\n        }\n        const encryptedName = await this.encryptNameOrDefault(data_encryption_key, name, 'New Connection');\n        this.logger.log('Accepting invitation');\n        return this.vaultAPIFactory(credentials)\n            .ConnectionApi.connectionsPost({\n            public_key: {\n                keypair_external_id: keyPair.id,\n                public_key: keyPair.public_key,\n            },\n            connection: {\n                encrypted_recipient_name: encryptedName,\n                invitation_token: invitationToken,\n            },\n        })\n            .then(res => res.connection);\n    }\n    async encryptNameOrDefault(dek, name, defaultName) {\n        let input = name;\n        if (name === '') {\n            this.logger.warn('Connection Name was empty, using default');\n            input = defaultName;\n        }\n        this.logger.log('Encrypting recipient name');\n        return dek.encryptString(input);\n    }\n    async getKeyPair(credentials, id) {\n        try {\n            return await this.keystoreAPIFactory(credentials)\n                .KeypairApi.keypairsIdGet(id)\n                .then(result => result.keypair);\n        }\n        catch (error) {\n            if (error.status === 404) {\n                throw new service_error_1.MeecoServiceError(`KeyPair with id '${id}' not found`);\n            }\n            throw error;\n        }\n    }\n    async createAndStoreKeyPair(credentials, keyEncryptionKey) {\n        this.logger.log('Generating key pair');\n        const keyPair = await decrypted_keypair_1.default.generate();\n        const toPrivateKeyEncrypted = await keyEncryptionKey.encryptKey(keyPair.privateKey);\n        const { keypair: resultKeypair } = await this.keystoreAPIFactory(credentials).KeypairApi.keypairsPost({\n            public_key: keyPair.publicKey.key,\n            encrypted_serialized_key: toPrivateKeyEncrypted,\n            // API will 500 without\n            metadata: {},\n            external_identifiers: [],\n        });\n        return resultKeypair;\n    }\n}\nexports.InvitationService = InvitationService;\n\n\n//# sourceURL=webpack:///../sdk/src/services/invitation-service.ts?")},"../sdk/src/services/item-service.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.ItemService = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst decrypted_item_1 = __webpack_require__(/*! ../models/decrypted-item */ "../sdk/src/models/decrypted-item.ts");\nconst paged_1 = __webpack_require__(/*! ../util/paged */ "../sdk/src/util/paged.ts");\nconst service_1 = tslib_1.__importDefault(__webpack_require__(/*! ./service */ "../sdk/src/services/service.ts"));\nconst share_service_1 = __webpack_require__(/*! ./share-service */ "../sdk/src/services/share-service.ts");\n/**\n * Used for fetching and sending `Items` to and from the Vault.\n */\nclass ItemService extends service_1.default {\n    /**\n     * True if the Item was received via a Share from another user.\n     * In that case, it must be decrypted with the Share DEK, not the user\'s own DEK.\n     * @param item\n     */\n    static itemIsFromShare(item) {\n        return item.own === false || !!item.share_id;\n    }\n    getAPI(token) {\n        return this.vaultAPIFactory(token).ItemApi;\n    }\n    async create(credentials, item) {\n        const { data_encryption_key } = credentials;\n        const request = await item.toRequest(data_encryption_key);\n        const response = await this.vaultAPIFactory(credentials).ItemApi.itemsPost(request);\n        return decrypted_item_1.DecryptedItem.fromAPI(credentials, response);\n    }\n    async update(credentials, newData) {\n        const response = await this.vaultAPIFactory(credentials).ItemApi.itemsIdPut(newData.id, await newData.toRequest(credentials));\n        return decrypted_item_1.DecryptedItem.fromAPI(credentials, response);\n    }\n    async removeSlot(credentials, slotId) {\n        this.logger.log(\'Removing slot\');\n        await this.vaultAPIFactory(credentials).SlotApi.slotsIdDelete(slotId);\n        this.logger.log(\'Slot successfully removed\');\n    }\n    /**\n     * Get an Item and decrypt all of its Slots.\n     * Works for both owned and shared Items.\n     * @param id ItemId\n     * @param user\n     */\n    async get(credentials, id) {\n        let dataEncryptionKey = credentials.data_encryption_key;\n        const result = await this.vaultAPIFactory(credentials).ItemApi.itemsIdGet(id);\n        const { item } = result;\n        // If the Item is from a share, use the share DEK to decrypt instead.\n        // Second condition is for typecheck\n        if (ItemService.itemIsFromShare(item) && item.share_id !== null) {\n            const { share } = await this.vaultAPIFactory(credentials).SharesApi.incomingSharesIdGet(item.share_id);\n            dataEncryptionKey = await new share_service_1.ShareService(this.environment).getShareDEK(credentials, share);\n        }\n        return decrypted_item_1.DecryptedItem.fromAPI({ data_encryption_key: dataEncryptionKey }, result);\n    }\n    async list(credentials, templateIds, options) {\n        const result = await this.vaultAPIFactory(credentials).ItemApi.itemsGet(templateIds, undefined, undefined, options === null || options === void 0 ? void 0 : options.nextPageAfter, options === null || options === void 0 ? void 0 : options.perPage);\n        if (paged_1.resultHasNext(result) && (options === null || options === void 0 ? void 0 : options.perPage) === undefined) {\n            this.logger.warn(\'Some results omitted, but page limit was not explicitly set\');\n        }\n        return result;\n    }\n    async listAll(credentials, templateIds) {\n        const api = this.vaultAPIFactory(credentials).ItemApi;\n        return paged_1.getAllPaged(cursor => api.itemsGet(templateIds, undefined, undefined, cursor)).then(paged_1.reducePages);\n    }\n}\nexports.ItemService = ItemService;\n\n\n//# sourceURL=webpack:///../sdk/src/services/item-service.ts?')},"../sdk/src/services/organization-members-service.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.OrganizationMembersService = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst paged_1 = __webpack_require__(/*! ../util/paged */ "../sdk/src/util/paged.ts");\nconst organization_service_1 = __webpack_require__(/*! ./organization-service */ "../sdk/src/services/organization-service.ts");\nconst service_1 = tslib_1.__importDefault(__webpack_require__(/*! ./service */ "../sdk/src/services/service.ts"));\n/**\n * Manage organization members from the API.\n */\nclass OrganizationMembersService extends service_1.default {\n    getAPI(token) {\n        return this.vaultAPIFactory(token).OrganizationsManagingMembersApi;\n    }\n    /**\n     * Invite a Vault user to become an Organization member.\n     * @param organizationAgentPublicKey\n     * @param role Role of the new member\n     */\n    async createInvite(credentials, organizationAgentPublicKey, role = organization_service_1.OrganizationMemberRoles.Admin) {\n        this.logger.log(\'Creating invitation request\');\n        return this.vaultAPIFactory(credentials)\n            .InvitationApi.invitationsPost({\n            public_key: {\n                keypair_external_id: \'org-agent-keypair\',\n                public_key: organizationAgentPublicKey,\n            },\n            invitation: {\n                organization_member_role: role,\n            },\n        })\n            .then(result => result.invitation);\n    }\n    async updateMemberRole(credentials, organizationId, userId, newRole) {\n        return this.vaultAPIFactory(credentials).OrganizationsManagingMembersApi.organizationsOrganizationIdMembersIdPut(organizationId, userId, {\n            organization_member: {\n                role: newRole,\n            },\n        });\n    }\n    async list(credentials, organizationId, options) {\n        return this.vaultAPIFactory(credentials).OrganizationsManagingMembersApi.organizationsOrganizationIdMembersGet(organizationId, options === null || options === void 0 ? void 0 : options.nextPageAfter, options === null || options === void 0 ? void 0 : options.perPage);\n    }\n    async listAll(credentials, organizationId) {\n        const api = this.vaultAPIFactory(credentials).OrganizationsManagingMembersApi;\n        return paged_1.getAllPaged(cursor => api.organizationsOrganizationIdMembersGet(organizationId, cursor)).then(paged_1.reducePagesTakeLast);\n    }\n}\nexports.OrganizationMembersService = OrganizationMembersService;\n\n\n//# sourceURL=webpack:///../sdk/src/services/organization-members-service.ts?')},"../sdk/src/services/organization-service.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.OrganizationMemberRoles = exports.OrganizationService = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst decrypted_keypair_1 = tslib_1.__importDefault(__webpack_require__(/*! ../models/decrypted-keypair */ "../sdk/src/models/decrypted-keypair.ts"));\nconst rsa_private_key_1 = tslib_1.__importDefault(__webpack_require__(/*! ../models/rsa-private-key */ "../sdk/src/models/rsa-private-key.ts"));\nconst paged_1 = __webpack_require__(/*! ../util/paged */ "../sdk/src/util/paged.ts");\nconst service_1 = tslib_1.__importDefault(__webpack_require__(/*! ./service */ "../sdk/src/services/service.ts"));\n/**\n * Manage organizations from the API.\n */\nclass OrganizationService extends service_1.default {\n    getAPI(token) {\n        return this.vaultAPIFactory(token).OrganizationsManagingOrganizationsApi;\n    }\n    /**\n     * Login as an Organization member, getting the Organization\'s vault session token.\n     * @param credentials Organization member\'s vault token\n     * @param privateKey Used to decrypt the stored token\n     */\n    async getOrganizationToken(credentials, organizationId, privateKey) {\n        const orgKey = new rsa_private_key_1.default(privateKey);\n        const result = await this.vaultAPIFactory(credentials).OrganizationsManagingOrganizationsApi.organizationsIdLoginPost(organizationId);\n        const decryptedVaultSessionToken = await orgKey.decryptToken(result.encrypted_access_token);\n        return { vault_access_token: decryptedVaultSessionToken };\n    }\n    /**\n     * Request creation of an Organization. The Organization has a key pair that is used to\n     * encrypt session tokens, so only members with the private key can login on behalf of the\n     * Organization. This is `privateKey` in the result; it must be stored securely, if lost\n     * you cannot log in to the Organization.\n     */\n    async create(credentials, name, info = {}) {\n        const rsaKeyPair = await decrypted_keypair_1.default.generate();\n        const public_key = rsaKeyPair.publicKey;\n        // must have name and public_key\n        // notice that public_key is used to encrypt the session token of the org\n        const result = await this.vaultAPIFactory(credentials).OrganizationsManagingOrganizationsApi.organizationsPost(Object.assign({ name, public_key: public_key.key }, info));\n        return {\n            organization: result.organization,\n            privateKey: rsaKeyPair.privateKey,\n            publicKey: rsaKeyPair.publicKey,\n        };\n    }\n    /**\n     * @param mode If unspecified returns all validated organizations; `requested` by user, or user `member` orgs can be given too.\n     */\n    async listAll(credentials, mode) {\n        const api = this.vaultAPIFactory(credentials).OrganizationsForVaultUsersApi;\n        return paged_1.getAllPaged(cursor => api.organizationsGet(mode, cursor))\n            .then(paged_1.reducePages)\n            .then(({ organizations, services }) => ({\n            organizations,\n            services,\n        }));\n    }\n}\nexports.OrganizationService = OrganizationService;\nvar OrganizationMemberRoles;\n(function (OrganizationMemberRoles) {\n    OrganizationMemberRoles["Admin"] = "admin";\n    OrganizationMemberRoles["Owner"] = "owner";\n})(OrganizationMemberRoles = exports.OrganizationMemberRoles || (exports.OrganizationMemberRoles = {}));\n\n\n//# sourceURL=webpack:///../sdk/src/services/organization-service.ts?')},"../sdk/src/services/organization-services-service.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.OrganizationServicesService = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst decrypted_keypair_1 = tslib_1.__importDefault(__webpack_require__(/*! ../models/decrypted-keypair */ "../sdk/src/models/decrypted-keypair.ts"));\nconst rsa_private_key_1 = tslib_1.__importDefault(__webpack_require__(/*! ../models/rsa-private-key */ "../sdk/src/models/rsa-private-key.ts"));\nconst logger_1 = __webpack_require__(/*! ../util/logger */ "../sdk/src/util/logger.ts");\nconst service_1 = tslib_1.__importDefault(__webpack_require__(/*! ./service */ "../sdk/src/services/service.ts"));\n/**\n * Manage organization services from the API.\n */\nclass OrganizationServicesService extends service_1.default {\n    constructor(environment, credentials, log = logger_1.noopLogger) {\n        super(environment, log);\n        this.credentials = credentials;\n    }\n    getAPI(token) {\n        return this.vaultAPIFactory(token).OrganizationsManagingServicesApi;\n    }\n    async getLogin(organizationId, serviceId, privateKey) {\n        const orgKey = new rsa_private_key_1.default(privateKey);\n        this.logger.log(\'Logging in\');\n        const result = await this.vaultAPIFactory(this.credentials).OrganizationsManagingServicesApi.organizationsOrganizationIdServicesIdLoginPost(organizationId, serviceId);\n        const decryptedVaultSessionToken = await orgKey.decryptToken(result.encrypted_access_token);\n        return {\n            vault_access_token: decryptedVaultSessionToken,\n        };\n    }\n    async create(organizationId, service) {\n        const rsaKeyPair = await decrypted_keypair_1.default.generate();\n        service.public_key = rsaKeyPair.publicKey.key;\n        const result = await this.vaultAPIFactory(this.credentials).OrganizationsManagingServicesApi.organizationsOrganizationIdServicesPost(organizationId, {\n            service,\n        });\n        return {\n            service: result.service,\n            privateKey: rsaKeyPair.privateKey,\n            publicKey: rsaKeyPair.publicKey,\n        };\n    }\n}\nexports.OrganizationServicesService = OrganizationServicesService;\n\n\n//# sourceURL=webpack:///../sdk/src/services/organization-services-service.ts?')},"../sdk/src/services/service.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst api_factory_1 = __webpack_require__(/*! ../util/api-factory */ "../sdk/src/util/api-factory.ts");\nconst logger_1 = __webpack_require__(/*! ../util/logger */ "../sdk/src/util/logger.ts");\n/**\n * Abstract SDK Service.\n */\nclass Service {\n    constructor(environment, log = logger_1.noopLogger) {\n        this.environment = environment;\n        this.vaultAPIFactory = api_factory_1.vaultAPIFactory(environment);\n        this.keystoreAPIFactory = api_factory_1.keystoreAPIFactory(environment);\n        this.logger = logger_1.toFullLogger(log);\n    }\n    setLogger(logger) {\n        this.logger = logger_1.toFullLogger(logger);\n    }\n}\nexports.default = Service;\n\n\n//# sourceURL=webpack:///../sdk/src/services/service.ts?')},"../sdk/src/services/share-service.ts":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(global) {\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.ShareService = exports.ShareType = exports.AcceptanceRequest = exports.AcceptanceStatus = exports.SharingMode = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst decrypted_item_1 = __webpack_require__(/*! ../models/decrypted-item */ "../sdk/src/models/decrypted-item.ts");\nconst decrypted_keypair_1 = tslib_1.__importDefault(__webpack_require__(/*! ../models/decrypted-keypair */ "../sdk/src/models/decrypted-keypair.ts"));\nconst rsa_public_key_1 = tslib_1.__importDefault(__webpack_require__(/*! ../models/rsa-public-key */ "../sdk/src/models/rsa-public-key.ts"));\nconst service_error_1 = __webpack_require__(/*! ../models/service-error */ "../sdk/src/models/service-error.ts");\nconst symmetric_key_1 = __webpack_require__(/*! ../models/symmetric-key */ "../sdk/src/models/symmetric-key.ts");\nconst paged_1 = __webpack_require__(/*! ../util/paged */ "../sdk/src/util/paged.ts");\nconst slot_helpers_1 = tslib_1.__importDefault(__webpack_require__(/*! ../util/slot-helpers */ "../sdk/src/util/slot-helpers.ts"));\nconst connection_service_1 = __webpack_require__(/*! ./connection-service */ "../sdk/src/services/connection-service.ts");\nconst item_service_1 = __webpack_require__(/*! ./item-service */ "../sdk/src/services/item-service.ts");\nconst service_1 = tslib_1.__importDefault(__webpack_require__(/*! ./service */ "../sdk/src/services/service.ts"));\nvar SharingMode;\n(function (SharingMode) {\n    SharingMode["Owner"] = "owner";\n    SharingMode["Anyone"] = "anyone";\n})(SharingMode = exports.SharingMode || (exports.SharingMode = {}));\n/** The result of an API call */\nvar AcceptanceStatus;\n(function (AcceptanceStatus) {\n    AcceptanceStatus["Required"] = "acceptance_required";\n    AcceptanceStatus["NotRequired"] = "acceptance_not_required";\n    AcceptanceStatus["Accepted"] = "accepted";\n    AcceptanceStatus["Rejected"] = "rejected ";\n})(AcceptanceStatus = exports.AcceptanceStatus || (exports.AcceptanceStatus = {}));\n/** Values which can be set by the user */\nvar AcceptanceRequest;\n(function (AcceptanceRequest) {\n    AcceptanceRequest["Required"] = "acceptance_required";\n    AcceptanceRequest["NotRequired"] = "acceptance_not_required";\n})(AcceptanceRequest = exports.AcceptanceRequest || (exports.AcceptanceRequest = {}));\nfunction hasAccepted(status) {\n    return status === AcceptanceStatus.Accepted || status === AcceptanceStatus.NotRequired;\n}\nvar ShareType;\n(function (ShareType) {\n    ShareType["Incoming"] = "incoming";\n    ShareType["Outgoing"] = "outgoing";\n})(ShareType = exports.ShareType || (exports.ShareType = {}));\n/**\n * Service for sharing data between two connected Meeco users.\n * Connections can be setup via the {@link ConnectionService}\n */\nclass ShareService extends service_1.default {\n    /**\n     * When a share is initially created it is encrypted with a generated\n     * symmetric key, encrypted with the recipient\'s public key.\n     * See {@link getShareDEK} for decrypting that key.\n     * @returns true if the share is encrypted with the shared key.\n     */\n    static shareEncryptedWithSharedKey(share) {\n        return !!share.encrypted_dek;\n    }\n    getAPI(token) {\n        return this.vaultAPIFactory(token).SharesApi;\n    }\n    /**\n     * Share the Item with another user (identified by the Connection).\n     * You can only share Items you own or are permitted to re-share.\n     * @param credentials\n     * @param connectionId\n     * @param itemId\n     * @param shareOptions\n     */\n    async shareItem(credentials, connectionId, itemId, shareOptions = {}) {\n        const fromUserConnection = await new connection_service_1.ConnectionService(this.environment, this.logger).get(credentials, connectionId);\n        const { user_public_key, user_keypair_external_id, user_id: recipientId, } = fromUserConnection.the_other_user;\n        const publicKey = new rsa_public_key_1.default(user_public_key);\n        this.logger.log(\'Preparing item to share\');\n        const item = await new item_service_1.ItemService(this.environment).get(credentials, itemId);\n        const { slots } = item;\n        this.logger.log(\'Encrypting slots with generated DEK\');\n        const dek = symmetric_key_1.SymmetricKey.generate();\n        let encryptions;\n        if (shareOptions.slot_id) {\n            const shareSlot = slots.find(slot => slot.id === shareOptions.slot_id);\n            if (!shareSlot) {\n                throw new Error(`could not find slot with id ${shareOptions.slot_id}`);\n            }\n            encryptions = [await slot_helpers_1.default.toEncryptedSlotValue(credentials, shareSlot)];\n        }\n        else {\n            encryptions = await item.toEncryptedSlotValues({\n                data_encryption_key: dek,\n            });\n        }\n        const encryptedDek = await publicKey.encryptKey(dek);\n        this.logger.log(\'Sending shared data\');\n        const shareResult = await this.vaultAPIFactory(credentials).SharesApi.itemsIdSharesPost(itemId, {\n            shares: [\n                Object.assign(Object.assign({ public_key: user_public_key, recipient_id: recipientId, keypair_external_id: user_keypair_external_id || undefined }, shareOptions), { slot_values: encryptions, encrypted_dek: encryptedDek }),\n            ],\n        });\n        return shareResult;\n    }\n    /**\n     * @param shareType Filter by ShareType, either incoming or outgoing.\n     * @param acceptanceStatus Filter by acceptance status. Other vaules are \'accepted\', \'rejected\'.\n     */\n    async listShares(credentials, shareType = ShareType.Incoming, mustAccept, options) {\n        const api = this.vaultAPIFactory(credentials).SharesApi;\n        let response;\n        switch (shareType) {\n            case ShareType.Outgoing:\n                response = await api.outgoingSharesGet(options === null || options === void 0 ? void 0 : options.nextPageAfter, options === null || options === void 0 ? void 0 : options.perPage);\n                break;\n            case ShareType.Incoming:\n                response = await api.incomingSharesGet(options === null || options === void 0 ? void 0 : options.nextPageAfter, options === null || options === void 0 ? void 0 : options.perPage, mustAccept);\n                break;\n        }\n        return response.shares;\n    }\n    async listAll(credentials, shareType = ShareType.Incoming) {\n        const api = this.vaultAPIFactory(credentials).SharesApi;\n        const method = shareType === ShareType.Incoming ? api.incomingSharesGet : api.outgoingSharesGet;\n        const result = await paged_1.getAllPaged(cursor => method(cursor)).then(paged_1.reducePages);\n        return result.shares;\n    }\n    async acceptIncomingShare(credentials, shareId) {\n        try {\n            return await this.vaultAPIFactory(credentials).SharesApi.incomingSharesIdAcceptPut(shareId);\n        }\n        catch (error) {\n            if (error.status === 404) {\n                throw new service_error_1.MeecoServiceError(`Share with id \'${shareId}\' not found for the specified user`);\n            }\n            throw error;\n        }\n    }\n    async deleteSharedItem(credentials, shareId) {\n        try {\n            return await this.vaultAPIFactory(credentials).SharesApi.sharesIdDelete(shareId);\n        }\n        catch (error) {\n            if (error.status === 404) {\n                throw new service_error_1.MeecoServiceError(`Share with id \'${shareId}\' not found for the specified user`);\n            }\n            throw error;\n        }\n    }\n    /**\n     * A shared Item may be either encrypted with a shared data-encryption key (DEK) or with\n     * the user\'s personal DEK. This method inspects the share record and returns the appropriate\n     * key.\n     * @param user\n     * @param shareId\n     */\n    async getShareDEK(credentials, share) {\n        let dataEncryptionKey;\n        if (share.encrypted_dek) {\n            const { keypair } = await this.keystoreAPIFactory(credentials).KeypairApi.keypairsIdGet(share.keypair_external_id);\n            const decryptedPrivateKey = await decrypted_keypair_1.default.fromAPI(credentials.key_encryption_key, keypair).then(k => k.privateKey);\n            dataEncryptionKey = await decryptedPrivateKey.decryptKey(share.encrypted_dek);\n        }\n        else {\n            dataEncryptionKey = credentials.data_encryption_key;\n        }\n        return dataEncryptionKey;\n    }\n    /**\n     * Get a Share record and the Item it references with all Slots decrypted.\n     * @param user\n     * @param shareId\n     * @param shareType Defaults to \'incoming\'.\n     */\n    async getSharedItem(credentials, shareId, shareType = ShareType.Incoming) {\n        const shareAPI = this.vaultAPIFactory(credentials).SharesApi;\n        let shareWithItemData;\n        if (shareType === ShareType.Incoming) {\n            shareWithItemData = await shareAPI.incomingSharesIdItemGet(shareId).catch(err => {\n                if (err.status === 404) {\n                    throw new service_error_1.MeecoServiceError(`Share with id \'${shareId}\' not found for the specified user`);\n                }\n                throw err;\n            });\n            // assumes it is incoming share from here\n            if (!hasAccepted(shareWithItemData.share.acceptance_required)) {\n                // data is not decrypted as terms are not accepted\n                throw new Error(`Share terms not accepted (${shareWithItemData.share.acceptance_required}); Item cannot be decrypted`);\n            }\n            // When Item is already shared with user using another share, retrieve that share and item as\n            // there will be no share item created for requested share, only intent is created.\n            if (shareWithItemData.item_shared_via_another_share_id) {\n                shareWithItemData = await shareAPI.incomingSharesIdItemGet(shareWithItemData.item_shared_via_another_share_id);\n                const str = \'Item was already shared via another share \\n\' +\n                    `Item retrieved using existing shareId: ${shareWithItemData.share.id}`;\n                this.logger.log(str);\n            }\n            this.logger.log(\'Getting share key\');\n            const dek = await this.getShareDEK(credentials, shareWithItemData.share);\n            this.logger.log(\'Decrypting shared Item\');\n            return Object.assign(Object.assign({}, shareWithItemData), { item: await decrypted_item_1.DecryptedItem.fromAPI({ data_encryption_key: dek }, shareWithItemData) });\n        }\n        else {\n            // you own the object, but it is shared with someone\n            // can decrypt immediately\n            return shareAPI.outgoingSharesIdGet(shareId).then(async ({ share }) => {\n                return {\n                    share,\n                    item: await new item_service_1.ItemService(this.environment).get(credentials, share.item_id),\n                };\n            });\n        }\n    }\n    /**\n     * Updates the shared copy of an item with new data in the actual item.\n     * @param user\n     * @param itemId\n     */\n    async updateSharedItem(credentials, itemId) {\n        const item = await new item_service_1.ItemService(this.environment, this.logger).get(credentials, itemId);\n        if (!item.isOwned()) {\n            throw new service_error_1.MeecoServiceError(`Only Item owner can update shared Item.`);\n        }\n        this.logger.log(\'Retrieving Share Public Keys\');\n        // retrieve the list of shares IDs and public keys via\n        const { shares } = await this.vaultAPIFactory(credentials).SharesApi.itemsIdSharesGet(itemId);\n        // prepare request body\n        // use the same DEK for all updates, it\'s the same data...\n        const dek = symmetric_key_1.SymmetricKey.generate();\n        const result = await Promise.all(shares.map(async (shareKey) => {\n            const sharePublicKey = new rsa_public_key_1.default(shareKey.public_key);\n            const encryptedDek = await sharePublicKey.encryptKey(dek);\n            const shareDek = {\n                share_id: shareKey.id,\n                dek: encryptedDek,\n            };\n            this.logger.log(\'Re-Encrypt all slots\');\n            const slot_values = await item.toEncryptedSlotValues({\n                data_encryption_key: dek,\n            });\n            // server create default slots for template\n            const slot_values_with_template_default_slots = this.addMissingTemplateDefaultSlots(item.slots, slot_values);\n            return {\n                share_dek: shareDek,\n                slot_values: slot_values_with_template_default_slots,\n                share_id: shareKey.id,\n            };\n        }));\n        const putItemSharesRequest = {\n            share_deks: [],\n            slot_values: [],\n            client_tasks: [],\n        };\n        result.map(r => {\n            var _a;\n            (_a = putItemSharesRequest.share_deks) === null || _a === void 0 ? void 0 : _a.push(r.share_dek);\n            r.slot_values.map(sv => {\n                var _a;\n                // TODO bug in API-SDK types\n                sv.encrypted_value = sv.encrypted_value === \'\' ? null : sv.encrypted_value;\n                (_a = putItemSharesRequest.slot_values) === null || _a === void 0 ? void 0 : _a.push(Object.assign(Object.assign({}, sv), { share_id: r.share_id }));\n            });\n        });\n        // put items/{id}/shares\n        // TODO skip/alert if no shares\n        return this.vaultAPIFactory(credentials)\n            .SharesApi.itemsIdSharesPut(itemId, putItemSharesRequest)\n            .catch(err => {\n            if (err.status === 400) {\n                throw new Error(\'Error updating shares: \' + err.statusText);\n            }\n            throw err;\n        });\n    }\n    addMissingTemplateDefaultSlots(decryptedSlots, slot_values) {\n        decryptedSlots.forEach(ds => {\n            if (!ds.value && !slot_values.find(f => f.slot_id === ds.id)) {\n                slot_values.push({\n                    slot_id: ds.id,\n                });\n            }\n        });\n        return slot_values;\n    }\n}\nexports.ShareService = ShareService;\n/**\n * @visibleForTesting\n * @ignore\n */\nShareService.Date = global.Date;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/webpack/buildin/global.js */ "../../node_modules/webpack/buildin/global.js")))\n\n//# sourceURL=webpack:///../sdk/src/services/share-service.ts?')},"../sdk/src/services/template-service.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.TemplateService = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");\nconst sdk_template_1 = __webpack_require__(/*! ../models/sdk-template */ "../sdk/src/models/sdk-template.ts");\nconst paged_1 = __webpack_require__(/*! ../util/paged */ "../sdk/src/util/paged.ts");\nconst service_1 = tslib_1.__importDefault(__webpack_require__(/*! ./service */ "../sdk/src/services/service.ts"));\n/**\n * List and fetch available templates for Meeco Items from the API.\n */\nclass TemplateService extends service_1.default {\n    getAPI(token) {\n        return this.vaultAPIFactory(token).ItemTemplateApi;\n    }\n    async list(credentials, spec, options) {\n        return this.vaultAPIFactory(credentials).ItemTemplateApi.itemTemplatesGet(spec === null || spec === void 0 ? void 0 : spec.classificationScheme, spec === null || spec === void 0 ? void 0 : spec.classificationName, spec === null || spec === void 0 ? void 0 : spec.like, options === null || options === void 0 ? void 0 : options.nextPageAfter, options === null || options === void 0 ? void 0 : options.perPage);\n    }\n    async listAll(credentials, spec) {\n        const api = this.vaultAPIFactory(credentials).ItemTemplateApi;\n        return paged_1.getAllPaged(cursor => api.itemTemplatesGet(spec === null || spec === void 0 ? void 0 : spec.classificationScheme, spec === null || spec === void 0 ? void 0 : spec.classificationName, spec === null || spec === void 0 ? void 0 : spec.like, cursor)).then(paged_1.reducePages);\n    }\n    async get(credentials, id) {\n        const response = await this.vaultAPIFactory(credentials).ItemTemplateApi.itemTemplatesIdGet(id);\n        return sdk_template_1.SDKTemplate.fromAPI(response);\n    }\n    /**\n     * Search for an ItemTemplate by name, returning `undefined` if it is not found.\n     *\n     * Note that this patches a missing API method, so may take longer than expected to execute.\n     * Any call will cause at least two API calls, possibly many more if there are lots of templates.\n     */\n    async findByName(credentials, name, spec) {\n        const api = this.vaultAPIFactory(credentials).ItemTemplateApi;\n        const pages = paged_1.pagedToGenerator(cursor => api.itemTemplatesGet(spec === null || spec === void 0 ? void 0 : spec.classificationScheme, spec === null || spec === void 0 ? void 0 : spec.classificationName, spec === null || spec === void 0 ? void 0 : spec.like, cursor));\n        for (const templateP of pages) {\n            const templates = await templateP;\n            const result = templates.item_templates.find(x => x.name === name);\n            if (result) {\n                // ensure we have the right slots and attachments by calling the API directly\n                return api.itemTemplatesIdGet(result.id).then(sdk_template_1.SDKTemplate.fromAPI);\n            }\n        }\n        return undefined;\n    }\n}\nexports.TemplateService = TemplateService;\n\n\n//# sourceURL=webpack:///../sdk/src/services/template-service.ts?')},"../sdk/src/services/user-service.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserService = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"../../node_modules/tslib/tslib.es6.js\");\nconst auth_data_1 = __webpack_require__(/*! ../models/auth-data */ \"../sdk/src/models/auth-data.ts\");\nconst decrypted_keypair_1 = tslib_1.__importDefault(__webpack_require__(/*! ../models/decrypted-keypair */ \"../sdk/src/models/decrypted-keypair.ts\"));\nconst service_error_1 = __webpack_require__(/*! ../models/service-error */ \"../sdk/src/models/service-error.ts\");\nconst srp_session_1 = __webpack_require__(/*! ../models/srp-session */ \"../sdk/src/models/srp-session.ts\");\nconst symmetric_key_1 = __webpack_require__(/*! ../models/symmetric-key */ \"../sdk/src/models/symmetric-key.ts\");\nconst secrets_1 = tslib_1.__importDefault(__webpack_require__(/*! ../util/secrets */ \"../sdk/src/util/secrets.ts\"));\nconst service_1 = tslib_1.__importDefault(__webpack_require__(/*! ./service */ \"../sdk/src/services/service.ts\"));\n/**\n * Create and update Meeco Users.\n */\nclass UserService extends service_1.default {\n    constructor() {\n        super(...arguments);\n        this.vaultKeypairExternalId = UserService.VAULT_PAIR_EXTERNAL_IDENTIFIER;\n        this.keyGen = secrets_1.default;\n    }\n    getAPI(token) {\n        return this.vaultAPIFactory(token).UserApi;\n    }\n    async requestKeyPair(credentials) {\n        const vaultUserApi = this.keystoreAPIFactory(credentials).KeypairApi;\n        const { keypair } = await vaultUserApi.keypairsExternalIdExternalIdGet(this.vaultKeypairExternalId);\n        return decrypted_keypair_1.default.fromAPI(credentials.key_encryption_key, keypair);\n    }\n    async requestExternalAdmissionTokens(credentials) {\n        const keystoreExternalAdmissionApi = this.keystoreAPIFactory(credentials)\n            .ExternalAdmissionTokensApi;\n        this.logger.log('Request external admission tokens from keystore');\n        return keystoreExternalAdmissionApi\n            .externalAdmissionTokensGet()\n            .then(res => res.external_admission_token);\n    }\n    async generateAndStoreKeyEncryptionKey(credentials, derivedKey) {\n        this.logger.log('Generate and store key encryption key');\n        const kek = symmetric_key_1.SymmetricKey.generate();\n        const encryptedKEK = await derivedKey.encryptKey(kek);\n        const keystoreKeyEncryptionKeyApi = this.keystoreAPIFactory(credentials).KeyEncryptionKeyApi;\n        await keystoreKeyEncryptionKeyApi.keyEncryptionKeyPost({\n            serialized_key_encryption_key: encryptedKEK,\n        });\n        return kek;\n    }\n    async getKeyEncryptionKey(credentials, derivedKey) {\n        this.logger.log('Requesting key encryption key');\n        const keystoreKeyEncryptionKeyApi = this.keystoreAPIFactory(credentials).KeyEncryptionKeyApi;\n        const { key_encryption_key } = await keystoreKeyEncryptionKeyApi.keyEncryptionKeyGet();\n        return derivedKey.decryptKey(key_encryption_key.serialized_key_encryption_key);\n    }\n    async generateAndStoreDataEncryptionKey(keyEncryptionKey, credentials) {\n        this.logger.log('Generate and store data encryption key');\n        const dek = symmetric_key_1.SymmetricKey.generate();\n        const dekEncryptedWithKEK = await keyEncryptionKey.encryptKey(dek);\n        const keystoreDataEncryptionKeyApi = this.keystoreAPIFactory(credentials).DataEncryptionKeyApi;\n        const stored = await keystoreDataEncryptionKeyApi.dataEncryptionKeysPost({\n            serialized_data_encryption_key: dekEncryptedWithKEK,\n        });\n        return {\n            key: dek,\n            serializedEncrypted: dekEncryptedWithKEK,\n            id: stored.data_encryption_key.id,\n        };\n    }\n    async getDataEncryptionKey(credentials, encryptionSpaceId) {\n        this.logger.log('Requesting data encryption key');\n        const keystoreDataEncryptionKeyApi = this.keystoreAPIFactory(credentials).DataEncryptionKeyApi;\n        const { data_encryption_key } = await keystoreDataEncryptionKeyApi.dataEncryptionKeysIdGet(encryptionSpaceId);\n        return credentials.key_encryption_key.decryptKey(data_encryption_key.serialized_data_encryption_key);\n    }\n    async generateAndStoreVaultKeyPair(credentials) {\n        this.logger.log('Generate and store vault key pair');\n        const keyPair = await decrypted_keypair_1.default.generate();\n        const keystoreKeypairApi = this.keystoreAPIFactory(credentials).KeypairApi;\n        const privateKeyEncryptedWithKEK = await credentials.key_encryption_key.encryptKey(keyPair.privateKey);\n        await keystoreKeypairApi.keypairsPost({\n            public_key: keyPair.publicKey.key,\n            encrypted_serialized_key: privateKeyEncryptedWithKEK,\n            external_identifiers: [this.vaultKeypairExternalId],\n        });\n        return keyPair;\n    }\n    async createNewVaultUser(keyPair, vaultAdmissionToken) {\n        this.logger.log('Create vault api user');\n        // No key required as we're only registering a new user\n        const vaultUserApi = this.vaultAPIFactory({ vault_access_token: '' }).UserApi;\n        const vaultUser = await vaultUserApi.mePost({\n            public_key: keyPair.publicKey.key,\n            admission_token: vaultAdmissionToken,\n        });\n        const decryptedVaultSessionToken = await keyPair.privateKey.decryptToken(vaultUser.encrypted_session_authentication_string);\n        return {\n            user: vaultUser.user,\n            vault_access_token: decryptedVaultSessionToken,\n        };\n    }\n    async getVaultSession(keyPair) {\n        // No auth key required as we're only logging in\n        const sessionApi = this.vaultAPIFactory({ vault_access_token: '' }).SessionApi;\n        const { session } = await sessionApi.sessionPost({\n            public_key: keyPair.publicKey.key,\n        });\n        const decryptedVaultSessionToken = await keyPair.privateKey.decryptToken(session.encrypted_session_authentication_string);\n        const userResponse = await this.getUser({ vault_access_token: decryptedVaultSessionToken });\n        return {\n            user: userResponse.user,\n            vault_access_token: decryptedVaultSessionToken,\n        };\n    }\n    async createPrivateEncryptionSpaceForUser(credentials, keyEncryptionKey) {\n        const vaultUserApi = this.vaultAPIFactory(credentials).UserApi;\n        const dek = await this.generateAndStoreDataEncryptionKey(keyEncryptionKey, credentials);\n        this.logger.log('Update vault encryption space');\n        await vaultUserApi.mePut({\n            user: {\n                private_dek_external_id: dek.id,\n            },\n        });\n        return dek;\n    }\n    /**\n     * Request a new random username from the Keystore API to use for user creation\n     */\n    async generateUsername(captcha_token) {\n        this.logger.log('Generating username');\n        return this.keystoreAPIFactory({ keystore_access_token: '' })\n            .UserApi.srpUsernamePost({\n            captcha_token,\n        })\n            .then(res => res.username);\n    }\n    /**\n     * Usernames for secrets can be generated via {@link generateUsername}\n     */\n    async create(userPassword, secret) {\n        await this.registerKeystoreViaSRP(userPassword, secret);\n        const sessionAuthenticationToken = await this.loginKeystoreViaSRP(userPassword, secret);\n        const { vault_api_admission_token } = await this.requestExternalAdmissionTokens(sessionAuthenticationToken);\n        const derivedKey = await this.keyGen.derivePDKFromSecret(userPassword, secret);\n        const kek = await this.generateAndStoreKeyEncryptionKey(sessionAuthenticationToken, derivedKey);\n        const keyPair = await this.generateAndStoreVaultKeyPair(Object.assign(Object.assign({}, sessionAuthenticationToken), { key_encryption_key: kek }));\n        const { vault_access_token } = await this.createNewVaultUser(keyPair, vault_api_admission_token);\n        const privateEncryptionSpace = await this.createPrivateEncryptionSpaceForUser(Object.assign(Object.assign({}, sessionAuthenticationToken), { vault_access_token }), kek);\n        return new auth_data_1.AuthData(Object.assign(Object.assign({ secret }, sessionAuthenticationToken), { vault_access_token, data_encryption_key: privateEncryptionSpace.key, key_encryption_key: kek, passphrase_derived_key: derivedKey }));\n    }\n    async registerKeystoreViaSRP(userPassword, secret) {\n        this.logger.log('Initializing SRP');\n        const username = this.keyGen.usernameFromSecret(secret);\n        const srpPassword = await this.keyGen.srpPasswordFromSecret(userPassword, secret);\n        const srpSession = await new srp_session_1.SRPSession().init(username, srpPassword);\n        const verifier = await srpSession.createVerifier();\n        this.logger.log('Create SRP keystore user');\n        await this.keystoreAPIFactory({ keystore_access_token: '' })\n            .UserApi.srpUsersPost({\n            username,\n            srp_salt: verifier.salt,\n            srp_verifier: verifier.verifier,\n        })\n            .catch(err => {\n            if (err.status === 400) {\n                return err.json().then(result => {\n                    var _a;\n                    if (((_a = result.errors[0]) === null || _a === void 0 ? void 0 : _a.error) === 'username_taken') {\n                        // User exists - can continue on to try login instead\n                    }\n                    else {\n                        throw err;\n                    }\n                });\n            }\n            else {\n                throw err;\n            }\n        });\n    }\n    async loginKeystoreViaSRP(userPassword, secret) {\n        const username = this.keyGen.usernameFromSecret(secret);\n        this.logger.log('Starting SRP login');\n        const password = await this.keyGen.srpPasswordFromSecret(userPassword, secret);\n        const srpSession = await new srp_session_1.SRPSession().init(username, password);\n        const srp_a = await srpSession.getClientPublic();\n        this.logger.log('Requesting SRP challenge from server');\n        const challenge = await this.keystoreAPIFactory({ keystore_access_token: '' })\n            .UserApi.srpChallengesPost({\n            srp_a,\n            username,\n        })\n            .then(result => result.challenge);\n        const srp_m = await srpSession.computeProofFromChallenge({\n            salt: challenge.challenge_salt,\n            serverPublic: challenge.challenge_b,\n        });\n        this.logger.log('Creating SRP session with proof');\n        const authString = await this.keystoreAPIFactory({ keystore_access_token: '' })\n            .SessionApi.srpSessionPost({\n            username,\n            srp_a,\n            srp_m,\n        })\n            .then(res => res.session.session_authentication_string)\n            .catch(err => {\n            if (err.status === 401) {\n                throw new service_error_1.MeecoServiceError('Login failed - please check details', service_error_1.ERROR_CODES.LoginFailed);\n            }\n            throw err;\n        });\n        return { keystore_access_token: authString };\n    }\n    /**\n     * @deprecated use {@link getAuthData} instead.\n     */\n    async get(userPassword, secret) {\n        return this.getAuthData(userPassword, secret);\n    }\n    /**\n     * Given a user's passphrase and secret - fetch all data required to interact with Meeco's APIs on their behalf such as encryption keys\n     */\n    async getAuthData(userPassword, secret) {\n        this.logger.log('Deriving keys');\n        const derivedKey = await this.keyGen.derivePDKFromSecret(userPassword, secret);\n        const sessionAuthenticationToken = await this.loginKeystoreViaSRP(userPassword, secret);\n        const kek = await this.getKeyEncryptionKey(sessionAuthenticationToken, derivedKey);\n        const credentials = Object.assign(Object.assign({}, sessionAuthenticationToken), { key_encryption_key: kek });\n        const keyPair = await this.requestKeyPair(credentials);\n        const { user, vault_access_token } = await this.getVaultSession(keyPair);\n        const dek = await this.getDataEncryptionKey(credentials, user.private_dek_external_id);\n        return new auth_data_1.AuthData(Object.assign(Object.assign({ secret }, sessionAuthenticationToken), { vault_access_token, data_encryption_key: dek, key_encryption_key: kek, passphrase_derived_key: derivedKey }));\n    }\n    /**\n     * Creates a Keystore token for the user.\n     * @param userPassword\n     * @param secret\n     */\n    async createKeystoreToken(userPassword, secret) {\n        // This method abstracts the login method type,\n        // Better to do that than make the following method public.\n        return this.loginKeystoreViaSRP(userPassword, secret);\n    }\n    /**\n     * Create a new Vault session or get the token for an existing session.\n     * @param userPassword\n     * @param secret\n     */\n    async getOrCreateVaultToken(userPassword, secret) {\n        this.logger.log('Deriving keys');\n        // TODO - this is quite similar to getAuthData, only it doesn't download the DEK\n        // Could factor out the differences.\n        const sessionAuthenticationToken = await this.loginKeystoreViaSRP(userPassword, secret);\n        const derivedKey = await this.keyGen.derivePDKFromSecret(userPassword, secret);\n        const kek = await this.getKeyEncryptionKey(sessionAuthenticationToken, derivedKey);\n        const keyPair = await this.requestKeyPair(Object.assign(Object.assign({}, sessionAuthenticationToken), { key_encryption_key: kek }));\n        const { vault_access_token } = await this.getVaultSession(keyPair);\n        return { vault_access_token };\n    }\n    getUser(credentials) {\n        return this.vaultAPIFactory(credentials).UserApi.meGet();\n    }\n    /**\n     * Invalidate all of the provided tokens.\n     */\n    async deleteSessionTokens(vault_access_token, keystore_access_token) {\n        return Promise.all([\n            vault_access_token\n                ? this.vaultAPIFactory({ vault_access_token }).SessionApi.sessionDelete()\n                : null,\n            keystore_access_token\n                ? this.keystoreAPIFactory({ keystore_access_token }).SessionApi.sessionDelete()\n                : null,\n        ]).then(); // elide the individual responses\n    }\n}\nexports.UserService = UserService;\n// This should be more like `auth:my-user:api-sandbox.meeco.me` but the api does not support it\nUserService.VAULT_PAIR_EXTERNAL_IDENTIFIER = 'auth';\n\n\n//# sourceURL=webpack:///../sdk/src/services/user-service.ts?")},"../sdk/src/util/api-factory.ts":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.vaultAPIFactory = exports.keystoreAPIFactory = exports.configureFetch = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"../../node_modules/tslib/tslib.es6.js\");\nconst Keystore = tslib_1.__importStar(__webpack_require__(/*! @meeco/keystore-api-sdk */ \"../../node_modules/@meeco/keystore-api-sdk/lib/esm/index.js\"));\nconst Vault = tslib_1.__importStar(__webpack_require__(/*! @meeco/vault-api-sdk */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/index.js\"));\nconst vault_api_sdk_1 = __webpack_require__(/*! @meeco/vault-api-sdk */ \"../sdk/node_modules/@meeco/vault-api-sdk/lib/esm/index.js\");\nconst chalk_1 = __webpack_require__(/*! chalk */ \"../../node_modules/chalk/source/index.js\");\nconst debug_1 = __webpack_require__(/*! debug */ \"../../node_modules/debug/src/browser.js\");\nconst sdk_form_data_1 = tslib_1.__importDefault(__webpack_require__(/*! ./sdk-form-data */ \"../sdk/src/util/sdk-form-data.ts\"));\nlet fetchLib = global.fetch;\n/**\n * Configure the fetch library to use for API requests\n */\nexports.configureFetch = (_fetch) => (fetchLib = _fetch);\nconst debugCurl = debug_1.debug('meeco:http');\nglobal.FormData = global.FormData || sdk_form_data_1.default;\nconst X_MEECO_API_VERSION = '2.0.0';\n/**\n * Pluck environment and user auth values to create `apiKey` [Keystore.Configuration] parameter\n */\nconst keystoreAPIKeys = (environment, userAuth) => (name) => ({\n    'Meeco-Subscription-Key': environment.keystore.subscription_key,\n    // Must be uppercase\n    // prettier-ignore\n    'Authorization': userAuth.keystore_access_token,\n    'Meeco-Delegation-Id': userAuth.delegation_id || '',\n}[name]);\n/**\n * Pluck environment and user auth values to create `apiKey` [Vault.Configuration] parameter\n */\nconst vaultAPIKeys = (environment, userAuth) => (name) => ({\n    'Meeco-Subscription-Key': environment.vault.subscription_key,\n    // Must be uppercase\n    // prettier-ignore\n    'Authorization': userAuth.vault_access_token,\n    'Meeco-Delegation-Id': userAuth.delegation_id || '',\n}[name]);\nfunction fetchInterceptor(url, options) {\n    debugCurl(chalk_1.blue(`Sending Request:`));\n    debugCurl(toCurl(url, options));\n    return fetchLib(url, options).then(async (response) => {\n        debugCurl(chalk_1.green(`Received Response:`));\n        debugCurl(`\\\nstatus: ${response.status}\nstatusText: ${response.statusText}\n`);\n        return response;\n    });\n}\nconst callApiWithHeaders = (sdk, api, apiMethodName, apiKey, basePath, headers, args) => {\n    const apiInstance = new sdk[api](new vault_api_sdk_1.Configuration({\n        apiKey,\n        basePath,\n        middleware: [],\n        // openapi-sdk style headers\n        headers,\n        fetchApi: fetchInterceptor,\n    }), null, fetchInterceptor);\n    const apiMethod = apiInstance[apiMethodName];\n    // swagger-codegen style headers (Keystore still uses swagger-codegen)\n    if (apiInstance.constructor.__proto__ === Keystore.BaseAPI) {\n        const argsCount = apiMethod.length;\n        const fetchOptions = args[argsCount - 1] || {};\n        fetchOptions.headers = Object.assign(Object.assign({}, headers), fetchOptions.headers);\n        args[argsCount - 1] = fetchOptions;\n    }\n    return apiMethod.call(apiInstance, ...args).catch(err => {\n        if (err.status === 426) {\n            throw new Error('The API returned 426 and therefore does not support this version of the CLI. Please check for an update to the Meeco CLI.');\n        }\n        else {\n            throw err;\n        }\n    });\n};\n/**\n * Helper for constructing instances of Keystore apis with all the required auth and header params\n */\nconst keystoreAPI = (api, environment, userAuth, additionalHeaders = {}) => {\n    return new Proxy({}, {\n        get(target, apiMethodName) {\n            return (...args) => callApiWithHeaders(Keystore, api, apiMethodName, keystoreAPIKeys(environment, userAuth), environment.keystore.url, Object.assign(Object.assign({}, additionalHeaders), { X_MEECO_API_VERSION, X_MEECO_API_COMPONENT: 'keystore' }), args);\n        },\n    });\n};\n/**\n * Helper for constructing instances of Vault apis with all the required auth and header params\n */\nconst vaultAPI = (api, environment, userAuth, additionalHeaders = {}) => {\n    return new Proxy({}, {\n        get(target, apiMethodName) {\n            return (...args) => callApiWithHeaders(Vault, api, apiMethodName, vaultAPIKeys(environment, userAuth), environment.vault.url, Object.assign(Object.assign({}, additionalHeaders), { X_MEECO_API_VERSION, X_MEECO_API_COMPONENT: 'vault' }), args);\n        },\n    });\n};\n/**\n * Results in a factory function that can be passed user auth information and then get\n * arbitrary Keystore api instances to use.\n */\nexports.keystoreAPIFactory = (environment) => (userAuth, headers) => new Proxy({}, {\n    get(target, property) {\n        return keystoreAPI(property, environment, userAuth, headers);\n    },\n});\n/**\n * Results in a factory function that can be passed user auth information and then get\n * arbitrary Vault api instances to use.\n */\nexports.vaultAPIFactory = (environment) => (userAuth, headers) => new Proxy({}, {\n    get(target, property) {\n        return vaultAPI(property, environment, userAuth, headers);\n    },\n});\nconst toCurl = (url, options) => {\n    const defaultHeaders = {\n        'Content-Type': 'application/json',\n    };\n    const allHeaders = Object.assign(Object.assign({}, defaultHeaders), options.headers);\n    const headersString = Object.keys(allHeaders)\n        .map(key => `  --header \"${key}: ${allHeaders[key]}\"`)\n        .join(' \\\\\\n');\n    return `\\\ncurl \\\\\n  ${headersString.trim()} \\\\\n  --request ${options.method} \\\\\n  --data ${options.body || '{}'} \\\\\n  \"${url}\"\n  `;\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/webpack/buildin/global.js */ \"../../node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///../sdk/src/util/api-factory.ts?")},"../sdk/src/util/find-connection-between.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.fetchConnectionWithId = exports.findConnectionBetween = void 0;\nconst connection_service_1 = __webpack_require__(/*! ../services/connection-service */ "../sdk/src/services/connection-service.ts");\n/**\n * Helper to find connection between two users (if one exists)\n * @deprecated Use {@link ConnectionService.findConnectionBetween}\n */\nasync function findConnectionBetween(fromUser, toUser, environment, log) {\n    return new connection_service_1.ConnectionService(environment, log).findConnectionBetween(fromUser, toUser);\n}\nexports.findConnectionBetween = findConnectionBetween;\n/** @deprecated Use {@link ConnectionService.get} */\nasync function fetchConnectionWithId(user, connectionId, environment, log) {\n    return new connection_service_1.ConnectionService(environment, log).get(user, connectionId);\n}\nexports.fetchConnectionWithId = fetchConnectionWithId;\n\n\n//# sourceURL=webpack:///../sdk/src/util/find-connection-between.ts?')},"../sdk/src/util/logger.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toFullLogger = exports.noopLogger = void 0;\nexports.noopLogger = () => { };\nfunction toFullLogger(l) {\n    if (typeof l === 'function') {\n        return {\n            error: m => l('ERROR: ' + m),\n            warn: m => l('WARNING: ' + m),\n            log: l,\n        };\n    }\n    else {\n        return l;\n    }\n}\nexports.toFullLogger = toFullLogger;\n\n\n//# sourceURL=webpack:///../sdk/src/util/logger.ts?")},"../sdk/src/util/paged.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reportIfTruncated = exports.reducePagesTakeLast = exports.reducePages = exports.pagedToGenerator = exports.getAllPaged = exports.resultHasNext = void 0;\n// The type in the API response is not the type in the input...\nfunction cleanInput(x) {\n    return x === null ? undefined : x;\n}\nfunction resultHasNext(r) {\n    const pageExists = r.meta.some(x => x['next_page_exists']) || !!r.next_page_after;\n    if (pageExists && !r.next_page_after) {\n        // Expect this error on API update or bad test cases.\n        throw new Error('Badly formatted response: expected more pages, but property `next_page_after` was not specified');\n    }\n    return pageExists;\n}\nexports.resultHasNext = resultHasNext;\n/**\n * Sequentially get all pages in this collection.\n * This may take a long time, as the cursor is not known until the current query has finished.\n * If you want to stop partway, use `pagedToGenerator`.\n * If the response is an object of arrays, use `reducePages` to flatten the result.\n * @param apiMethod Partially applied API method to collect pages from.\n */\nasync function getAllPaged(apiMethod) {\n    // Recursion: collect results and pass new cursor position\n    const nextCall = (result = [], hasNext, cursor) => {\n        if (hasNext) {\n            return apiMethod(cursor).then(r => {\n                result.push(r);\n                return nextCall(result, resultHasNext(r), cleanInput(r.next_page_after));\n            });\n        }\n        else {\n            return result;\n        }\n    };\n    // Base case: we don't know the cursor until after the first API call\n    return nextCall([], true, undefined);\n}\nexports.getAllPaged = getAllPaged;\n/**\n * Returns all API calls required to visit all pages in this collection.\n * Use this if you need to process the individual responses before proceeding\n * with the query, e.g. when searching.\n * @param apiMethod Partially applied API method to collect pages from.\n */\nfunction* pagedToGenerator(apiMethod) {\n    let hasNext = true;\n    let cursor;\n    while (hasNext) {\n        yield apiMethod(cursor).then(r => {\n            hasNext = resultHasNext(r);\n            cursor = cleanInput(r.next_page_after);\n            return r;\n        });\n    }\n}\nexports.pagedToGenerator = pagedToGenerator;\n/**\n * Merge all Array properties of a and b, except for 'meta' property.\n * For any primitive types and the meta property, take the last one.\n * Throw an Error for any Object properties when checkObjects is not set.\n * @param checkObjects\n * @param a\n * @param b\n */\nfunction combinePages(checkObjects) {\n    return (a, b) => {\n        const result = Object.assign({}, a);\n        Object.entries(result).forEach(([k, e]) => {\n            if (e instanceof Array) {\n                if (k === 'meta') {\n                    result[k] = b[k];\n                }\n                else {\n                    result[k] = e.concat(b[k]);\n                }\n            }\n            else if (e && checkObjects && typeof e === 'object') {\n                throw new Error('Combining paged results for object-valued property \"' + k + '\" is probably an error');\n            }\n            else {\n                result[k] = b[k];\n            }\n        });\n        return result;\n    };\n}\n/**\n * Join responses by appending individual components.\n * Any object-valued properties with raise an error.\n * Primitive-typed properties will take the last value.\n */\nfunction reducePages(pages) {\n    return pages.reduce(combinePages(true));\n}\nexports.reducePages = reducePages;\n/**\n * Join responses by appending individual components.\n * Any non-array properties will have the value of the last response.\n */\nfunction reducePagesTakeLast(pages) {\n    return pages.reduce(combinePages(false));\n}\nexports.reducePagesTakeLast = reducePagesTakeLast;\nfunction reportIfTruncated(log) {\n    return (pagedResult) => {\n        if (resultHasNext(pagedResult)) {\n            log('Some results omitted');\n        }\n        return pagedResult;\n    };\n}\nexports.reportIfTruncated = reportIfTruncated;\n\n\n//# sourceURL=webpack:///../sdk/src/util/paged.ts?")},"../sdk/src/util/sdk-form-data.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// tslint:disable-next-line: no-var-requires\nconst FormData = __webpack_require__(/*! form-data */ \"../../node_modules/form-data/lib/browser.js\");\n/**\n * @hidden\n *\n * This exists because of what appears to be an issue in the generated SDK.\n * Attaching a `Buffer()` to `FormData` does not work if the file name property isn't provided\n * (which it isn't in the generated code).\n * This monkey-patches the constructor of FormData to ensure the argument always exists\n */\nclass SDKFormData extends FormData {\n    append(...args) {\n        if (args[0] === 'attachment[file]' || args[0] === 'binary[file]') {\n            return super.append(args[0], args[1], 'file');\n        }\n        return super.append(...args);\n    }\n}\n// We might be able to assume an existing window.FormData works\n// const _global = this;\nexports.default = SDKFormData;\n\n\n//# sourceURL=webpack:///../sdk/src/util/sdk-form-data.ts?")},"../sdk/src/util/secrets.ts":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"../../node_modules/tslib/tslib.es6.js\");\n// tslint:disable-next-line: no-var-requires\nconst baseX = __webpack_require__(/*! base-x */ \"../../node_modules/base-x/src/index.js\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\");\nconst service_error_1 = __webpack_require__(/*! ../models/service-error */ \"../sdk/src/models/service-error.ts\");\nconst symmetric_key_1 = __webpack_require__(/*! ../models/symmetric-key */ \"../sdk/src/models/symmetric-key.ts\");\nconst cryppo_service_1 = tslib_1.__importDefault(__webpack_require__(/*! ../services/cryppo-service */ \"../sdk/src/services/cryppo-service.ts\"));\n/**\n * Used for dealing with Meeco secrets - used for user authentication and login\n */\nclass Secrets {\n    /**\n     * Pluck the SRP Username from a users' secret\n     */\n    static usernameFromSecret(secret) {\n        const { username } = Secrets.destructureSecret(secret);\n        return username;\n    }\n    /**\n     * Given a user's Secret and Passphrase - derive the Passphrase Derived Key (used to decrypt their Key Encryption Key)\n     */\n    static async derivePDKFromSecret(userEnteredPassword, secret) {\n        const { secretKey } = Secrets.destructureSecret(secret);\n        return Secrets.derivePDK(userEnteredPassword, secretKey);\n    }\n    static async srpPasswordFromSecret(userEnteredPassword, secret) {\n        const { secretKey } = Secrets.destructureSecret(secret);\n        return Secrets.deriveSRPPasswordFromSecretKey(userEnteredPassword, secretKey);\n    }\n    /**\n     * Generate a new user Secret from the provided username.\n     * Usernames can be requested via the {@link UserService}\n     */\n    static generateSecret(username) {\n        const key = cryppo_service_1.default.generateRandomKey(32);\n        const secretKey = Secrets.encodeBase58(key);\n        const version = 1;\n        const readable = secretKey.match(/(.{1,6})/g).join('-');\n        return `${version}.${username}.${readable}`;\n    }\n    /**\n     * Public for testing purposes only.\n     *\n     * @ignore\n     */\n    static encodeBase58(val) {\n        // https://tools.ietf.org/html/draft-msporny-base58-01\n        const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n        const input = val instanceof Buffer ? val : buffer_1.Buffer.from(val, 'binary');\n        return baseX(ALPHABET).encode(input);\n    }\n    /**\n     * Separate out a user's secret into its component parts\n     */\n    static destructureSecret(secret) {\n        const [version, username, secretKey] = secret.split('.');\n        if (!version || !username || !secretKey) {\n            throw new service_error_1.MeecoServiceError('Invalid secret format', service_error_1.ERROR_CODES.InvalidSecretFormat);\n        }\n        return {\n            version,\n            username,\n            secretKey: secretKey.replace(/-/g, ''),\n        };\n    }\n    static async deriveSRPPasswordFromSecretKey(password, secretKey) {\n        if (secretKey.indexOf('.') >= 0) {\n            throw new Error('Incorrect secret provided. Please destructure the secret_key.');\n        }\n        const salt = secretKey\n            .split('')\n            .reverse()\n            .join('');\n        const { key } = await cryppo_service_1.default.generateDerivedKey(Object.assign(Object.assign({}, this.derivationConstants), { key: password, useSalt: salt }));\n        return key;\n    }\n    static async derivePDK(password, secretKey) {\n        if (secretKey.indexOf('.') >= 0) {\n            throw new Error('Incorrect secret provided. Please destructure the secret_key.');\n        }\n        const { key } = await cryppo_service_1.default.generateDerivedKey(Object.assign(Object.assign({}, this.derivationConstants), { key: password, useSalt: secretKey }));\n        return symmetric_key_1.SymmetricKey.fromRaw(key);\n    }\n}\nexports.default = Secrets;\nSecrets.derivationConstants = {\n    iterationVariance: 0,\n    minIterations: 100000,\n    length: 32,\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/node-libs-browser/node_modules/buffer/index.js */ \"../../node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../sdk/src/util/secrets.ts?")},"../sdk/src/util/slot-helpers.ts":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = __webpack_require__(/*! tslib */ \"../../node_modules/tslib/tslib.es6.js\");\nconst parameterize_1 = tslib_1.__importDefault(__webpack_require__(/*! parameterize */ \"../../node_modules/parameterize/parameterize.js\"));\nconst value_verification_1 = __webpack_require__(/*! ./value-verification */ \"../sdk/src/util/value-verification.ts\");\nclass SlotHelpers {\n    /**\n     * Updates 'value' to the decrypted 'encrypted_value', decrypts encrypted_value_verification_key\n     * and checks value_verification_hash (if present), and sets 'encrypted' to false.\n     */\n    static async decryptSlot(credentials, slot) {\n        const { data_encryption_key: dek } = credentials;\n        // ensure result really does match the type\n        function cleanResult(spec) {\n            const decrypted = Object.assign(Object.assign({}, slot), spec);\n            delete decrypted.encrypted_value;\n            delete decrypted.encrypted_value_verification_key;\n            return decrypted;\n        }\n        if (!slot.encrypted) {\n            return cleanResult({\n                encrypted: false,\n                value: null,\n                value_verification_key: null,\n            });\n        }\n        else if (slot.encrypted_value === null) {\n            // need to check encrypted_value as binaries will also have `encrypted: true`\n            return cleanResult({\n                encrypted: true,\n                value: null,\n                value_verification_key: null,\n            });\n        }\n        const value = (await dek.decryptString(slot.encrypted_value));\n        let decryptedValueVerificationKey = null;\n        if (slot.encrypted_value_verification_key !== null &&\n            slot.encrypted_value_verification_key !== undefined) {\n            decryptedValueVerificationKey = await dek.decryptKey(slot.encrypted_value_verification_key);\n            if (!slot.own &&\n                slot.value_verification_hash !== null &&\n                !value_verification_1.verifyHashedValue(decryptedValueVerificationKey, value, slot.value_verification_hash)) {\n                throw new Error(`Decrypted slot ${slot.name} with value ${value} does not match original value.`);\n            }\n        }\n        return cleanResult({\n            encrypted: false,\n            value,\n            value_verification_key: decryptedValueVerificationKey,\n        });\n    }\n    /**\n     * Encrypt the value in the Slot. Undefined values are not changed.\n     *\n     * After successful encryption, Slot.encrypted = true and Slot.value is deleted.\n     * @param dek Data Encryption Key\n     */\n    static async encryptSlot(credentials, slot) {\n        const { data_encryption_key: dek } = credentials;\n        const encrypted = Object.assign(Object.assign({}, slot), { encrypted: false, encrypted_value: undefined, encrypted_value_verification_key: undefined });\n        if (slot.value) {\n            encrypted.encrypted_value = (await dek.encryptString(slot.value));\n            delete encrypted.value;\n            encrypted.encrypted = true;\n        }\n        if (slot.value_verification_key) {\n            encrypted.encrypted_value_verification_key = await dek.encryptKey(slot.value_verification_key);\n            delete encrypted.value_verification_key;\n        }\n        return encrypted;\n    }\n    /**\n     * Add a verification hash and key to the Slot.\n     * This is necessary to share an Item that you own.\n     * This should only be done for items you own, not on-shared items!\n     */\n    static async addHashAndKey(slot) {\n        if (!slot.own) {\n            throw new Error('Overwriting verification hash of a non-owned Slot');\n        }\n        if (slot.value) {\n            const valueVerificationKey = value_verification_1.newValueVerificationKey();\n            const verificationHash = SlotHelpers.valueVerificationHash(valueVerificationKey, slot.value);\n            return Object.assign(Object.assign({}, slot), { value_verification_key: valueVerificationKey, value_verification_hash: verificationHash });\n        }\n        else {\n            return slot;\n        }\n    }\n    static anyDuplicateSlotNames(slots) {\n        const namesSeen = {};\n        for (const s of slots) {\n            if (s.name) {\n                if (namesSeen[s.name]) {\n                    return true;\n                }\n                namesSeen[s.name] = s.name;\n            }\n        }\n        return false;\n    }\n    static findWithEncryptedValue(slots) {\n        return slots.find(s => s['encrypted_value'] != null);\n    }\n    /**\n     * Convert Slot names to labels as per the backend URL-safe encoding.\n     * For example `A Slot/name?` becomes `a_slot_name`.\n     */\n    static nameFromLabel(label) {\n        return parameterize_1.default(label, undefined, '_');\n    }\n    /**\n     * Encrypts a slot and adds verification hash and verification key for sharing.\n     * Use to POST share data.\n     */\n    static async toEncryptedSlotValue(credentials, slot) {\n        let withHash = slot;\n        if (slot.own) {\n            withHash = await SlotHelpers.addHashAndKey(slot);\n        }\n        else {\n            // re-encrypt key, keep hash\n            if (!slot.value_verification_hash || !slot.value_verification_key) {\n                throw Error('value verification key or hash missing in on-shared slot');\n            }\n            // verification hash must be null (API constraint)\n            withHash = Object.assign(Object.assign({}, slot), { value_verification_hash: null });\n        }\n        const { id, encrypted_value, encrypted_value_verification_key, value_verification_hash, } = await SlotHelpers.encryptSlot(credentials, withHash);\n        // TODO due to an API bug, this doesn't typecheck when encrypted_value is undefined\n        return {\n            slot_id: id,\n            encrypted_value,\n            encrypted_value_verification_key,\n            value_verification_hash,\n        };\n    }\n}\nexports.default = SlotHelpers;\n// for mocking during testing\nSlotHelpers.valueVerificationHash = global.valueVerificationHash || value_verification_1.valueVerificationHash;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/webpack/buildin/global.js */ \"../../node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///../sdk/src/util/slot-helpers.ts?")},"../sdk/src/util/transformers.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.slotToNewSlot = exports.toNestedSlot = exports.toNestedClassificationNode = void 0;\nconst slot_types_1 = __webpack_require__(/*! ../models/slot-types */ "../sdk/src/models/slot-types.ts");\n/** The API typically returns types with null props, but accepts only undefined */\nfunction fix(x) {\n    return x === null ? undefined : x;\n}\nfunction toNestedClassificationNode(node) {\n    return Object.keys(node).reduce((acc, k) => {\n        acc[k] = fix(node[k]);\n        return acc;\n    }, {});\n}\nexports.toNestedClassificationNode = toNestedClassificationNode;\nfunction toNestedSlot(slot, classificationNodes) {\n    const result = Object.assign(Object.assign({}, slot), { image_id: slot.image ? slot.image : undefined, classification_node_attributes: classificationNodes });\n    for (const k in result) {\n        if (result[k] === null) {\n            delete result[k];\n        }\n    }\n    return result;\n}\nexports.toNestedSlot = toNestedSlot;\n/**\n * Convert API returned Slots to NewSlot creation requests.\n * Renames image_id to image, and removes all props with null value.\n */\nfunction slotToNewSlot(slot) {\n    const result = Object.assign(Object.assign({}, slot), { slot_type_name: slot_types_1.SlotType[slot.slot_type_name], image_id: slot.image ? slot.image : undefined });\n    for (const k in result) {\n        if (result[k] === null) {\n            delete result[k];\n        }\n    }\n    return result;\n}\nexports.slotToNewSlot = slotToNewSlot;\n\n\n//# sourceURL=webpack:///../sdk/src/util/transformers.ts?')},"../sdk/src/util/value-verification.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.verifyHashedValue = exports.valueVerificationHash = exports.newValueVerificationKey = exports.VALUE_VERIFICATION_KEY_LENGTH = void 0;\nconst hmac_digest_1 = __webpack_require__(/*! @meeco/cryppo/dist/src/digests/hmac-digest */ "../../node_modules/@meeco/cryppo/dist/src/digests/hmac-digest.js");\nconst symmetric_key_1 = __webpack_require__(/*! ../models/symmetric-key */ "../sdk/src/models/symmetric-key.ts");\nexports.VALUE_VERIFICATION_KEY_LENGTH = 64;\nfunction newValueVerificationKey() {\n    return symmetric_key_1.SymmetricKey.generate(exports.VALUE_VERIFICATION_KEY_LENGTH);\n}\nexports.newValueVerificationKey = newValueVerificationKey;\n/**\n * Verify integrity of shared Slot Values using message authentication hashing.\n * @param verificationKey Recommended to be 64 bytes long.\n * @param value Plaintext to hash.\n */\nfunction valueVerificationHash(verificationKey, value) {\n    return hmac_digest_1.hmacSha256Digest(verificationKey.key, value);\n}\nexports.valueVerificationHash = valueVerificationHash;\nfunction verifyHashedValue(verificationKey, value, hash) {\n    return valueVerificationHash(verificationKey, value) === hash;\n}\nexports.verifyHashedValue = verifyHashedValue;\n\n\n//# sourceURL=webpack:///../sdk/src/util/value-verification.ts?')},"./node_modules/mithril/api/mount-redraw.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar Vnode = __webpack_require__(/*! ../render/vnode */ "./node_modules/mithril/render/vnode.js")\n\nmodule.exports = function(render, schedule, console) {\n\tvar subscriptions = []\n\tvar rendering = false\n\tvar pending = false\n\n\tfunction sync() {\n\t\tif (rendering) throw new Error("Nested m.redraw.sync() call")\n\t\trendering = true\n\t\tfor (var i = 0; i < subscriptions.length; i += 2) {\n\t\t\ttry { render(subscriptions[i], Vnode(subscriptions[i + 1]), redraw) }\n\t\t\tcatch (e) { console.error(e) }\n\t\t}\n\t\trendering = false\n\t}\n\n\tfunction redraw() {\n\t\tif (!pending) {\n\t\t\tpending = true\n\t\t\tschedule(function() {\n\t\t\t\tpending = false\n\t\t\t\tsync()\n\t\t\t})\n\t\t}\n\t}\n\n\tredraw.sync = sync\n\n\tfunction mount(root, component) {\n\t\tif (component != null && component.view == null && typeof component !== "function") {\n\t\t\tthrow new TypeError("m.mount(element, component) expects a component, not a vnode")\n\t\t}\n\n\t\tvar index = subscriptions.indexOf(root)\n\t\tif (index >= 0) {\n\t\t\tsubscriptions.splice(index, 2)\n\t\t\trender(root, [], redraw)\n\t\t}\n\n\t\tif (component != null) {\n\t\t\tsubscriptions.push(root, component)\n\t\t\trender(root, Vnode(component), redraw)\n\t\t}\n\t}\n\n\treturn {mount: mount, redraw: redraw}\n}\n\n\n//# sourceURL=webpack:///./node_modules/mithril/api/mount-redraw.js?')},"./node_modules/mithril/api/router.js":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(setImmediate) {\n\nvar Vnode = __webpack_require__(/*! ../render/vnode */ "./node_modules/mithril/render/vnode.js")\nvar m = __webpack_require__(/*! ../render/hyperscript */ "./node_modules/mithril/render/hyperscript.js")\nvar Promise = __webpack_require__(/*! ../promise/promise */ "./node_modules/mithril/promise/promise.js")\n\nvar buildPathname = __webpack_require__(/*! ../pathname/build */ "./node_modules/mithril/pathname/build.js")\nvar parsePathname = __webpack_require__(/*! ../pathname/parse */ "./node_modules/mithril/pathname/parse.js")\nvar compileTemplate = __webpack_require__(/*! ../pathname/compileTemplate */ "./node_modules/mithril/pathname/compileTemplate.js")\nvar assign = __webpack_require__(/*! ../pathname/assign */ "./node_modules/mithril/pathname/assign.js")\n\nvar sentinel = {}\n\nmodule.exports = function($window, mountRedraw) {\n\tvar fireAsync\n\n\tfunction setPath(path, data, options) {\n\t\tpath = buildPathname(path, data)\n\t\tif (fireAsync != null) {\n\t\t\tfireAsync()\n\t\t\tvar state = options ? options.state : null\n\t\t\tvar title = options ? options.title : null\n\t\t\tif (options && options.replace) $window.history.replaceState(state, title, route.prefix + path)\n\t\t\telse $window.history.pushState(state, title, route.prefix + path)\n\t\t}\n\t\telse {\n\t\t\t$window.location.href = route.prefix + path\n\t\t}\n\t}\n\n\tvar currentResolver = sentinel, component, attrs, currentPath, lastUpdate\n\n\tvar SKIP = route.SKIP = {}\n\n\tfunction route(root, defaultRoute, routes) {\n\t\tif (root == null) throw new Error("Ensure the DOM element that was passed to `m.route` is not undefined")\n\t\t// 0 = start\n\t\t// 1 = init\n\t\t// 2 = ready\n\t\tvar state = 0\n\n\t\tvar compiled = Object.keys(routes).map(function(route) {\n\t\t\tif (route[0] !== "/") throw new SyntaxError("Routes must start with a `/`")\n\t\t\tif ((/:([^\\/\\.-]+)(\\.{3})?:/).test(route)) {\n\t\t\t\tthrow new SyntaxError("Route parameter names must be separated with either `/`, `.`, or `-`")\n\t\t\t}\n\t\t\treturn {\n\t\t\t\troute: route,\n\t\t\t\tcomponent: routes[route],\n\t\t\t\tcheck: compileTemplate(route),\n\t\t\t}\n\t\t})\n\t\tvar callAsync = typeof setImmediate === "function" ? setImmediate : setTimeout\n\t\tvar p = Promise.resolve()\n\t\tvar scheduled = false\n\t\tvar onremove\n\n\t\tfireAsync = null\n\n\t\tif (defaultRoute != null) {\n\t\t\tvar defaultData = parsePathname(defaultRoute)\n\n\t\t\tif (!compiled.some(function (i) { return i.check(defaultData) })) {\n\t\t\t\tthrow new ReferenceError("Default route doesn\'t match any known routes")\n\t\t\t}\n\t\t}\n\n\t\tfunction resolveRoute() {\n\t\t\tscheduled = false\n\t\t\t// Consider the pathname holistically. The prefix might even be invalid,\n\t\t\t// but that\'s not our problem.\n\t\t\tvar prefix = $window.location.hash\n\t\t\tif (route.prefix[0] !== "#") {\n\t\t\t\tprefix = $window.location.search + prefix\n\t\t\t\tif (route.prefix[0] !== "?") {\n\t\t\t\t\tprefix = $window.location.pathname + prefix\n\t\t\t\t\tif (prefix[0] !== "/") prefix = "/" + prefix\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This seemingly useless `.concat()` speeds up the tests quite a bit,\n\t\t\t// since the representation is consistently a relatively poorly\n\t\t\t// optimized cons string.\n\t\t\tvar path = prefix.concat()\n\t\t\t\t.replace(/(?:%[a-f89][a-f0-9])+/gim, decodeURIComponent)\n\t\t\t\t.slice(route.prefix.length)\n\t\t\tvar data = parsePathname(path)\n\n\t\t\tassign(data.params, $window.history.state)\n\n\t\t\tfunction fail() {\n\t\t\t\tif (path === defaultRoute) throw new Error("Could not resolve default route " + defaultRoute)\n\t\t\t\tsetPath(defaultRoute, null, {replace: true})\n\t\t\t}\n\n\t\t\tloop(0)\n\t\t\tfunction loop(i) {\n\t\t\t\t// 0 = init\n\t\t\t\t// 1 = scheduled\n\t\t\t\t// 2 = done\n\t\t\t\tfor (; i < compiled.length; i++) {\n\t\t\t\t\tif (compiled[i].check(data)) {\n\t\t\t\t\t\tvar payload = compiled[i].component\n\t\t\t\t\t\tvar matchedRoute = compiled[i].route\n\t\t\t\t\t\tvar localComp = payload\n\t\t\t\t\t\tvar update = lastUpdate = function(comp) {\n\t\t\t\t\t\t\tif (update !== lastUpdate) return\n\t\t\t\t\t\t\tif (comp === SKIP) return loop(i + 1)\n\t\t\t\t\t\t\tcomponent = comp != null && (typeof comp.view === "function" || typeof comp === "function")? comp : "div"\n\t\t\t\t\t\t\tattrs = data.params, currentPath = path, lastUpdate = null\n\t\t\t\t\t\t\tcurrentResolver = payload.render ? payload : null\n\t\t\t\t\t\t\tif (state === 2) mountRedraw.redraw()\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tstate = 2\n\t\t\t\t\t\t\t\tmountRedraw.redraw.sync()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// There\'s no understating how much I *wish* I could\n\t\t\t\t\t\t// use `async`/`await` here...\n\t\t\t\t\t\tif (payload.view || typeof payload === "function") {\n\t\t\t\t\t\t\tpayload = {}\n\t\t\t\t\t\t\tupdate(localComp)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (payload.onmatch) {\n\t\t\t\t\t\t\tp.then(function () {\n\t\t\t\t\t\t\t\treturn payload.onmatch(data.params, path, matchedRoute)\n\t\t\t\t\t\t\t}).then(update, fail)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse update("div")\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfail()\n\t\t\t}\n\t\t}\n\n\t\t// Set it unconditionally so `m.route.set` and `m.route.Link` both work,\n\t\t// even if neither `pushState` nor `hashchange` are supported. It\'s\n\t\t// cleared if `hashchange` is used, since that makes it automatically\n\t\t// async.\n\t\tfireAsync = function() {\n\t\t\tif (!scheduled) {\n\t\t\t\tscheduled = true\n\t\t\t\tcallAsync(resolveRoute)\n\t\t\t}\n\t\t}\n\n\t\tif (typeof $window.history.pushState === "function") {\n\t\t\tonremove = function() {\n\t\t\t\t$window.removeEventListener("popstate", fireAsync, false)\n\t\t\t}\n\t\t\t$window.addEventListener("popstate", fireAsync, false)\n\t\t} else if (route.prefix[0] === "#") {\n\t\t\tfireAsync = null\n\t\t\tonremove = function() {\n\t\t\t\t$window.removeEventListener("hashchange", resolveRoute, false)\n\t\t\t}\n\t\t\t$window.addEventListener("hashchange", resolveRoute, false)\n\t\t}\n\n\t\treturn mountRedraw.mount(root, {\n\t\t\tonbeforeupdate: function() {\n\t\t\t\tstate = state ? 2 : 1\n\t\t\t\treturn !(!state || sentinel === currentResolver)\n\t\t\t},\n\t\t\toncreate: resolveRoute,\n\t\t\tonremove: onremove,\n\t\t\tview: function() {\n\t\t\t\tif (!state || sentinel === currentResolver) return\n\t\t\t\t// Wrap in a fragment to preserve existing key semantics\n\t\t\t\tvar vnode = [Vnode(component, attrs.key, attrs)]\n\t\t\t\tif (currentResolver) vnode = currentResolver.render(vnode[0])\n\t\t\t\treturn vnode\n\t\t\t},\n\t\t})\n\t}\n\troute.set = function(path, data, options) {\n\t\tif (lastUpdate != null) {\n\t\t\toptions = options || {}\n\t\t\toptions.replace = true\n\t\t}\n\t\tlastUpdate = null\n\t\tsetPath(path, data, options)\n\t}\n\troute.get = function() {return currentPath}\n\troute.prefix = "#!"\n\troute.Link = {\n\t\tview: function(vnode) {\n\t\t\tvar options = vnode.attrs.options\n\t\t\t// Remove these so they don\'t get overwritten\n\t\t\tvar attrs = {}, onclick, href\n\t\t\tassign(attrs, vnode.attrs)\n\t\t\t// The first two are internal, but the rest are magic attributes\n\t\t\t// that need censored to not screw up rendering.\n\t\t\tattrs.selector = attrs.options = attrs.key = attrs.oninit =\n\t\t\tattrs.oncreate = attrs.onbeforeupdate = attrs.onupdate =\n\t\t\tattrs.onbeforeremove = attrs.onremove = null\n\n\t\t\t// Do this now so we can get the most current `href` and `disabled`.\n\t\t\t// Those attributes may also be specified in the selector, and we\n\t\t\t// should honor that.\n\t\t\tvar child = m(vnode.attrs.selector || "a", attrs, vnode.children)\n\n\t\t\t// Let\'s provide a *right* way to disable a route link, rather than\n\t\t\t// letting people screw up accessibility on accident.\n\t\t\t//\n\t\t\t// The attribute is coerced so users don\'t get surprised over\n\t\t\t// `disabled: 0` resulting in a button that\'s somehow routable\n\t\t\t// despite being visibly disabled.\n\t\t\tif (child.attrs.disabled = Boolean(child.attrs.disabled)) {\n\t\t\t\tchild.attrs.href = null\n\t\t\t\tchild.attrs["aria-disabled"] = "true"\n\t\t\t\t// If you *really* do want to do this on a disabled link, use\n\t\t\t\t// an `oncreate` hook to add it.\n\t\t\t\tchild.attrs.onclick = null\n\t\t\t} else {\n\t\t\t\tonclick = child.attrs.onclick\n\t\t\t\thref = child.attrs.href\n\t\t\t\tchild.attrs.href = route.prefix + href\n\t\t\t\tchild.attrs.onclick = function(e) {\n\t\t\t\t\tvar result\n\t\t\t\t\tif (typeof onclick === "function") {\n\t\t\t\t\t\tresult = onclick.call(e.currentTarget, e)\n\t\t\t\t\t} else if (onclick == null || typeof onclick !== "object") {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t} else if (typeof onclick.handleEvent === "function") {\n\t\t\t\t\t\tonclick.handleEvent(e)\n\t\t\t\t\t}\n\n\t\t\t\t\t// Adapted from React Router\'s implementation:\n\t\t\t\t\t// https://github.com/ReactTraining/react-router/blob/520a0acd48ae1b066eb0b07d6d4d1790a1d02482/packages/react-router-dom/modules/Link.js\n\t\t\t\t\t//\n\t\t\t\t\t// Try to be flexible and intuitive in how we handle links.\n\t\t\t\t\t// Fun fact: links aren\'t as obvious to get right as you\n\t\t\t\t\t// would expect. There\'s a lot more valid ways to click a\n\t\t\t\t\t// link than this, and one might want to not simply click a\n\t\t\t\t\t// link, but right click or command-click it to copy the\n\t\t\t\t\t// link target, etc. Nope, this isn\'t just for blind people.\n\t\t\t\t\tif (\n\t\t\t\t\t\t// Skip if `onclick` prevented default\n\t\t\t\t\t\tresult !== false && !e.defaultPrevented &&\n\t\t\t\t\t\t// Ignore everything but left clicks\n\t\t\t\t\t\t(e.button === 0 || e.which === 0 || e.which === 1) &&\n\t\t\t\t\t\t// Let the browser handle `target=_blank`, etc.\n\t\t\t\t\t\t(!e.currentTarget.target || e.currentTarget.target === "_self") &&\n\t\t\t\t\t\t// No modifier keys\n\t\t\t\t\t\t!e.ctrlKey && !e.metaKey && !e.shiftKey && !e.altKey\n\t\t\t\t\t) {\n\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\te.redraw = false\n\t\t\t\t\t\troute.set(href, null, options)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn child\n\t\t},\n\t}\n\troute.param = function(key) {\n\t\treturn attrs && key != null ? attrs[key] : attrs\n\t}\n\n\treturn route\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node_modules/timers-browserify/main.js */ "../../node_modules/timers-browserify/main.js").setImmediate))\n\n//# sourceURL=webpack:///./node_modules/mithril/api/router.js?')},"./node_modules/mithril/hyperscript.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar hyperscript = __webpack_require__(/*! ./render/hyperscript */ "./node_modules/mithril/render/hyperscript.js")\n\nhyperscript.trust = __webpack_require__(/*! ./render/trust */ "./node_modules/mithril/render/trust.js")\nhyperscript.fragment = __webpack_require__(/*! ./render/fragment */ "./node_modules/mithril/render/fragment.js")\n\nmodule.exports = hyperscript\n\n\n//# sourceURL=webpack:///./node_modules/mithril/hyperscript.js?')},"./node_modules/mithril/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar hyperscript = __webpack_require__(/*! ./hyperscript */ "./node_modules/mithril/hyperscript.js")\nvar request = __webpack_require__(/*! ./request */ "./node_modules/mithril/request.js")\nvar mountRedraw = __webpack_require__(/*! ./mount-redraw */ "./node_modules/mithril/mount-redraw.js")\n\nvar m = function m() { return hyperscript.apply(this, arguments) }\nm.m = hyperscript\nm.trust = hyperscript.trust\nm.fragment = hyperscript.fragment\nm.mount = mountRedraw.mount\nm.route = __webpack_require__(/*! ./route */ "./node_modules/mithril/route.js")\nm.render = __webpack_require__(/*! ./render */ "./node_modules/mithril/render.js")\nm.redraw = mountRedraw.redraw\nm.request = request.request\nm.jsonp = request.jsonp\nm.parseQueryString = __webpack_require__(/*! ./querystring/parse */ "./node_modules/mithril/querystring/parse.js")\nm.buildQueryString = __webpack_require__(/*! ./querystring/build */ "./node_modules/mithril/querystring/build.js")\nm.parsePathname = __webpack_require__(/*! ./pathname/parse */ "./node_modules/mithril/pathname/parse.js")\nm.buildPathname = __webpack_require__(/*! ./pathname/build */ "./node_modules/mithril/pathname/build.js")\nm.vnode = __webpack_require__(/*! ./render/vnode */ "./node_modules/mithril/render/vnode.js")\nm.PromisePolyfill = __webpack_require__(/*! ./promise/polyfill */ "./node_modules/mithril/promise/polyfill.js")\n\nmodule.exports = m\n\n\n//# sourceURL=webpack:///./node_modules/mithril/index.js?')},"./node_modules/mithril/mount-redraw.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar render = __webpack_require__(/*! ./render */ "./node_modules/mithril/render.js")\n\nmodule.exports = __webpack_require__(/*! ./api/mount-redraw */ "./node_modules/mithril/api/mount-redraw.js")(render, requestAnimationFrame, console)\n\n\n//# sourceURL=webpack:///./node_modules/mithril/mount-redraw.js?')},"./node_modules/mithril/pathname/assign.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nmodule.exports = Object.assign || function(target, source) {\n\tif(source) Object.keys(source).forEach(function(key) { target[key] = source[key] })\n}\n\n\n//# sourceURL=webpack:///./node_modules/mithril/pathname/assign.js?")},"./node_modules/mithril/pathname/build.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar buildQueryString = __webpack_require__(/*! ../querystring/build */ "./node_modules/mithril/querystring/build.js")\nvar assign = __webpack_require__(/*! ./assign */ "./node_modules/mithril/pathname/assign.js")\n\n// Returns `path` from `template` + `params`\nmodule.exports = function(template, params) {\n\tif ((/:([^\\/\\.-]+)(\\.{3})?:/).test(template)) {\n\t\tthrow new SyntaxError("Template parameter names *must* be separated")\n\t}\n\tif (params == null) return template\n\tvar queryIndex = template.indexOf("?")\n\tvar hashIndex = template.indexOf("#")\n\tvar queryEnd = hashIndex < 0 ? template.length : hashIndex\n\tvar pathEnd = queryIndex < 0 ? queryEnd : queryIndex\n\tvar path = template.slice(0, pathEnd)\n\tvar query = {}\n\n\tassign(query, params)\n\n\tvar resolved = path.replace(/:([^\\/\\.-]+)(\\.{3})?/g, function(m, key, variadic) {\n\t\tdelete query[key]\n\t\t// If no such parameter exists, don\'t interpolate it.\n\t\tif (params[key] == null) return m\n\t\t// Escape normal parameters, but not variadic ones.\n\t\treturn variadic ? params[key] : encodeURIComponent(String(params[key]))\n\t})\n\n\t// In case the template substitution adds new query/hash parameters.\n\tvar newQueryIndex = resolved.indexOf("?")\n\tvar newHashIndex = resolved.indexOf("#")\n\tvar newQueryEnd = newHashIndex < 0 ? resolved.length : newHashIndex\n\tvar newPathEnd = newQueryIndex < 0 ? newQueryEnd : newQueryIndex\n\tvar result = resolved.slice(0, newPathEnd)\n\n\tif (queryIndex >= 0) result += template.slice(queryIndex, queryEnd)\n\tif (newQueryIndex >= 0) result += (queryIndex < 0 ? "?" : "&") + resolved.slice(newQueryIndex, newQueryEnd)\n\tvar querystring = buildQueryString(query)\n\tif (querystring) result += (queryIndex < 0 && newQueryIndex < 0 ? "?" : "&") + querystring\n\tif (hashIndex >= 0) result += template.slice(hashIndex)\n\tif (newHashIndex >= 0) result += (hashIndex < 0 ? "" : "&") + resolved.slice(newHashIndex)\n\treturn result\n}\n\n\n//# sourceURL=webpack:///./node_modules/mithril/pathname/build.js?')},"./node_modules/mithril/pathname/compileTemplate.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar parsePathname = __webpack_require__(/*! ./parse */ "./node_modules/mithril/pathname/parse.js")\n\n// Compiles a template into a function that takes a resolved path (without query\n// strings) and returns an object containing the template parameters with their\n// parsed values. This expects the input of the compiled template to be the\n// output of `parsePathname`. Note that it does *not* remove query parameters\n// specified in the template.\nmodule.exports = function(template) {\n\tvar templateData = parsePathname(template)\n\tvar templateKeys = Object.keys(templateData.params)\n\tvar keys = []\n\tvar regexp = new RegExp("^" + templateData.path.replace(\n\t\t// I escape literal text so people can use things like `:file.:ext` or\n\t\t// `:lang-:locale` in routes. This is all merged into one pass so I\n\t\t// don\'t also accidentally escape `-` and make it harder to detect it to\n\t\t// ban it from template parameters.\n\t\t/:([^\\/.-]+)(\\.{3}|\\.(?!\\.)|-)?|[\\\\^$*+.()|\\[\\]{}]/g,\n\t\tfunction(m, key, extra) {\n\t\t\tif (key == null) return "\\\\" + m\n\t\t\tkeys.push({k: key, r: extra === "..."})\n\t\t\tif (extra === "...") return "(.*)"\n\t\t\tif (extra === ".") return "([^/]+)\\\\."\n\t\t\treturn "([^/]+)" + (extra || "")\n\t\t}\n\t) + "$")\n\treturn function(data) {\n\t\t// First, check the params. Usually, there isn\'t any, and it\'s just\n\t\t// checking a static set.\n\t\tfor (var i = 0; i < templateKeys.length; i++) {\n\t\t\tif (templateData.params[templateKeys[i]] !== data.params[templateKeys[i]]) return false\n\t\t}\n\t\t// If no interpolations exist, let\'s skip all the ceremony\n\t\tif (!keys.length) return regexp.test(data.path)\n\t\tvar values = regexp.exec(data.path)\n\t\tif (values == null) return false\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tdata.params[keys[i].k] = keys[i].r ? values[i + 1] : decodeURIComponent(values[i + 1])\n\t\t}\n\t\treturn true\n\t}\n}\n\n\n//# sourceURL=webpack:///./node_modules/mithril/pathname/compileTemplate.js?')},"./node_modules/mithril/pathname/parse.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar parseQueryString = __webpack_require__(/*! ../querystring/parse */ "./node_modules/mithril/querystring/parse.js")\n\n// Returns `{path, params}` from `url`\nmodule.exports = function(url) {\n\tvar queryIndex = url.indexOf("?")\n\tvar hashIndex = url.indexOf("#")\n\tvar queryEnd = hashIndex < 0 ? url.length : hashIndex\n\tvar pathEnd = queryIndex < 0 ? queryEnd : queryIndex\n\tvar path = url.slice(0, pathEnd).replace(/\\/{2,}/g, "/")\n\n\tif (!path) path = "/"\n\telse {\n\t\tif (path[0] !== "/") path = "/" + path\n\t\tif (path.length > 1 && path[path.length - 1] === "/") path = path.slice(0, -1)\n\t}\n\treturn {\n\t\tpath: path,\n\t\tparams: queryIndex < 0\n\t\t\t? {}\n\t\t\t: parseQueryString(url.slice(queryIndex + 1, queryEnd)),\n\t}\n}\n\n\n//# sourceURL=webpack:///./node_modules/mithril/pathname/parse.js?')},"./node_modules/mithril/promise/polyfill.js":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(setImmediate) {\n/** @constructor */\nvar PromisePolyfill = function(executor) {\n\tif (!(this instanceof PromisePolyfill)) throw new Error("Promise must be called with `new`")\n\tif (typeof executor !== "function") throw new TypeError("executor must be a function")\n\n\tvar self = this, resolvers = [], rejectors = [], resolveCurrent = handler(resolvers, true), rejectCurrent = handler(rejectors, false)\n\tvar instance = self._instance = {resolvers: resolvers, rejectors: rejectors}\n\tvar callAsync = typeof setImmediate === "function" ? setImmediate : setTimeout\n\tfunction handler(list, shouldAbsorb) {\n\t\treturn function execute(value) {\n\t\t\tvar then\n\t\t\ttry {\n\t\t\t\tif (shouldAbsorb && value != null && (typeof value === "object" || typeof value === "function") && typeof (then = value.then) === "function") {\n\t\t\t\t\tif (value === self) throw new TypeError("Promise can\'t be resolved w/ itself")\n\t\t\t\t\texecuteOnce(then.bind(value))\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcallAsync(function() {\n\t\t\t\t\t\tif (!shouldAbsorb && list.length === 0) console.error("Possible unhandled promise rejection:", value)\n\t\t\t\t\t\tfor (var i = 0; i < list.length; i++) list[i](value)\n\t\t\t\t\t\tresolvers.length = 0, rejectors.length = 0\n\t\t\t\t\t\tinstance.state = shouldAbsorb\n\t\t\t\t\t\tinstance.retry = function() {execute(value)}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\trejectCurrent(e)\n\t\t\t}\n\t\t}\n\t}\n\tfunction executeOnce(then) {\n\t\tvar runs = 0\n\t\tfunction run(fn) {\n\t\t\treturn function(value) {\n\t\t\t\tif (runs++ > 0) return\n\t\t\t\tfn(value)\n\t\t\t}\n\t\t}\n\t\tvar onerror = run(rejectCurrent)\n\t\ttry {then(run(resolveCurrent), onerror)} catch (e) {onerror(e)}\n\t}\n\n\texecuteOnce(executor)\n}\nPromisePolyfill.prototype.then = function(onFulfilled, onRejection) {\n\tvar self = this, instance = self._instance\n\tfunction handle(callback, list, next, state) {\n\t\tlist.push(function(value) {\n\t\t\tif (typeof callback !== "function") next(value)\n\t\t\telse try {resolveNext(callback(value))} catch (e) {if (rejectNext) rejectNext(e)}\n\t\t})\n\t\tif (typeof instance.retry === "function" && state === instance.state) instance.retry()\n\t}\n\tvar resolveNext, rejectNext\n\tvar promise = new PromisePolyfill(function(resolve, reject) {resolveNext = resolve, rejectNext = reject})\n\thandle(onFulfilled, instance.resolvers, resolveNext, true), handle(onRejection, instance.rejectors, rejectNext, false)\n\treturn promise\n}\nPromisePolyfill.prototype.catch = function(onRejection) {\n\treturn this.then(null, onRejection)\n}\nPromisePolyfill.prototype.finally = function(callback) {\n\treturn this.then(\n\t\tfunction(value) {\n\t\t\treturn PromisePolyfill.resolve(callback()).then(function() {\n\t\t\t\treturn value\n\t\t\t})\n\t\t},\n\t\tfunction(reason) {\n\t\t\treturn PromisePolyfill.resolve(callback()).then(function() {\n\t\t\t\treturn PromisePolyfill.reject(reason);\n\t\t\t})\n\t\t}\n\t)\n}\nPromisePolyfill.resolve = function(value) {\n\tif (value instanceof PromisePolyfill) return value\n\treturn new PromisePolyfill(function(resolve) {resolve(value)})\n}\nPromisePolyfill.reject = function(value) {\n\treturn new PromisePolyfill(function(resolve, reject) {reject(value)})\n}\nPromisePolyfill.all = function(list) {\n\treturn new PromisePolyfill(function(resolve, reject) {\n\t\tvar total = list.length, count = 0, values = []\n\t\tif (list.length === 0) resolve([])\n\t\telse for (var i = 0; i < list.length; i++) {\n\t\t\t(function(i) {\n\t\t\t\tfunction consume(value) {\n\t\t\t\t\tcount++\n\t\t\t\t\tvalues[i] = value\n\t\t\t\t\tif (count === total) resolve(values)\n\t\t\t\t}\n\t\t\t\tif (list[i] != null && (typeof list[i] === "object" || typeof list[i] === "function") && typeof list[i].then === "function") {\n\t\t\t\t\tlist[i].then(consume, reject)\n\t\t\t\t}\n\t\t\t\telse consume(list[i])\n\t\t\t})(i)\n\t\t}\n\t})\n}\nPromisePolyfill.race = function(list) {\n\treturn new PromisePolyfill(function(resolve, reject) {\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tlist[i].then(resolve, reject)\n\t\t}\n\t})\n}\n\nmodule.exports = PromisePolyfill\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node_modules/timers-browserify/main.js */ "../../node_modules/timers-browserify/main.js").setImmediate))\n\n//# sourceURL=webpack:///./node_modules/mithril/promise/polyfill.js?')},"./node_modules/mithril/promise/promise.js":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(global) {\n\nvar PromisePolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/mithril/promise/polyfill.js")\n\nif (typeof window !== "undefined") {\n\tif (typeof window.Promise === "undefined") {\n\t\twindow.Promise = PromisePolyfill\n\t} else if (!window.Promise.prototype.finally) {\n\t\twindow.Promise.prototype.finally = PromisePolyfill.prototype.finally\n\t}\n\tmodule.exports = window.Promise\n} else if (typeof global !== "undefined") {\n\tif (typeof global.Promise === "undefined") {\n\t\tglobal.Promise = PromisePolyfill\n\t} else if (!global.Promise.prototype.finally) {\n\t\tglobal.Promise.prototype.finally = PromisePolyfill.prototype.finally\n\t}\n\tmodule.exports = global.Promise\n} else {\n\tmodule.exports = PromisePolyfill\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node_modules/webpack/buildin/global.js */ "../../node_modules/webpack/buildin/global.js")))\n\n//# sourceURL=webpack:///./node_modules/mithril/promise/promise.js?')},"./node_modules/mithril/querystring/build.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nmodule.exports = function(object) {\n\tif (Object.prototype.toString.call(object) !== "[object Object]") return ""\n\n\tvar args = []\n\tfor (var key in object) {\n\t\tdestructure(key, object[key])\n\t}\n\n\treturn args.join("&")\n\n\tfunction destructure(key, value) {\n\t\tif (Array.isArray(value)) {\n\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\tdestructure(key + "[" + i + "]", value[i])\n\t\t\t}\n\t\t}\n\t\telse if (Object.prototype.toString.call(value) === "[object Object]") {\n\t\t\tfor (var i in value) {\n\t\t\t\tdestructure(key + "[" + i + "]", value[i])\n\t\t\t}\n\t\t}\n\t\telse args.push(encodeURIComponent(key) + (value != null && value !== "" ? "=" + encodeURIComponent(value) : ""))\n\t}\n}\n\n\n//# sourceURL=webpack:///./node_modules/mithril/querystring/build.js?')},"./node_modules/mithril/querystring/parse.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nmodule.exports = function(string) {\n\tif (string === "" || string == null) return {}\n\tif (string.charAt(0) === "?") string = string.slice(1)\n\n\tvar entries = string.split("&"), counters = {}, data = {}\n\tfor (var i = 0; i < entries.length; i++) {\n\t\tvar entry = entries[i].split("=")\n\t\tvar key = decodeURIComponent(entry[0])\n\t\tvar value = entry.length === 2 ? decodeURIComponent(entry[1]) : ""\n\n\t\tif (value === "true") value = true\n\t\telse if (value === "false") value = false\n\n\t\tvar levels = key.split(/\\]\\[?|\\[/)\n\t\tvar cursor = data\n\t\tif (key.indexOf("[") > -1) levels.pop()\n\t\tfor (var j = 0; j < levels.length; j++) {\n\t\t\tvar level = levels[j], nextLevel = levels[j + 1]\n\t\t\tvar isNumber = nextLevel == "" || !isNaN(parseInt(nextLevel, 10))\n\t\t\tif (level === "") {\n\t\t\t\tvar key = levels.slice(0, j).join()\n\t\t\t\tif (counters[key] == null) {\n\t\t\t\t\tcounters[key] = Array.isArray(cursor) ? cursor.length : 0\n\t\t\t\t}\n\t\t\t\tlevel = counters[key]++\n\t\t\t}\n\t\t\t// Disallow direct prototype pollution\n\t\t\telse if (level === "__proto__") break\n\t\t\tif (j === levels.length - 1) cursor[level] = value\n\t\t\telse {\n\t\t\t\t// Read own properties exclusively to disallow indirect\n\t\t\t\t// prototype pollution\n\t\t\t\tvar desc = Object.getOwnPropertyDescriptor(cursor, level)\n\t\t\t\tif (desc != null) desc = desc.value\n\t\t\t\tif (desc == null) cursor[level] = desc = isNumber ? [] : {}\n\t\t\t\tcursor = desc\n\t\t\t}\n\t\t}\n\t}\n\treturn data\n}\n\n\n//# sourceURL=webpack:///./node_modules/mithril/querystring/parse.js?')},"./node_modules/mithril/render.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nmodule.exports = __webpack_require__(/*! ./render/render */ "./node_modules/mithril/render/render.js")(window)\n\n\n//# sourceURL=webpack:///./node_modules/mithril/render.js?')},"./node_modules/mithril/render/fragment.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar Vnode = __webpack_require__(/*! ../render/vnode */ "./node_modules/mithril/render/vnode.js")\nvar hyperscriptVnode = __webpack_require__(/*! ./hyperscriptVnode */ "./node_modules/mithril/render/hyperscriptVnode.js")\n\nmodule.exports = function() {\n\tvar vnode = hyperscriptVnode.apply(0, arguments)\n\n\tvnode.tag = "["\n\tvnode.children = Vnode.normalizeChildren(vnode.children)\n\treturn vnode\n}\n\n\n//# sourceURL=webpack:///./node_modules/mithril/render/fragment.js?')},"./node_modules/mithril/render/hyperscript.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar Vnode = __webpack_require__(/*! ../render/vnode */ "./node_modules/mithril/render/vnode.js")\nvar hyperscriptVnode = __webpack_require__(/*! ./hyperscriptVnode */ "./node_modules/mithril/render/hyperscriptVnode.js")\n\nvar selectorParser = /(?:(^|#|\\.)([^#\\.\\[\\]]+))|(\\[(.+?)(?:\\s*=\\s*("|\'|)((?:\\\\["\'\\]]|.)*?)\\5)?\\])/g\nvar selectorCache = {}\nvar hasOwn = {}.hasOwnProperty\n\nfunction isEmpty(object) {\n\tfor (var key in object) if (hasOwn.call(object, key)) return false\n\treturn true\n}\n\nfunction compileSelector(selector) {\n\tvar match, tag = "div", classes = [], attrs = {}\n\twhile (match = selectorParser.exec(selector)) {\n\t\tvar type = match[1], value = match[2]\n\t\tif (type === "" && value !== "") tag = value\n\t\telse if (type === "#") attrs.id = value\n\t\telse if (type === ".") classes.push(value)\n\t\telse if (match[3][0] === "[") {\n\t\t\tvar attrValue = match[6]\n\t\t\tif (attrValue) attrValue = attrValue.replace(/\\\\(["\'])/g, "$1").replace(/\\\\\\\\/g, "\\\\")\n\t\t\tif (match[4] === "class") classes.push(attrValue)\n\t\t\telse attrs[match[4]] = attrValue === "" ? attrValue : attrValue || true\n\t\t}\n\t}\n\tif (classes.length > 0) attrs.className = classes.join(" ")\n\treturn selectorCache[selector] = {tag: tag, attrs: attrs}\n}\n\nfunction execSelector(state, vnode) {\n\tvar attrs = vnode.attrs\n\tvar children = Vnode.normalizeChildren(vnode.children)\n\tvar hasClass = hasOwn.call(attrs, "class")\n\tvar className = hasClass ? attrs.class : attrs.className\n\n\tvnode.tag = state.tag\n\tvnode.attrs = null\n\tvnode.children = undefined\n\n\tif (!isEmpty(state.attrs) && !isEmpty(attrs)) {\n\t\tvar newAttrs = {}\n\n\t\tfor (var key in attrs) {\n\t\t\tif (hasOwn.call(attrs, key)) newAttrs[key] = attrs[key]\n\t\t}\n\n\t\tattrs = newAttrs\n\t}\n\n\tfor (var key in state.attrs) {\n\t\tif (hasOwn.call(state.attrs, key) && key !== "className" && !hasOwn.call(attrs, key)){\n\t\t\tattrs[key] = state.attrs[key]\n\t\t}\n\t}\n\tif (className != null || state.attrs.className != null) attrs.className =\n\t\tclassName != null\n\t\t\t? state.attrs.className != null\n\t\t\t\t? String(state.attrs.className) + " " + String(className)\n\t\t\t\t: className\n\t\t\t: state.attrs.className != null\n\t\t\t\t? state.attrs.className\n\t\t\t\t: null\n\n\tif (hasClass) attrs.class = null\n\n\tfor (var key in attrs) {\n\t\tif (hasOwn.call(attrs, key) && key !== "key") {\n\t\t\tvnode.attrs = attrs\n\t\t\tbreak\n\t\t}\n\t}\n\n\tif (Array.isArray(children) && children.length === 1 && children[0] != null && children[0].tag === "#") {\n\t\tvnode.text = children[0].children\n\t} else {\n\t\tvnode.children = children\n\t}\n\n\treturn vnode\n}\n\nfunction hyperscript(selector) {\n\tif (selector == null || typeof selector !== "string" && typeof selector !== "function" && typeof selector.view !== "function") {\n\t\tthrow Error("The selector must be either a string or a component.");\n\t}\n\n\tvar vnode = hyperscriptVnode.apply(1, arguments)\n\n\tif (typeof selector === "string") {\n\t\tvnode.children = Vnode.normalizeChildren(vnode.children)\n\t\tif (selector !== "[") return execSelector(selectorCache[selector] || compileSelector(selector), vnode)\n\t}\n\n\tvnode.tag = selector\n\treturn vnode\n}\n\nmodule.exports = hyperscript\n\n\n//# sourceURL=webpack:///./node_modules/mithril/render/hyperscript.js?')},"./node_modules/mithril/render/hyperscriptVnode.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar Vnode = __webpack_require__(/*! ../render/vnode */ "./node_modules/mithril/render/vnode.js")\n\n// Call via `hyperscriptVnode.apply(startOffset, arguments)`\n//\n// The reason I do it this way, forwarding the arguments and passing the start\n// offset in `this`, is so I don\'t have to create a temporary array in a\n// performance-critical path.\n//\n// In native ES6, I\'d instead add a final `...args` parameter to the\n// `hyperscript` and `fragment` factories and define this as\n// `hyperscriptVnode(...args)`, since modern engines do optimize that away. But\n// ES5 (what Mithril requires thanks to IE support) doesn\'t give me that luxury,\n// and engines aren\'t nearly intelligent enough to do either of these:\n//\n// 1. Elide the allocation for `[].slice.call(arguments, 1)` when it\'s passed to\n//    another function only to be indexed.\n// 2. Elide an `arguments` allocation when it\'s passed to any function other\n//    than `Function.prototype.apply` or `Reflect.apply`.\n//\n// In ES6, it\'d probably look closer to this (I\'d need to profile it, though):\n// module.exports = function(attrs, ...children) {\n//     if (attrs == null || typeof attrs === "object" && attrs.tag == null && !Array.isArray(attrs)) {\n//         if (children.length === 1 && Array.isArray(children[0])) children = children[0]\n//     } else {\n//         children = children.length === 0 && Array.isArray(attrs) ? attrs : [attrs, ...children]\n//         attrs = undefined\n//     }\n//\n//     if (attrs == null) attrs = {}\n//     return Vnode("", attrs.key, attrs, children)\n// }\nmodule.exports = function() {\n\tvar attrs = arguments[this], start = this + 1, children\n\n\tif (attrs == null) {\n\t\tattrs = {}\n\t} else if (typeof attrs !== "object" || attrs.tag != null || Array.isArray(attrs)) {\n\t\tattrs = {}\n\t\tstart = this\n\t}\n\n\tif (arguments.length === start + 1) {\n\t\tchildren = arguments[start]\n\t\tif (!Array.isArray(children)) children = [children]\n\t} else {\n\t\tchildren = []\n\t\twhile (start < arguments.length) children.push(arguments[start++])\n\t}\n\n\treturn Vnode("", attrs.key, attrs, children)\n}\n\n\n//# sourceURL=webpack:///./node_modules/mithril/render/hyperscriptVnode.js?')},"./node_modules/mithril/render/render.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar Vnode = __webpack_require__(/*! ../render/vnode */ "./node_modules/mithril/render/vnode.js")\n\nmodule.exports = function($window) {\n\tvar $doc = $window && $window.document\n\tvar currentRedraw\n\n\tvar nameSpace = {\n\t\tsvg: "http://www.w3.org/2000/svg",\n\t\tmath: "http://www.w3.org/1998/Math/MathML"\n\t}\n\n\tfunction getNameSpace(vnode) {\n\t\treturn vnode.attrs && vnode.attrs.xmlns || nameSpace[vnode.tag]\n\t}\n\n\t//sanity check to discourage people from doing `vnode.state = ...`\n\tfunction checkState(vnode, original) {\n\t\tif (vnode.state !== original) throw new Error("`vnode.state` must not be modified")\n\t}\n\n\t//Note: the hook is passed as the `this` argument to allow proxying the\n\t//arguments without requiring a full array allocation to do so. It also\n\t//takes advantage of the fact the current `vnode` is the first argument in\n\t//all lifecycle methods.\n\tfunction callHook(vnode) {\n\t\tvar original = vnode.state\n\t\ttry {\n\t\t\treturn this.apply(original, arguments)\n\t\t} finally {\n\t\t\tcheckState(vnode, original)\n\t\t}\n\t}\n\n\t// IE11 (at least) throws an UnspecifiedError when accessing document.activeElement when\n\t// inside an iframe. Catch and swallow this error, and heavy-handidly return null.\n\tfunction activeElement() {\n\t\ttry {\n\t\t\treturn $doc.activeElement\n\t\t} catch (e) {\n\t\t\treturn null\n\t\t}\n\t}\n\t//create\n\tfunction createNodes(parent, vnodes, start, end, hooks, nextSibling, ns) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) {\n\t\t\t\tcreateNode(parent, vnode, hooks, ns, nextSibling)\n\t\t\t}\n\t\t}\n\t}\n\tfunction createNode(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar tag = vnode.tag\n\t\tif (typeof tag === "string") {\n\t\t\tvnode.state = {}\n\t\t\tif (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\n\t\t\tswitch (tag) {\n\t\t\t\tcase "#": createText(parent, vnode, nextSibling); break\n\t\t\t\tcase "<": createHTML(parent, vnode, ns, nextSibling); break\n\t\t\t\tcase "[": createFragment(parent, vnode, hooks, ns, nextSibling); break\n\t\t\t\tdefault: createElement(parent, vnode, hooks, ns, nextSibling)\n\t\t\t}\n\t\t}\n\t\telse createComponent(parent, vnode, hooks, ns, nextSibling)\n\t}\n\tfunction createText(parent, vnode, nextSibling) {\n\t\tvnode.dom = $doc.createTextNode(vnode.children)\n\t\tinsertNode(parent, vnode.dom, nextSibling)\n\t}\n\tvar possibleParents = {caption: "table", thead: "table", tbody: "table", tfoot: "table", tr: "tbody", th: "tr", td: "tr", colgroup: "table", col: "colgroup"}\n\tfunction createHTML(parent, vnode, ns, nextSibling) {\n\t\tvar match = vnode.children.match(/^\\s*?<(\\w+)/im) || []\n\t\t// not using the proper parent makes the child element(s) vanish.\n\t\t//     var div = document.createElement("div")\n\t\t//     div.innerHTML = "<td>i</td><td>j</td>"\n\t\t//     console.log(div.innerHTML)\n\t\t// --\x3e "ij", no <td> in sight.\n\t\tvar temp = $doc.createElement(possibleParents[match[1]] || "div")\n\t\tif (ns === "http://www.w3.org/2000/svg") {\n\t\t\ttemp.innerHTML = "<svg xmlns=\\"http://www.w3.org/2000/svg\\">" + vnode.children + "</svg>"\n\t\t\ttemp = temp.firstChild\n\t\t} else {\n\t\t\ttemp.innerHTML = vnode.children\n\t\t}\n\t\tvnode.dom = temp.firstChild\n\t\tvnode.domSize = temp.childNodes.length\n\t\t// Capture nodes to remove, so we don\'t confuse them.\n\t\tvnode.instance = []\n\t\tvar fragment = $doc.createDocumentFragment()\n\t\tvar child\n\t\twhile (child = temp.firstChild) {\n\t\t\tvnode.instance.push(child)\n\t\t\tfragment.appendChild(child)\n\t\t}\n\t\tinsertNode(parent, fragment, nextSibling)\n\t}\n\tfunction createFragment(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar fragment = $doc.createDocumentFragment()\n\t\tif (vnode.children != null) {\n\t\t\tvar children = vnode.children\n\t\t\tcreateNodes(fragment, children, 0, children.length, hooks, null, ns)\n\t\t}\n\t\tvnode.dom = fragment.firstChild\n\t\tvnode.domSize = fragment.childNodes.length\n\t\tinsertNode(parent, fragment, nextSibling)\n\t}\n\tfunction createElement(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar tag = vnode.tag\n\t\tvar attrs = vnode.attrs\n\t\tvar is = attrs && attrs.is\n\n\t\tns = getNameSpace(vnode) || ns\n\n\t\tvar element = ns ?\n\t\t\tis ? $doc.createElementNS(ns, tag, {is: is}) : $doc.createElementNS(ns, tag) :\n\t\t\tis ? $doc.createElement(tag, {is: is}) : $doc.createElement(tag)\n\t\tvnode.dom = element\n\n\t\tif (attrs != null) {\n\t\t\tsetAttrs(vnode, attrs, ns)\n\t\t}\n\n\t\tinsertNode(parent, element, nextSibling)\n\n\t\tif (!maybeSetContentEditable(vnode)) {\n\t\t\tif (vnode.text != null) {\n\t\t\t\tif (vnode.text !== "") element.textContent = vnode.text\n\t\t\t\telse vnode.children = [Vnode("#", undefined, undefined, vnode.text, undefined, undefined)]\n\t\t\t}\n\t\t\tif (vnode.children != null) {\n\t\t\t\tvar children = vnode.children\n\t\t\t\tcreateNodes(element, children, 0, children.length, hooks, null, ns)\n\t\t\t\tif (vnode.tag === "select" && attrs != null) setLateSelectAttrs(vnode, attrs)\n\t\t\t}\n\t\t}\n\t}\n\tfunction initComponent(vnode, hooks) {\n\t\tvar sentinel\n\t\tif (typeof vnode.tag.view === "function") {\n\t\t\tvnode.state = Object.create(vnode.tag)\n\t\t\tsentinel = vnode.state.view\n\t\t\tif (sentinel.$$reentrantLock$$ != null) return\n\t\t\tsentinel.$$reentrantLock$$ = true\n\t\t} else {\n\t\t\tvnode.state = void 0\n\t\t\tsentinel = vnode.tag\n\t\t\tif (sentinel.$$reentrantLock$$ != null) return\n\t\t\tsentinel.$$reentrantLock$$ = true\n\t\t\tvnode.state = (vnode.tag.prototype != null && typeof vnode.tag.prototype.view === "function") ? new vnode.tag(vnode) : vnode.tag(vnode)\n\t\t}\n\t\tinitLifecycle(vnode.state, vnode, hooks)\n\t\tif (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\n\t\tvnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode))\n\t\tif (vnode.instance === vnode) throw Error("A view cannot return the vnode it received as argument")\n\t\tsentinel.$$reentrantLock$$ = null\n\t}\n\tfunction createComponent(parent, vnode, hooks, ns, nextSibling) {\n\t\tinitComponent(vnode, hooks)\n\t\tif (vnode.instance != null) {\n\t\t\tcreateNode(parent, vnode.instance, hooks, ns, nextSibling)\n\t\t\tvnode.dom = vnode.instance.dom\n\t\t\tvnode.domSize = vnode.dom != null ? vnode.instance.domSize : 0\n\t\t}\n\t\telse {\n\t\t\tvnode.domSize = 0\n\t\t}\n\t}\n\n\t//update\n\t/**\n\t * @param {Element|Fragment} parent - the parent element\n\t * @param {Vnode[] | null} old - the list of vnodes of the last `render()` call for\n\t *                               this part of the tree\n\t * @param {Vnode[] | null} vnodes - as above, but for the current `render()` call.\n\t * @param {Function[]} hooks - an accumulator of post-render hooks (oncreate/onupdate)\n\t * @param {Element | null} nextSibling - the next DOM node if we\'re dealing with a\n\t *                                       fragment that is not the last item in its\n\t *                                       parent\n\t * @param {\'svg\' | \'math\' | String | null} ns) - the current XML namespace, if any\n\t * @returns void\n\t */\n\t// This function diffs and patches lists of vnodes, both keyed and unkeyed.\n\t//\n\t// We will:\n\t//\n\t// 1. describe its general structure\n\t// 2. focus on the diff algorithm optimizations\n\t// 3. discuss DOM node operations.\n\n\t// ## Overview:\n\t//\n\t// The updateNodes() function:\n\t// - deals with trivial cases\n\t// - determines whether the lists are keyed or unkeyed based on the first non-null node\n\t//   of each list.\n\t// - diffs them and patches the DOM if needed (that\'s the brunt of the code)\n\t// - manages the leftovers: after diffing, are there:\n\t//   - old nodes left to remove?\n\t// \t - new nodes to insert?\n\t// \t deal with them!\n\t//\n\t// The lists are only iterated over once, with an exception for the nodes in `old` that\n\t// are visited in the fourth part of the diff and in the `removeNodes` loop.\n\n\t// ## Diffing\n\t//\n\t// Reading https://github.com/localvoid/ivi/blob/ddc09d06abaef45248e6133f7040d00d3c6be853/packages/ivi/src/vdom/implementation.ts#L617-L837\n\t// may be good for context on longest increasing subsequence-based logic for moving nodes.\n\t//\n\t// In order to diff keyed lists, one has to\n\t//\n\t// 1) match nodes in both lists, per key, and update them accordingly\n\t// 2) create the nodes present in the new list, but absent in the old one\n\t// 3) remove the nodes present in the old list, but absent in the new one\n\t// 4) figure out what nodes in 1) to move in order to minimize the DOM operations.\n\t//\n\t// To achieve 1) one can create a dictionary of keys => index (for the old list), then iterate\n\t// over the new list and for each new vnode, find the corresponding vnode in the old list using\n\t// the map.\n\t// 2) is achieved in the same step: if a new node has no corresponding entry in the map, it is new\n\t// and must be created.\n\t// For the removals, we actually remove the nodes that have been updated from the old list.\n\t// The nodes that remain in that list after 1) and 2) have been performed can be safely removed.\n\t// The fourth step is a bit more complex and relies on the longest increasing subsequence (LIS)\n\t// algorithm.\n\t//\n\t// the longest increasing subsequence is the list of nodes that can remain in place. Imagine going\n\t// from `1,2,3,4,5` to `4,5,1,2,3` where the numbers are not necessarily the keys, but the indices\n\t// corresponding to the keyed nodes in the old list (keyed nodes `e,d,c,b,a` => `b,a,e,d,c` would\n\t//  match the above lists, for example).\n\t//\n\t// In there are two increasing subsequences: `4,5` and `1,2,3`, the latter being the longest. We\n\t// can update those nodes without moving them, and only call `insertNode` on `4` and `5`.\n\t//\n\t// @localvoid adapted the algo to also support node deletions and insertions (the `lis` is actually\n\t// the longest increasing subsequence *of old nodes still present in the new list*).\n\t//\n\t// It is a general algorithm that is fireproof in all circumstances, but it requires the allocation\n\t// and the construction of a `key => oldIndex` map, and three arrays (one with `newIndex => oldIndex`,\n\t// the `LIS` and a temporary one to create the LIS).\n\t//\n\t// So we cheat where we can: if the tails of the lists are identical, they are guaranteed to be part of\n\t// the LIS and can be updated without moving them.\n\t//\n\t// If two nodes are swapped, they are guaranteed not to be part of the LIS, and must be moved (with\n\t// the exception of the last node if the list is fully reversed).\n\t//\n\t// ## Finding the next sibling.\n\t//\n\t// `updateNode()` and `createNode()` expect a nextSibling parameter to perform DOM operations.\n\t// When the list is being traversed top-down, at any index, the DOM nodes up to the previous\n\t// vnode reflect the content of the new list, whereas the rest of the DOM nodes reflect the old\n\t// list. The next sibling must be looked for in the old list using `getNextSibling(... oldStart + 1 ...)`.\n\t//\n\t// In the other scenarios (swaps, upwards traversal, map-based diff),\n\t// the new vnodes list is traversed upwards. The DOM nodes at the bottom of the list reflect the\n\t// bottom part of the new vnodes list, and we can use the `v.dom`  value of the previous node\n\t// as the next sibling (cached in the `nextSibling` variable).\n\n\n\t// ## DOM node moves\n\t//\n\t// In most scenarios `updateNode()` and `createNode()` perform the DOM operations. However,\n\t// this is not the case if the node moved (second and fourth part of the diff algo). We move\n\t// the old DOM nodes before updateNode runs because it enables us to use the cached `nextSibling`\n\t// variable rather than fetching it using `getNextSibling()`.\n\t//\n\t// The fourth part of the diff currently inserts nodes unconditionally, leading to issues\n\t// like #1791 and #1999. We need to be smarter about those situations where adjascent old\n\t// nodes remain together in the new list in a way that isn\'t covered by parts one and\n\t// three of the diff algo.\n\n\tfunction updateNodes(parent, old, vnodes, hooks, nextSibling, ns) {\n\t\tif (old === vnodes || old == null && vnodes == null) return\n\t\telse if (old == null || old.length === 0) createNodes(parent, vnodes, 0, vnodes.length, hooks, nextSibling, ns)\n\t\telse if (vnodes == null || vnodes.length === 0) removeNodes(parent, old, 0, old.length)\n\t\telse {\n\t\t\tvar isOldKeyed = old[0] != null && old[0].key != null\n\t\t\tvar isKeyed = vnodes[0] != null && vnodes[0].key != null\n\t\t\tvar start = 0, oldStart = 0\n\t\t\tif (!isOldKeyed) while (oldStart < old.length && old[oldStart] == null) oldStart++\n\t\t\tif (!isKeyed) while (start < vnodes.length && vnodes[start] == null) start++\n\t\t\tif (isKeyed === null && isOldKeyed == null) return // both lists are full of nulls\n\t\t\tif (isOldKeyed !== isKeyed) {\n\t\t\t\tremoveNodes(parent, old, oldStart, old.length)\n\t\t\t\tcreateNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns)\n\t\t\t} else if (!isKeyed) {\n\t\t\t\t// Don\'t index past the end of either list (causes deopts).\n\t\t\t\tvar commonLength = old.length < vnodes.length ? old.length : vnodes.length\n\t\t\t\t// Rewind if necessary to the first non-null index on either side.\n\t\t\t\t// We could alternatively either explicitly create or remove nodes when `start !== oldStart`\n\t\t\t\t// but that would be optimizing for sparse lists which are more rare than dense ones.\n\t\t\t\tstart = start < oldStart ? start : oldStart\n\t\t\t\tfor (; start < commonLength; start++) {\n\t\t\t\t\to = old[start]\n\t\t\t\t\tv = vnodes[start]\n\t\t\t\t\tif (o === v || o == null && v == null) continue\n\t\t\t\t\telse if (o == null) createNode(parent, v, hooks, ns, getNextSibling(old, start + 1, nextSibling))\n\t\t\t\t\telse if (v == null) removeNode(parent, o)\n\t\t\t\t\telse updateNode(parent, o, v, hooks, getNextSibling(old, start + 1, nextSibling), ns)\n\t\t\t\t}\n\t\t\t\tif (old.length > commonLength) removeNodes(parent, old, start, old.length)\n\t\t\t\tif (vnodes.length > commonLength) createNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns)\n\t\t\t} else {\n\t\t\t\t// keyed diff\n\t\t\t\tvar oldEnd = old.length - 1, end = vnodes.length - 1, map, o, v, oe, ve, topSibling\n\n\t\t\t\t// bottom-up\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\toe = old[oldEnd]\n\t\t\t\t\tve = vnodes[end]\n\t\t\t\t\tif (oe.key !== ve.key) break\n\t\t\t\t\tif (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\n\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\toldEnd--, end--\n\t\t\t\t}\n\t\t\t\t// top-down\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\to = old[oldStart]\n\t\t\t\t\tv = vnodes[start]\n\t\t\t\t\tif (o.key !== v.key) break\n\t\t\t\t\toldStart++, start++\n\t\t\t\t\tif (o !== v) updateNode(parent, o, v, hooks, getNextSibling(old, oldStart, nextSibling), ns)\n\t\t\t\t}\n\t\t\t\t// swaps and list reversals\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\tif (start === end) break\n\t\t\t\t\tif (o.key !== ve.key || oe.key !== v.key) break\n\t\t\t\t\ttopSibling = getNextSibling(old, oldStart, nextSibling)\n\t\t\t\t\tmoveNodes(parent, oe, topSibling)\n\t\t\t\t\tif (oe !== v) updateNode(parent, oe, v, hooks, topSibling, ns)\n\t\t\t\t\tif (++start <= --end) moveNodes(parent, o, nextSibling)\n\t\t\t\t\tif (o !== ve) updateNode(parent, o, ve, hooks, nextSibling, ns)\n\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\toldStart++; oldEnd--\n\t\t\t\t\toe = old[oldEnd]\n\t\t\t\t\tve = vnodes[end]\n\t\t\t\t\to = old[oldStart]\n\t\t\t\t\tv = vnodes[start]\n\t\t\t\t}\n\t\t\t\t// bottom up once again\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\tif (oe.key !== ve.key) break\n\t\t\t\t\tif (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\n\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\toldEnd--, end--\n\t\t\t\t\toe = old[oldEnd]\n\t\t\t\t\tve = vnodes[end]\n\t\t\t\t}\n\t\t\t\tif (start > end) removeNodes(parent, old, oldStart, oldEnd + 1)\n\t\t\t\telse if (oldStart > oldEnd) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns)\n\t\t\t\telse {\n\t\t\t\t\t// inspired by ivi https://github.com/ivijs/ivi/ by Boris Kaul\n\t\t\t\t\tvar originalNextSibling = nextSibling, vnodesLength = end - start + 1, oldIndices = new Array(vnodesLength), li=0, i=0, pos = 2147483647, matched = 0, map, lisIndices\n\t\t\t\t\tfor (i = 0; i < vnodesLength; i++) oldIndices[i] = -1\n\t\t\t\t\tfor (i = end; i >= start; i--) {\n\t\t\t\t\t\tif (map == null) map = getKeyMap(old, oldStart, oldEnd + 1)\n\t\t\t\t\t\tve = vnodes[i]\n\t\t\t\t\t\tvar oldIndex = map[ve.key]\n\t\t\t\t\t\tif (oldIndex != null) {\n\t\t\t\t\t\t\tpos = (oldIndex < pos) ? oldIndex : -1 // becomes -1 if nodes were re-ordered\n\t\t\t\t\t\t\toldIndices[i-start] = oldIndex\n\t\t\t\t\t\t\toe = old[oldIndex]\n\t\t\t\t\t\t\told[oldIndex] = null\n\t\t\t\t\t\t\tif (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\n\t\t\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\t\t\tmatched++\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnextSibling = originalNextSibling\n\t\t\t\t\tif (matched !== oldEnd - oldStart + 1) removeNodes(parent, old, oldStart, oldEnd + 1)\n\t\t\t\t\tif (matched === 0) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns)\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (pos === -1) {\n\t\t\t\t\t\t\t// the indices of the indices of the items that are part of the\n\t\t\t\t\t\t\t// longest increasing subsequence in the oldIndices list\n\t\t\t\t\t\t\tlisIndices = makeLisIndices(oldIndices)\n\t\t\t\t\t\t\tli = lisIndices.length - 1\n\t\t\t\t\t\t\tfor (i = end; i >= start; i--) {\n\t\t\t\t\t\t\t\tv = vnodes[i]\n\t\t\t\t\t\t\t\tif (oldIndices[i-start] === -1) createNode(parent, v, hooks, ns, nextSibling)\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif (lisIndices[li] === i - start) li--\n\t\t\t\t\t\t\t\t\telse moveNodes(parent, v, nextSibling)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (v.dom != null) nextSibling = vnodes[i].dom\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor (i = end; i >= start; i--) {\n\t\t\t\t\t\t\t\tv = vnodes[i]\n\t\t\t\t\t\t\t\tif (oldIndices[i-start] === -1) createNode(parent, v, hooks, ns, nextSibling)\n\t\t\t\t\t\t\t\tif (v.dom != null) nextSibling = vnodes[i].dom\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction updateNode(parent, old, vnode, hooks, nextSibling, ns) {\n\t\tvar oldTag = old.tag, tag = vnode.tag\n\t\tif (oldTag === tag) {\n\t\t\tvnode.state = old.state\n\t\t\tvnode.events = old.events\n\t\t\tif (shouldNotUpdate(vnode, old)) return\n\t\t\tif (typeof oldTag === "string") {\n\t\t\t\tif (vnode.attrs != null) {\n\t\t\t\t\tupdateLifecycle(vnode.attrs, vnode, hooks)\n\t\t\t\t}\n\t\t\t\tswitch (oldTag) {\n\t\t\t\t\tcase "#": updateText(old, vnode); break\n\t\t\t\t\tcase "<": updateHTML(parent, old, vnode, ns, nextSibling); break\n\t\t\t\t\tcase "[": updateFragment(parent, old, vnode, hooks, nextSibling, ns); break\n\t\t\t\t\tdefault: updateElement(old, vnode, hooks, ns)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse updateComponent(parent, old, vnode, hooks, nextSibling, ns)\n\t\t}\n\t\telse {\n\t\t\tremoveNode(parent, old)\n\t\t\tcreateNode(parent, vnode, hooks, ns, nextSibling)\n\t\t}\n\t}\n\tfunction updateText(old, vnode) {\n\t\tif (old.children.toString() !== vnode.children.toString()) {\n\t\t\told.dom.nodeValue = vnode.children\n\t\t}\n\t\tvnode.dom = old.dom\n\t}\n\tfunction updateHTML(parent, old, vnode, ns, nextSibling) {\n\t\tif (old.children !== vnode.children) {\n\t\t\tremoveHTML(parent, old)\n\t\t\tcreateHTML(parent, vnode, ns, nextSibling)\n\t\t}\n\t\telse {\n\t\t\tvnode.dom = old.dom\n\t\t\tvnode.domSize = old.domSize\n\t\t\tvnode.instance = old.instance\n\t\t}\n\t}\n\tfunction updateFragment(parent, old, vnode, hooks, nextSibling, ns) {\n\t\tupdateNodes(parent, old.children, vnode.children, hooks, nextSibling, ns)\n\t\tvar domSize = 0, children = vnode.children\n\t\tvnode.dom = null\n\t\tif (children != null) {\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\tvar child = children[i]\n\t\t\t\tif (child != null && child.dom != null) {\n\t\t\t\t\tif (vnode.dom == null) vnode.dom = child.dom\n\t\t\t\t\tdomSize += child.domSize || 1\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (domSize !== 1) vnode.domSize = domSize\n\t\t}\n\t}\n\tfunction updateElement(old, vnode, hooks, ns) {\n\t\tvar element = vnode.dom = old.dom\n\t\tns = getNameSpace(vnode) || ns\n\n\t\tif (vnode.tag === "textarea") {\n\t\t\tif (vnode.attrs == null) vnode.attrs = {}\n\t\t\tif (vnode.text != null) {\n\t\t\t\tvnode.attrs.value = vnode.text //FIXME handle multiple children\n\t\t\t\tvnode.text = undefined\n\t\t\t}\n\t\t}\n\t\tupdateAttrs(vnode, old.attrs, vnode.attrs, ns)\n\t\tif (!maybeSetContentEditable(vnode)) {\n\t\t\tif (old.text != null && vnode.text != null && vnode.text !== "") {\n\t\t\t\tif (old.text.toString() !== vnode.text.toString()) old.dom.firstChild.nodeValue = vnode.text\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (old.text != null) old.children = [Vnode("#", undefined, undefined, old.text, undefined, old.dom.firstChild)]\n\t\t\t\tif (vnode.text != null) vnode.children = [Vnode("#", undefined, undefined, vnode.text, undefined, undefined)]\n\t\t\t\tupdateNodes(element, old.children, vnode.children, hooks, null, ns)\n\t\t\t}\n\t\t}\n\t}\n\tfunction updateComponent(parent, old, vnode, hooks, nextSibling, ns) {\n\t\tvnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode))\n\t\tif (vnode.instance === vnode) throw Error("A view cannot return the vnode it received as argument")\n\t\tupdateLifecycle(vnode.state, vnode, hooks)\n\t\tif (vnode.attrs != null) updateLifecycle(vnode.attrs, vnode, hooks)\n\t\tif (vnode.instance != null) {\n\t\t\tif (old.instance == null) createNode(parent, vnode.instance, hooks, ns, nextSibling)\n\t\t\telse updateNode(parent, old.instance, vnode.instance, hooks, nextSibling, ns)\n\t\t\tvnode.dom = vnode.instance.dom\n\t\t\tvnode.domSize = vnode.instance.domSize\n\t\t}\n\t\telse if (old.instance != null) {\n\t\t\tremoveNode(parent, old.instance)\n\t\t\tvnode.dom = undefined\n\t\t\tvnode.domSize = 0\n\t\t}\n\t\telse {\n\t\t\tvnode.dom = old.dom\n\t\t\tvnode.domSize = old.domSize\n\t\t}\n\t}\n\tfunction getKeyMap(vnodes, start, end) {\n\t\tvar map = Object.create(null)\n\t\tfor (; start < end; start++) {\n\t\t\tvar vnode = vnodes[start]\n\t\t\tif (vnode != null) {\n\t\t\t\tvar key = vnode.key\n\t\t\t\tif (key != null) map[key] = start\n\t\t\t}\n\t\t}\n\t\treturn map\n\t}\n\t// Lifted from ivi https://github.com/ivijs/ivi/\n\t// takes a list of unique numbers (-1 is special and can\n\t// occur multiple times) and returns an array with the indices\n\t// of the items that are part of the longest increasing\n\t// subsequece\n\tvar lisTemp = []\n\tfunction makeLisIndices(a) {\n\t\tvar result = [0]\n\t\tvar u = 0, v = 0, i = 0\n\t\tvar il = lisTemp.length = a.length\n\t\tfor (var i = 0; i < il; i++) lisTemp[i] = a[i]\n\t\tfor (var i = 0; i < il; ++i) {\n\t\t\tif (a[i] === -1) continue\n\t\t\tvar j = result[result.length - 1]\n\t\t\tif (a[j] < a[i]) {\n\t\t\t\tlisTemp[i] = j\n\t\t\t\tresult.push(i)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tu = 0\n\t\t\tv = result.length - 1\n\t\t\twhile (u < v) {\n\t\t\t\t// Fast integer average without overflow.\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tvar c = (u >>> 1) + (v >>> 1) + (u & v & 1)\n\t\t\t\tif (a[result[c]] < a[i]) {\n\t\t\t\t\tu = c + 1\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tv = c\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (a[i] < a[result[u]]) {\n\t\t\t\tif (u > 0) lisTemp[i] = result[u - 1]\n\t\t\t\tresult[u] = i\n\t\t\t}\n\t\t}\n\t\tu = result.length\n\t\tv = result[u - 1]\n\t\twhile (u-- > 0) {\n\t\t\tresult[u] = v\n\t\t\tv = lisTemp[v]\n\t\t}\n\t\tlisTemp.length = 0\n\t\treturn result\n\t}\n\n\tfunction getNextSibling(vnodes, i, nextSibling) {\n\t\tfor (; i < vnodes.length; i++) {\n\t\t\tif (vnodes[i] != null && vnodes[i].dom != null) return vnodes[i].dom\n\t\t}\n\t\treturn nextSibling\n\t}\n\n\t// This covers a really specific edge case:\n\t// - Parent node is keyed and contains child\n\t// - Child is removed, returns unresolved promise in `onbeforeremove`\n\t// - Parent node is moved in keyed diff\n\t// - Remaining children still need moved appropriately\n\t//\n\t// Ideally, I\'d track removed nodes as well, but that introduces a lot more\n\t// complexity and I\'m not exactly interested in doing that.\n\tfunction moveNodes(parent, vnode, nextSibling) {\n\t\tvar frag = $doc.createDocumentFragment()\n\t\tmoveChildToFrag(parent, frag, vnode)\n\t\tinsertNode(parent, frag, nextSibling)\n\t}\n\tfunction moveChildToFrag(parent, frag, vnode) {\n\t\t// Dodge the recursion overhead in a few of the most common cases.\n\t\twhile (vnode.dom != null && vnode.dom.parentNode === parent) {\n\t\t\tif (typeof vnode.tag !== "string") {\n\t\t\t\tvnode = vnode.instance\n\t\t\t\tif (vnode != null) continue\n\t\t\t} else if (vnode.tag === "<") {\n\t\t\t\tfor (var i = 0; i < vnode.instance.length; i++) {\n\t\t\t\t\tfrag.appendChild(vnode.instance[i])\n\t\t\t\t}\n\t\t\t} else if (vnode.tag !== "[") {\n\t\t\t\t// Don\'t recurse for text nodes *or* elements, just fragments\n\t\t\t\tfrag.appendChild(vnode.dom)\n\t\t\t} else if (vnode.children.length === 1) {\n\t\t\t\tvnode = vnode.children[0]\n\t\t\t\tif (vnode != null) continue\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < vnode.children.length; i++) {\n\t\t\t\t\tvar child = vnode.children[i]\n\t\t\t\t\tif (child != null) moveChildToFrag(parent, frag, child)\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\n\tfunction insertNode(parent, dom, nextSibling) {\n\t\tif (nextSibling != null) parent.insertBefore(dom, nextSibling)\n\t\telse parent.appendChild(dom)\n\t}\n\n\tfunction maybeSetContentEditable(vnode) {\n\t\tif (vnode.attrs == null || (\n\t\t\tvnode.attrs.contenteditable == null && // attribute\n\t\t\tvnode.attrs.contentEditable == null // property\n\t\t)) return false\n\t\tvar children = vnode.children\n\t\tif (children != null && children.length === 1 && children[0].tag === "<") {\n\t\t\tvar content = children[0].children\n\t\t\tif (vnode.dom.innerHTML !== content) vnode.dom.innerHTML = content\n\t\t}\n\t\telse if (vnode.text != null || children != null && children.length !== 0) throw new Error("Child node of a contenteditable must be trusted")\n\t\treturn true\n\t}\n\n\t//remove\n\tfunction removeNodes(parent, vnodes, start, end) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) removeNode(parent, vnode)\n\t\t}\n\t}\n\tfunction removeNode(parent, vnode) {\n\t\tvar mask = 0\n\t\tvar original = vnode.state\n\t\tvar stateResult, attrsResult\n\t\tif (typeof vnode.tag !== "string" && typeof vnode.state.onbeforeremove === "function") {\n\t\t\tvar result = callHook.call(vnode.state.onbeforeremove, vnode)\n\t\t\tif (result != null && typeof result.then === "function") {\n\t\t\t\tmask = 1\n\t\t\t\tstateResult = result\n\t\t\t}\n\t\t}\n\t\tif (vnode.attrs && typeof vnode.attrs.onbeforeremove === "function") {\n\t\t\tvar result = callHook.call(vnode.attrs.onbeforeremove, vnode)\n\t\t\tif (result != null && typeof result.then === "function") {\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tmask |= 2\n\t\t\t\tattrsResult = result\n\t\t\t}\n\t\t}\n\t\tcheckState(vnode, original)\n\n\t\t// If we can, try to fast-path it and avoid all the overhead of awaiting\n\t\tif (!mask) {\n\t\t\tonremove(vnode)\n\t\t\tremoveChild(parent, vnode)\n\t\t} else {\n\t\t\tif (stateResult != null) {\n\t\t\t\tvar next = function () {\n\t\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\t\tif (mask & 1) { mask &= 2; if (!mask) reallyRemove() }\n\t\t\t\t}\n\t\t\t\tstateResult.then(next, next)\n\t\t\t}\n\t\t\tif (attrsResult != null) {\n\t\t\t\tvar next = function () {\n\t\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\t\tif (mask & 2) { mask &= 1; if (!mask) reallyRemove() }\n\t\t\t\t}\n\t\t\t\tattrsResult.then(next, next)\n\t\t\t}\n\t\t}\n\n\t\tfunction reallyRemove() {\n\t\t\tcheckState(vnode, original)\n\t\t\tonremove(vnode)\n\t\t\tremoveChild(parent, vnode)\n\t\t}\n\t}\n\tfunction removeHTML(parent, vnode) {\n\t\tfor (var i = 0; i < vnode.instance.length; i++) {\n\t\t\tparent.removeChild(vnode.instance[i])\n\t\t}\n\t}\n\tfunction removeChild(parent, vnode) {\n\t\t// Dodge the recursion overhead in a few of the most common cases.\n\t\twhile (vnode.dom != null && vnode.dom.parentNode === parent) {\n\t\t\tif (typeof vnode.tag !== "string") {\n\t\t\t\tvnode = vnode.instance\n\t\t\t\tif (vnode != null) continue\n\t\t\t} else if (vnode.tag === "<") {\n\t\t\t\tremoveHTML(parent, vnode)\n\t\t\t} else {\n\t\t\t\tif (vnode.tag !== "[") {\n\t\t\t\t\tparent.removeChild(vnode.dom)\n\t\t\t\t\tif (!Array.isArray(vnode.children)) break\n\t\t\t\t}\n\t\t\t\tif (vnode.children.length === 1) {\n\t\t\t\t\tvnode = vnode.children[0]\n\t\t\t\t\tif (vnode != null) continue\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = 0; i < vnode.children.length; i++) {\n\t\t\t\t\t\tvar child = vnode.children[i]\n\t\t\t\t\t\tif (child != null) removeChild(parent, child)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\tfunction onremove(vnode) {\n\t\tif (typeof vnode.tag !== "string" && typeof vnode.state.onremove === "function") callHook.call(vnode.state.onremove, vnode)\n\t\tif (vnode.attrs && typeof vnode.attrs.onremove === "function") callHook.call(vnode.attrs.onremove, vnode)\n\t\tif (typeof vnode.tag !== "string") {\n\t\t\tif (vnode.instance != null) onremove(vnode.instance)\n\t\t} else {\n\t\t\tvar children = vnode.children\n\t\t\tif (Array.isArray(children)) {\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\tvar child = children[i]\n\t\t\t\t\tif (child != null) onremove(child)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//attrs\n\tfunction setAttrs(vnode, attrs, ns) {\n\t\tfor (var key in attrs) {\n\t\t\tsetAttr(vnode, key, null, attrs[key], ns)\n\t\t}\n\t}\n\tfunction setAttr(vnode, key, old, value, ns) {\n\t\tif (key === "key" || key === "is" || value == null || isLifecycleMethod(key) || (old === value && !isFormAttribute(vnode, key)) && typeof value !== "object") return\n\t\tif (key[0] === "o" && key[1] === "n") return updateEvent(vnode, key, value)\n\t\tif (key.slice(0, 6) === "xlink:") vnode.dom.setAttributeNS("http://www.w3.org/1999/xlink", key.slice(6), value)\n\t\telse if (key === "style") updateStyle(vnode.dom, old, value)\n\t\telse if (hasPropertyKey(vnode, key, ns)) {\n\t\t\tif (key === "value") {\n\t\t\t\t// Only do the coercion if we\'re actually going to check the value.\n\t\t\t\t/* eslint-disable no-implicit-coercion */\n\t\t\t\t//setting input[value] to same value by typing on focused element moves cursor to end in Chrome\n\t\t\t\tif ((vnode.tag === "input" || vnode.tag === "textarea") && vnode.dom.value === "" + value && vnode.dom === activeElement()) return\n\t\t\t\t//setting select[value] to same value while having select open blinks select dropdown in Chrome\n\t\t\t\tif (vnode.tag === "select" && old !== null && vnode.dom.value === "" + value) return\n\t\t\t\t//setting option[value] to same value while having select open blinks select dropdown in Chrome\n\t\t\t\tif (vnode.tag === "option" && old !== null && vnode.dom.value === "" + value) return\n\t\t\t\t/* eslint-enable no-implicit-coercion */\n\t\t\t}\n\t\t\t// If you assign an input type that is not supported by IE 11 with an assignment expression, an error will occur.\n\t\t\tif (vnode.tag === "input" && key === "type") vnode.dom.setAttribute(key, value)\n\t\t\telse vnode.dom[key] = value\n\t\t} else {\n\t\t\tif (typeof value === "boolean") {\n\t\t\t\tif (value) vnode.dom.setAttribute(key, "")\n\t\t\t\telse vnode.dom.removeAttribute(key)\n\t\t\t}\n\t\t\telse vnode.dom.setAttribute(key === "className" ? "class" : key, value)\n\t\t}\n\t}\n\tfunction removeAttr(vnode, key, old, ns) {\n\t\tif (key === "key" || key === "is" || old == null || isLifecycleMethod(key)) return\n\t\tif (key[0] === "o" && key[1] === "n" && !isLifecycleMethod(key)) updateEvent(vnode, key, undefined)\n\t\telse if (key === "style") updateStyle(vnode.dom, old, null)\n\t\telse if (\n\t\t\thasPropertyKey(vnode, key, ns)\n\t\t\t&& key !== "className"\n\t\t\t&& !(key === "value" && (\n\t\t\t\tvnode.tag === "option"\n\t\t\t\t|| vnode.tag === "select" && vnode.dom.selectedIndex === -1 && vnode.dom === activeElement()\n\t\t\t))\n\t\t\t&& !(vnode.tag === "input" && key === "type")\n\t\t) {\n\t\t\tvnode.dom[key] = null\n\t\t} else {\n\t\t\tvar nsLastIndex = key.indexOf(":")\n\t\t\tif (nsLastIndex !== -1) key = key.slice(nsLastIndex + 1)\n\t\t\tif (old !== false) vnode.dom.removeAttribute(key === "className" ? "class" : key)\n\t\t}\n\t}\n\tfunction setLateSelectAttrs(vnode, attrs) {\n\t\tif ("value" in attrs) {\n\t\t\tif(attrs.value === null) {\n\t\t\t\tif (vnode.dom.selectedIndex !== -1) vnode.dom.value = null\n\t\t\t} else {\n\t\t\t\tvar normalized = "" + attrs.value // eslint-disable-line no-implicit-coercion\n\t\t\t\tif (vnode.dom.value !== normalized || vnode.dom.selectedIndex === -1) {\n\t\t\t\t\tvnode.dom.value = normalized\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ("selectedIndex" in attrs) setAttr(vnode, "selectedIndex", null, attrs.selectedIndex, undefined)\n\t}\n\tfunction updateAttrs(vnode, old, attrs, ns) {\n\t\tif (attrs != null) {\n\t\t\tfor (var key in attrs) {\n\t\t\t\tsetAttr(vnode, key, old && old[key], attrs[key], ns)\n\t\t\t}\n\t\t}\n\t\tvar val\n\t\tif (old != null) {\n\t\t\tfor (var key in old) {\n\t\t\t\tif (((val = old[key]) != null) && (attrs == null || attrs[key] == null)) {\n\t\t\t\t\tremoveAttr(vnode, key, val, ns)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction isFormAttribute(vnode, attr) {\n\t\treturn attr === "value" || attr === "checked" || attr === "selectedIndex" || attr === "selected" && vnode.dom === activeElement() || vnode.tag === "option" && vnode.dom.parentNode === $doc.activeElement\n\t}\n\tfunction isLifecycleMethod(attr) {\n\t\treturn attr === "oninit" || attr === "oncreate" || attr === "onupdate" || attr === "onremove" || attr === "onbeforeremove" || attr === "onbeforeupdate"\n\t}\n\tfunction hasPropertyKey(vnode, key, ns) {\n\t\t// Filter out namespaced keys\n\t\treturn ns === undefined && (\n\t\t\t// If it\'s a custom element, just keep it.\n\t\t\tvnode.tag.indexOf("-") > -1 || vnode.attrs != null && vnode.attrs.is ||\n\t\t\t// If it\'s a normal element, let\'s try to avoid a few browser bugs.\n\t\t\tkey !== "href" && key !== "list" && key !== "form" && key !== "width" && key !== "height"// && key !== "type"\n\t\t\t// Defer the property check until *after* we check everything.\n\t\t) && key in vnode.dom\n\t}\n\n\t//style\n\tvar uppercaseRegex = /[A-Z]/g\n\tfunction toLowerCase(capital) { return "-" + capital.toLowerCase() }\n\tfunction normalizeKey(key) {\n\t\treturn key[0] === "-" && key[1] === "-" ? key :\n\t\t\tkey === "cssFloat" ? "float" :\n\t\t\t\tkey.replace(uppercaseRegex, toLowerCase)\n\t}\n\tfunction updateStyle(element, old, style) {\n\t\tif (old === style) {\n\t\t\t// Styles are equivalent, do nothing.\n\t\t} else if (style == null) {\n\t\t\t// New style is missing, just clear it.\n\t\t\telement.style.cssText = ""\n\t\t} else if (typeof style !== "object") {\n\t\t\t// New style is a string, let engine deal with patching.\n\t\t\telement.style.cssText = style\n\t\t} else if (old == null || typeof old !== "object") {\n\t\t\t// `old` is missing or a string, `style` is an object.\n\t\t\telement.style.cssText = ""\n\t\t\t// Add new style properties\n\t\t\tfor (var key in style) {\n\t\t\t\tvar value = style[key]\n\t\t\t\tif (value != null) element.style.setProperty(normalizeKey(key), String(value))\n\t\t\t}\n\t\t} else {\n\t\t\t// Both old & new are (different) objects.\n\t\t\t// Update style properties that have changed\n\t\t\tfor (var key in style) {\n\t\t\t\tvar value = style[key]\n\t\t\t\tif (value != null && (value = String(value)) !== String(old[key])) {\n\t\t\t\t\telement.style.setProperty(normalizeKey(key), value)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Remove style properties that no longer exist\n\t\t\tfor (var key in old) {\n\t\t\t\tif (old[key] != null && style[key] == null) {\n\t\t\t\t\telement.style.removeProperty(normalizeKey(key))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Here\'s an explanation of how this works:\n\t// 1. The event names are always (by design) prefixed by `on`.\n\t// 2. The EventListener interface accepts either a function or an object\n\t//    with a `handleEvent` method.\n\t// 3. The object does not inherit from `Object.prototype`, to avoid\n\t//    any potential interference with that (e.g. setters).\n\t// 4. The event name is remapped to the handler before calling it.\n\t// 5. In function-based event handlers, `ev.target === this`. We replicate\n\t//    that below.\n\t// 6. In function-based event handlers, `return false` prevents the default\n\t//    action and stops event propagation. We replicate that below.\n\tfunction EventDict() {\n\t\t// Save this, so the current redraw is correctly tracked.\n\t\tthis._ = currentRedraw\n\t}\n\tEventDict.prototype = Object.create(null)\n\tEventDict.prototype.handleEvent = function (ev) {\n\t\tvar handler = this["on" + ev.type]\n\t\tvar result\n\t\tif (typeof handler === "function") result = handler.call(ev.currentTarget, ev)\n\t\telse if (typeof handler.handleEvent === "function") handler.handleEvent(ev)\n\t\tif (this._ && ev.redraw !== false) (0, this._)()\n\t\tif (result === false) {\n\t\t\tev.preventDefault()\n\t\t\tev.stopPropagation()\n\t\t}\n\t}\n\n\t//event\n\tfunction updateEvent(vnode, key, value) {\n\t\tif (vnode.events != null) {\n\t\t\tif (vnode.events[key] === value) return\n\t\t\tif (value != null && (typeof value === "function" || typeof value === "object")) {\n\t\t\t\tif (vnode.events[key] == null) vnode.dom.addEventListener(key.slice(2), vnode.events, false)\n\t\t\t\tvnode.events[key] = value\n\t\t\t} else {\n\t\t\t\tif (vnode.events[key] != null) vnode.dom.removeEventListener(key.slice(2), vnode.events, false)\n\t\t\t\tvnode.events[key] = undefined\n\t\t\t}\n\t\t} else if (value != null && (typeof value === "function" || typeof value === "object")) {\n\t\t\tvnode.events = new EventDict()\n\t\t\tvnode.dom.addEventListener(key.slice(2), vnode.events, false)\n\t\t\tvnode.events[key] = value\n\t\t}\n\t}\n\n\t//lifecycle\n\tfunction initLifecycle(source, vnode, hooks) {\n\t\tif (typeof source.oninit === "function") callHook.call(source.oninit, vnode)\n\t\tif (typeof source.oncreate === "function") hooks.push(callHook.bind(source.oncreate, vnode))\n\t}\n\tfunction updateLifecycle(source, vnode, hooks) {\n\t\tif (typeof source.onupdate === "function") hooks.push(callHook.bind(source.onupdate, vnode))\n\t}\n\tfunction shouldNotUpdate(vnode, old) {\n\t\tdo {\n\t\t\tif (vnode.attrs != null && typeof vnode.attrs.onbeforeupdate === "function") {\n\t\t\t\tvar force = callHook.call(vnode.attrs.onbeforeupdate, vnode, old)\n\t\t\t\tif (force !== undefined && !force) break\n\t\t\t}\n\t\t\tif (typeof vnode.tag !== "string" && typeof vnode.state.onbeforeupdate === "function") {\n\t\t\t\tvar force = callHook.call(vnode.state.onbeforeupdate, vnode, old)\n\t\t\t\tif (force !== undefined && !force) break\n\t\t\t}\n\t\t\treturn false\n\t\t} while (false); // eslint-disable-line no-constant-condition\n\t\tvnode.dom = old.dom\n\t\tvnode.domSize = old.domSize\n\t\tvnode.instance = old.instance\n\t\t// One would think having the actual latest attributes would be ideal,\n\t\t// but it doesn\'t let us properly diff based on our current internal\n\t\t// representation. We have to save not only the old DOM info, but also\n\t\t// the attributes used to create it, as we diff *that*, not against the\n\t\t// DOM directly (with a few exceptions in `setAttr`). And, of course, we\n\t\t// need to save the children and text as they are conceptually not\n\t\t// unlike special "attributes" internally.\n\t\tvnode.attrs = old.attrs\n\t\tvnode.children = old.children\n\t\tvnode.text = old.text\n\t\treturn true\n\t}\n\n\treturn function(dom, vnodes, redraw) {\n\t\tif (!dom) throw new TypeError("Ensure the DOM element being passed to m.route/m.mount/m.render is not undefined.")\n\t\tvar hooks = []\n\t\tvar active = activeElement()\n\t\tvar namespace = dom.namespaceURI\n\n\t\t// First time rendering into a node clears it out\n\t\tif (dom.vnodes == null) dom.textContent = ""\n\n\t\tvnodes = Vnode.normalizeChildren(Array.isArray(vnodes) ? vnodes : [vnodes])\n\t\tvar prevRedraw = currentRedraw\n\t\ttry {\n\t\t\tcurrentRedraw = typeof redraw === "function" ? redraw : undefined\n\t\t\tupdateNodes(dom, dom.vnodes, vnodes, hooks, null, namespace === "http://www.w3.org/1999/xhtml" ? undefined : namespace)\n\t\t} finally {\n\t\t\tcurrentRedraw = prevRedraw\n\t\t}\n\t\tdom.vnodes = vnodes\n\t\t// `document.activeElement` can return null: https://html.spec.whatwg.org/multipage/interaction.html#dom-document-activeelement\n\t\tif (active != null && activeElement() !== active && typeof active.focus === "function") active.focus()\n\t\tfor (var i = 0; i < hooks.length; i++) hooks[i]()\n\t}\n}\n\n\n//# sourceURL=webpack:///./node_modules/mithril/render/render.js?')},"./node_modules/mithril/render/trust.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar Vnode = __webpack_require__(/*! ../render/vnode */ "./node_modules/mithril/render/vnode.js")\n\nmodule.exports = function(html) {\n\tif (html == null) html = ""\n\treturn Vnode("<", undefined, undefined, html, undefined, undefined)\n}\n\n\n//# sourceURL=webpack:///./node_modules/mithril/render/trust.js?')},"./node_modules/mithril/render/vnode.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nfunction Vnode(tag, key, attrs, children, text, dom) {\n\treturn {tag: tag, key: key, attrs: attrs, children: children, text: text, dom: dom, domSize: undefined, state: undefined, events: undefined, instance: undefined}\n}\nVnode.normalize = function(node) {\n\tif (Array.isArray(node)) return Vnode("[", undefined, undefined, Vnode.normalizeChildren(node), undefined, undefined)\n\tif (node == null || typeof node === "boolean") return null\n\tif (typeof node === "object") return node\n\treturn Vnode("#", undefined, undefined, String(node), undefined, undefined)\n}\nVnode.normalizeChildren = function(input) {\n\tvar children = []\n\tif (input.length) {\n\t\tvar isKeyed = input[0] != null && input[0].key != null\n\t\t// Note: this is a *very* perf-sensitive check.\n\t\t// Fun fact: merging the loop like this is somehow faster than splitting\n\t\t// it, noticeably so.\n\t\tfor (var i = 1; i < input.length; i++) {\n\t\t\tif ((input[i] != null && input[i].key != null) !== isKeyed) {\n\t\t\t\tthrow new TypeError("Vnodes must either always have keys or never have keys!")\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < input.length; i++) {\n\t\t\tchildren[i] = Vnode.normalize(input[i])\n\t\t}\n\t}\n\treturn children\n}\n\nmodule.exports = Vnode\n\n\n//# sourceURL=webpack:///./node_modules/mithril/render/vnode.js?')},"./node_modules/mithril/request.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar PromisePolyfill = __webpack_require__(/*! ./promise/promise */ "./node_modules/mithril/promise/promise.js")\nvar mountRedraw = __webpack_require__(/*! ./mount-redraw */ "./node_modules/mithril/mount-redraw.js")\n\nmodule.exports = __webpack_require__(/*! ./request/request */ "./node_modules/mithril/request/request.js")(window, PromisePolyfill, mountRedraw.redraw)\n\n\n//# sourceURL=webpack:///./node_modules/mithril/request.js?')},"./node_modules/mithril/request/request.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar buildPathname = __webpack_require__(/*! ../pathname/build */ "./node_modules/mithril/pathname/build.js")\n\nmodule.exports = function($window, Promise, oncompletion) {\n\tvar callbackCount = 0\n\n\tfunction PromiseProxy(executor) {\n\t\treturn new Promise(executor)\n\t}\n\n\t// In case the global Promise is some userland library\'s where they rely on\n\t// `foo instanceof this.constructor`, `this.constructor.resolve(value)`, or\n\t// similar. Let\'s *not* break them.\n\tPromiseProxy.prototype = Promise.prototype\n\tPromiseProxy.__proto__ = Promise // eslint-disable-line no-proto\n\n\tfunction makeRequest(factory) {\n\t\treturn function(url, args) {\n\t\t\tif (typeof url !== "string") { args = url; url = url.url }\n\t\t\telse if (args == null) args = {}\n\t\t\tvar promise = new Promise(function(resolve, reject) {\n\t\t\t\tfactory(buildPathname(url, args.params), args, function (data) {\n\t\t\t\t\tif (typeof args.type === "function") {\n\t\t\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\t\t\t\tdata[i] = new args.type(data[i])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse data = new args.type(data)\n\t\t\t\t\t}\n\t\t\t\t\tresolve(data)\n\t\t\t\t}, reject)\n\t\t\t})\n\t\t\tif (args.background === true) return promise\n\t\t\tvar count = 0\n\t\t\tfunction complete() {\n\t\t\t\tif (--count === 0 && typeof oncompletion === "function") oncompletion()\n\t\t\t}\n\n\t\t\treturn wrap(promise)\n\n\t\t\tfunction wrap(promise) {\n\t\t\t\tvar then = promise.then\n\t\t\t\t// Set the constructor, so engines know to not await or resolve\n\t\t\t\t// this as a native promise. At the time of writing, this is\n\t\t\t\t// only necessary for V8, but their behavior is the correct\n\t\t\t\t// behavior per spec. See this spec issue for more details:\n\t\t\t\t// https://github.com/tc39/ecma262/issues/1577. Also, see the\n\t\t\t\t// corresponding comment in `request/tests/test-request.js` for\n\t\t\t\t// a bit more background on the issue at hand.\n\t\t\t\tpromise.constructor = PromiseProxy\n\t\t\t\tpromise.then = function() {\n\t\t\t\t\tcount++\n\t\t\t\t\tvar next = then.apply(promise, arguments)\n\t\t\t\t\tnext.then(complete, function(e) {\n\t\t\t\t\t\tcomplete()\n\t\t\t\t\t\tif (count === 0) throw e\n\t\t\t\t\t})\n\t\t\t\t\treturn wrap(next)\n\t\t\t\t}\n\t\t\t\treturn promise\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasHeader(args, name) {\n\t\tfor (var key in args.headers) {\n\t\t\tif ({}.hasOwnProperty.call(args.headers, key) && name.test(key)) return true\n\t\t}\n\t\treturn false\n\t}\n\n\treturn {\n\t\trequest: makeRequest(function(url, args, resolve, reject) {\n\t\t\tvar method = args.method != null ? args.method.toUpperCase() : "GET"\n\t\t\tvar body = args.body\n\t\t\tvar assumeJSON = (args.serialize == null || args.serialize === JSON.serialize) && !(body instanceof $window.FormData)\n\t\t\tvar responseType = args.responseType || (typeof args.extract === "function" ? "" : "json")\n\n\t\t\tvar xhr = new $window.XMLHttpRequest(), aborted = false\n\t\t\tvar original = xhr, replacedAbort\n\t\t\tvar abort = xhr.abort\n\n\t\t\txhr.abort = function() {\n\t\t\t\taborted = true\n\t\t\t\tabort.call(this)\n\t\t\t}\n\n\t\t\txhr.open(method, url, args.async !== false, typeof args.user === "string" ? args.user : undefined, typeof args.password === "string" ? args.password : undefined)\n\n\t\t\tif (assumeJSON && body != null && !hasHeader(args, /^content-type$/i)) {\n\t\t\t\txhr.setRequestHeader("Content-Type", "application/json; charset=utf-8")\n\t\t\t}\n\t\t\tif (typeof args.deserialize !== "function" && !hasHeader(args, /^accept$/i)) {\n\t\t\t\txhr.setRequestHeader("Accept", "application/json, text/*")\n\t\t\t}\n\t\t\tif (args.withCredentials) xhr.withCredentials = args.withCredentials\n\t\t\tif (args.timeout) xhr.timeout = args.timeout\n\t\t\txhr.responseType = responseType\n\n\t\t\tfor (var key in args.headers) {\n\t\t\t\tif ({}.hasOwnProperty.call(args.headers, key)) {\n\t\t\t\t\txhr.setRequestHeader(key, args.headers[key])\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txhr.onreadystatechange = function(ev) {\n\t\t\t\t// Don\'t throw errors on xhr.abort().\n\t\t\t\tif (aborted) return\n\n\t\t\t\tif (ev.target.readyState === 4) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar success = (ev.target.status >= 200 && ev.target.status < 300) || ev.target.status === 304 || (/^file:\\/\\//i).test(url)\n\t\t\t\t\t\t// When the response type isn\'t "" or "text",\n\t\t\t\t\t\t// `xhr.responseText` is the wrong thing to use.\n\t\t\t\t\t\t// Browsers do the right thing and throw here, and we\n\t\t\t\t\t\t// should honor that and do the right thing by\n\t\t\t\t\t\t// preferring `xhr.response` where possible/practical.\n\t\t\t\t\t\tvar response = ev.target.response, message\n\n\t\t\t\t\t\tif (responseType === "json") {\n\t\t\t\t\t\t\t// For IE and Edge, which don\'t implement\n\t\t\t\t\t\t\t// `responseType: "json"`.\n\t\t\t\t\t\t\tif (!ev.target.responseType && typeof args.extract !== "function") response = JSON.parse(ev.target.responseText)\n\t\t\t\t\t\t} else if (!responseType || responseType === "text") {\n\t\t\t\t\t\t\t// Only use this default if it\'s text. If a parsed\n\t\t\t\t\t\t\t// document is needed on old IE and friends (all\n\t\t\t\t\t\t\t// unsupported), the user should use a custom\n\t\t\t\t\t\t\t// `config` instead. They\'re already using this at\n\t\t\t\t\t\t\t// their own risk.\n\t\t\t\t\t\t\tif (response == null) response = ev.target.responseText\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (typeof args.extract === "function") {\n\t\t\t\t\t\t\tresponse = args.extract(ev.target, args)\n\t\t\t\t\t\t\tsuccess = true\n\t\t\t\t\t\t} else if (typeof args.deserialize === "function") {\n\t\t\t\t\t\t\tresponse = args.deserialize(response)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (success) resolve(response)\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttry { message = ev.target.responseText }\n\t\t\t\t\t\t\tcatch (e) { message = response }\n\t\t\t\t\t\t\tvar error = new Error(message)\n\t\t\t\t\t\t\terror.code = ev.target.status\n\t\t\t\t\t\t\terror.response = response\n\t\t\t\t\t\t\treject(error)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\treject(e)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof args.config === "function") {\n\t\t\t\txhr = args.config(xhr, args, url) || xhr\n\n\t\t\t\t// Propagate the `abort` to any replacement XHR as well.\n\t\t\t\tif (xhr !== original) {\n\t\t\t\t\treplacedAbort = xhr.abort\n\t\t\t\t\txhr.abort = function() {\n\t\t\t\t\t\taborted = true\n\t\t\t\t\t\treplacedAbort.call(this)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (body == null) xhr.send()\n\t\t\telse if (typeof args.serialize === "function") xhr.send(args.serialize(body))\n\t\t\telse if (body instanceof $window.FormData) xhr.send(body)\n\t\t\telse xhr.send(JSON.stringify(body))\n\t\t}),\n\t\tjsonp: makeRequest(function(url, args, resolve, reject) {\n\t\t\tvar callbackName = args.callbackName || "_mithril_" + Math.round(Math.random() * 1e16) + "_" + callbackCount++\n\t\t\tvar script = $window.document.createElement("script")\n\t\t\t$window[callbackName] = function(data) {\n\t\t\t\tdelete $window[callbackName]\n\t\t\t\tscript.parentNode.removeChild(script)\n\t\t\t\tresolve(data)\n\t\t\t}\n\t\t\tscript.onerror = function() {\n\t\t\t\tdelete $window[callbackName]\n\t\t\t\tscript.parentNode.removeChild(script)\n\t\t\t\treject(new Error("JSONP request failed"))\n\t\t\t}\n\t\t\tscript.src = url + (url.indexOf("?") < 0 ? "?" : "&") +\n\t\t\t\tencodeURIComponent(args.callbackKey || "callback") + "=" +\n\t\t\t\tencodeURIComponent(callbackName)\n\t\t\t$window.document.documentElement.appendChild(script)\n\t\t}),\n\t}\n}\n\n\n//# sourceURL=webpack:///./node_modules/mithril/request/request.js?')},"./node_modules/mithril/route.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar mountRedraw = __webpack_require__(/*! ./mount-redraw */ "./node_modules/mithril/mount-redraw.js")\n\nmodule.exports = __webpack_require__(/*! ./api/router */ "./node_modules/mithril/api/router.js")(window, mountRedraw)\n\n\n//# sourceURL=webpack:///./node_modules/mithril/route.js?')},"./src/shares/index.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst m = __webpack_require__(/*! mithril */ \"./node_modules/mithril/index.js\"); // prevents a weird compilation error\nconst sdk_1 = __webpack_require__(/*! @meeco/sdk */ \"../sdk/src/index.ts\");\nconst $ = id => document.getElementById(id);\nconst $get = (id) => { var _a; return (_a = $(id)) === null || _a === void 0 ? void 0 : _a.value; };\nconst $set = (id, value) => ($(id).value = value);\nlet environment;\nloadEnvironmentFromStorage();\nfunction loadEnvironmentFromStorage() {\n    const loadKey = (key) => localStorage.getItem(key) ? $set(key, localStorage.getItem(key)) : void 0;\n    loadKey('vaultUrl');\n    loadKey('keystoreUrl');\n    loadKey('subscriptionKey');\n    updateEnvironment();\n}\nfunction updateEnvironment() {\n    const vaultUrl = $get('vaultUrl');\n    const keystoreUrl = $get('keystoreUrl');\n    const subscriptionKey = $get('subscriptionKey');\n    localStorage.setItem('vaultUrl', vaultUrl);\n    localStorage.setItem('keystoreUrl', keystoreUrl);\n    localStorage.setItem('subscriptionKey', subscriptionKey);\n    if (!vaultUrl || !keystoreUrl || !subscriptionKey) {\n        log('Error: Please configure all environment fields');\n        return;\n    }\n    environment = new sdk_1.Environment({\n        vault: {\n            url: vaultUrl,\n            subscription_key: subscriptionKey,\n        },\n        keystore: {\n            url: keystoreUrl,\n            subscription_key: subscriptionKey,\n            provider_api_key: '',\n        },\n    });\n    log('Saved environment settings');\n}\nconst STATE = { otherUsers: [], templates: [], connections: {} };\n// Assumes modern browser with fetch\nsdk_1.configureFetch(window.fetch);\n$('updateEnvironment').addEventListener('click', updateEnvironment);\nm.mount($('app-main'), AppComponent);\nfunction getUsername(auth) {\n    return sdk_1.Secrets.usernameFromSecret(auth.secret);\n}\nasync function getTemplates(auth) {\n    clearLog();\n    try {\n        const templates = await new sdk_1.TemplateService(environment, log).list(auth);\n        // note that SDKtemplate constructor filters the correct slots from the response\n        return templates.item_templates.map(t => new sdk_1.SDKTemplate(t, templates.slots));\n    }\n    catch (error) {\n        log(error.message || error);\n        throw error;\n    }\n}\n// connect the given user to all other users\n// checks to ensure no self connections\nasync function connect(fromUser) {\n    const service = new sdk_1.ConnectionService(environment, log);\n    const fromUsername = getUsername(fromUser);\n    // init\n    if (!STATE.connections[fromUsername]) {\n        STATE.connections[fromUsername] = [];\n    }\n    for (const user of STATE.otherUsers.concat(STATE.user)) {\n        if (fromUser.secret !== user.secret) {\n            const toUsername = getUsername(user);\n            log(`Connecting ${fromUsername} to ${toUsername}`);\n            // init\n            if (!STATE.connections[toUsername]) {\n                STATE.connections[toUsername] = [];\n            }\n            const { fromUserConnection, toUserConnection } = await service.createConnection({\n                from: fromUser,\n                to: user,\n                options: { fromName: 'any', toName: 'any' },\n            });\n            STATE.connections[fromUsername].push({\n                name: toUsername,\n                connectionId: fromUserConnection.own.id,\n            });\n            STATE.connections[toUsername].push({\n                name: fromUsername,\n                connectionId: toUserConnection.own.id,\n            });\n        }\n    }\n}\nasync function handleException(error) {\n    let errorMessage;\n    if (error && error.json && typeof error.json === 'function') {\n        error = await error.json();\n    }\n    if (error.message) {\n        errorMessage = error.message;\n    }\n    else {\n        errorMessage = error;\n    }\n    log(errorMessage);\n}\nfunction log(message) {\n    const content = $get('log');\n    const newContent = (content ? content + '\\n' : '') + message;\n    $set('log', newContent);\n    $('log').scrollTop = $('log').scrollHeight;\n}\nfunction clearLog() {\n    $set('log', '');\n    $('log').scrollTop = 0;\n}\nfunction slotTypeToInputType(ty) {\n    switch (ty) {\n        case 'bool':\n            return 'checkbox';\n        case 'date':\n        case 'datetime':\n            return 'date';\n        case 'password':\n            return 'password';\n        case 'phone_number':\n            return 'number';\n        case 'key_value':\n        default:\n            return 'text';\n    }\n}\nfunction AppComponent() {\n    // this is passed to the user's components\n    const userState = [];\n    function getStateFor(username) {\n        const result = userState.find(x => x.username === username);\n        if (!result) {\n            throw new Error(`Reference to non-existing username ${username}`);\n        }\n        return result;\n    }\n    let mainItem;\n    const user1 = UserComponent({\n        onlogin: async (auth) => {\n            STATE.user = auth;\n            userState[0] = {\n                username: getUsername(auth),\n                item: null,\n                share: null,\n                auth,\n            };\n            STATE.templates = await getTemplates(auth);\n            mainItem = CreateItemComponent({ oncreated: _showExistingItem });\n            m.redraw();\n        },\n    });\n    let user2ItemComponent;\n    const user2 = UserComponent({\n        onlogin: auth => {\n            STATE.otherUsers.push(auth);\n            userState[1] = {\n                username: getUsername(auth),\n                item: null,\n                share: null,\n                auth,\n            };\n            user2ItemComponent = SharedItemComponent({ auth, onshare: _showAcceptShare });\n            return connect(auth);\n        },\n    });\n    let user3ItemComponent;\n    const user3 = UserComponent({\n        onlogin: auth => {\n            STATE.otherUsers.push(auth);\n            userState[2] = {\n                username: getUsername(auth),\n                item: null,\n                share: null,\n                auth,\n            };\n            user3ItemComponent = SharedItemComponent({ auth, onshare: _showAcceptShare });\n            return connect(auth);\n        },\n    });\n    // actions\n    // An item is created by user1\n    const _showExistingItem = (item) => {\n        userState[0].item = item;\n        mainItem = ExistingItemComponent({\n            onshare: _showAcceptShare,\n            auth: STATE.user,\n        });\n    };\n    // user 0 created a share with user 1 or 2, now show the share for the user to accept terms\n    const _showAcceptShare = async (share, receiver) => {\n        const username = receiver;\n        const state = getStateFor(username);\n        try {\n            const response = await new sdk_1.ShareService(environment, log)\n                .getAPI(state.auth)\n                .incomingSharesIdGet(share.id);\n            state.share = response.share;\n            // get the item if acceptance is not required\n            if (response.share.acceptance_required === sdk_1.AcceptanceRequest.NotRequired) {\n                const { item } = await new sdk_1.ShareService(environment, log).getSharedItem(state.auth, share.id, sdk_1.ShareType.Incoming);\n                state.item = item;\n            }\n        }\n        catch (error) {\n            log(error.message || error);\n            throw error;\n        }\n        m.redraw();\n    };\n    return {\n        view: vnode => {\n            var _a, _b;\n            return [\n                m('div', [m(user1), mainItem ? m(mainItem, { item: userState[0].item }) : null]),\n                m('div', [\n                    m(user2),\n                    ((_a = userState[1]) === null || _a === void 0 ? void 0 : _a.share) ? m(user2ItemComponent, { userState: userState[1] }) : null,\n                ]),\n                m('div', [\n                    m(user3),\n                    ((_b = userState[2]) === null || _b === void 0 ? void 0 : _b.share) ? m(user3ItemComponent, { userState: userState[2] }) : null,\n                ]),\n            ];\n        },\n    };\n}\n/** Simple component for styling headers */\nfunction CardComponent() {\n    return {\n        view: vnode => m('.card', [m('h4', vnode.attrs.title), m('hr'), vnode.children]),\n    };\n}\nfunction UserComponent(vInit) {\n    let username = '';\n    let secret = '';\n    let passphrase = '';\n    let user;\n    let title = 'User Login';\n    function onlogin(auth) {\n        username = username || sdk_1.Secrets.usernameFromSecret(secret);\n        title = 'User ' + username;\n        vInit.onlogin(auth);\n        m.redraw();\n    }\n    async function generateUsername() {\n        try {\n            username = await new sdk_1.UserService(environment, log).generateUsername();\n            m.redraw();\n        }\n        catch (error) {\n            return handleException(error);\n        }\n    }\n    function generateSecret() {\n        clearLog();\n        if (!username) {\n            return alert('Generating a secret requires a username');\n        }\n        secret = sdk_1.Secrets.generateSecret(username);\n    }\n    async function fetchUserData() {\n        clearLog();\n        if (!passphrase || !secret) {\n            return alert('Passphrase and secret are required for fetching user data');\n        }\n        try {\n            user = await new sdk_1.UserService(environment, log).getAuthData(passphrase, secret);\n            onlogin(user);\n        }\n        catch (error) {\n            return handleException(error);\n        }\n    }\n    async function createUser() {\n        clearLog();\n        if (!secret) {\n            if (!username) {\n                await generateUsername();\n            }\n            generateSecret();\n        }\n        if (!passphrase) {\n            return alert('Passphrase is required for creating a user');\n        }\n        try {\n            user = await new sdk_1.UserService(environment, log).create(passphrase, secret);\n            onlogin(user);\n        }\n        catch (error) {\n            return handleException(error);\n        }\n    }\n    return {\n        view: () => m(CardComponent, { title }, [\n            m('input', {\n                placeholder: 'Enter or Generate Username',\n                autocapitalize: 'off',\n                autocomplete: 'off',\n                value: username,\n                onchange: e => (username = e.target.value),\n            }),\n            m('button', { onclick: generateUsername }, 'Generate'),\n            m('input', {\n                placeholder: 'Enter or Generate User Secret',\n                autocapitalize: 'off',\n                autocomplete: 'off',\n                value: secret,\n                onchange: e => (secret = e.target.value),\n            }),\n            m('button', { onclick: generateSecret, disabled: !username }, 'Generate'),\n            m('input', {\n                placeholder: 'Enter Passphrase',\n                type: 'password',\n                autocapitalize: 'off',\n                autocomplete: 'off',\n                value: passphrase,\n                required: true,\n                onchange: e => (passphrase = e.target.value),\n            }),\n            m('hr'),\n            m('button', { onclick: fetchUserData, disabled: !(passphrase && secret) }, 'Fetch User Data'),\n            m('button', { onclick: createUser }, 'Create New User'),\n            user\n                ? m('textarea', { disabled: true, rows: 10, value: JSON.stringify(user, null, 2) })\n                : null,\n        ]),\n    };\n}\n/**\n * Use this like m(SlotComponent, { slot: aSlot }), as the slot is updated with\n * the user's entered value.\n */\nfunction SlotComponent() {\n    return {\n        view: vNode => m('div', [\n            m('label', vNode.attrs.slot.label),\n            m('input', {\n                name: vNode.attrs.slot.name,\n                type: slotTypeToInputType(vNode.attrs.slot.slot_type_name),\n                value: vNode.attrs.slot.value || '',\n                onchange: e => (vNode.attrs.slot.value = e.target.value),\n            }),\n        ]),\n    };\n}\n/** Used by the primary user to create an Item from a Template */\nfunction CreateItemComponent(vInit) {\n    let itemTemplate;\n    let itemLabel = '';\n    // store the state of the form inputs\n    let newSlots = [];\n    const createdCallback = vInit.oncreated;\n    function changeTemplate(e) {\n        itemTemplate = STATE.templates.find(t => t.name === e.target.value);\n        // refresh state of newSlots\n        newSlots = itemTemplate.slots.map(({ name, label, slot_type_name }) => ({\n            name,\n            label,\n            slot_type_name,\n        }));\n    }\n    async function _createItem() {\n        clearLog();\n        if (!STATE.user) {\n            return alert('Fetch user data above first');\n        }\n        try {\n            // construct Item with slot values\n            const item = new sdk_1.NewItem(itemLabel, itemTemplate.name, newSlots);\n            const newItem = await new sdk_1.ItemService(environment, log).create(STATE.user, item);\n            createdCallback(newItem);\n            m.redraw();\n        }\n        catch (error) {\n            return handleException(error);\n        }\n    }\n    return {\n        view: vNode => m(CardComponent, { title: 'Create Item' }, [\n            m('form', [\n                m('input', { type: 'button', value: 'Create', onclick: _createItem }),\n                m('input', { type: 'reset', value: 'Reset' }),\n                m('div', [\n                    m('label', 'Template'),\n                    m('select', { onchange: changeTemplate }, STATE.templates.map(t => m('option', { value: t.name }, t.label))),\n                ]),\n                m('div', [\n                    m('label', 'Label'),\n                    m('input', {\n                        name: 'label',\n                        required: true,\n                        value: itemLabel,\n                        onchange: e => (itemLabel = e.target.value),\n                    }),\n                ]),\n                m('div', newSlots.map(s => m(SlotComponent, { slot: s }))),\n            ]),\n        ]),\n    };\n}\n/**\n * Either an AcceptShareComponent or ExistingItemComponent depending on userState.\n * Attrs: userState\n */\nfunction SharedItemComponent(vInit) {\n    const acceptComponent = AcceptShareComponent({\n        onaccept: () => {\n            m.redraw();\n        },\n        onreject: () => {\n            m.redraw();\n        },\n    });\n    const itemComponent = ExistingItemComponent({\n        auth: vInit.auth,\n        onshare: vInit.onshare,\n    });\n    return {\n        view: vnode => vnode.attrs.userState.share.acceptance_required === sdk_1.AcceptanceStatus.Required\n            ? m(acceptComponent, { userState: vnode.attrs.userState })\n            : m(itemComponent, { item: vnode.attrs.userState.item }),\n    };\n}\n/**\n * An Item that has be created or received via share.\n * Attrs: item, share\n */\nfunction ExistingItemComponent(vInit) {\n    const shareComponent = CreateShareComponent(vInit);\n    return {\n        view: vnode => {\n            var _a;\n            return m(CardComponent, { title: 'Item' }, [\n                m('form', [\n                    vnode.attrs.item.isOwned()\n                        ? m('input', { type: 'button', value: 'Edit', onclick: () => alert('TODO') })\n                        : null,\n                    m('input', { type: 'button', value: 'Delete', onclick: () => alert('TODO') }),\n                    m('div', [\n                        m('label', 'Template'),\n                        m('input', { disabled: true, value: vnode.attrs.item.item.item_template_label }),\n                        m('label', 'Label'),\n                        m('input', { name: 'label', value: vnode.attrs.item.label }),\n                    ]),\n                    m('div', vnode.attrs.item.slots.map(s => m(SlotComponent, { slot: s }))),\n                ]),\n                m('textarea', {\n                    disabled: true,\n                    rows: '10',\n                    value: JSON.stringify(vnode.attrs.item, null, 2),\n                }),\n                // only if we can onshare\n                vnode.attrs.item.isOwned || ((_a = vnode.attrs.share) === null || _a === void 0 ? void 0 : _a.sharing_mode) === sdk_1.SharingMode.Anyone\n                    ? m(shareComponent, { item: vnode.attrs.item })\n                    : null,\n            ]);\n        },\n    };\n}\n/**\n * attrs: item: DecryptedItem\n */\nfunction CreateShareComponent(vInit) {\n    let expiry = '';\n    let canOnshare = false;\n    let mustAcceptTerms = false;\n    let terms = '';\n    const ownerName = getUsername(vInit.auth);\n    const ownerAuth = vInit.auth;\n    let connectionId = '';\n    const callback = vInit.onshare;\n    async function createShare(item) {\n        clearLog();\n        const service = new sdk_1.ShareService(environment, log);\n        // connectionId may be unset if users were created after the item\n        const connectionValue = connectionId || $get('connection-select');\n        const receiverUsername = STATE.connections[ownerName].find(x => x.connectionId === connectionValue).name;\n        if (!connectionValue) {\n            alert('No connection selected for share');\n            return;\n        }\n        try {\n            const shareOptions = {\n                expires_at: expiry ? new Date(expiry) : undefined,\n                terms,\n                sharing_mode: canOnshare ? sdk_1.SharingMode.Anyone : sdk_1.SharingMode.Owner,\n                acceptance_required: mustAcceptTerms\n                    ? sdk_1.AcceptanceRequest.Required\n                    : sdk_1.AcceptanceRequest.NotRequired,\n            };\n            // this API endpoint lets us create multiple shares, but we only create one\n            const { shares: [share], } = await service.shareItem(ownerAuth, connectionValue, item.id, shareOptions);\n            callback(share, receiverUsername);\n        }\n        catch (error) {\n            log(error.message || error);\n            throw error;\n        }\n    }\n    return {\n        view: vnode => [\n            m('h4', 'Sharing'),\n            m('hr'),\n            m('input', { type: 'button', value: 'Share', onclick: () => createShare(vnode.attrs.item) }),\n            m('div', [\n                m('label', 'Share with:'),\n                m('select#connection-select', { onchange: e => (connectionId = e.target.value) }, (STATE.connections[ownerName] || []).map(({ name, connectionId: id }) => m('option', { value: id }, name))),\n            ]),\n            m('div', [\n                m('label', 'Expiry'),\n                m('input', {\n                    type: 'date',\n                    required: true,\n                    value: expiry,\n                    onchange: e => (expiry = e.target.value),\n                }),\n            ]),\n            m('div', [\n                m('label', 'Allow on-sharing:'),\n                m('input', {\n                    type: 'checkbox',\n                    checked: canOnshare,\n                    onchange: e => (canOnshare = e.target.value),\n                }),\n            ]),\n            m('div', [\n                m('label', 'Receiver must accept terms:'),\n                m('input', {\n                    type: 'checkbox',\n                    checked: mustAcceptTerms,\n                    onchange: e => (mustAcceptTerms = e.target.value),\n                }),\n            ]),\n            m('div', [\n                m('label', 'Terms:'),\n                m('textarea', { rows: '10', value: terms, onchange: e => (terms = e.target.value) }),\n            ]),\n        ],\n    };\n}\n/**\n * Shows terms if applicable, user may accept or reject.\n * Attrs: userstate\n */\nfunction AcceptShareComponent(vInit) {\n    const acceptCallback = vInit.onaccept;\n    const rejectCallback = vInit.onreject;\n    async function acceptShare(userState) {\n        clearLog();\n        const service = new sdk_1.ShareService(environment, log);\n        const shareId = userState.share.id;\n        try {\n            // cannot use this API method if acceptance is not required\n            if (userState.share.acceptance_required === sdk_1.AcceptanceRequest.Required) {\n                await service.acceptIncomingShare(userState.auth, shareId);\n            }\n            // update user state\n            const { share, item } = await service.getSharedItem(userState.auth, shareId);\n            userState.share = share;\n            userState.item = item;\n            acceptCallback(item, share);\n        }\n        catch (error) {\n            log(error.message || error);\n            throw error;\n        }\n    }\n    function rejectShare(userState) {\n        userState.item = null;\n        userState.share = null;\n        rejectCallback();\n    }\n    return {\n        view: vnode => m(CardComponent, { title: 'Incoming Share' }, [\n            m('input', {\n                type: 'button',\n                value: 'Accept',\n                onclick: () => acceptShare(vnode.attrs.userState),\n            }),\n            m('input', {\n                type: 'button',\n                value: 'Reject',\n                onclick: () => rejectShare(vnode.attrs.userState),\n            }),\n            m('div', [\n                m('label', 'Expiry'),\n                m('input', {\n                    type: 'date',\n                    // expires_at is a Date object\n                    value: vnode.attrs.userState.share.expires_at.toISOString().slice(0, 10),\n                }),\n            ]),\n            vnode.attrs.userState.share.terms\n                ? m('div', [\n                    m('label', 'Terms:'),\n                    m('textarea', { rows: '10', value: vnode.attrs.userState.share.terms }),\n                ])\n                : null,\n            m('div', [\n                m('label', 'Owner:'),\n                m('input', { disabled: true, value: vnode.attrs.userState.share.owner_id }),\n                m('label', 'Sender:'),\n                m('input', { disabled: true, value: vnode.attrs.userState.share.sender_id }),\n            ]),\n        ]),\n    };\n}\n\n\n//# sourceURL=webpack:///./src/shares/index.ts?")},0:function(module,exports){eval("/* (ignored) */\n\n//# sourceURL=webpack:///crypto_(ignored)?")},1:function(module,exports){eval("/* (ignored) */\n\n//# sourceURL=webpack:///util_(ignored)?")},2:function(module,exports){eval("/* (ignored) */\n\n//# sourceURL=webpack:///util_(ignored)?")},3:function(module,exports){eval("/* (ignored) */\n\n//# sourceURL=webpack:///util_(ignored)?")},4:function(module,exports){eval("/* (ignored) */\n\n//# sourceURL=webpack:///util_(ignored)?")}});